<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Fiber 框架学习</title>
      <link href="/2021/10/24/Fiber%20%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0/"/>
      <url>/2021/10/24/Fiber%20%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="1-入门"><a href="#1-入门" class="headerlink" title="1. 入门"></a>1. 入门</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go get github.com/gofiber/fiber/v2</span><br></pre></td></tr></table></figure><p>编写主函数：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">app := fiber.New()</span><br><span class="line"></span><br><span class="line">app.Get(<span class="string">&quot;/&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *fiber.Ctx)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> c.SendString(<span class="string">&quot;Hello World!&quot;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.Listen(<span class="string">&quot;:3000&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><span id="more"></span><h1 id="2-配置"><a href="#2-配置" class="headerlink" title="2. 配置"></a>2. 配置</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">app := fiber.New(fiber.Config&#123;</span><br><span class="line">AppName:      <span class="string">&quot;It&#x27;s a go fiber web frame&quot;</span>,</span><br><span class="line">ServerHeader: <span class="string">&quot;gofiber.io&quot;</span>, <span class="comment">// Response.Header.Server</span></span><br><span class="line">ReadTimeout:  <span class="number">5</span> * time.Second,</span><br><span class="line">WriteTimeout: <span class="number">5</span> * time.Second,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.Get(<span class="string">&quot;/&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *fiber.Ctx)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> c.SendString(<span class="string">&quot;OK&quot;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">log.Fatalln(app.Listen(<span class="string">&quot;:3000&quot;</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="3-路由"><a href="#3-路由" class="headerlink" title="3. 路由"></a>3. 路由</h1><h2 id="3-1-参数"><a href="#3-1-参数" class="headerlink" title="3.1 参数"></a>3.1 参数</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">app := fiber.New()</span><br><span class="line"></span><br><span class="line">app.Get(<span class="string">&quot;/about&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *fiber.Ctx)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> c.SendString(<span class="string">&quot;about&quot;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// ?: 允许username不输入</span></span><br><span class="line">app.Get(<span class="string">&quot;/hello/:username?&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *fiber.Ctx)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">msg := fmt.Sprintf(<span class="string">&quot;hello %s&quot;</span>, c.Params(<span class="string">&quot;username&quot;</span>))</span><br><span class="line"><span class="keyword">return</span> c.SendString(msg)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 复杂路由</span></span><br><span class="line">app.Get(<span class="string">&quot;/fights/:from-:to&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *fiber.Ctx)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">fmt.Fprintf(c, <span class="string">&quot;%s-%s\n&quot;</span>, c.Params(<span class="string">&quot;from&quot;</span>), c.Params(<span class="string">&quot;to&quot;</span>))</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 路由注册信息</span></span><br><span class="line">data, _ := json.MarshalIndent(app.Stack(), <span class="string">&quot;&quot;</span>, <span class="string">&quot;  &quot;</span>)</span><br><span class="line">fmt.Println(<span class="keyword">string</span>(data))</span><br><span class="line"></span><br><span class="line">log.Fatalln(app.Listen(<span class="string">&quot;:3000&quot;</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-2-Add-amp-All"><a href="#3-2-Add-amp-All" class="headerlink" title="3.2 Add &amp; All"></a>3.2 Add &amp; All</h2><p>Fiber 路由支持额外的方法：</p><ul><li><p>Add：所有 HTTP Method 对应的底层实现</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Fiber 自动添加 Head 方法</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(app *App)</span> <span class="title">Get</span><span class="params">(path <span class="keyword">string</span>, handlers ...Handler)</span> <span class="title">Router</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> app.Add(MethodHead, path, handlers...).Add(MethodGet, path, handlers...)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>All：支持任意的 HTTP Method 请求</p></li></ul><h2 id="3-3-Mount-amp-Group"><a href="#3-3-Mount-amp-Group" class="headerlink" title="3.3 Mount &amp; Group"></a>3.3 Mount &amp; Group</h2><p><strong>Mount</strong>: 可以将一个 Fiber 实例挂载到另一个实例</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">micro := fiber.New()</span><br><span class="line">micro.Get(<span class="string">&quot;/micro&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *fiber.Ctx)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> c.SendString(<span class="string">&quot;micro&quot;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app := fiber.New()</span><br><span class="line">app.Mount(<span class="string">&quot;/app&quot;</span>, micro)</span><br><span class="line"></span><br><span class="line">log.Fatal(app.Listen(<span class="string">&quot;:3000&quot;</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Group</strong>: 路由分组</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">calc</span><span class="params">(c *fiber.Ctx)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">start := time.Now()</span><br><span class="line">c.Next()</span><br><span class="line">elapse := time.Since(start)</span><br><span class="line">log.Printf(<span class="string">&quot;it takes %.2f seconds\n&quot;</span>, elapse.Seconds())</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">app := fiber.New()</span><br><span class="line"></span><br><span class="line">api := app.Group(<span class="string">&quot;/api&quot;</span>)</span><br><span class="line"></span><br><span class="line">v1 := api.Group(<span class="string">&quot;/v1&quot;</span>)</span><br><span class="line">v1.Get(<span class="string">&quot;/about&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *fiber.Ctx)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> c.SendString(<span class="string">&quot;hello 1&quot;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">v2 := api.Group(<span class="string">&quot;/v2&quot;</span>, calc)</span><br><span class="line">v2.Get(<span class="string">&quot;/about&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *fiber.Ctx)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">time.Sleep(<span class="number">3</span> * time.Second)</span><br><span class="line"><span class="keyword">return</span> c.SendString(<span class="string">&quot;hello 2&quot;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">log.Fatal(app.Listen(<span class="string">&quot;:3000&quot;</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="4-静态资源"><a href="#4-静态资源" class="headerlink" title="4. 静态资源"></a>4. 静态资源</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.Static(<span class="string">&quot;/images&quot;</span>, <span class="string">`/data/images`</span>, fiber.Static&#123;Browse: <span class="literal">true</span>&#125;)</span><br></pre></td></tr></table></figure><h1 id="5-使用模板"><a href="#5-使用模板" class="headerlink" title="5. 使用模板"></a>5. 使用模板</h1><p><strong>pug 模板</strong>: index.pug</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">html</span><br><span class="line">    head</span><br><span class="line">        title #&#123;.Title&#125;</span><br><span class="line">    body</span><br><span class="line">        p #&#123;.Message&#125;</span><br></pre></td></tr></table></figure><p>解析：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// 初始化 pug 模板引擎</span></span><br><span class="line">engine := pug.New(<span class="string">&quot;./views&quot;</span>, <span class="string">&quot;.pug&quot;</span>)</span><br><span class="line"></span><br><span class="line">app := fiber.New(fiber.Config&#123;</span><br><span class="line">Views: engine,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.Get(<span class="string">&quot;/&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *fiber.Ctx)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> c.Render(<span class="string">&quot;index&quot;</span>, fiber.Map&#123;</span><br><span class="line"><span class="string">&quot;Title&quot;</span>:   <span class="string">&quot;hello&quot;</span>,</span><br><span class="line"><span class="string">&quot;Message&quot;</span>: <span class="string">&quot;This is the index pug template&quot;</span>,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.Listen(<span class="string">&quot;:3000&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="6-fiber-Ctx-方法"><a href="#6-fiber-Ctx-方法" class="headerlink" title="6. fiber.Ctx 方法"></a>6. <code>fiber.Ctx</code> 方法</h1><h2 id="6-1-c-BodyParser"><a href="#6-1-c-BodyParser" class="headerlink" title="6.1 c.BodyParser"></a>6.1 <code>c.BodyParser</code></h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> User <span class="keyword">struct</span> &#123;</span><br><span class="line">Name <span class="keyword">string</span> <span class="string">`json:&quot;name&quot; xml:&quot;name&quot; form:&quot;name&quot;`</span></span><br><span class="line">Pass <span class="keyword">string</span> <span class="string">`json:&quot;pass&quot; xml:&quot;pass&quot; form:&quot;pass&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">app := fiber.New()</span><br><span class="line"></span><br><span class="line">app.Post(<span class="string">&quot;/login&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *fiber.Ctx)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">user := <span class="built_in">new</span>(User)</span><br><span class="line"></span><br><span class="line">err := c.BodyParser(user)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">log.Printf(<span class="string">&quot;name %s, pass: %s\n&quot;</span>, user.Name, user.Pass)</span><br><span class="line"><span class="keyword">return</span> c.SendString(<span class="string">&quot;OK&quot;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">log.Fatal(app.Listen(<span class="string">&quot;:3000&quot;</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">curl -X POST -H <span class="string">&quot;Content-Type: application/json&quot;</span> --data <span class="string">&quot;&#123;\&quot;name\&quot;:\&quot;john\&quot;,\&quot;pass\&quot;:\&quot;doe\&quot;&#125;&quot;</span> localhost:3000/login</span><br><span class="line"></span><br><span class="line">curl -X POST -H <span class="string">&quot;Content-Type: application/xml&quot;</span> --data <span class="string">&quot;&lt;login&gt;&lt;name&gt;john&lt;/name&gt;&lt;pass&gt;doe&lt;/pass&gt;&lt;/login&gt;&quot;</span> localhost:3000/login</span><br><span class="line"></span><br><span class="line">curl -X POST -H <span class="string">&quot;Content-Type: application/x-www-form-urlencoded&quot;</span> --data <span class="string">&quot;name=john&amp;pass=doe&quot;</span> localhost:3000/login</span><br><span class="line"></span><br><span class="line">curl -X POST -F name=john -F pass=doe http://localhost:3000/login</span><br><span class="line"></span><br><span class="line">curl -X POST <span class="string">&quot;http://localhost:3000/login?name=john&amp;pass=doe&quot;</span></span><br></pre></td></tr></table></figure><h2 id="6-2-c-Query"><a href="#6-2-c-Query" class="headerlink" title="6.2 c.Query()"></a>6.2 <code>c.Query()</code></h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">app := fiber.New()</span><br><span class="line"></span><br><span class="line">app.Get(<span class="string">&quot;/users&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *fiber.Ctx)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">pageIndex := c.Query(<span class="string">&quot;page_index&quot;</span>)</span><br><span class="line">pageSize := c.Query(<span class="string">&quot;page_size&quot;</span>)</span><br><span class="line"></span><br><span class="line">body := fmt.Sprintf(<span class="string">&quot;page index: %s\npage size: %s&quot;</span>, pageIndex, pageSize)</span><br><span class="line"><span class="keyword">return</span> c.SendString(body)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">log.Fatal(app.Listen(<span class="string">&quot;:3000&quot;</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="7-中间件"><a href="#7-中间件" class="headerlink" title="7. 中间件"></a>7. 中间件</h1><h2 id="7-1-自定义"><a href="#7-1-自定义" class="headerlink" title="7.1 自定义"></a>7.1 自定义</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">app.Use(<span class="function"><span class="keyword">func</span><span class="params">(c *fiber.Ctx)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">start := time.Now()</span><br><span class="line">c.Next()</span><br><span class="line"></span><br><span class="line">elapse := time.Since(start)</span><br><span class="line">log.Printf(<span class="string">&quot;it takes %.2f seconds\n&quot;</span>, elapse.Seconds())</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="7-2-内置中间件"><a href="#7-2-内置中间件" class="headerlink" title="7.2 内置中间件"></a>7.2 内置中间件</h2><p><a href="https://docs.gofiber.io/api/middleware">https://docs.gofiber.io/api/middleware</a></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">app := fiber.New()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用内置中间件</span></span><br><span class="line">app.Use(<span class="built_in">recover</span>.New())</span><br><span class="line"></span><br><span class="line">app.Get(<span class="string">&quot;/&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *fiber.Ctx)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(<span class="string">&quot;I&#x27;m an error&quot;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">log.Fatal(app.Listen(<span class="string">&quot;:3000&quot;</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-2-1-签名"><a href="#7-2-1-签名" class="headerlink" title="7.2.1 签名"></a>7.2.1 签名</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">New</span><span class="params">(config ...Config)</span> <span class="title">fiber</span>.<span class="title">Handler</span></span></span><br></pre></td></tr></table></figure><h3 id="7-2-2-配置"><a href="#7-2-2-配置" class="headerlink" title="7.2.2 配置"></a>7.2.2 配置</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Config <span class="keyword">struct</span> &#123;</span><br><span class="line"><span class="comment">// Next defines a function to skip this middleware when returned true.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Optional. Default: nil</span></span><br><span class="line">Next <span class="function"><span class="keyword">func</span><span class="params">(c *fiber.Ctx)</span> <span class="title">bool</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// EnableStackTrace enables handling stack trace</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Optional. Default: false</span></span><br><span class="line">EnableStackTrace <span class="keyword">bool</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// StackTraceHandler defines a function to handle stack trace</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Optional. Default: defaultStackTraceHandler</span></span><br><span class="line">StackTraceHandler <span class="function"><span class="keyword">func</span><span class="params">(e <span class="keyword">interface</span>&#123;&#125;)</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> ConfigDefault = Config&#123;</span><br><span class="line">Next:              <span class="literal">nil</span>,</span><br><span class="line">EnableStackTrace:  <span class="literal">false</span>,</span><br><span class="line">StackTraceHandler: defaultStackTraceHandler,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-3-自建中间件"><a href="#7-3-自建中间件" class="headerlink" title="7.3 自建中间件"></a>7.3 自建中间件</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 响应headers中设置如下参数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Security</span><span class="params">(c *fiber.Ctx)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">c.Set(<span class="string">&quot;X-XSS-Protection&quot;</span>, <span class="string">&quot;1; mode=block&quot;</span>)</span><br><span class="line">c.Set(<span class="string">&quot;X-Content-Type-Options&quot;</span>, <span class="string">&quot;nosniff&quot;</span>)</span><br><span class="line">c.Set(<span class="string">&quot;X-Download-Options&quot;</span>, <span class="string">&quot;noopen&quot;</span>)</span><br><span class="line">c.Set(<span class="string">&quot;Strict-Transport-Security&quot;</span>, <span class="string">&quot;max-age=5184000&quot;</span>)</span><br><span class="line">c.Set(<span class="string">&quot;X-Frame-Options&quot;</span>, <span class="string">&quot;SAMEORIGIN&quot;</span>)</span><br><span class="line">c.Set(<span class="string">&quot;X-DNS-Prefetch-Control&quot;</span>, <span class="string">&quot;off&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> c.Next()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">app := fiber.New()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用内置中间件</span></span><br><span class="line">app.Use(Security)</span><br><span class="line"></span><br><span class="line">app.Get(<span class="string">&quot;/&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *fiber.Ctx)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> c.JSON(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span>&#123;<span class="string">&quot;msg&quot;</span>: <span class="string">&quot;ok&quot;</span>&#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">log.Fatal(app.Listen(<span class="string">&quot;:3000&quot;</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="8-单元测试"><a href="#8-单元测试" class="headerlink" title="8. 单元测试"></a>8. 单元测试</h1><p>Fiber 提供专门的测试方法：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Test is used for internal debugging by passing a *http.Request.</span></span><br><span class="line"><span class="comment">// Timeout is optional and defaults to 1s, -1 will disable it completely.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(app *App)</span> <span class="title">Test</span><span class="params">(req *http.Request, msTimeout ...<span class="keyword">int</span>)</span> <span class="params">(resp *http.Response, err error)</span></span></span><br></pre></td></tr></table></figure><p>待测试程序：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">setupRouters</span><span class="params">(app *fiber.App)</span></span> &#123;</span><br><span class="line">app.Get(<span class="string">&quot;/hello&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *fiber.Ctx)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> c.SendString(<span class="string">&quot;Hello World!&quot;</span>)</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">app := fiber.New()</span><br><span class="line"></span><br><span class="line">setupRouters(app)</span><br><span class="line"></span><br><span class="line">log.Fatal(app.Listen(<span class="string">&quot;:3000&quot;</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试代码：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestHelloRoute</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">app := fiber.New()</span><br><span class="line">setupRouters(app)</span><br><span class="line"></span><br><span class="line">cases := []<span class="keyword">struct</span> &#123;</span><br><span class="line">description  <span class="keyword">string</span></span><br><span class="line">route        <span class="keyword">string</span></span><br><span class="line">expectedCode <span class="keyword">int</span></span><br><span class="line">&#125;&#123;</span><br><span class="line">&#123;</span><br><span class="line">description:  <span class="string">&quot;get HTTP status 200&quot;</span>,</span><br><span class="line">route:        <span class="string">&quot;/hello&quot;</span>,</span><br><span class="line">expectedCode: <span class="number">200</span>,</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">description:  <span class="string">&quot;get HTTP status 404&quot;</span>,</span><br><span class="line">route:        <span class="string">&quot;/notfound&quot;</span>,</span><br><span class="line">expectedCode: <span class="number">404</span>,</span><br><span class="line">&#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, c := <span class="keyword">range</span> cases &#123;</span><br><span class="line">req := httptest.NewRequest(<span class="string">&quot;GET&quot;</span>, c.route, <span class="literal">nil</span>)</span><br><span class="line">resp, _ := app.Test(req, <span class="number">1</span>)</span><br><span class="line">assert.Equalf(t, c.expectedCode, resp.StatusCode, c.description)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> golang </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Golang 加密和签名</title>
      <link href="/2021/10/09/Golang%20%E5%8A%A0%E5%AF%86%E5%92%8C%E7%AD%BE%E5%90%8D.md/"/>
      <url>/2021/10/09/Golang%20%E5%8A%A0%E5%AF%86%E5%92%8C%E7%AD%BE%E5%90%8D.md/</url>
      
        <content type="html"><![CDATA[<h1 id="1-存储格式"><a href="#1-存储格式" class="headerlink" title="1. 存储格式"></a>1. 存储格式</h1><p>密钥、密文、签名字符串的存储格式</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// hex：转为十六进制字符串表示</span></span><br><span class="line">hex.EncodeToString(src []<span class="keyword">byte</span>) <span class="keyword">string</span></span><br><span class="line">hex.DecodeString(s <span class="keyword">string</span>) ([]<span class="keyword">byte</span>, error)</span><br><span class="line"></span><br><span class="line"><span class="comment">// base64</span></span><br><span class="line">base64.StdEncoding.EncodeToString(src []<span class="keyword">byte</span>) <span class="keyword">string</span></span><br><span class="line">base64.StdEncoding.DecodeString(s <span class="keyword">string</span>) ([]<span class="keyword">byte</span>, error)</span><br><span class="line"></span><br><span class="line"><span class="comment">// pem: 密钥解析</span></span><br><span class="line">pem.Decode(data []<span class="keyword">byte</span>) (p *Block, rest []<span class="keyword">byte</span>)</span><br></pre></td></tr></table></figure><span id="more"></span><h1 id="2-生成密钥"><a href="#2-生成密钥" class="headerlink" title="2. 生成密钥"></a>2. 生成密钥</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 私钥</span></span><br><span class="line">openssl genrsa -out rsa_private_key.pem 2048</span><br><span class="line"></span><br><span class="line"><span class="comment"># 公钥</span></span><br><span class="line">openssl rsa -<span class="keyword">in</span> rsa_private_key.pem -pubout -out rsa_public_key.pem</span><br></pre></td></tr></table></figure><h1 id="3-私钥格式"><a href="#3-私钥格式" class="headerlink" title="3. 私钥格式"></a>3. 私钥格式</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// PKCS1</span></span><br><span class="line">x509.ParsePKCS1PrivateKey(der []<span class="keyword">byte</span>) (key <span class="keyword">interface</span>&#123;&#125;, err error)</span><br><span class="line"></span><br><span class="line"><span class="comment">// PKCS2</span></span><br><span class="line">x509.ParsePKCS8PrivateKey(der []<span class="keyword">byte</span>) (key <span class="keyword">interface</span>&#123;&#125;, err error)</span><br></pre></td></tr></table></figure><h1 id="4-SHA算法"><a href="#4-SHA算法" class="headerlink" title="4. SHA算法"></a>4. SHA算法</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// sha1 or sha256</span></span><br><span class="line">h := sha1.New()</span><br><span class="line">h := sha256.New()</span><br><span class="line"></span><br><span class="line">h.Write([]<span class="keyword">byte</span>(data))</span><br><span class="line">hash := h.Sum(<span class="literal">nil</span>)</span><br></pre></td></tr></table></figure><h1 id="5-RSA类型"><a href="#5-RSA类型" class="headerlink" title="5. RSA类型"></a>5. RSA类型</h1><ul><li>公钥加密、私钥解密</li><li>私钥签名、公钥验签</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 加密</span></span><br><span class="line">rsa.EncryptPKCS1v15(rand io.Reader, pub *PublicKey, msg []<span class="keyword">byte</span>) ([]<span class="keyword">byte</span>, error)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 解密</span></span><br><span class="line">rsa.DecryptPKCS1v15(rand io.Reader, priv *PrivateKey, ciphertext []<span class="keyword">byte</span>) ([]<span class="keyword">byte</span>, error)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 签名</span></span><br><span class="line">rsa.SignPKCS1v15(rand io.Reader, priv *PrivateKey, hash crypto.Hash, hashed []<span class="keyword">byte</span>) ([]<span class="keyword">byte</span>, error)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 验签</span></span><br><span class="line">rsa.VerifyPKCS1v15(pub *PublicKey, hash crypto.Hash, hashed []<span class="keyword">byte</span>, sig []<span class="keyword">byte</span>) error</span><br></pre></td></tr></table></figure><h2 id="5-1-加密和解密"><a href="#5-1-加密和解密" class="headerlink" title="5.1 加密和解密"></a>5.1 加密和解密</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">RsaEncrypt</span><span class="params">(plainText, publicKey <span class="keyword">string</span>)</span> <span class="params">(<span class="keyword">string</span>, error)</span></span> &#123;</span><br><span class="line">block, _ := pem.Decode([]<span class="keyword">byte</span>(publicKey))</span><br><span class="line">pubKey, err := x509.ParsePKIXPublicKey(block.Bytes)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;&quot;</span>, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cipherText, err := rsa.EncryptPKCS1v15(rand.Reader, pubKey.(*rsa.PublicKey), []<span class="keyword">byte</span>(plainText))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;&quot;</span>, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> base64.StdEncoding.EncodeToString(cipherText), <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">RsaDecrypt</span><span class="params">(cipherText, privateKey <span class="keyword">string</span>)</span> <span class="params">(<span class="keyword">string</span>, error)</span></span> &#123;</span><br><span class="line">block, _ := pem.Decode([]<span class="keyword">byte</span>(privateKey))</span><br><span class="line">priKey, err := x509.ParsePKCS1PrivateKey(block.Bytes)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;&quot;</span>, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cipherTextData, err := base64.StdEncoding.DecodeString(cipherText)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;&quot;</span>, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">plainTextData, err := rsa.DecryptPKCS1v15(rand.Reader, priKey, cipherTextData)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;&quot;</span>, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">string</span>(plainTextData), <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-2-签名和验签"><a href="#5-2-签名和验签" class="headerlink" title="5.2 签名和验签"></a>5.2 签名和验签</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">RsaSign</span><span class="params">(originalData, privateKey <span class="keyword">string</span>)</span> <span class="params">(<span class="keyword">string</span>, error)</span></span> &#123;</span><br><span class="line">block, _ := pem.Decode([]<span class="keyword">byte</span>(privateKey))</span><br><span class="line">priKey, err := x509.ParsePKCS1PrivateKey(block.Bytes)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;&quot;</span>, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">h := sha256.New()</span><br><span class="line">h.Write([]<span class="keyword">byte</span>(originalData))</span><br><span class="line">hash := h.Sum(<span class="literal">nil</span>)</span><br><span class="line"></span><br><span class="line">signature, err := rsa.SignPKCS1v15(rand.Reader, priKey, crypto.SHA256, hash[:])</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;&quot;</span>, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> hex.EncodeToString(signature), <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">RsaVerify</span><span class="params">(originalData, SignatureData, publicKey <span class="keyword">string</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">block, _ := pem.Decode([]<span class="keyword">byte</span>(publicKey))</span><br><span class="line">pubKey, err := x509.ParsePKIXPublicKey(block.Bytes)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">signature, err := hex.DecodeString(SignatureData)</span><br><span class="line"></span><br><span class="line">h := sha256.New()</span><br><span class="line">h.Write([]<span class="keyword">byte</span>(originalData))</span><br><span class="line">hash := h.Sum(<span class="literal">nil</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> rsa.VerifyPKCS1v15(pubKey.(*rsa.PublicKey), crypto.SHA256, hash[:], signature)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="6-AES"><a href="#6-AES" class="headerlink" title="6. AES"></a>6. AES</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">aes.NewCipher(key []<span class="keyword">byte</span>) (cipher.Block, error)</span><br><span class="line"></span><br><span class="line">cipher.NewCBCEncrypter(b Block, iv []<span class="keyword">byte</span>) BlockMode</span><br><span class="line">cipherTextData := <span class="built_in">make</span>([]<span class="keyword">byte</span>, <span class="built_in">len</span>(originalData))</span><br><span class="line">blockMode.CryptBlocks(cipherTextData, originalData)</span><br><span class="line"></span><br><span class="line">cipher.NewCBCDecrypter(b Block, iv []<span class="keyword">byte</span>) BlockMode</span><br><span class="line">originalData := <span class="built_in">make</span>([]<span class="keyword">byte</span>, <span class="built_in">len</span>(cipherTextData))</span><br><span class="line">blockMode.CryptBlocks(originalData, cipherTextData)</span><br></pre></td></tr></table></figure><p>实例：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">AesEncrypt</span><span class="params">(plainText, key, iv <span class="keyword">string</span>)</span> <span class="params">(<span class="keyword">string</span>, error)</span></span> &#123;</span><br><span class="line"><span class="comment">// 密钥: 长度必须为16, 24, 32</span></span><br><span class="line">block, err := aes.NewCipher([]<span class="keyword">byte</span>(key))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;&quot;</span>, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 加密模式: IV长度和KEY保持一致</span></span><br><span class="line">blockMode := cipher.NewCBCEncrypter(block, []<span class="keyword">byte</span>(iv))</span><br><span class="line"></span><br><span class="line"><span class="comment">// 填充内容</span></span><br><span class="line">blockSize := block.BlockSize()</span><br><span class="line">left := blockSize - <span class="built_in">len</span>(plainText)%blockSize</span><br><span class="line">padding := bytes.Repeat([]<span class="keyword">byte</span>&#123;<span class="keyword">byte</span>(left)&#125;, left)</span><br><span class="line">originalData := <span class="built_in">append</span>([]<span class="keyword">byte</span>(plainText), padding...)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 加密</span></span><br><span class="line">cipherTextData := <span class="built_in">make</span>([]<span class="keyword">byte</span>, <span class="built_in">len</span>(originalData))</span><br><span class="line">blockMode.CryptBlocks(cipherTextData, originalData)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> base64.StdEncoding.EncodeToString(cipherTextData), <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">AesDecrypt</span><span class="params">(cipherText, key, iv <span class="keyword">string</span>)</span> <span class="params">(<span class="keyword">string</span>, error)</span></span> &#123;</span><br><span class="line"><span class="comment">// 密钥: 长度必须为16, 24, 32</span></span><br><span class="line">block, err := aes.NewCipher([]<span class="keyword">byte</span>(key))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;&quot;</span>, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 加密模式: IV长度和KEY保持一致</span></span><br><span class="line">blockMode := cipher.NewCBCDecrypter(block, []<span class="keyword">byte</span>(iv))</span><br><span class="line"></span><br><span class="line"><span class="comment">// 密文</span></span><br><span class="line">cipherTextData, err := base64.StdEncoding.DecodeString(cipherText)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 解密</span></span><br><span class="line">originalData := <span class="built_in">make</span>([]<span class="keyword">byte</span>, <span class="built_in">len</span>(cipherTextData))</span><br><span class="line">blockMode.CryptBlocks(originalData, cipherTextData)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 去除填充</span></span><br><span class="line">length := <span class="built_in">len</span>(originalData)</span><br><span class="line">left := <span class="keyword">int</span>(originalData[length<span class="number">-1</span>])</span><br><span class="line">plainTextData := originalData[:(length - left)]</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">string</span>(plainTextData), <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> golang </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes 核心组件</title>
      <link href="/2021/07/13/Kubernetes%20%E6%A0%B8%E5%BF%83%E7%BB%84%E4%BB%B6/"/>
      <url>/2021/07/13/Kubernetes%20%E6%A0%B8%E5%BF%83%E7%BB%84%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="1-API-Server"><a href="#1-API-Server" class="headerlink" title="1. API-Server"></a>1. API-Server</h1><h2 id="1-1-工作原理"><a href="#1-1-工作原理" class="headerlink" title="1.1 工作原理"></a>1.1 工作原理</h2><p>核心功能：<strong>资源操作入口</strong></p><ul><li>提供集群管理的 <strong>REST API 接口</strong>，包括认证授权、准入控制、数据校验以及集群状态变更等</li><li>提供其他模块之间的数据交互和通信的<strong>枢纽</strong>（其他模块通过 API Server 查询或修改数据，<strong>只有 API Server 能够直接操作 etcd</strong>）</li></ul><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/kubernetes/k8s-api-server.png" alt="img"> </p><span id="more"></span><h2 id="1-2-访问"><a href="#1-2-访问" class="headerlink" title="1.2 访问"></a>1.2 访问</h2><h3 id="1-2-1-访问端口"><a href="#1-2-1-访问端口" class="headerlink" title="1.2.1 访问端口"></a>1.2.1 访问端口</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/kubernetes/kube-apiserver.conf</span><br><span class="line">--insecure-bind-address=127.0.0.1 \</span><br><span class="line">--insecure-port=8080 \</span><br><span class="line">--bind-address=192.168.80.11 \</span><br><span class="line">--secure-port=6443 \</span><br><span class="line"></span><br><span class="line">curl http://localhost:8080</span><br><span class="line">curl https://192.168.80.11:6443</span><br></pre></td></tr></table></figure><h3 id="1-2-2-访问方式"><a href="#1-2-2-访问方式" class="headerlink" title="1.2.2 访问方式"></a>1.2.2 访问方式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. sdk</span></span><br><span class="line">go get k8s.io/client-go@latest</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. kubectl</span></span><br><span class="line">kubectl get --raw /api/v1/namespaces | python -m json.tool</span><br><span class="line">kubectl get --raw /apis/metrics.k8s.io/v1beta1/nodes</span><br><span class="line">kubectl get --raw /apis/metrics.k8s.io/v1beta1/pods</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. kubectl proxy</span></span><br><span class="line">kubectl proxy --port=8081 &amp;</span><br><span class="line">curl http://localhost:8081/api/</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;kind&quot;</span>: <span class="string">&quot;APIVersions&quot;</span>,</span><br><span class="line">  <span class="string">&quot;versions&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;v1&quot;</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&quot;serverAddressByClientCIDRs&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;clientCIDR&quot;</span>: <span class="string">&quot;0.0.0.0/0&quot;</span>,</span><br><span class="line">      <span class="string">&quot;serverAddress&quot;</span>: <span class="string">&quot;192.168.80.45:6443&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4. curl</span></span><br><span class="line">TOKEN=$(kubectl describe secrets $(kubectl get secrets -n kube-system |grep admin |cut -f1 -d <span class="string">&#x27; &#x27;</span>) -n kube-system |grep -E <span class="string">&#x27;^token&#x27;</span> |cut -f2 -d<span class="string">&#x27;:&#x27;</span>|tr -d <span class="string">&#x27;\t&#x27;</span>|tr -d <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">APISERVER=$(kubectl config view |grep server|cut -f 2- -d <span class="string">&quot;:&quot;</span> | tr -d <span class="string">&quot; &quot;</span>)</span><br><span class="line">curl -H <span class="string">&quot;Authorization: Bearer <span class="variable">$TOKEN</span>&quot;</span> <span class="variable">$APISERVER</span>/api  --insecure</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;kind&quot;</span>: <span class="string">&quot;APIVersions&quot;</span>,</span><br><span class="line">  <span class="string">&quot;versions&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;v1&quot;</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&quot;serverAddressByClientCIDRs&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;clientCIDR&quot;</span>: <span class="string">&quot;0.0.0.0/0&quot;</span>,</span><br><span class="line">      <span class="string">&quot;serverAddress&quot;</span>: <span class="string">&quot;192.168.80.45:6443&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;r</span><br></pre></td></tr></table></figure><h2 id="1-3-API-资源"><a href="#1-3-API-资源" class="headerlink" title="1.3 API 资源"></a>1.3 API 资源</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 所有支持的资源</span></span><br><span class="line">$ kubectl api-resources</span><br><span class="line">NAME                              SHORTNAMES   APIGROUP                       NAMESPACED   KIND</span><br><span class="line">bindings                                                                      <span class="literal">true</span>         Binding</span><br><span class="line">componentstatuses                 cs                                          <span class="literal">false</span>        ComponentStatus</span><br><span class="line">configmaps                        cm                                          <span class="literal">true</span>         ConfigMap</span><br><span class="line">endpoints                         ep                                          <span class="literal">true</span>         Endpoints</span><br><span class="line">events                            ev                                          <span class="literal">true</span>         Event</span><br><span class="line">limitranges                       limits                                      <span class="literal">true</span>         LimitRange</span><br><span class="line">namespaces                        ns                                          <span class="literal">false</span>        Namespace</span><br><span class="line">nodes                             no                                          <span class="literal">false</span>        Node</span><br><span class="line">persistentvolumeclaims            pvc                                         <span class="literal">true</span>         PersistentVolumeClaim</span><br><span class="line">persistentvolumes                 pv                                          <span class="literal">false</span>        PersistentVolume</span><br><span class="line">pods                              po                                          <span class="literal">true</span>         Pod</span><br><span class="line">podtemplates                                                                  <span class="literal">true</span>         PodTemplate</span><br><span class="line">replicationcontrollers            rc                                          <span class="literal">true</span>         ReplicationController</span><br><span class="line">resourcequotas                    quota                                       <span class="literal">true</span>         ResourceQuota</span><br><span class="line">secrets                                                                       <span class="literal">true</span>         Secret</span><br><span class="line">serviceaccounts                   sa                                          <span class="literal">true</span>         ServiceAccount</span><br><span class="line">services                          svc                                         <span class="literal">true</span>         Service</span><br><span class="line">mutatingwebhookconfigurations                  admissionregistration.k8s.io   <span class="literal">false</span>        MutatingWebhookConfiguration</span><br><span class="line">validatingwebhookconfigurations                admissionregistration.k8s.io   <span class="literal">false</span>        ValidatingWebhookConfiguration</span><br><span class="line">customresourcedefinitions         crd,crds     apiextensions.k8s.io           <span class="literal">false</span>        CustomResourceDefinition</span><br><span class="line">apiservices                                    apiregistration.k8s.io         <span class="literal">false</span>        APIService</span><br><span class="line">controllerrevisions                            apps                           <span class="literal">true</span>         ControllerRevision</span><br><span class="line">daemonsets                        ds           apps                           <span class="literal">true</span>         DaemonSet</span><br><span class="line">deployments                       deploy       apps                           <span class="literal">true</span>         Deployment</span><br><span class="line">replicasets                       rs           apps                           <span class="literal">true</span>         ReplicaSet</span><br><span class="line">statefulsets                      sts          apps                           <span class="literal">true</span>         StatefulSet</span><br><span class="line">tokenreviews                                   authentication.k8s.io          <span class="literal">false</span>        TokenReview</span><br><span class="line">localsubjectaccessreviews                      authorization.k8s.io           <span class="literal">true</span>         LocalSubjectAccessReview</span><br><span class="line">selfsubjectaccessreviews                       authorization.k8s.io           <span class="literal">false</span>        SelfSubjectAccessReview</span><br><span class="line">selfsubjectrulesreviews                        authorization.k8s.io           <span class="literal">false</span>        SelfSubjectRulesReview</span><br><span class="line">subjectaccessreviews                           authorization.k8s.io           <span class="literal">false</span>        SubjectAccessReview</span><br><span class="line">horizontalpodautoscalers          hpa          autoscaling                    <span class="literal">true</span>         HorizontalPodAutoscaler</span><br><span class="line">cronjobs                          cj           batch                          <span class="literal">true</span>         CronJob</span><br><span class="line"><span class="built_in">jobs</span>                                           batch                          <span class="literal">true</span>         Job</span><br><span class="line">certificatesigningrequests        csr          certificates.k8s.io            <span class="literal">false</span>        CertificateSigningRequest</span><br><span class="line">leases                                         coordination.k8s.io            <span class="literal">true</span>         Lease</span><br><span class="line">endpointslices                                 discovery.k8s.io               <span class="literal">true</span>         EndpointSlice</span><br><span class="line">events                            ev           events.k8s.io                  <span class="literal">true</span>         Event</span><br><span class="line">ingresses                         ing          extensions                     <span class="literal">true</span>         Ingress</span><br><span class="line">ingressclasses                                 networking.k8s.io              <span class="literal">false</span>        IngressClass</span><br><span class="line">ingresses                         ing          networking.k8s.io              <span class="literal">true</span>         Ingress</span><br><span class="line">networkpolicies                   netpol       networking.k8s.io              <span class="literal">true</span>         NetworkPolicy</span><br><span class="line">runtimeclasses                                 node.k8s.io                    <span class="literal">false</span>        RuntimeClass</span><br><span class="line">poddisruptionbudgets              pdb          policy                         <span class="literal">true</span>         PodDisruptionBudget</span><br><span class="line">podsecuritypolicies               psp          policy                         <span class="literal">false</span>        PodSecurityPolicy</span><br><span class="line">clusterrolebindings                            rbac.authorization.k8s.io      <span class="literal">false</span>        ClusterRoleBinding</span><br><span class="line">clusterroles                                   rbac.authorization.k8s.io      <span class="literal">false</span>        ClusterRole</span><br><span class="line">rolebindings                                   rbac.authorization.k8s.io      <span class="literal">true</span>         RoleBinding</span><br><span class="line">roles                                          rbac.authorization.k8s.io      <span class="literal">true</span>         Role</span><br><span class="line">priorityclasses                   pc           scheduling.k8s.io              <span class="literal">false</span>        PriorityClass</span><br><span class="line">csidrivers                                     storage.k8s.io                 <span class="literal">false</span>        CSIDriver</span><br><span class="line">csinodes                                       storage.k8s.io                 <span class="literal">false</span>        CSINode</span><br><span class="line">storageclasses                    sc           storage.k8s.io                 <span class="literal">false</span>        StorageClass</span><br><span class="line">volumeattachments                              storage.k8s.io                 <span class="literal">false</span>        VolumeAttachment</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取特定组 apps 的资源</span></span><br><span class="line">$ kubectl api-resources --api-group apps</span><br><span class="line">kubectl api-resources --api-group apps</span><br><span class="line">NAME                  SHORTNAMES   APIGROUP   NAMESPACED   KIND</span><br><span class="line">controllerrevisions                apps       <span class="literal">true</span>         ControllerRevision</span><br><span class="line">daemonsets            ds           apps       <span class="literal">true</span>         DaemonSet</span><br><span class="line">deployments           deploy       apps       <span class="literal">true</span>         Deployment</span><br><span class="line">replicasets           rs           apps       <span class="literal">true</span>         ReplicaSet</span><br><span class="line">statefulsets          sts          apps       <span class="literal">true</span>         StatefulSet</span><br><span class="line"></span><br><span class="line"><span class="comment"># 资源详细解释</span></span><br><span class="line">$ kubectl explain svc</span><br><span class="line">KIND:     Service</span><br><span class="line">VERSION:  v1</span><br><span class="line"></span><br><span class="line">DESCRIPTION:</span><br><span class="line">     Service is a named abstraction of software service (<span class="keyword">for</span> example, mysql)</span><br><span class="line">     consisting of <span class="built_in">local</span> port (<span class="keyword">for</span> example 3306) that the proxy listens on, and</span><br><span class="line">     the selector that determines <span class="built_in">which</span> pods will answer requests sent through</span><br><span class="line">     the proxy.</span><br><span class="line"></span><br><span class="line">FIELDS:</span><br><span class="line">   apiVersion   &lt;string&gt;</span><br><span class="line">     APIVersion defines the versioned schema of this representation of an</span><br><span class="line">     object. Servers should convert recognized schemas to the latest internal</span><br><span class="line">     value, and may reject unrecognized values. More info:</span><br><span class="line">     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md<span class="comment">#resources</span></span><br><span class="line"></span><br><span class="line">   kind &lt;string&gt;</span><br><span class="line">     Kind is a string value representing the REST resource this object</span><br><span class="line">     represents. Servers may infer this from the endpoint the client submits</span><br><span class="line">     requests to. Cannot be updated. In CamelCase. More info:</span><br><span class="line">     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md<span class="comment">#types-kinds</span></span><br><span class="line"></span><br><span class="line">   metadata     &lt;Object&gt;</span><br><span class="line">     Standard object<span class="string">&#x27;s metadata. More info:</span></span><br><span class="line"><span class="string">     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   spec &lt;Object&gt;</span></span><br><span class="line"><span class="string">     Spec defines the behavior of a service.</span></span><br><span class="line"><span class="string">     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   status       &lt;Object&gt;</span></span><br><span class="line"><span class="string">     Most recently observed status of the service. Populated by the system.</span></span><br><span class="line"><span class="string">     Read-only. More info:</span></span><br><span class="line"><span class="string">     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status</span></span><br><span class="line"><span class="string">     </span></span><br><span class="line"><span class="string"># 集群支持的API版本</span></span><br><span class="line"><span class="string">$ kubectl api-versions</span></span><br><span class="line"><span class="string">admissionregistration.k8s.io/v1</span></span><br><span class="line"><span class="string">admissionregistration.k8s.io/v1beta1</span></span><br><span class="line"><span class="string">apiextensions.k8s.io/v1</span></span><br><span class="line"><span class="string">apiextensions.k8s.io/v1beta1</span></span><br><span class="line"><span class="string">apiregistration.k8s.io/v1</span></span><br><span class="line"><span class="string">apiregistration.k8s.io/v1beta1</span></span><br><span class="line"><span class="string">apps/v1</span></span><br><span class="line"><span class="string">authentication.k8s.io/v1</span></span><br><span class="line"><span class="string">authentication.k8s.io/v1beta1</span></span><br><span class="line"><span class="string">authorization.k8s.io/v1</span></span><br><span class="line"><span class="string">authorization.k8s.io/v1beta1</span></span><br><span class="line"><span class="string">autoscaling/v1</span></span><br><span class="line"><span class="string">autoscaling/v2beta1</span></span><br><span class="line"><span class="string">autoscaling/v2beta2</span></span><br><span class="line"><span class="string">batch/v1</span></span><br><span class="line"><span class="string">batch/v1beta1</span></span><br><span class="line"><span class="string">certificates.k8s.io/v1</span></span><br><span class="line"><span class="string">certificates.k8s.io/v1beta1</span></span><br><span class="line"><span class="string">coordination.k8s.io/v1</span></span><br><span class="line"><span class="string">coordination.k8s.io/v1beta1</span></span><br><span class="line"><span class="string">discovery.k8s.io/v1beta1</span></span><br><span class="line"><span class="string">events.k8s.io/v1</span></span><br><span class="line"><span class="string">events.k8s.io/v1beta1</span></span><br><span class="line"><span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="string">networking.k8s.io/v1</span></span><br><span class="line"><span class="string">networking.k8s.io/v1beta1</span></span><br><span class="line"><span class="string">node.k8s.io/v1beta1</span></span><br><span class="line"><span class="string">policy/v1beta1</span></span><br><span class="line"><span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="string">rbac.authorization.k8s.io/v1beta1</span></span><br><span class="line"><span class="string">scheduling.k8s.io/v1</span></span><br><span class="line"><span class="string">scheduling.k8s.io/v1beta1</span></span><br><span class="line"><span class="string">storage.k8s.io/v1</span></span><br><span class="line"><span class="string">storage.k8s.io/v1beta1</span></span><br><span class="line"><span class="string">v1</span></span><br></pre></td></tr></table></figure><h2 id="1-4-示例"><a href="#1-4-示例" class="headerlink" title="1.4 示例"></a>1.4 示例</h2><p><a href="https://v1-19.docs.kubernetes.io/docs/reference/generated/kubernetes-api/v1.19/#read-pod-v1-core">https://v1-19.docs.kubernetes.io/docs/reference/generated/kubernetes-api/v1.19/#read-pod-v1-core</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; pod.yml &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">apiVersion: v1</span></span><br><span class="line"><span class="string">kind: Pod</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: pod-example</span></span><br><span class="line"><span class="string">spec:</span></span><br><span class="line"><span class="string">  containers:</span></span><br><span class="line"><span class="string">  - name: alpine</span></span><br><span class="line"><span class="string">    image: alpine:latest</span></span><br><span class="line"><span class="string">    command: [&quot;echo&quot;]</span></span><br><span class="line"><span class="string">    args: [&quot;Hello World&quot;]</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">kubectl apply -f pod.yml</span><br><span class="line">kubectl get pod</span><br><span class="line"></span><br><span class="line">curl http://localhost:8080/api/v1/namespaces/default/pods/pod-example</span><br></pre></td></tr></table></figure><h1 id="2-Controller-Manager"><a href="#2-Controller-Manager" class="headerlink" title="2. Controller-Manager"></a>2. Controller-Manager</h1><p>Controller Manager 由 kube-controller-manager 和 cloud-controller-manager 组成，<strong>是 Kubernetes 的大脑</strong>，它通过 apiserver 监控整个集群的状态，并确保集群处于预期的工作状态。</p><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/kubernetes/k8s-controller-manager.png" alt="img"> </p><p>Controller Manager作为<strong>集群内部的管理控制中心</strong>，负责集群内的Node、Pod副本、服务端点（Endpoint）、命名空间（Namespace）、服务账号（ServiceAccount）、资源定额（ResourceQuota）的管理，当某个Node意外宕机时，Controller Manager会及时发现并执行自动化修复流程，确保集群始终处于预期的工作状态。</p><h2 id="2-1-控制器分类"><a href="#2-1-控制器分类" class="headerlink" title="2.1 控制器分类"></a>2.1 控制器分类</h2><p><strong>kube-controller-manager:</strong></p><ul><li>Replication Controller</li><li>Node Controller</li><li>CronJob Controller</li><li>Daemon Controller</li><li>Deployment Controller</li><li>Endpoint Controller</li><li>Garbage Collector</li><li>Namespace Controller</li><li>Job Controller</li><li>Pod AutoScaler</li><li>RelicaSet</li><li>Service Controller</li><li>ServiceAccount Controller</li><li>StatefulSet Controller</li><li>Volume Controller</li><li>Resource quota Controller</li></ul><p><strong>cloud-controller-manager:</strong> 在 Kubernetes 启用 Cloud Provider 的时候才需要，用来配合云服务提供商的控制</p><ul><li>Node Controller</li><li>Route Controller</li><li>Service Controller</li></ul><h2 id="2-2-Replication-Controller-RC"><a href="#2-2-Replication-Controller-RC" class="headerlink" title="2.2 Replication Controller (RC)"></a>2.2 Replication Controller (RC)</h2><p>简称RC，即副本控制器，它的作用是保证集群中一个RC所关联的Pod副本数始终保持预设值</p><ul><li>只有当Pod的重启策略<code>RestartPolicy=Always</code>时，RC才会管理该Pod的操作（创建、销毁、重启等）</li><li>创建Pod的RC模板，只在创建Pod时有效，一旦Pod创建完成，模板的变化，不会影响到已创建好的Pod</li><li>可通过修改Pod的Label，使该Pod脱离RC的管理。该方法可用于Pod从集群中迁移，数据修复等调试</li><li>删除一个RC不影响它所创建的Pod，如果要删除Pod，需要将RC的副本数属性设置为0</li><li>不要越过RC创建Pod，因为RC实现了自动化管理Pod，提高容灾能力</li></ul><h3 id="2-2-1-RC-的职责"><a href="#2-2-1-RC-的职责" class="headerlink" title="2.2.1 RC 的职责"></a>2.2.1 RC 的职责</h3><ul><li>维护集群中Pod的副本数</li><li>通过调整RC中的<code>spec.replicas</code>属性值来实现系统的扩容或缩容</li><li>通过改变RC中的Pod模板来实现系统的滚动升级</li></ul><h3 id="2-2-2-存活探针"><a href="#2-2-2-存活探针" class="headerlink" title="2.2.2 存活探针"></a>2.2.2 存活探针</h3><p>Kubemetes有以下三种探测容器的机制：</p><ul><li>HTTPGET探针：对容器的地址<code>http://ip:port/path</code>执行HTTPGET请求<ul><li>成功：探测器收到响应，且响应状态码不代表错误（2xx、3xx)</li><li>失败：未收到响应，或收到错误响应状态码</li></ul></li><li>TCP套接字探针：尝试与容器指定端口建立TCP连接。如果连接成功建立，则探测成功；否则，容器重新启动。</li><li>Exec探针：在容器内执行任意命令，并检查命令的退出状态码。如果状态码是0, 则探测成功；其他状态码都被认为失败。</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">      <span class="attr">image:</span> <span class="string">nginx:latest</span></span><br><span class="line">      <span class="comment"># 一个基于HTTP GET的存活探针</span></span><br><span class="line">      <span class="attr">livenessProbe:</span></span><br><span class="line">        <span class="comment"># 第一次检测在容器启动15秒后</span></span><br><span class="line">        <span class="attr">initialDelaySeconds:</span> <span class="number">15</span></span><br><span class="line">        <span class="attr">httpGet:</span></span><br><span class="line">          <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">/</span></span><br></pre></td></tr></table></figure><h2 id="2-3-ReplicaSet-RS"><a href="#2-3-ReplicaSet-RS" class="headerlink" title="2.3 ReplicaSet (RS)"></a>2.3 ReplicaSet (RS)</h2><p>RS 是RC的替代者，它使用Deployment管理，比RC更强大</p><h2 id="2-4-Node-Controller"><a href="#2-4-Node-Controller" class="headerlink" title="2.4 Node Controller"></a>2.4 Node Controller</h2><p>kubelet 在启动时，会通过API Server注册自身的节点信息，并定时向API Server汇报状态信息；API Server接收到信息后，将信息更新到etcd中。</p><p>Controller Manager 在启动时，如果设置了<code>--cluster-cidr</code> 参数，对于没有设置<code>Sepc.PodCIDR</code>的Node节点生成一个CIDR地址，并用该CIDR地址设置节点的<code>Spec.PodCIDR</code>属性，防止不同的节点的CIDR地址发生冲突。</p><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/kubernetes/k8s-node-controller.png" alt="img"> </p><h3 id="2-4-1-Node-Eviction"><a href="#2-4-1-Node-Eviction" class="headerlink" title="2.4.1 Node Eviction"></a>2.4.1 Node Eviction</h3><p>Node 控制器在节点异常后，会按照默认的速率（<code>--node-eviction-rate=0.1</code>，即每10秒一个节点的速率）进行 Node 的驱逐。Node 控制器按照 Zone 将节点划分为不同的组，再跟进 Zone 的状态进行速率调整：</p><ul><li><p>Normal：所有节点都 Ready，默认速率驱逐。</p></li><li><p>PartialDisruption：即超过33% 的节点 NotReady 的状态。当异常节点比例大于<code>--unhealthy-zone-threshold=0.55</code>时开始减慢速率：</p><ul><li>小集群（即节点数量小于 <code>--large-cluster-size-threshold=50</code>）：停止驱逐</li><li>大集群，减慢速率为 <code>--secondary-node-eviction-rate=0.01</code></li></ul></li><li><p>FullDisruption：所有节点都 NotReady，返回使用默认速率驱逐。但当所有 Zone 都处在 FullDisruption 时，停止驱逐。</p></li></ul><h2 id="2-5-ResourceQuota-Controller"><a href="#2-5-ResourceQuota-Controller" class="headerlink" title="2.5 ResourceQuota Controller"></a>2.5 ResourceQuota Controller</h2><p>资源配额管理，确保指定的资源对象在任何适合都不会超量占用系统物理资源。</p><p>支持三个级别的资源配置管理：</p><ul><li>容器级别：对CPU和Memory进行限制</li><li>Pod级别：对一个Pod内所有容器的可用资源进行限制</li><li>Namespace级别：<ul><li>Pod数量</li><li>RS 数量</li><li>SVC 数量</li><li>ResourceQuota 数量</li><li>Secret 数量</li><li>可持有的PV（Persistent Volume）数量</li></ul></li></ul><p>说明：</p><ol><li>配额管理通过 Admission Control (准入控制) 来管理</li><li>Admission Control 提供两针配额约束方式<ul><li>LimitRanger：作用于Pod和Container</li><li>ResourceQuota：作用于Namespace，限定一个Namespace中的各种资源的使用总额</li></ul></li></ol><p>ResourceQuota Controller流程图：</p><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/kubernetes/k8s-resource-quota-controller.png" alt="img"> </p><h2 id="2-6-Namespace-Controller"><a href="#2-6-Namespace-Controller" class="headerlink" title="2.6 Namespace Controller"></a>2.6 Namespace Controller</h2><p>用户通过API Server创建新的Namespace并保存在etcd中，Namespace Controller定时通过API Server 读取这些Namespace信息。</p><p>如果Namespace被API标记为优雅删除(即设置删除期限，DeletionTimestamp)，则将该Namespace状态设置为”Terminating”，并保存到etcd中，同时Namespace Controller删除该Namespace下的ServiceAccount, RS, Pod等资源对象。</p><h2 id="2-7-Endpoint-Controller"><a href="#2-7-Endpoint-Controller" class="headerlink" title="2.7 Endpoint Controller"></a>2.7 Endpoint Controller</h2><p><strong>Service, Endpoint, Pod的关系：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/kubernetes/k8s-svc-endpoint-pod.png" alt="img"> </p><p>Endpoints 表示一个Service对应的所有Pod副本的访问地址，而Endpoints Controller负责生成和维护所有Endpoints对象的控制器，它负责监听Service和对应的Pod副本变化：</p><ul><li>Service被删除，则删除和该Service同名的Endpoints对象</li><li>Service被创建或修改，则根据该Service信息获得相关的Pod列表，然后创建或更新Service对应的Endpoints对象</li><li>Pod事件，则更它对应的Service的Endpoints对象</li></ul><p><strong>kube-proxy</strong> 进程获取每个Service的Endpoints，实现Service的负载均衡功能</p><h2 id="2-8-Service-Controller"><a href="#2-8-Service-Controller" class="headerlink" title="2.8 Service Controller"></a>2.8 Service Controller</h2><p>Service Controller 属于kubernetes集群与外部云平台之间的一个接口控制器。它监听Service变化，如果一个LoadBalancer类型的Service，则确保外部的云平台上对该Service对应的Load Balancer实例相应地创建、删除及更新路由转发表。</p><h1 id="3-Scheduler"><a href="#3-Scheduler" class="headerlink" title="3. Scheduler"></a>3. Scheduler</h1><p>Scheduler负责Pod调度，在整个系统中起“承上启下”作用</p><p><strong>承上</strong>：负责接收Controller Manager 创建的新的Pod，并为其选择合适的Node</p><p><strong>启下</strong>：Node上的kubelet接管Pod的生命周期</p><p><strong>Scheduler 集群分发调度器:</strong></p><p>1) 通过调度算法，选择合适的Node，将待调度的Pod在该Node上创建，并将信息写入etcd中</p><p>2) kubelet 通过API Server监听到 Scheduler 产生的Pod绑定信息，然后获取对应的Pod清单，下载image，并启动容器</p><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/kubernetes/k8s-scheduler.png" alt="img"></p><h2 id="3-1-调度流程"><a href="#3-1-调度流程" class="headerlink" title="3.1 调度流程"></a>3.1 调度流程</h2><ul><li>预选调度过程：即遍历所有目标Node，筛选出符合要求的候选节点。k8s 内置了多种预选策略(Predicates) 供用户选择</li><li>确定最优节点：采用优选策略（Priority）计算出每个候选节点的积分，取最高分</li></ul><p>调度流程通过插件式加载的<strong>调度算法提供者(Algorithm Provider)</strong> 具体实现，一个调度算法提供者就是包括一组预选策略与一组优选策略的结构体。</p><h2 id="3-2-预选策略"><a href="#3-2-预选策略" class="headerlink" title="3.2 预选策略"></a>3.2 预选策略</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">CheckNodeCondition：检查节点是否正常（如ip，磁盘等）</span><br><span class="line">GeneralPredicates</span><br><span class="line">  HostName：检查Pod对象是否定义了pod.spec.hostname</span><br><span class="line">  PodFitsHostPorts：pod要能适配node的端口 pods.spec.containers.ports.hostPort（指定绑定在节点的端口上）</span><br><span class="line">  MatchNodeSelector：检查节点的NodeSelector的标签 pods.spec.nodeSelector</span><br><span class="line">  PodFitsResources：检查Pod的资源需求是否能被节点所满足</span><br><span class="line">NoDiskConflict: 检查Pod依赖的存储卷是否能满足需求（默认未使用）</span><br><span class="line">PodToleratesNodeTaints：检查Pod上的spec.tolerations可容忍的污点是否完全包含节点上的污点</span><br><span class="line">PodToleratesNodeNoExecuteTaints：不能执行（NoExecute）的污点（默认未使用）</span><br><span class="line">CheckNodeLabelPresence：检查指定的标签再上节点是否存在</span><br><span class="line">CheckServiceAffinity：将相同services相同的pod尽量放在一起（默认未使用）</span><br><span class="line">MaxEBSVolumeCount： 检查EBS（AWS存储）存储卷的最大数量</span><br><span class="line">MaxGCEPDVolumeCount GCE存储最大数</span><br><span class="line">MaxAzureDiskVolumeCount: AzureDisk 存储最大数</span><br><span class="line">CheckVolumeBinding：检查节点上已绑定或未绑定的pvc</span><br><span class="line">NoVolumeZoneConflict：检查存储卷对象与pod是否存在冲突</span><br><span class="line">CheckNodeMemoryPressure：检查节点内存是否存在压力过大</span><br><span class="line">CheckNodePIDPressure：检查节点上的PID数量是否过大</span><br><span class="line">CheckNodeDiskPressure： 检查内存、磁盘IO是否过大</span><br><span class="line">MatchInterPodAffinity: 检查节点是否能满足pod的亲和性或反亲和性</span><br></pre></td></tr></table></figure><h2 id="3-3-优选策略"><a href="#3-3-优选策略" class="headerlink" title="3.3 优选策略"></a>3.3 优选策略</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">LeastRequested： 空闲量越高得分越高</span><br><span class="line">(cpu((capacity-sum(requested))*10/capacity)+memory((capacity-sum(requested))*10/capacity))/2</span><br><span class="line"></span><br><span class="line">BalancedResourceAllocation：CPU和内存资源被占用率相近的胜出</span><br><span class="line">NodePreferAvoidPods: 节点注解信息“scheduler.alpha.kubernetes.io/preferAvoidPods”</span><br><span class="line">TaintToleration：将Pod对象的spec.tolerations列表项与节点的taints列表项进行匹配度检查，匹配条目越，得分越低</span><br><span class="line"></span><br><span class="line">SeletorSpreading：标签选择器分散度，（与当前pod对象通选的标签，所选其它pod越多的得分越低）</span><br><span class="line">InterPodAffinity：遍历pod对象的亲和性匹配项目，项目越多得分越高</span><br><span class="line">NodeAffinity：节点亲和性 、</span><br><span class="line">MostRequested：空闲量越小得分越高，和LeastRequested相反 （默认未启用）</span><br><span class="line">NodeLabel：节点是否存在对应的标签 （默认未启用）</span><br><span class="line">ImageLocality：根据满足当前Pod对象需求的已有镜像的体积大小之和（默认未启用）</span><br></pre></td></tr></table></figure><h2 id="3-4-高级调度"><a href="#3-4-高级调度" class="headerlink" title="3.4 高级调度"></a>3.4 高级调度</h2><h3 id="3-4-1-nodeSelector"><a href="#3-4-1-nodeSelector" class="headerlink" title="3.4.1 nodeSelector"></a>3.4.1 <code>nodeSelector</code></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 创建 redis 集群</span></span><br><span class="line">cat &gt; redis-deploy.yml &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">apiVersion: apps/v1</span></span><br><span class="line"><span class="string">kind: Deployment</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: redis</span></span><br><span class="line"><span class="string">spec:</span></span><br><span class="line"><span class="string">  selector:</span></span><br><span class="line"><span class="string">    matchLabels:</span></span><br><span class="line"><span class="string">      app: redis</span></span><br><span class="line"><span class="string">  replicas: 2</span></span><br><span class="line"><span class="string">  template:</span></span><br><span class="line"><span class="string">    metadata:</span></span><br><span class="line"><span class="string">      labels:</span></span><br><span class="line"><span class="string">        app: redis</span></span><br><span class="line"><span class="string">    spec:</span></span><br><span class="line"><span class="string">      containers:</span></span><br><span class="line"><span class="string">      - name: redis</span></span><br><span class="line"><span class="string">        image: redis:6.2.3</span></span><br><span class="line"><span class="string">        resources:</span></span><br><span class="line"><span class="string">          requests:</span></span><br><span class="line"><span class="string">            cpu: 100m</span></span><br><span class="line"><span class="string">            memory: 100Mi</span></span><br><span class="line"><span class="string">        ports:</span></span><br><span class="line"><span class="string">        - containerPort: 6379</span></span><br><span class="line"><span class="string">      nodeSelector:</span></span><br><span class="line"><span class="string">        disk: ssd  # 限定磁盘类型</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">kubetcl apply -f redis-deploy.yml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查pod状态</span></span><br><span class="line">kubectl get pod</span><br><span class="line">NAME                   READY   STATUS    RESTARTS   AGE</span><br><span class="line">redis-9fc84569-2jlxh   0/1     Pending   0          60s</span><br><span class="line">redis-9fc84569-q78jd   0/1     Pending   0          60s</span><br><span class="line"></span><br><span class="line">kubectl describe pod redis-9fc84569-2jlxh</span><br><span class="line">Events:</span><br><span class="line">  Type     Reason            Age                From               Message</span><br><span class="line">  ----     ------            ----               ----               -------</span><br><span class="line">  Warning  FailedScheduling  20s (x3 over 76s)  default-scheduler  0/4 nodes are available: 4 node(s) didn<span class="string">&#x27;t match node selector.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># k8s-node2 增加标签 disk=ssd </span></span><br><span class="line"><span class="string">kubectl label node k8s-node2 disk=ssd </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">kubectl get  nodes --show-labels | grep disk=ssd</span></span><br><span class="line"><span class="string">k8s-node2     Ready      node     4d21h   v1.19.11   beta.kubernetes.io/arch=amd64,beta.kubernetes.io/os=linux,disk=ssd,kubernetes.io/arch=amd64,kubernetes.io/hostname=k8s-node2,kubernetes.io/os=linux,node-role.kubernetes.io/node=</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 再次检查 pod 是否创建成功</span></span><br><span class="line"><span class="string">kubectl get pod -o wide</span></span><br><span class="line"><span class="string">NAME                   READY   STATUS    RESTARTS   AGE     IP           NODE        NOMINATED NODE   READINESS GATES</span></span><br><span class="line"><span class="string">redis-9fc84569-2jlxh   1/1     Running   0          5m20s   10.244.1.8   k8s-node2   &lt;none&gt;           &lt;none&gt;</span></span><br><span class="line"><span class="string">redis-9fc84569-q78jd   1/1     Running   0          5m20s   10.244.1.7   k8s-node2   &lt;none&gt;           &lt;none&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-4-2-亲和性-affinity"><a href="#3-4-2-亲和性-affinity" class="headerlink" title="3.4.2 亲和性 (affinity)"></a>3.4.2 亲和性 (affinity)</h3><h4 id="1-软亲和"><a href="#1-软亲和" class="headerlink" title="1. 软亲和"></a>1. 软亲和</h4><h4 id="preferredDuringSchedulingIgnoredDuringExecution"><a href="#preferredDuringSchedulingIgnoredDuringExecution" class="headerlink" title="preferredDuringSchedulingIgnoredDuringExecution"></a><code>preferredDuringSchedulingIgnoredDuringExecution</code></h4><p><strong>软亲和</strong>：选择条件匹配多的，就算都不满足条件，还是会生成pod</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; preferred-affinity-pod.yml &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">apiVersion: v1</span></span><br><span class="line"><span class="string">kind: Pod</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: preferred-affinity-pod</span></span><br><span class="line"><span class="string">  labels:</span></span><br><span class="line"><span class="string">    app: my-pod</span></span><br><span class="line"><span class="string">spec:</span></span><br><span class="line"><span class="string">  containers:</span></span><br><span class="line"><span class="string">  - name: preferred-affinity-pod</span></span><br><span class="line"><span class="string">    image: nginx</span></span><br><span class="line"><span class="string">    ports:</span></span><br><span class="line"><span class="string">    - name: http</span></span><br><span class="line"><span class="string">      containerPort: 80</span></span><br><span class="line"><span class="string">  affinity:</span></span><br><span class="line"><span class="string">    nodeAffinity:</span></span><br><span class="line"><span class="string">      preferredDuringSchedulingIgnoredDuringExecution:</span></span><br><span class="line"><span class="string">      - preference:</span></span><br><span class="line"><span class="string">          matchExpressions:</span></span><br><span class="line"><span class="string">          - key: apps # 标签键名</span></span><br><span class="line"><span class="string">            operator: In</span></span><br><span class="line"><span class="string">            values:</span></span><br><span class="line"><span class="string">            - mysql     # apps=mysql</span></span><br><span class="line"><span class="string">            - redis     # apps=redis</span></span><br><span class="line"><span class="string">        weight: 60 # 匹配相应nodeSelectorTerm相关联的权重,1-100</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">kubectl apply -f preferred-affinity-pod.yml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 不满足依旧创建成功</span></span><br><span class="line">kubectl get pod -o wide</span><br><span class="line">NAME                     READY   STATUS    RESTARTS   AGE   IP            NODE        NOMINATED NODE   READINESS GATES</span><br><span class="line">preferred-affinity-pod   1/1     Running   0          61s   10.244.2.18   k8s-node1   &lt;none&gt;           &lt;none&gt;</span><br></pre></td></tr></table></figure><h4 id="2-硬亲和"><a href="#2-硬亲和" class="headerlink" title="2. 硬亲和"></a>2. 硬亲和</h4><p><code>requiredDuringSchedulingIgnoredDuringExecution</code> </p><p><strong>硬亲和</strong>：选择条件匹配多的，必须满足一项，才会生成pod</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; required-affinity-pod.yml &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">apiVersion: v1</span></span><br><span class="line"><span class="string">kind: Pod</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: required-affinity-pod</span></span><br><span class="line"><span class="string">  labels:</span></span><br><span class="line"><span class="string">    app: my-pod</span></span><br><span class="line"><span class="string">spec:</span></span><br><span class="line"><span class="string">  containers:</span></span><br><span class="line"><span class="string">  - name: required-affinity-pod</span></span><br><span class="line"><span class="string">    image: nginx</span></span><br><span class="line"><span class="string">    ports:</span></span><br><span class="line"><span class="string">    - name: http</span></span><br><span class="line"><span class="string">      containerPort: 80</span></span><br><span class="line"><span class="string">  affinity:</span></span><br><span class="line"><span class="string">    nodeAffinity:</span></span><br><span class="line"><span class="string">      requiredDuringSchedulingIgnoredDuringExecution:</span></span><br><span class="line"><span class="string">        nodeSelectorTerms:</span></span><br><span class="line"><span class="string">          - matchExpressions:</span></span><br><span class="line"><span class="string">            - key: apps # 标签键名</span></span><br><span class="line"><span class="string">              operator: In</span></span><br><span class="line"><span class="string">              values:</span></span><br><span class="line"><span class="string">                - mysql     # apps=mysql</span></span><br><span class="line"><span class="string">                - redis     # apps=redis          </span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">kubectl apply -f required-affinity-pod.yml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 不满足无法创建成功</span></span><br><span class="line">kubectl  get pod -o wide</span><br><span class="line">NAME                     READY   STATUS    RESTARTS   AGE   IP            NODE        NOMINATED NODE   READINESS GATES</span><br><span class="line">required-affinity-pod    0/1     Pending   0          18s   &lt;none&gt;        &lt;none&gt;      &lt;none&gt;           &lt;none&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改 k8s-node1 的标签</span></span><br><span class="line">kubectl label node k8s-node1 apps=mysql </span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建成功</span></span><br><span class="line">kubectl  get pod -o wide</span><br><span class="line">NAME                     READY   STATUS    RESTARTS   AGE     IP            NODE        NOMINATED NODE   READINESS GATES</span><br><span class="line">required-affinity-pod    1/1     Running   0          2m31s   10.244.2.19   k8s-node1   &lt;none&gt;           &lt;none&gt;</span><br></pre></td></tr></table></figure><h3 id="3-4-3-反亲和性"><a href="#3-4-3-反亲和性" class="headerlink" title="3.4.3 反亲和性"></a>3.4.3 反亲和性</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; anti-affinity.yml &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">apiVersion: v1</span></span><br><span class="line"><span class="string">kind: Pod</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: myapp1</span></span><br><span class="line"><span class="string">  labels:</span></span><br><span class="line"><span class="string">    app: myapp1</span></span><br><span class="line"><span class="string">      </span></span><br><span class="line"><span class="string">spec:</span></span><br><span class="line"><span class="string">  containers:</span></span><br><span class="line"><span class="string">  - name: myapp1</span></span><br><span class="line"><span class="string">    image: nginx</span></span><br><span class="line"><span class="string">    ports:</span></span><br><span class="line"><span class="string">    - name: http</span></span><br><span class="line"><span class="string">      containerPort: 80</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">apiVersion: v1</span></span><br><span class="line"><span class="string">kind: Pod</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: myapp2</span></span><br><span class="line"><span class="string">  labels:</span></span><br><span class="line"><span class="string">    app: myapp2</span></span><br><span class="line"><span class="string">      </span></span><br><span class="line"><span class="string">spec:</span></span><br><span class="line"><span class="string">  containers:</span></span><br><span class="line"><span class="string">  - name: myapp2</span></span><br><span class="line"><span class="string">    image: nginx</span></span><br><span class="line"><span class="string">    ports:</span></span><br><span class="line"><span class="string">    - name: http</span></span><br><span class="line"><span class="string">      containerPort: 80</span></span><br><span class="line"><span class="string">  affinity:</span></span><br><span class="line"><span class="string">    podAntiAffinity: </span></span><br><span class="line"><span class="string">      requiredDuringSchedulingIgnoredDuringExecution:</span></span><br><span class="line"><span class="string">      - labelSelector:</span></span><br><span class="line"><span class="string">          matchExpressions:</span></span><br><span class="line"><span class="string">          - key: app</span></span><br><span class="line"><span class="string">            operator: In</span></span><br><span class="line"><span class="string">            values:</span></span><br><span class="line"><span class="string">            - myapp1   # app=myapp1</span></span><br><span class="line"><span class="string">        topologyKey: kubernetes.io/hostname  #kubernetes.io/hostname的值一样代表pod不处于同一位置  </span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">kubectl apply -f anti-affinity.yml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 分属不同的节点上</span></span><br><span class="line">kubectl get pod -o wide</span><br><span class="line">NAME     READY   STATUS    RESTARTS   AGE   IP            NODE        NOMINATED NODE   READINESS GATES</span><br><span class="line">myapp1   1/1     Running   0          43s   10.244.2.20   k8s-node1   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">myapp2   1/1     Running   0          43s   10.244.1.9    k8s-node2   &lt;none&gt;           &lt;none&gt;</span><br></pre></td></tr></table></figure><h2 id="3-5-污点和容忍"><a href="#3-5-污点和容忍" class="headerlink" title="3.5 污点和容忍"></a>3.5 污点和容忍</h2><p>taint的effect定义对Pod排斥效果：</p><ul><li>NoSchedule：只影响调度过程，对现存的Pod对象不产生影响，即不驱离</li><li>NoExecute：既影响调度过程，也影响现在的Pod对象，即现存的Pod对象将被驱离</li><li>PreferNoSchedule： 最好不部署Pod，但如果实在找不到节点，也可以在此节点上部署</li></ul><h3 id="3-5-1-污点管理"><a href="#3-5-1-污点管理" class="headerlink" title="3.5.1 污点管理"></a>3.5.1 污点管理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">kubectl describe node k8s-master1 | grep Taints</span><br><span class="line">Taints:             node-role.kubernetes.io/master:NoSchedule</span><br><span class="line"></span><br><span class="line">kubectl describe node k8s-node1 | grep Taints</span><br><span class="line">Taints:             &lt;none&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打污点</span></span><br><span class="line">kubectl taint node k8s-node1 node-role.kubernetes.io/node=:NoSchedule</span><br><span class="line"></span><br><span class="line">kubectl describe node k8s-node1 | grep Taints</span><br><span class="line">Taints:             node-role.kubernetes.io/node:NoSchedule</span><br><span class="line"></span><br><span class="line"><span class="comment"># 去除污点</span></span><br><span class="line">kubectl taint node k8s-node1 node-role.kubernetes.io/node-</span><br></pre></td></tr></table></figure><h3 id="3-5-2-容忍"><a href="#3-5-2-容忍" class="headerlink" title="3.5.2 容忍"></a>3.5.2 容忍</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 节点全部加上node-type污点</span></span><br><span class="line">kubectl taint node k8s-node1 node-type=:NoSchedule</span><br><span class="line">kubectl taint node k8s-node2 node-type=:NoSchedule</span><br><span class="line"></span><br><span class="line">cat &gt; toleration-pod.yml &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">apiVersion: v1</span></span><br><span class="line"><span class="string">kind: Pod</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: toleration-pod</span></span><br><span class="line"><span class="string">  labels:</span></span><br><span class="line"><span class="string">    app: toleration-pod</span></span><br><span class="line"><span class="string">      </span></span><br><span class="line"><span class="string">spec:</span></span><br><span class="line"><span class="string">  containers:</span></span><br><span class="line"><span class="string">  - name: toleration-pod</span></span><br><span class="line"><span class="string">    image: nginx</span></span><br><span class="line"><span class="string">    ports:</span></span><br><span class="line"><span class="string">    - name: http</span></span><br><span class="line"><span class="string">      containerPort: 80</span></span><br><span class="line"><span class="string">  tolerations:</span></span><br><span class="line"><span class="string">  - key: &quot;node-type&quot;           # 污点名称</span></span><br><span class="line"><span class="string">    operator: &quot;Equal&quot;          # Exists/Equal</span></span><br><span class="line"><span class="string">    value: &quot;PreferNoSchedule&quot;  # 污点值</span></span><br><span class="line"><span class="string">    effect: &quot;NoSchedule&quot;       # </span></span><br><span class="line"><span class="string">    #tolerationSeconds: 3600    # 如果被驱逐的话，容忍时间 effect和tolerationSeconds不能同时存在</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">kubectl apply -f toleration-pod.yml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 无法正常创建</span></span><br><span class="line">kubectl get pod</span><br><span class="line">NAME             READY   STATUS    RESTARTS   AGE</span><br><span class="line">toleration-pod   0/1     Pending   0          5s</span><br><span class="line"></span><br><span class="line">kubectl describe pod toleration-pod</span><br><span class="line">Events:</span><br><span class="line">  Type     Reason            Age                From               Message</span><br><span class="line">  ----     ------            ----               ----               -------</span><br><span class="line">  Warning  FailedScheduling  26s (x2 over 26s)  default-scheduler  0/4 nodes are available: 1 node(s) had taint &#123;node-role.kubernetes.io/master: &#125;, that the pod didn<span class="string">&#x27;t tolerate, 3 node(s) had taint &#123;node-type: &#125;, that the pod didn&#x27;</span>t tolerate.</span><br><span class="line"></span><br><span class="line"><span class="comment"># k8s-node1 污点增加 PreferNoSchedule，并删除NoSchedule</span></span><br><span class="line">kubectl taint node k8s-node1 node-type=:PreferNoSchedule</span><br><span class="line">kubectl taint node k8s-node1 node-type=:NoSchedule-    </span><br><span class="line"></span><br><span class="line"><span class="comment"># 调度成功</span></span><br><span class="line">kubectl get pod -o wide</span><br><span class="line">NAME             READY   STATUS    RESTARTS   AGE   IP            NODE        NOMINATED NODE   READINESS GATES</span><br><span class="line">toleration-pod   1/1     Running   0          11m   10.244.2.21   k8s-node1   &lt;none&gt;           &lt;none&gt;</span><br></pre></td></tr></table></figure><h1 id="4-Kubelet"><a href="#4-Kubelet" class="headerlink" title="4. Kubelet"></a>4. Kubelet</h1><p>每个Node节点上都运行一个 Kubelet 服务进程，默认监听 10250 端口，接收并执行 Master 发来的指令，管理 Pod 及 Pod 中的容器。每个 Kubelet 进程会在 API Server 上注册所在Node节点的信息，定期向 Master 节点汇报该节点的资源使用情况，并通过 cAdvisor 监控节点和容器的资源。可以把kubelet理解成【Server-Agent】架构中的agent，是Node上的<strong>Pod管家</strong>。</p><h2 id="4-1-节点管理"><a href="#4-1-节点管理" class="headerlink" title="4.1 节点管理"></a>4.1 节点管理</h2><p>节点管理主要是节点自注册和节点状态更新：</p><ul><li>通过启动参数“-register-node” 来确定是否向API Server注册自己</li><li>没有选择自注册模式，则需要用户自己配置Node资源信息，同时配置API Server的地址</li><li>启动时，通过API Server注册节点信息，并定时向API Server发送节点新消息，API Server在接收到新消息后，将信息写入 etcd</li></ul><p>主要参数：</p><ul><li><code>--kubeconfig</code>: 指定kubeconfig的路径，该文件常用来指定证书</li><li><code>--hostname-override</code>: 配置该节点在集群中显示的主机名</li><li><code>--node-status-update-frequency</code>:  kubelet向API Server上报心跳的频率，默认10s</li></ul><h2 id="4-2-Pod-管理"><a href="#4-2-Pod-管理" class="headerlink" title="4.2 Pod 管理"></a>4.2 Pod 管理</h2><h3 id="4-2-1-获取-Pod-清单"><a href="#4-2-1-获取-Pod-清单" class="headerlink" title="4.2.1 获取 Pod 清单"></a>4.2.1 获取 Pod 清单</h3><p> kubelet 通过 API Server Client 使用Watch加List的方式，监听 “/registry/csinodes” 和 “/registry/pods” 目录，将获取到的信息同步到本地缓存中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">etcdctl get /registry/csinodes --prefix --keys-only</span><br><span class="line">/registry/csinodes/k8s-master1</span><br><span class="line">/registry/csinodes/k8s-master2</span><br><span class="line">/registry/csinodes/k8s-node1</span><br><span class="line">/registry/csinodes/k8s-node2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 节点详细信息</span></span><br><span class="line">etcdctl get /registry/csinodes/k8s-master1</span><br><span class="line">/registry/csinodes/k8s-master1</span><br><span class="line">k8s</span><br><span class="line"></span><br><span class="line">storage.k8s.io/v1CSINode⚌</span><br><span class="line">⚌</span><br><span class="line"></span><br><span class="line">k8s-master1<span class="string">&quot;*<span class="variable">$cc45d1d2</span>-dde9-4740-ac49-878a971ef0852⚌⚌⚌j=</span></span><br><span class="line"><span class="string">Node</span></span><br><span class="line"><span class="string">    k8s-master1&quot;</span><span class="variable">$5e851f78</span>-5bfc-4acb-b5c3-4a10cf353237*v1z⚌⚌</span><br><span class="line">kubeletUpdatestorage.k8s.io/v⚌⚌⚌FieldsV1:⚌</span><br><span class="line">⚌&#123;<span class="string">&quot;f:metadata&quot;</span>:&#123;<span class="string">&quot;f:ownerReferences&quot;</span>:&#123;<span class="string">&quot;.&quot;</span>:&#123;&#125;,<span class="string">&quot;k:&#123;\&quot;uid\&quot;:\&quot;5e851f78-5bfc-4acb-b5c3-4a10cf353237\&quot;&#125;&quot;</span>:&#123;<span class="string">&quot;.&quot;</span>:&#123;&#125;,<span class="string">&quot;f:apiVersion&quot;</span>:&#123;&#125;,<span class="string">&quot;f:kind&quot;</span>:&#123;&#125;,<span class="string">&quot;f:name&quot;</span>:&#123;&#125;,<span class="string">&quot;f:uid&quot;</span>:&#123;&#125;&#125;&#125;&#125;&#125;<span class="string">&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># pods信息</span></span><br><span class="line"><span class="string">etcdctl  get /registry/pods --prefix --keys-only</span></span><br><span class="line"><span class="string">/registry/pods/kube-system/coredns-867bfd96bd-264bb</span></span><br><span class="line"><span class="string">/registry/pods/kube-system/kube-flannel-ds-48kz2</span></span><br><span class="line"><span class="string">/registry/pods/kube-system/kube-flannel-ds-bsfpp</span></span><br><span class="line"><span class="string">/registry/pods/kube-system/kube-flannel-ds-h5shb</span></span><br><span class="line"><span class="string">/registry/pods/kube-system/kube-flannel-ds-qpvlt</span></span><br><span class="line"><span class="string">/registry/pods/kubernetes-dashboard/dashboard-metrics-scraper-79c5968bdc-62hlk</span></span><br><span class="line"><span class="string">/registry/pods/kubernetes-dashboard/kubernetes-dashboard-9f9799597-b8hfr</span></span><br></pre></td></tr></table></figure><p>所有针对 Pod 的操作都将会被 kubelet 监听到，kubelet会根据监听到的指令，创建、修改或删除本节点的Pod。</p><h3 id="4-2-2-Pod-创建流程"><a href="#4-2-2-Pod-创建流程" class="headerlink" title="4.2.2 Pod 创建流程"></a>4.2.2 Pod 创建流程</h3><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/kubernetes/k8s-pod-start-procedure.png" alt="img"> </p><p> kubelet 读取监听到的信息，如果是创建或修改 Pod，则执行如下处理：</p><ul><li>为Pod创建一个数据目录</li><li>从API Server读取该 Pod 清单</li><li>为该 Pod 挂载外部卷</li><li>下载 Pod 用到的 Secret</li><li>检查节点上是否已运行Pod，如果 Pod 没有容器或 Pause容器 没有启动，则先停止 Pod 里的所有容器进程。如果在Pod中有需要删除的容器，则删除这些容器</li><li>用 “kubernetes/pause” 镜像为每个Pod创建一个容器。Pause容器用于接管 Pod 中所有其他容器的网络。没创建一个新的Pod，kubelet 都会先创建一个 Pause容器，然后再创建其他容器。</li><li>Pod 中每个容器的处理：<ul><li>为容器计算一个hash值，然后用容器名字去docker查询对应容器的hash值。若查找到容器，但两者hash值不同，则停止docker中的容器进程，并停止与之管理的Pause容器；若两者相同，则不做任何处理</li><li>如果容器被终止了，且容器未指定 restartPolicy，则不做任何处理</li><li>调用 Docker Client 下载容器镜像，然后运行容器</li></ul></li></ul><h3 id="4-2-3-容器状态检查"><a href="#4-2-3-容器状态检查" class="headerlink" title="4.2.3 容器状态检查"></a>4.2.3 容器状态检查</h3><p>Pod 通过两类探针检查容器的监控状态：</p><ul><li>LivenessProbe: 生存检查。如果检查到容器不健康，则删除该容器，并根据容器的重启策略做响应处理。</li><li>ReadinessProbe: 就绪检查。如果检查的容器未就绪，将删除关联 Service 的 Endpoints 中关联条目。</li></ul><p>LivenessProbe 的三种实现方式：</p><ul><li>ExecAction：容器中执行命令，如果命令退出状态码是0，则表示容器健康</li><li>TCPSocketAction: 通过容器的 IP:PORT 执行 TCP 检查，如果端口能够被访问，则表示容器健康</li><li>HTTPGetAction：通过容器的 <a href="http://IP:PORT/path">http://IP:PORT/path</a> 调用HTTP GET方法，如果响应状态码表示成功(2xx, 3xx)，则认为容器健康</li></ul><h3 id="4-2-4-Static-Pod"><a href="#4-2-4-Static-Pod" class="headerlink" title="4.2.4 Static Pod"></a>4.2.4 Static Pod</h3><p>所有以非 API Server 方式创建的 Pod 都叫 Static Pod。Kubelet 将 Static Pod 的状态汇报给 API Server，API Server 为该 Static Pod 创建一个 Mirror Pod 和其相匹配。Mirror Pod 的状态将真实反映 Static Pod 的状态。当 Static Pod 被删除时，与之相对应的 Mirror Pod 也会被删除。</p><h2 id="4-3-cAdvisor-资源监控"><a href="#4-3-cAdvisor-资源监控" class="headerlink" title="4.3 cAdvisor 资源监控"></a>4.3 cAdvisor 资源监控</h2><p>资源监控级别：容器，Pod，Service，整个集群</p><p>Heapster: 为k8s提供了一个级别的监控平台，它是集群级别的监控和事件数据集成器(Aggregator)。它以Pod方式运行在集群中，并通过 kubelet 发现所有运行在集群中的节点，查看来自这些节点的资源使用情况。kubelet 通过 cAdvisor 获取其所在节点即容器的数据。Heapster通过带着关联标签的 Pod 分组信息，它们被推送到一个可配置的后端，用于存储和可视化展示。</p><p>cAdvisor: 一个开源的分析容器资源使用率和性能特征的代理工具，集成到 kubelet，当 kubelet 启动时会同时启动 cAdvisor，且一个cAdvidsor 只监控一个Node节点的信息。cAdvisor 自动查找所有在其节点上的容器，自动采集 CPU、内存、文件系统和网络使用的统计信息。cAdvisor 通过它所在节点的 Root 容器，采集并分析该节点的全面使用情况。</p><p>cAdvisor 通过其所在节点的 4149 端口暴露一个简单的 UI。</p><h2 id="4-4-工作原理"><a href="#4-4-工作原理" class="headerlink" title="4.4 工作原理"></a>4.4 工作原理</h2><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/kubernetes/k8s-kubelet-diagram.png" alt="img"></p><p>kubelet 内部组件：</p><ul><li>kubelet API：认证API (10250)，cAdvisor API (4194)，只读 API (10255)，健康检查API (10248)</li><li>syncLoop: 从 API 或者 manifest 目录接收 Pod 跟新，发送到 podWorkers 处理，大量使用 channel 来处理异步请求</li><li>辅助的 Manager: cAdvisor, PLEG, Volume Manager等，处理 syncLoop 以外的工作</li><li>CRI：容器执行引擎接口，负责与 container runtime shim 通信</li><li>容器执行引擎：dockershim, rkt等</li><li>网络插件：CNI， kubenet</li></ul><h2 id="4-5-Kubelet-Eviction"><a href="#4-5-Kubelet-Eviction" class="headerlink" title="4.5 Kubelet Eviction"></a>4.5 Kubelet Eviction</h2><p>kubelet 会健康资源的使用情况，并通过驱逐机制防止计算和存储资源耗尽。在驱逐时，Pod中的容器全部停止，并将 PodPhase 设置为 Failed</p><p>定期 (housekeeping-interval) 检查系统的资源是否达到了预先配置的驱逐阈值：</p><table><thead><tr><th>Eviction Signal</th><th>Condition</th><th>Description</th></tr></thead><tbody><tr><td><code>memory.available</code></td><td>MemoryPressue</td><td><code>memory.available</code> := <code>node.status.capacity[memory]</code> - <code>node.stats.memory.workingSet</code></td></tr><tr><td><code>nodefs.available</code></td><td>DiskPressure</td><td><code>nodefs.available</code> := <code>node.stats.fs.available</code>（Kubelet Volume以及日志等）</td></tr><tr><td><code>nodefs.inodesFree</code></td><td>DiskPressure</td><td><code>nodefs.inodesFree</code> := <code>node.stats.fs.inodesFree</code></td></tr><tr><td><code>imagefs.available</code></td><td>DiskPressure</td><td><code>imagefs.available</code> := <code>node.stats.runtime.imagefs.available</code>（镜像以及容器可写层等）</td></tr><tr><td><code>imagefs.inodesFree</code></td><td>DiskPressure</td><td><code>imagefs.inodesFree</code> := <code>node.stats.runtime.imagefs.inodesFree</code></td></tr></tbody></table><p>驱逐阈值可以使用百分比，也可以使用绝对值:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">--eviction-hard=memory.available&lt;500Mi,nodefs.available&lt;1Gi,imagefs.available&lt;100Gi</span><br><span class="line">--eviction-minimum-reclaim=<span class="string">&quot;memory.available=0Mi,nodefs.available=500Mi,imagefs.available=2Gi&quot;</span>`</span><br><span class="line">--system-reserved=memory=1.5Gi</span><br></pre></td></tr></table></figure><p>驱逐信号分类：</p><ul><li>软驱逐 (Soft Eviction): 配合驱逐宽限期 (eviction-soft-grace-period 和 eviction-max-pod-grace-period) 一起使用。系统资源达到软驱逐阈值且超过宽限期之后才会执行驱逐动作</li><li>硬驱逐 (Hard Eviction): 系统资源达到硬驱逐阈值时理解执行驱逐动作</li></ul><p>驱逐动作：</p><ul><li>回收节点资源<ul><li>配置了 imagefs 阈值<ul><li>达到 nodefs 阈值：删除已停止的 Pod</li><li>达到 imagefs 阈值：删除未使用的镜像</li></ul></li><li>未配置 imagefs 阈值<ul><li>达到 nodefs 阈值：先删除已停止的 Pod，后删除未使用的镜像，顺序清理</li></ul></li></ul></li><li>驱逐用户 Pod<ul><li>驱逐顺序：BestEffort, Burstable, Guaranteed</li><li>配置了 imagefs 阈值<ul><li>达到 nodefs 阈值：基于nodefs用量驱逐 (local volume + logs)</li><li>达到 imagefs 阈值：基于imagefs用量驱逐 (容器可写层)</li></ul></li><li>未配置 imagefs 阈值<ul><li>达到 nodefs 阈值：安装总磁盘使用驱逐 (local volume + logs + 容器可写层)</li></ul></li></ul></li></ul><p>其他容器和镜像垃圾回收选项：</p><table><thead><tr><th>垃圾回收参数</th><th>驱逐参数</th><th>解释</th></tr></thead><tbody><tr><td><code>--image-gc-high-threshold</code></td><td><code>--eviction-hard</code> 或 <code>--eviction-soft</code></td><td>现存的驱逐回收信号可以触发镜像垃圾回收</td></tr><tr><td><code>--image-gc-low-threshold</code></td><td><code>--eviction-minimum-reclaim</code></td><td>驱逐回收实现相同行为</td></tr><tr><td><code>--minimum-image-ttl-duration</code></td><td></td><td>由于驱逐不包括TTL配置，所以它还会继续支持</td></tr><tr><td><code>--maximum-dead-containers</code></td><td></td><td>一旦旧日志存储在容器上下文之外，就会被弃用</td></tr><tr><td><code>--maximum-dead-containers-per-container</code></td><td></td><td>一旦旧日志存储在容器上下文之外，就会被弃用</td></tr><tr><td><code>--minimum-container-ttl-duration</code></td><td></td><td>一旦旧日志存储在容器上下文之外，就会被弃用</td></tr><tr><td><code>--low-diskspace-threshold-mb</code></td><td><code>--eviction-hard</code> or <code>eviction-soft</code></td><td>驱逐回收将磁盘阈值泛化到其他资源</td></tr><tr><td><code>--outofdisk-transition-frequency</code></td><td><code>--eviction-pressure-transition-period</code></td><td>驱逐回收将磁盘压力转换到其他资源</td></tr></tbody></table><h2 id="4-6-容器运行时"><a href="#4-6-容器运行时" class="headerlink" title="4.6 容器运行时"></a>4.6 容器运行时</h2><p>容器运行时 (Container Runtime)，负责真正管理镜像和容器的生命周期。kubelet 通过容器运行时接口 (Container Runtime Interface, CRI) 与容器运行时交互，以管理镜像和容器。</p><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/kubernetes/k8s-cri-diagram.png" alt="img"></p><p>CRI 容器引擎：</p><ul><li>Docker：dockershim</li><li>OCI (Open Container Initiative) 开放容器标准<ul><li>Containerd</li><li>CRI-O</li><li>runc, OCI 标准容器引擎</li></ul></li><li>PouchContainer：阿里巴巴开源的胖容器引擎</li></ul><h2 id="4-7-Node-汇总指标"><a href="#4-7-Node-汇总指标" class="headerlink" title="4.7 Node 汇总指标"></a>4.7 Node 汇总指标</h2><ul><li><p>集群内部：<code>curl http://k8s-master1:10255/stats/summary</code></p></li><li><p>集群外部：（暂未成功）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl proxy &amp;</span><br><span class="line">curl http://localhost:8001/api/v1/proxy/csinodes/k8s-master1:10255/stats/summary</span><br></pre></td></tr></table></figure></li></ul><h1 id="5-Kube-proxy"><a href="#5-Kube-proxy" class="headerlink" title="5. Kube-proxy"></a>5. Kube-proxy</h1><h2 id="5-1-简介"><a href="#5-1-简介" class="headerlink" title="5.1 简介"></a>5.1 简介</h2><p>kube-proxy 监听 API server 中 service 和 endpoint 的变化情况，并通过 userspace、iptables、ipvs 或 winuserspace 等 proxier 来为服务配置<strong>负载均衡</strong>（仅支持 TCP &amp; UDP）</p><p>kube-proxy 可以直接运行在物理机上，也可以以 static pod 或者daemonset的方式运行</p><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/kubernetes/k8s-kube-proxy-diagram.png" alt="img"> </p><p>kube-proxy 的实现：</p><ul><li><p>userspace： 早期方案，它在用户空间监听一个端口，所有服务通过 iptables 转发到这个端口，然后再其内部负载均衡器到实际的Pod。该方式最主要的问题时效率低，有明显的性能瓶颈。</p></li><li><p>iptables: 推荐方案，完全以iptables规则的方式来实现 service 负载均衡。该方式的最主要问题是创建了太多的 iptables 规则，非增量式更新会引入一定的时延，大规模情况下有明显的性能问题</p></li><li><p>ipvs: 解决了 iptables 的性能问题，采用增量式更新，可以保证 service 更新期间连接保持不断开</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ipvs 模式需要加载内核模块</span></span><br><span class="line">modprobe -- ip_vs</span><br><span class="line">modprobe -- ip_vs_rr</span><br><span class="line">modprobe -- ip_vs_wrr</span><br><span class="line">modprobe -- ip_vs_sh</span><br><span class="line">modprobe -- nf_conntrack_ipv4</span><br><span class="line"></span><br><span class="line"><span class="comment"># to check loaded modules, use</span></span><br><span class="line">lsmod | grep -e ip_vs -e nf_conntrack_ipv4</span><br><span class="line"></span><br><span class="line"><span class="comment"># or</span></span><br><span class="line">cut -f1 -d <span class="string">&quot; &quot;</span>  /proc/modules | grep -e ip_vs -e nf_conntrack_ipv4</span><br></pre></td></tr></table></figure></li></ul><h2 id="5-2-Iptables-示例"><a href="#5-2-Iptables-示例" class="headerlink" title="5.2 Iptables 示例"></a>5.2 Iptables 示例</h2><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/kubernetes/k8s-kube-proxy-iptables.png" alt="img"> </p><h2 id="5-3-ipvs-示例"><a href="#5-3-ipvs-示例" class="headerlink" title="5.3 ipvs 示例"></a>5.3 ipvs 示例</h2><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/kubernetes/k8s-kube-proxy-ipvs.png" alt="img"> </p><h2 id="5-4-kube-proxy-的不足"><a href="#5-4-kube-proxy-的不足" class="headerlink" title="5.4 kube-proxy 的不足"></a>5.4 kube-proxy 的不足</h2><p>只支持 TCP 和 UDP，不支持 HTTP 路由，也没有健康检查机制。这些可以通过自定义 <a href="https://feisky.gitbooks.io/kubernetes/content/plugins/ingress.html">Ingress Controller</a> 的方法来解决。</p><h1 id="6-Kube-DNS"><a href="#6-Kube-DNS" class="headerlink" title="6. Kube-DNS"></a>6. Kube-DNS</h1><h2 id="6-1-kube-dns"><a href="#6-1-kube-dns" class="headerlink" title="6.1 kube-dns"></a>6.1 kube-dns</h2><h3 id="6-1-1-工作原理"><a href="#6-1-1-工作原理" class="headerlink" title="6.1.1 工作原理"></a>6.1.1 工作原理</h3><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/kubernetes/k8s-kube-dns-procedure.png" alt="img"> </p><p>kube-dns 由三个容器构成：</p><ul><li>kube-dns: 核心组件<ul><li>KubeDNS：负责监听 Service 和 Endpoint 的变化情况，并将相关信息更新到 Sky DNS 中</li><li>SkyDNS: 负责 DNS 解析，监听在 10053 端口，同时也监听在 10055 端口提供 metrics 服务</li><li>kube-dns 还监听在 8081 端口，提供健康检查使用</li></ul></li><li>dnsmasq-nanny: 负责启动 dnsmasq，配置发生变化时，重启 dnsmasq<ul><li>dnsmasq 的 upstream 为 SkyDNS，即集群内部的 DNS 解析由 SkyDNS 负责</li></ul></li><li>sidecar: 负责健康检查和 提供 DNS metrics （10054端口）</li></ul><h3 id="6-1-2-使用-kube-dns"><a href="#6-1-2-使用-kube-dns" class="headerlink" title="6.1.2 使用 kube-dns"></a>6.1.2 使用 kube-dns</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; kube-dns.yaml &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">apiVersion: v1</span></span><br><span class="line"><span class="string">kind: Service</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: kube-dns</span></span><br><span class="line"><span class="string">  namespace: kube-system</span></span><br><span class="line"><span class="string">  labels:</span></span><br><span class="line"><span class="string">    k8s-app: kube-dns</span></span><br><span class="line"><span class="string">    kubernetes.io/cluster-service: &quot;true&quot;</span></span><br><span class="line"><span class="string">    addonmanager.kubernetes.io/mode: Reconcile</span></span><br><span class="line"><span class="string">    kubernetes.io/name: &quot;KubeDNS&quot;</span></span><br><span class="line"><span class="string">spec:</span></span><br><span class="line"><span class="string">  selector:</span></span><br><span class="line"><span class="string">    k8s-app: kube-dns</span></span><br><span class="line"><span class="string">  clusterIP: 10.0.0.2</span></span><br><span class="line"><span class="string">  ports:</span></span><br><span class="line"><span class="string">  - name: dns</span></span><br><span class="line"><span class="string">    port: 53</span></span><br><span class="line"><span class="string">    protocol: UDP</span></span><br><span class="line"><span class="string">  - name: dns-tcp</span></span><br><span class="line"><span class="string">    port: 53</span></span><br><span class="line"><span class="string">    protocol: TCP</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">apiVersion: v1</span></span><br><span class="line"><span class="string">kind: ServiceAccount</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: kube-dns</span></span><br><span class="line"><span class="string">  namespace: kube-system</span></span><br><span class="line"><span class="string">  labels:</span></span><br><span class="line"><span class="string">    kubernetes.io/cluster-service: &quot;true&quot;</span></span><br><span class="line"><span class="string">    addonmanager.kubernetes.io/mode: Reconcile</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">apiVersion: v1</span></span><br><span class="line"><span class="string">kind: ConfigMap</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: kube-dns</span></span><br><span class="line"><span class="string">  namespace: kube-system</span></span><br><span class="line"><span class="string">  labels:</span></span><br><span class="line"><span class="string">    addonmanager.kubernetes.io/mode: EnsureExists</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">apiVersion: apps/v1</span></span><br><span class="line"><span class="string">kind: Deployment</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: kube-dns</span></span><br><span class="line"><span class="string">  namespace: kube-system</span></span><br><span class="line"><span class="string">  labels:</span></span><br><span class="line"><span class="string">    k8s-app: kube-dns</span></span><br><span class="line"><span class="string">    kubernetes.io/cluster-service: &quot;true&quot;</span></span><br><span class="line"><span class="string">    addonmanager.kubernetes.io/mode: Reconcile</span></span><br><span class="line"><span class="string">spec:</span></span><br><span class="line"><span class="string">  # replicas: not specified here:</span></span><br><span class="line"><span class="string">  # 1. In order to make Addon Manager do not reconcile this replicas parameter.</span></span><br><span class="line"><span class="string">  # 2. Default is 1.</span></span><br><span class="line"><span class="string">  # 3. Will be tuned in real time if DNS horizontal auto-scaling is turned on.</span></span><br><span class="line"><span class="string">  strategy:</span></span><br><span class="line"><span class="string">    rollingUpdate:</span></span><br><span class="line"><span class="string">      maxSurge: 10%</span></span><br><span class="line"><span class="string">      maxUnavailable: 0</span></span><br><span class="line"><span class="string">  selector:</span></span><br><span class="line"><span class="string">    matchLabels:</span></span><br><span class="line"><span class="string">      k8s-app: kube-dns</span></span><br><span class="line"><span class="string">  template:</span></span><br><span class="line"><span class="string">    metadata:</span></span><br><span class="line"><span class="string">      labels:</span></span><br><span class="line"><span class="string">        k8s-app: kube-dns</span></span><br><span class="line"><span class="string">      annotations:</span></span><br><span class="line"><span class="string">        prometheus.io/port: &quot;10054&quot;</span></span><br><span class="line"><span class="string">        prometheus.io/scrape: &quot;true&quot;</span></span><br><span class="line"><span class="string">    spec:</span></span><br><span class="line"><span class="string">      priorityClassName: system-cluster-critical</span></span><br><span class="line"><span class="string">      securityContext:</span></span><br><span class="line"><span class="string">        seccompProfile:</span></span><br><span class="line"><span class="string">          type: RuntimeDefault</span></span><br><span class="line"><span class="string">        supplementalGroups: [ 65534 ]</span></span><br><span class="line"><span class="string">        fsGroup: 65534</span></span><br><span class="line"><span class="string">      affinity:</span></span><br><span class="line"><span class="string">        podAntiAffinity:</span></span><br><span class="line"><span class="string">          preferredDuringSchedulingIgnoredDuringExecution:</span></span><br><span class="line"><span class="string">          - weight: 100</span></span><br><span class="line"><span class="string">            podAffinityTerm:</span></span><br><span class="line"><span class="string">              labelSelector:</span></span><br><span class="line"><span class="string">                matchExpressions:</span></span><br><span class="line"><span class="string">                  - key: k8s-app</span></span><br><span class="line"><span class="string">                    operator: In</span></span><br><span class="line"><span class="string">                    values: [&quot;kube-dns&quot;]</span></span><br><span class="line"><span class="string">              topologyKey: kubernetes.io/hostname</span></span><br><span class="line"><span class="string">      tolerations:</span></span><br><span class="line"><span class="string">      - key: &quot;CriticalAddonsOnly&quot;</span></span><br><span class="line"><span class="string">        operator: &quot;Exists&quot;</span></span><br><span class="line"><span class="string">      volumes:</span></span><br><span class="line"><span class="string">      - name: kube-dns-config</span></span><br><span class="line"><span class="string">        configMap:</span></span><br><span class="line"><span class="string">          name: kube-dns</span></span><br><span class="line"><span class="string">          optional: true</span></span><br><span class="line"><span class="string">      nodeSelector:</span></span><br><span class="line"><span class="string">        kubernetes.io/os: linux</span></span><br><span class="line"><span class="string">      containers:</span></span><br><span class="line"><span class="string">      - name: kubedns</span></span><br><span class="line"><span class="string">        image: k8s.gcr.io/dns/k8s-dns-kube-dns:1.17.3</span></span><br><span class="line"><span class="string">        resources:</span></span><br><span class="line"><span class="string">          # TODO: Set memory limits when we&#x27;ve profiled the container for large</span></span><br><span class="line"><span class="string">          # clusters, then set request = limit to keep this container in</span></span><br><span class="line"><span class="string">          # guaranteed class. Currently, this container falls into the</span></span><br><span class="line"><span class="string">          # &quot;burstable&quot; category so the kubelet doesn&#x27;t backoff from restarting it.</span></span><br><span class="line"><span class="string">          limits:</span></span><br><span class="line"><span class="string">            memory: 170Mi</span></span><br><span class="line"><span class="string">          requests:</span></span><br><span class="line"><span class="string">            cpu: 100m</span></span><br><span class="line"><span class="string">            memory: 70Mi</span></span><br><span class="line"><span class="string">        livenessProbe:</span></span><br><span class="line"><span class="string">          httpGet:</span></span><br><span class="line"><span class="string">            path: /healthcheck/kubedns</span></span><br><span class="line"><span class="string">            port: 10054</span></span><br><span class="line"><span class="string">            scheme: HTTP</span></span><br><span class="line"><span class="string">          initialDelaySeconds: 60</span></span><br><span class="line"><span class="string">          timeoutSeconds: 5</span></span><br><span class="line"><span class="string">          successThreshold: 1</span></span><br><span class="line"><span class="string">          failureThreshold: 5</span></span><br><span class="line"><span class="string">        readinessProbe:</span></span><br><span class="line"><span class="string">          httpGet:</span></span><br><span class="line"><span class="string">            path: /readiness</span></span><br><span class="line"><span class="string">            port: 8081</span></span><br><span class="line"><span class="string">            scheme: HTTP</span></span><br><span class="line"><span class="string">          # we poll on pod startup for the Kubernetes master service and</span></span><br><span class="line"><span class="string">          # only setup the /readiness HTTP server once that&#x27;s available.</span></span><br><span class="line"><span class="string">          initialDelaySeconds: 3</span></span><br><span class="line"><span class="string">          timeoutSeconds: 5</span></span><br><span class="line"><span class="string">        args:</span></span><br><span class="line"><span class="string">        - --domain=cluster.local.</span></span><br><span class="line"><span class="string">        - --dns-port=10053</span></span><br><span class="line"><span class="string">        - --config-dir=/kube-dns-config</span></span><br><span class="line"><span class="string">        - --v=2</span></span><br><span class="line"><span class="string">        env:</span></span><br><span class="line"><span class="string">        - name: PROMETHEUS_PORT</span></span><br><span class="line"><span class="string">          value: &quot;10055&quot;</span></span><br><span class="line"><span class="string">        ports:</span></span><br><span class="line"><span class="string">        - containerPort: 10053</span></span><br><span class="line"><span class="string">          name: dns-local</span></span><br><span class="line"><span class="string">          protocol: UDP</span></span><br><span class="line"><span class="string">        - containerPort: 10053</span></span><br><span class="line"><span class="string">          name: dns-tcp-local</span></span><br><span class="line"><span class="string">          protocol: TCP</span></span><br><span class="line"><span class="string">        - containerPort: 10055</span></span><br><span class="line"><span class="string">          name: metrics</span></span><br><span class="line"><span class="string">          protocol: TCP</span></span><br><span class="line"><span class="string">        volumeMounts:</span></span><br><span class="line"><span class="string">        - name: kube-dns-config</span></span><br><span class="line"><span class="string">          mountPath: /kube-dns-config</span></span><br><span class="line"><span class="string">        securityContext:</span></span><br><span class="line"><span class="string">          allowPrivilegeEscalation: false</span></span><br><span class="line"><span class="string">          readOnlyRootFilesystem: true</span></span><br><span class="line"><span class="string">          runAsUser: 1001</span></span><br><span class="line"><span class="string">          runAsGroup: 1001</span></span><br><span class="line"><span class="string">      - name: dnsmasq</span></span><br><span class="line"><span class="string">        image: k8s.gcr.io/dns/k8s-dns-dnsmasq-nanny:1.17.3</span></span><br><span class="line"><span class="string">        livenessProbe:</span></span><br><span class="line"><span class="string">          httpGet:</span></span><br><span class="line"><span class="string">            path: /healthcheck/dnsmasq</span></span><br><span class="line"><span class="string">            port: 10054</span></span><br><span class="line"><span class="string">            scheme: HTTP</span></span><br><span class="line"><span class="string">          initialDelaySeconds: 60</span></span><br><span class="line"><span class="string">          timeoutSeconds: 5</span></span><br><span class="line"><span class="string">          successThreshold: 1</span></span><br><span class="line"><span class="string">          failureThreshold: 5</span></span><br><span class="line"><span class="string">        args:</span></span><br><span class="line"><span class="string">        - -v=2</span></span><br><span class="line"><span class="string">        - -logtostderr</span></span><br><span class="line"><span class="string">        - -configDir=/etc/k8s/dns/dnsmasq-nanny</span></span><br><span class="line"><span class="string">        - -restartDnsmasq=true</span></span><br><span class="line"><span class="string">        - --</span></span><br><span class="line"><span class="string">        - -k</span></span><br><span class="line"><span class="string">        - --cache-size=1000</span></span><br><span class="line"><span class="string">        - --no-negcache</span></span><br><span class="line"><span class="string">        - --dns-loop-detect</span></span><br><span class="line"><span class="string">        - --log-facility=-</span></span><br><span class="line"><span class="string">        - --server=/cluster.local/127.0.0.1#10053</span></span><br><span class="line"><span class="string">        - --server=/in-addr.arpa/127.0.0.1#10053</span></span><br><span class="line"><span class="string">        - --server=/ip6.arpa/127.0.0.1#10053</span></span><br><span class="line"><span class="string">        ports:</span></span><br><span class="line"><span class="string">        - containerPort: 53</span></span><br><span class="line"><span class="string">          name: dns</span></span><br><span class="line"><span class="string">          protocol: UDP</span></span><br><span class="line"><span class="string">        - containerPort: 53</span></span><br><span class="line"><span class="string">          name: dns-tcp</span></span><br><span class="line"><span class="string">          protocol: TCP</span></span><br><span class="line"><span class="string">        # see: https://github.com/kubernetes/kubernetes/issues/29055 for details</span></span><br><span class="line"><span class="string">        resources:</span></span><br><span class="line"><span class="string">          requests:</span></span><br><span class="line"><span class="string">            cpu: 150m</span></span><br><span class="line"><span class="string">            memory: 20Mi</span></span><br><span class="line"><span class="string">        volumeMounts:</span></span><br><span class="line"><span class="string">        - name: kube-dns-config</span></span><br><span class="line"><span class="string">          mountPath: /etc/k8s/dns/dnsmasq-nanny</span></span><br><span class="line"><span class="string">        securityContext:</span></span><br><span class="line"><span class="string">          capabilities:</span></span><br><span class="line"><span class="string">            drop:</span></span><br><span class="line"><span class="string">              - all</span></span><br><span class="line"><span class="string">            add:</span></span><br><span class="line"><span class="string">              - NET_BIND_SERVICE</span></span><br><span class="line"><span class="string">              - SETGID</span></span><br><span class="line"><span class="string">      - name: sidecar</span></span><br><span class="line"><span class="string">        image: k8s.gcr.io/dns/k8s-dns-sidecar:1.17.3</span></span><br><span class="line"><span class="string">        livenessProbe:</span></span><br><span class="line"><span class="string">          httpGet:</span></span><br><span class="line"><span class="string">            path: /metrics</span></span><br><span class="line"><span class="string">            port: 10054</span></span><br><span class="line"><span class="string">            scheme: HTTP</span></span><br><span class="line"><span class="string">          initialDelaySeconds: 60</span></span><br><span class="line"><span class="string">          timeoutSeconds: 5</span></span><br><span class="line"><span class="string">          successThreshold: 1</span></span><br><span class="line"><span class="string">          failureThreshold: 5</span></span><br><span class="line"><span class="string">        args:</span></span><br><span class="line"><span class="string">        - --v=2</span></span><br><span class="line"><span class="string">        - --logtostderr</span></span><br><span class="line"><span class="string">        - --probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local,5,SRV</span></span><br><span class="line"><span class="string">        - --probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local,5,SRV</span></span><br><span class="line"><span class="string">        ports:</span></span><br><span class="line"><span class="string">        - containerPort: 10054</span></span><br><span class="line"><span class="string">          name: metrics</span></span><br><span class="line"><span class="string">          protocol: TCP</span></span><br><span class="line"><span class="string">        resources:</span></span><br><span class="line"><span class="string">          requests:</span></span><br><span class="line"><span class="string">            memory: 20Mi</span></span><br><span class="line"><span class="string">            cpu: 10m</span></span><br><span class="line"><span class="string">        securityContext:</span></span><br><span class="line"><span class="string">          allowPrivilegeEscalation: false</span></span><br><span class="line"><span class="string">          readOnlyRootFilesystem: true</span></span><br><span class="line"><span class="string">          runAsUser: 1001</span></span><br><span class="line"><span class="string">          runAsGroup: 1001</span></span><br><span class="line"><span class="string">      dnsPolicy: Default  # Don&#x27;t use cluster DNS.</span></span><br><span class="line"><span class="string">      serviceAccountName: kube-dns</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">kubectl apply -f kube-dns.yaml</span><br><span class="line">kubectl get pod -n kube-system</span><br></pre></td></tr></table></figure><h3 id="6-1-3-相关问题"><a href="#6-1-3-相关问题" class="headerlink" title="6.1.3 相关问题"></a>6.1.3 相关问题</h3><h4 id="1-问题定位"><a href="#1-问题定位" class="headerlink" title="1. 问题定位"></a>1. 问题定位</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 发现问题</span></span><br><span class="line">kubectl describe pod kube-dns-594c5b5cb5-mdxp6 -n kube-system</span><br><span class="line">...</span><br><span class="line">  Normal   Pulled     13m                   kubelet            Container image <span class="string">&quot;k8s.gcr.io/dns/k8s-dns-kube-dns:1.17.3&quot;</span> already present on machine</span><br><span class="line">  Warning  Unhealthy  12m (x2 over 13m)     kubelet            Liveness probe failed: HTTP probe failed with statuscode: 503</span><br><span class="line">  Warning  Unhealthy  9m32s (x25 over 13m)  kubelet            Readiness probe failed: Get <span class="string">&quot;http://10.244.2.28:8081/readiness&quot;</span>: dial tcp 10.244.2.28:8081: connect: connection refused</span><br><span class="line">  Warning  BackOff    4m30s (x19 over 10m)  kubelet            Back-off restarting failed container</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看容器日志</span></span><br><span class="line">kubectl logs  kube-dns-594c5b5cb5-mdxp6 kubedns -n kube-system</span><br><span class="line">...</span><br><span class="line">I0520 05:59:53.947378       1 server.go:195] Skydns metrics enabled (/metrics:10055)</span><br><span class="line">I0520 05:59:53.947996       1 log.go:172] skydns: ready <span class="keyword">for</span> queries on cluster.local. <span class="keyword">for</span> tcp://0.0.0.0:10053 [rcache 0]</span><br><span class="line">I0520 05:59:53.948005       1 log.go:172] skydns: ready <span class="keyword">for</span> queries on cluster.local. <span class="keyword">for</span> udp://0.0.0.0:10053 [rcache 0]</span><br><span class="line">E0520 05:59:53.957842       1 reflector.go:125] pkg/mod/k8s.io/client-go@v0.0.0-20190620085101-78d2af792bab/tools/cache/reflector.go:98: Failed to list *v1.Service: services is forbidden: User <span class="string">&quot;system:serviceaccount:kube-system:kube-dns&quot;</span> cannot list resource <span class="string">&quot;services&quot;</span> <span class="keyword">in</span> API group <span class="string">&quot;&quot;</span> at the cluster scope: RBAC: clusterrole.rbac.authorization.k8s.io <span class="string">&quot;system:kube-dns&quot;</span> not found</span><br><span class="line">E0520 05:59:53.957894       1 reflector.go:125] pkg/mod/k8s.io/client-go@v0.0.0-20190620085101-78d2af792bab/tools/cache/reflector.go:98: Failed to list *v1.Endpoints: endpoints is forbidden: User <span class="string">&quot;system:serviceaccount:kube-system:kube-dns&quot;</span> cannot list resource <span class="string">&quot;endpoints&quot;</span> <span class="keyword">in</span> API group <span class="string">&quot;&quot;</span> at the cluster scope: RBAC: clusterrole.rbac.authorization.k8s.io <span class="string">&quot;system:kube-dns&quot;</span> not found</span><br><span class="line">I0520 05:59:54.447988       1 dns.go:220] Waiting <span class="keyword">for</span> [endpoints services] to be initialized from apiserver...</span><br></pre></td></tr></table></figure><p><strong>问题根因</strong>：rbac “system:kube-dns” 未找到，导致无法访问apiserver</p><h4 id="2-解决办法"><a href="#2-解决办法" class="headerlink" title="2. 解决办法"></a>2. 解决办法</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"># 创建 rbac</span><br><span class="line">cat &gt; kube-dns-rbac.yaml &lt;&lt;EOF</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: ClusterRole</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    kubernetes.io/bootstrapping: rbac-defaults</span><br><span class="line">  name: system:kube-dns</span><br><span class="line">rules:</span><br><span class="line">  - apiGroups:</span><br><span class="line">    - &quot;&quot;</span><br><span class="line">    resources:</span><br><span class="line">    - endpoints</span><br><span class="line">    - services</span><br><span class="line">    verbs:</span><br><span class="line">    - get</span><br><span class="line">    - list</span><br><span class="line">    - watch</span><br><span class="line">---</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  annotations:</span><br><span class="line">    rbac.authorization.kubernetes.io/autoupdate: &quot;true&quot;</span><br><span class="line">  labels:</span><br><span class="line">    kubernetes.io/bootstrapping: rbac-defaults</span><br><span class="line">  name: system:kube-dns</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: system:kube-dns</span><br><span class="line">subjects:</span><br><span class="line">- kind: ServiceAccount</span><br><span class="line">  name: kube-dns</span><br><span class="line">  namespace: kube-system</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">kubectl apply -f kube-dns-rbac.yaml</span><br><span class="line"></span><br><span class="line">kubectl describe clusterrole system:kube-dns</span><br><span class="line">kubectl describe clusterrolebinding system:kube-dns</span><br></pre></td></tr></table></figure><h4 id="3-验证成功"><a href="#3-验证成功" class="headerlink" title="3. 验证成功"></a>3. 验证成功</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f kube-dns.yaml</span><br><span class="line">kubectl apply -f kube-dns.yaml</span><br><span class="line"></span><br><span class="line">kubectl get pod -n kube-system -o wide | grep kube-dns</span><br><span class="line">kube-dns-594c5b5cb5-6wttp   3/3     Running   0          13m     10.244.2.29     k8s-node1     &lt;none&gt;           &lt;none&gt;</span><br><span class="line"></span><br><span class="line">kubectl describe pod kube-dns-594c5b5cb5-mdxp6 -n kube-system</span><br><span class="line">...</span><br><span class="line">Events:</span><br><span class="line">  Type    Reason     Age   From               Message</span><br><span class="line">  ----    ------     ----  ----               -------</span><br><span class="line">  Normal  Scheduled  48s   default-scheduler  Successfully assigned kube-system/kube-dns-594c5b5cb5-6wttp to k8s-node1</span><br><span class="line">  Normal  Pulled     47s   kubelet            Container image <span class="string">&quot;k8s.gcr.io/dns/k8s-dns-kube-dns:1.17.3&quot;</span> already present on machine</span><br><span class="line">  Normal  Created    47s   kubelet            Created container kubedns</span><br><span class="line">  Normal  Started    47s   kubelet            Started container kubedns</span><br><span class="line">  Normal  Pulled     47s   kubelet            Container image <span class="string">&quot;k8s.gcr.io/dns/k8s-dns-dnsmasq-nanny:1.17.3&quot;</span> already present on machine</span><br><span class="line">  Normal  Created    47s   kubelet            Created container dnsmasq</span><br><span class="line">  Normal  Started    47s   kubelet            Started container dnsmasq</span><br><span class="line">  Normal  Pulled     47s   kubelet            Container image <span class="string">&quot;k8s.gcr.io/dns/k8s-dns-sidecar:1.17.3&quot;</span> already present on machine</span><br><span class="line">  Normal  Created    47s   kubelet            Created container sidecar</span><br><span class="line">  Normal  Started    47s   kubelet            Started container sidecar</span><br></pre></td></tr></table></figure><h2 id="6-2-CoreDNS"><a href="#6-2-CoreDNS" class="headerlink" title="6.2 CoreDNS"></a>6.2 CoreDNS</h2><p>kube-dns 的升级版。CoreDNS 的效率更高，资源占用更小</p><h3 id="6-2-1-安装-coredns"><a href="#6-2-1-安装-coredns" class="headerlink" title="6.2.1 安装 coredns"></a>6.2.1 安装 coredns</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/coredns/deployment/archive/refs/tags/coredns-1.14.0.tar.gz</span><br><span class="line">tar zxvf coredns-1.14.0.tar.gz</span><br><span class="line"><span class="built_in">cd</span> deployment-coredns-1.14.0/kubernetes</span><br><span class="line"></span><br><span class="line"><span class="comment"># 部署</span></span><br><span class="line">./deploy.sh | kubectl apply -f -</span><br><span class="line">kubectl delete --namespace=kube-system deployment kube-dns</span><br><span class="line"></span><br><span class="line"><span class="comment"># 卸载</span></span><br><span class="line">./rollback.sh | kubectl apply -f -</span><br><span class="line">kubectl delete --namespace=kube-system deployment coredns</span><br></pre></td></tr></table></figure><h3 id="6-2-2-支持的-DNS-格式"><a href="#6-2-2-支持的-DNS-格式" class="headerlink" title="6.2.2 支持的 DNS 格式"></a>6.2.2 支持的 DNS 格式</h3><ul><li><p>Service</p><ul><li>A record：<code>$&#123;my-svc&#125;.$&#123;my-namespace&#125;.svc.cluster.local</code>，解析分两种情况<ul><li>普通 Service 解析为 Cluster IP</li><li>Headless Service 解析为指定的 Pod IP 列表</li></ul></li><li>SRV record: <code>_$&#123;my-port-name&#125;._$&#123;my-port-protocol&#125;$&#123;my-svc&#125;.$&#123;my-namespace&#125;.svc.cluster.local</code></li></ul></li><li><p>Pod</p><ul><li>A record: <code>$&#123;pod-ip-address&#125;.$&#123;my-namespace&#125;.pod.cluster.local</code></li><li>指定 hostname 和 subdomain: <code>$&#123;hostname&#125;.$&#123;custom-subdomain&#125;.default.svc.cluster.local</code></li></ul></li></ul><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; dns-test.yaml &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">apiVersion: v1</span></span><br><span class="line"><span class="string">kind: Pod</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: nginx</span></span><br><span class="line"><span class="string">  labels:</span></span><br><span class="line"><span class="string">    name: nginx</span></span><br><span class="line"><span class="string">spec:</span></span><br><span class="line"><span class="string">  hostname: nginx</span></span><br><span class="line"><span class="string">  subdomain: default-subdomain</span></span><br><span class="line"><span class="string">  containers:</span></span><br><span class="line"><span class="string">  - name: nginx</span></span><br><span class="line"><span class="string">    image: nginx</span></span><br><span class="line"><span class="string">    ports:</span></span><br><span class="line"><span class="string">    - name: http</span></span><br><span class="line"><span class="string">      containerPort: 80 </span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">apiVersion: v1</span></span><br><span class="line"><span class="string">kind: Pod</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: dnsutils</span></span><br><span class="line"><span class="string">  labels:</span></span><br><span class="line"><span class="string">    name: dnsutils</span></span><br><span class="line"><span class="string">spec:</span></span><br><span class="line"><span class="string">  containers:</span></span><br><span class="line"><span class="string">  - image: tutum/dnsutils</span></span><br><span class="line"><span class="string">    command:</span></span><br><span class="line"><span class="string">      - sleep</span></span><br><span class="line"><span class="string">      - &quot;7200&quot;</span></span><br><span class="line"><span class="string">    name: dnsutils</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">kubectl apply -f nginx-pod.yaml</span><br><span class="line"></span><br><span class="line">kubectl <span class="built_in">exec</span> -it dnsutils /bin/sh</span><br></pre></td></tr></table></figure><h2 id="6-3-私有和上游-DNS-服务器"><a href="#6-3-私有和上游-DNS-服务器" class="headerlink" title="6.3 私有和上游 DNS 服务器"></a>6.3 私有和上游 DNS 服务器</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kube-dns</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">stubDomains:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    &#123;“acme.local”: [“1.2.3.4”]&#125;</span></span><br><span class="line"><span class="string"></span>  <span class="attr">upstreamNameservers:</span> <span class="string">|</span></span><br><span class="line">    [<span class="string">“8.8.8.8”</span>, <span class="string">“8.8.4.4”</span>]</span><br></pre></td></tr></table></figure><p>查询请求首先会被发送到 kube-dns 的 DNS 缓存层 (Dnsmasq 服务器)。Dnsmasq 服务器会先检查请求的后缀，带有集群后缀（例如：”.cluster.local”）的请求会被发往 kube-dns，拥有存根域后缀的名称（例如：”.acme.local”）将会被发送到配置的私有 DNS 服务器 [“1.2.3.4”]。最后，不满足任何这些后缀的请求将会被发送到上游 DNS [“8.8.8.8”, “8.8.4.4”] 里。</p><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/kubernetes/k8s-kube-dns-upstream.png" alt="img"> </p>]]></content>
      
      
      <categories>
          
          <category> kubernetes </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes 集群二进制安装</title>
      <link href="/2021/06/20/Kubernetes%20%E9%9B%86%E7%BE%A4%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AE%89%E8%A3%85/"/>
      <url>/2021/06/20/Kubernetes%20%E9%9B%86%E7%BE%A4%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="1-环境准备"><a href="#1-环境准备" class="headerlink" title="1. 环境准备"></a>1. 环境准备</h1><h2 id="1-1-安装规划"><a href="#1-1-安装规划" class="headerlink" title="1.1 安装规划"></a>1.1 安装规划</h2><table><thead><tr><th>角色</th><th>IP</th><th>组件</th></tr></thead><tbody><tr><td>k8s-master1</td><td>192.168.80.45</td><td>etcd, api-server, controller-manager, scheduler, docker</td></tr><tr><td>k8s-node01</td><td>192.168.80.46</td><td>etcd, kubelet, kube-proxy, docker</td></tr><tr><td>k8s-node02</td><td>192.168.80.47</td><td>etcd, kubelet, kube-proxy, docker</td></tr></tbody></table><p>软件版本：</p><table><thead><tr><th>软件</th><th>版本</th><th>备注</th></tr></thead><tbody><tr><td>OS</td><td>Ubuntu 16.04.6 LTS</td><td></td></tr><tr><td>Kubernetes</td><td>1.21.4</td><td></td></tr><tr><td>Etcd</td><td>v3.5.0</td><td></td></tr><tr><td>Docker</td><td>19.03.9</td><td></td></tr></tbody></table><span id="more"></span><h2 id="1-2-系统设置"><a href="#1-2-系统设置" class="headerlink" title="1.2 系统设置"></a>1.2 系统设置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 修改主机名</span></span><br><span class="line">hostnamectl set-hostname k8s-master</span><br><span class="line">hostnamectl set-hostname k8s-node01</span><br><span class="line">hostnamectl set-hostname k8s-node02</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 主机名解析</span></span><br><span class="line">cat &gt;&gt; /etc/hosts &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">192.168.80.45  k8s-master</span></span><br><span class="line"><span class="string">192.168.80.46  k8s-node01</span></span><br><span class="line"><span class="string">192.168.80.47  k8s-node02</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 禁用 swap</span></span><br><span class="line">swapoff -a &amp;&amp; sed -i <span class="string">&#x27;/ swap / s/^\(.*\)$/#\1/g&#x27;</span> /etc/fstab</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4. 将桥接的IPv4流量传递到iptables的链 </span></span><br><span class="line">cat &gt; /etc/sysctl.d/k8s.conf &lt;&lt; <span class="string">EOF </span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-ip6tables = 1 </span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-iptables = 1 </span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">sysctl --system </span><br><span class="line"></span><br><span class="line"><span class="comment"># 5. 时间同步 </span></span><br><span class="line">apt install ntpdate -y </span><br><span class="line">ntpdate ntp1.aliyun.com</span><br><span class="line"></span><br><span class="line">crontab -e</span><br><span class="line">*/30 * * * * /usr/sbin/ntpdate-u ntp1.aliyun.com &gt;&gt; /var/<span class="built_in">log</span>/ntpdate.log 2&gt;&amp;1</span><br></pre></td></tr></table></figure><h1 id="2-安装-docker"><a href="#2-安装-docker" class="headerlink" title="2. 安装 docker"></a>2. 安装 docker</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p <span class="variable">$HOME</span>/k8s-install &amp;&amp; <span class="built_in">cd</span> <span class="variable">$HOME</span>/k8s-install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. 下载安装包</span></span><br><span class="line">wget https://download.docker.com/linux/static/stable/x86_64/docker-19.03.9.tgz</span><br><span class="line">tar zxvf docker-19.03.9.tgz</span><br><span class="line">mv docker/* /usr/bin</span><br><span class="line">docker version</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 开机启动配置</span></span><br><span class="line">cat &gt; /lib/systemd/system/docker.service &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">[Unit]</span></span><br><span class="line"><span class="string">Description=Docker Application Container Engine</span></span><br><span class="line"><span class="string">Documentation=https://docs.docker.com</span></span><br><span class="line"><span class="string">After=network-online.target</span></span><br><span class="line"><span class="string">Wants=network-online.target</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Service]</span></span><br><span class="line"><span class="string">Type=notify</span></span><br><span class="line"><span class="string">ExecStart=/usr/bin/dockerd</span></span><br><span class="line"><span class="string">ExecReload=/bin/kill -s HUP \$MAINPID</span></span><br><span class="line"><span class="string">LimitNOFILE=infinity</span></span><br><span class="line"><span class="string">LimitNPROC=infinity</span></span><br><span class="line"><span class="string">LimitCORE=infinity</span></span><br><span class="line"><span class="string">TimeoutStartSec=0</span></span><br><span class="line"><span class="string">Delegate=yes</span></span><br><span class="line"><span class="string">KillMode=process</span></span><br><span class="line"><span class="string">Restart=on-failure</span></span><br><span class="line"><span class="string">StartLimitBurst=3</span></span><br><span class="line"><span class="string">StartLimitInterval=60s</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Install]</span></span><br><span class="line"><span class="string">WantedBy=multi-user.target</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 启动</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start docker</span><br><span class="line">systemctl status docker</span><br><span class="line">systemctl <span class="built_in">enable</span> docker</span><br></pre></td></tr></table></figure><h1 id="3-TLS-证书"><a href="#3-TLS-证书" class="headerlink" title="3. TLS 证书"></a>3. TLS 证书</h1><h2 id="3-1-证书工具"><a href="#3-1-证书工具" class="headerlink" title="3.1 证书工具"></a>3.1 证书工具</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p <span class="variable">$HOME</span>/k8s-install &amp;&amp; <span class="built_in">cd</span> <span class="variable">$HOME</span>/k8s-install</span><br><span class="line"></span><br><span class="line">wget https://github.com/cloudflare/cfssl/releases/download/v1.5.0/cfssl_1.5.0_linux_amd64</span><br><span class="line">wget https://github.com/cloudflare/cfssl/releases/download/v1.5.0/cfssljson_1.5.0_linux_amd64</span><br><span class="line">wget https://github.com/cloudflare/cfssl/releases/download/v1.5.0/cfssl-certinfo_1.5.0_linux_amd64</span><br><span class="line"></span><br><span class="line">mv cfssl_1.5.0_linux_amd64 /usr/<span class="built_in">local</span>/bin/cfssl</span><br><span class="line">mv cfssljson_1.5.0_linux_amd64 /usr/<span class="built_in">local</span>/bin/cfssljson</span><br><span class="line">mv cfssl-certinfo_1.5.0_linux_amd64 /usr/bin/cfssl-certinfo</span><br><span class="line">chmod /usr/<span class="built_in">local</span>/bin/cfssl*</span><br></pre></td></tr></table></figure><h2 id="3-2-证书归类"><a href="#3-2-证书归类" class="headerlink" title="3.2 证书归类"></a>3.2 证书归类</h2><p><strong>生成的 CA 证书和秘钥文件如下：</strong></p><table><thead><tr><th>组件</th><th>证书</th><th>密钥</th><th>备注</th></tr></thead><tbody><tr><td>etcd</td><td>ca.pem、etcd.pem</td><td>etcd-key.pem</td><td></td></tr><tr><td>apiserver</td><td>ca.pem、apiserver.pem</td><td>apiserver-key.pem</td><td></td></tr><tr><td>controller-manager</td><td>ca.pem、kube-controller-manager.pem</td><td>ca-key.pem、kube-controller-manager-key.pem</td><td>kubeconfig</td></tr><tr><td>scheduler</td><td>ca.pem、kube-scheduler.pem</td><td>kube-scheduler-key.pem</td><td>kubeconfig</td></tr><tr><td>kubelet</td><td>ca.pem</td><td></td><td>kubeconfig+token</td></tr><tr><td>kube-proxy</td><td>ca.pem、kube-proxy.pem</td><td>kube-proxy-key.pem</td><td>kubeconfig</td></tr><tr><td>kubectl</td><td>ca.pem、admin.pem</td><td>admin-key.pem</td><td></td></tr></tbody></table><h2 id="3-3-CA-证书"><a href="#3-3-CA-证书" class="headerlink" title="3.3 CA 证书"></a>3.3 CA 证书</h2><p>CA: Certificate Authority</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /root/ssl &amp;&amp; <span class="built_in">cd</span> /root/ssl</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. CA 配置文件</span></span><br><span class="line">cat &gt; ca-config.json &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  &quot;signing&quot;: &#123;</span></span><br><span class="line"><span class="string">    &quot;default&quot;: &#123;</span></span><br><span class="line"><span class="string">      &quot;expiry&quot;: &quot;87600h&quot;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    &quot;profiles&quot;: &#123;</span></span><br><span class="line"><span class="string">      &quot;kubernetes&quot;: &#123;</span></span><br><span class="line"><span class="string">        &quot;usages&quot;: [</span></span><br><span class="line"><span class="string">            &quot;signing&quot;,</span></span><br><span class="line"><span class="string">            &quot;key encipherment&quot;,</span></span><br><span class="line"><span class="string">            &quot;server auth&quot;,</span></span><br><span class="line"><span class="string">            &quot;client auth&quot;</span></span><br><span class="line"><span class="string">        ],</span></span><br><span class="line"><span class="string">        &quot;expiry&quot;: &quot;87600h&quot;</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. CA 证书签名请求文件</span></span><br><span class="line">cat &gt; ca-csr.json &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  &quot;CN&quot;: &quot;kubernetes&quot;,</span></span><br><span class="line"><span class="string">  &quot;key&quot;: &#123;</span></span><br><span class="line"><span class="string">    &quot;algo&quot;: &quot;rsa&quot;,</span></span><br><span class="line"><span class="string">    &quot;size&quot;: 2048</span></span><br><span class="line"><span class="string">  &#125;,</span></span><br><span class="line"><span class="string">  &quot;names&quot;: [</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">      &quot;C&quot;: &quot;CN&quot;,</span></span><br><span class="line"><span class="string">      &quot;ST&quot;: &quot;BeiJing&quot;,</span></span><br><span class="line"><span class="string">      &quot;L&quot;: &quot;BeiJing&quot;,</span></span><br><span class="line"><span class="string">      &quot;O&quot;: &quot;k8s&quot;,</span></span><br><span class="line"><span class="string">      &quot;OU&quot;: &quot;System&quot;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  ],</span></span><br><span class="line"><span class="string">    &quot;ca&quot;: &#123;</span></span><br><span class="line"><span class="string">       &quot;expiry&quot;: &quot;87600h&quot;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 生成CA证书和密钥</span></span><br><span class="line">cfssl gencert -initca ca-csr.json | cfssljson -bare ca</span><br><span class="line"></span><br><span class="line">ls  ca*</span><br><span class="line">ca-config.json  ca.csr  ca-csr.json  ca-key.pem  ca.pem</span><br></pre></td></tr></table></figure><h2 id="3-4-etcd-证书"><a href="#3-4-etcd-证书" class="headerlink" title="3.4 etcd 证书"></a>3.4 etcd 证书</h2><p>注意：hosts 中的IP地址，分别指定了 <code>etcd</code> 集群的主机 IP</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 证书签名请求文件</span></span><br><span class="line">cat &gt; etcd-csr.json &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    &quot;CN&quot;: &quot;etcd&quot;,</span></span><br><span class="line"><span class="string">    &quot;hosts&quot;: [</span></span><br><span class="line"><span class="string">      &quot;127.0.0.1&quot;,</span></span><br><span class="line"><span class="string">      &quot;localhost&quot;,</span></span><br><span class="line"><span class="string">      &quot;192.168.80.45&quot;,</span></span><br><span class="line"><span class="string">      &quot;192.168.80.46&quot;,</span></span><br><span class="line"><span class="string">      &quot;192.168.80.47&quot;</span></span><br><span class="line"><span class="string">    ],</span></span><br><span class="line"><span class="string">    &quot;key&quot;: &#123;</span></span><br><span class="line"><span class="string">        &quot;algo&quot;: &quot;rsa&quot;,</span></span><br><span class="line"><span class="string">        &quot;size&quot;: 2048</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    &quot;names&quot;: [</span></span><br><span class="line"><span class="string">        &#123;</span></span><br><span class="line"><span class="string">            &quot;C&quot;: &quot;CN&quot;,</span></span><br><span class="line"><span class="string">            &quot;ST&quot;: &quot;BeiJing&quot;,</span></span><br><span class="line"><span class="string">            &quot;L&quot;: &quot;BeiJing&quot;,</span></span><br><span class="line"><span class="string">            &quot;O&quot;: &quot;etcd&quot;,</span></span><br><span class="line"><span class="string">            &quot;OU&quot;: &quot;System&quot;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    ]</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 生成证书</span></span><br><span class="line">cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes etcd-csr.json | cfssljson -bare etcd</span><br></pre></td></tr></table></figure><h2 id="3-5-kube-apiserver-证书"><a href="#3-5-kube-apiserver-证书" class="headerlink" title="3.5 kube-apiserver 证书"></a>3.5 kube-apiserver 证书</h2><p>注意：hosts 中的IP地址，分别指定了 <code>kubernetes master</code> 集群的主机 IP 和 <strong><code>kubernetes</code> 服务的服务 IP</strong>（一般是 <code>kube-apiserver</code> 指定的 <code>service-cluster-ip-range</code> 网段的第一个IP，如 10.96.0.1）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 证书签名请求文件</span></span><br><span class="line">cat &gt; kube-apiserver-csr.json &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    &quot;CN&quot;: &quot;kubernetes&quot;,</span></span><br><span class="line"><span class="string">    &quot;hosts&quot;: [</span></span><br><span class="line"><span class="string">      &quot;127.0.0.1&quot;,</span></span><br><span class="line"><span class="string">      &quot;localhost&quot;,</span></span><br><span class="line"><span class="string">      &quot;192.168.80.1&quot;,</span></span><br><span class="line"><span class="string">      &quot;192.168.80.2&quot;,</span></span><br><span class="line"><span class="string">      &quot;192.168.80.45&quot;,</span></span><br><span class="line"><span class="string">      &quot;192.168.80.46&quot;,</span></span><br><span class="line"><span class="string">      &quot;192.168.80.47&quot;,</span></span><br><span class="line"><span class="string">      &quot;10.96.0.1&quot;,</span></span><br><span class="line"><span class="string">      &quot;kubernetes&quot;,</span></span><br><span class="line"><span class="string">      &quot;kubernetes.default&quot;,</span></span><br><span class="line"><span class="string">      &quot;kubernetes.default.svc&quot;,</span></span><br><span class="line"><span class="string">      &quot;kubernetes.default.svc.cluster&quot;,</span></span><br><span class="line"><span class="string">      &quot;kubernetes.default.svc.cluster.local&quot;</span></span><br><span class="line"><span class="string">    ],</span></span><br><span class="line"><span class="string">    &quot;key&quot;: &#123;</span></span><br><span class="line"><span class="string">        &quot;algo&quot;: &quot;rsa&quot;,</span></span><br><span class="line"><span class="string">        &quot;size&quot;: 2048</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    &quot;names&quot;: [</span></span><br><span class="line"><span class="string">        &#123;</span></span><br><span class="line"><span class="string">            &quot;C&quot;: &quot;CN&quot;,</span></span><br><span class="line"><span class="string">            &quot;ST&quot;: &quot;BeiJing&quot;,</span></span><br><span class="line"><span class="string">            &quot;L&quot;: &quot;BeiJing&quot;,</span></span><br><span class="line"><span class="string">            &quot;O&quot;: &quot;k8s&quot;,</span></span><br><span class="line"><span class="string">            &quot;OU&quot;: &quot;System&quot;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    ]</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 生成证书</span></span><br><span class="line">cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes kube-apiserver-csr.json | cfssljson -bare kube-apiserver</span><br></pre></td></tr></table></figure><h2 id="3-6-kube-controller-manager-证书"><a href="#3-6-kube-controller-manager-证书" class="headerlink" title="3.6 kube-controller-manager 证书"></a>3.6 kube-controller-manager 证书</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 证书签名请求文件</span></span><br><span class="line">cat &gt; kube-controller-manager-csr.json &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  &quot;CN&quot;: &quot;system:kube-controller-manager&quot;,</span></span><br><span class="line"><span class="string">  &quot;hosts&quot;: [],</span></span><br><span class="line"><span class="string">  &quot;key&quot;: &#123;</span></span><br><span class="line"><span class="string">    &quot;algo&quot;: &quot;rsa&quot;,</span></span><br><span class="line"><span class="string">    &quot;size&quot;: 2048</span></span><br><span class="line"><span class="string">  &#125;,</span></span><br><span class="line"><span class="string">  &quot;names&quot;: [</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">      &quot;C&quot;: &quot;CN&quot;,</span></span><br><span class="line"><span class="string">      &quot;ST&quot;: &quot;BeiJing&quot;,</span></span><br><span class="line"><span class="string">      &quot;L&quot;: &quot;BeiJing&quot;,</span></span><br><span class="line"><span class="string">      &quot;O&quot;: &quot;system:masters&quot;,</span></span><br><span class="line"><span class="string">      &quot;OU&quot;: &quot;System&quot;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  ]</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 生成证书</span></span><br><span class="line">cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes kube-controller-manager-csr.json | cfssljson -bare kube-controller-manager</span><br></pre></td></tr></table></figure><h2 id="3-8-kube-scheduler-证书"><a href="#3-8-kube-scheduler-证书" class="headerlink" title="3.8 kube-scheduler 证书"></a>3.8 kube-scheduler 证书</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 证书签名请求文件</span></span><br><span class="line">cat &gt; kube-scheduler-csr.json &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  &quot;CN&quot;: &quot;system:kube-scheduler&quot;,</span></span><br><span class="line"><span class="string">  &quot;hosts&quot;: [],</span></span><br><span class="line"><span class="string">  &quot;key&quot;: &#123;</span></span><br><span class="line"><span class="string">    &quot;algo&quot;: &quot;rsa&quot;,</span></span><br><span class="line"><span class="string">    &quot;size&quot;: 2048</span></span><br><span class="line"><span class="string">  &#125;,</span></span><br><span class="line"><span class="string">  &quot;names&quot;: [</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">      &quot;C&quot;: &quot;CN&quot;,</span></span><br><span class="line"><span class="string">      &quot;ST&quot;: &quot;BeiJing&quot;,</span></span><br><span class="line"><span class="string">      &quot;L&quot;: &quot;BeiJing&quot;,</span></span><br><span class="line"><span class="string">      &quot;O&quot;: &quot;system:masters&quot;,</span></span><br><span class="line"><span class="string">      &quot;OU&quot;: &quot;System&quot;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  ]</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 生成证书</span></span><br><span class="line">cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes kube-scheduler-csr.json | cfssljson -bare kube-scheduler</span><br></pre></td></tr></table></figure><h2 id="3-9-admin-证书"><a href="#3-9-admin-证书" class="headerlink" title="3.9 admin 证书"></a>3.9 admin 证书</h2><ul><li>后续 <code>kube-apiserver</code> 使用 <code>RBAC</code> 对客户端(如 <code>kubelet</code>、<code>kube-proxy</code>、<code>Pod</code>)请求进行授权；</li><li><code>kube-apiserver</code> 预定义了一些 <code>RBAC</code> 使用的 <code>RoleBindings</code>，如 <code>cluster-admin</code> 将 Group <code>system:masters</code> 与 Role <code>cluster-admin</code> 绑定，该 Role 授予了调用<code>kube-apiserver</code> 的<strong>所有 API</strong>的权限；</li><li>O 指定该证书的 Group 为 <code>system:masters</code>，<code>kubelet</code> 使用该证书访问 <code>kube-apiserver</code> 时 ，由于证书被 CA 签名，所以认证通过，同时由于证书用户组为经过预授权的 <code>system:masters</code>，所以被授予访问所有 API 的权限；</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 证书签名请求文件</span></span><br><span class="line">cat &gt; admin-csr.json &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  &quot;CN&quot;: &quot;admin&quot;,</span></span><br><span class="line"><span class="string">  &quot;hosts&quot;: [],</span></span><br><span class="line"><span class="string">  &quot;key&quot;: &#123;</span></span><br><span class="line"><span class="string">    &quot;algo&quot;: &quot;rsa&quot;,</span></span><br><span class="line"><span class="string">    &quot;size&quot;: 2048</span></span><br><span class="line"><span class="string">  &#125;,</span></span><br><span class="line"><span class="string">  &quot;names&quot;: [</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">      &quot;C&quot;: &quot;CN&quot;,</span></span><br><span class="line"><span class="string">      &quot;ST&quot;: &quot;BeiJing&quot;,</span></span><br><span class="line"><span class="string">      &quot;L&quot;: &quot;BeiJing&quot;,</span></span><br><span class="line"><span class="string">      &quot;O&quot;: &quot;system:masters&quot;,</span></span><br><span class="line"><span class="string">      &quot;OU&quot;: &quot;System&quot;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  ]</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 生成证书 </span></span><br><span class="line">cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes admin-csr.json | cfssljson -bare admin</span><br><span class="line"></span><br><span class="line">ls admin*</span><br><span class="line">admin.csr  admin-csr.json  admin-key.pem  admin.pem</span><br></pre></td></tr></table></figure><p>搭建完 kubernetes 集群后，可以通过命令: <code>kubectl get clusterrolebinding cluster-admin -o yaml</code> ,查看到 <code>clusterrolebinding cluster-admin</code> 的 subjects 的 kind 是 Group，name 是 <code>system:masters</code>。 <code>roleRef</code> 对象是 <code>ClusterRole cluster-admin</code>。 即 <code>system:masters Group</code> 的 user 或者 <code>serviceAccount</code> 都拥有 <code>cluster-admin</code> 的角色。 因此在使用 kubectl 命令时候，才拥有整个集群的管理权限。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">kubectl get clusterrolebinding cluster-admin -o yaml</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  annotations:</span><br><span class="line">    rbac.authorization.kubernetes.io/autoupdate: <span class="string">&quot;true&quot;</span></span><br><span class="line">  creationTimestamp: 2017-04-11T11:20:42Z</span><br><span class="line">  labels:</span><br><span class="line">    kubernetes.io/bootstrapping: rbac-defaults</span><br><span class="line">  name: cluster-admin</span><br><span class="line">  resourceVersion: <span class="string">&quot;52&quot;</span></span><br><span class="line">  selfLink: /apis/rbac.authorization.k8s.io/v1/clusterrolebindings/cluster-admin</span><br><span class="line">  uid: e61b97b2-1ea8-11e7-8cd7-f4e9d49f8ed0</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: cluster-admin</span><br><span class="line">subjects:</span><br><span class="line">- apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: Group</span><br><span class="line">  name: system:masters</span><br></pre></td></tr></table></figure><h2 id="3-10-kube-proxy-证书"><a href="#3-10-kube-proxy-证书" class="headerlink" title="3.10 kube-proxy 证书"></a>3.10 kube-proxy 证书</h2><ul><li>CN 指定该证书的 User 为 <code>system:kube-proxy</code>；</li><li><code>kube-apiserver</code> 预定义的 RoleBinding <code>system:node-proxier</code> 将User <code>system:kube-proxy</code> 与 Role <code>system:node-proxier</code> 绑定，该 Role 授予了调用 <code>kube-apiserver</code> Proxy 相关 API 的权限；</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 证书签名请求文件</span></span><br><span class="line">cat &gt; kube-proxy-csr.json &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  &quot;CN&quot;: &quot;system:kube-proxy&quot;,</span></span><br><span class="line"><span class="string">  &quot;hosts&quot;: [],</span></span><br><span class="line"><span class="string">  &quot;key&quot;: &#123;</span></span><br><span class="line"><span class="string">    &quot;algo&quot;: &quot;rsa&quot;,</span></span><br><span class="line"><span class="string">    &quot;size&quot;: 2048</span></span><br><span class="line"><span class="string">  &#125;,</span></span><br><span class="line"><span class="string">  &quot;names&quot;: [</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">      &quot;C&quot;: &quot;CN&quot;,</span></span><br><span class="line"><span class="string">      &quot;ST&quot;: &quot;BeiJing&quot;,</span></span><br><span class="line"><span class="string">      &quot;L&quot;: &quot;BeiJing&quot;,</span></span><br><span class="line"><span class="string">      &quot;O&quot;: &quot;k8s&quot;,</span></span><br><span class="line"><span class="string">      &quot;OU&quot;: &quot;System&quot;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  ]</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 生成证书</span></span><br><span class="line">cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes  kube-proxy-csr.json | cfssljson -bare kube-proxy</span><br></pre></td></tr></table></figure><h2 id="3-11-证书信息"><a href="#3-11-证书信息" class="headerlink" title="3.11 证书信息"></a>3.11 证书信息</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">cfssl-certinfo -cert apiserver.pem</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;subject&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;common_name&quot;</span>: <span class="string">&quot;kubernetes&quot;</span>,</span><br><span class="line">    <span class="string">&quot;country&quot;</span>: <span class="string">&quot;CN&quot;</span>,</span><br><span class="line">    <span class="string">&quot;organization&quot;</span>: <span class="string">&quot;k8s&quot;</span>,</span><br><span class="line">    <span class="string">&quot;organizational_unit&quot;</span>: <span class="string">&quot;System&quot;</span>,</span><br><span class="line">    <span class="string">&quot;locality&quot;</span>: <span class="string">&quot;BeiJing&quot;</span>,</span><br><span class="line">    <span class="string">&quot;province&quot;</span>: <span class="string">&quot;BeiJing&quot;</span>,</span><br><span class="line">    <span class="string">&quot;names&quot;</span>: [</span><br><span class="line">      <span class="string">&quot;CN&quot;</span>,</span><br><span class="line">      <span class="string">&quot;BeiJing&quot;</span>,</span><br><span class="line">      <span class="string">&quot;BeiJing&quot;</span>,</span><br><span class="line">      <span class="string">&quot;k8s&quot;</span>,</span><br><span class="line">      <span class="string">&quot;System&quot;</span>,</span><br><span class="line">      <span class="string">&quot;kubernetes&quot;</span></span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;issuer&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;common_name&quot;</span>: <span class="string">&quot;kubernetes&quot;</span>,</span><br><span class="line">    <span class="string">&quot;country&quot;</span>: <span class="string">&quot;CN&quot;</span>,</span><br><span class="line">    <span class="string">&quot;organization&quot;</span>: <span class="string">&quot;k8s&quot;</span>,</span><br><span class="line">    <span class="string">&quot;organizational_unit&quot;</span>: <span class="string">&quot;System&quot;</span>,</span><br><span class="line">    <span class="string">&quot;locality&quot;</span>: <span class="string">&quot;BeiJing&quot;</span>,</span><br><span class="line">    <span class="string">&quot;province&quot;</span>: <span class="string">&quot;BeiJing&quot;</span>,</span><br><span class="line">    <span class="string">&quot;names&quot;</span>: [</span><br><span class="line">      <span class="string">&quot;CN&quot;</span>,</span><br><span class="line">      <span class="string">&quot;BeiJing&quot;</span>,</span><br><span class="line">      <span class="string">&quot;BeiJing&quot;</span>,</span><br><span class="line">      <span class="string">&quot;k8s&quot;</span>,</span><br><span class="line">      <span class="string">&quot;System&quot;</span>,</span><br><span class="line">      <span class="string">&quot;kubernetes&quot;</span></span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;serial_number&quot;</span>: <span class="string">&quot;275867496157961939649344217740970264800633176866&quot;</span>,</span><br><span class="line">  <span class="string">&quot;sans&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;localhost&quot;</span>,</span><br><span class="line">    <span class="string">&quot;kubernetes&quot;</span>,</span><br><span class="line">    <span class="string">&quot;kubernetes.default&quot;</span>,</span><br><span class="line">    <span class="string">&quot;kubernetes.default.svc&quot;</span>,</span><br><span class="line">    <span class="string">&quot;kubernetes.default.svc.cluster&quot;</span>,</span><br><span class="line">    <span class="string">&quot;kubernetes.default.svc.cluster.local&quot;</span>,</span><br><span class="line">    <span class="string">&quot;127.0.0.1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;192.168.80.1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;192.168.80.2&quot;</span>,</span><br><span class="line">    <span class="string">&quot;192.168.80.45&quot;</span>,</span><br><span class="line">    <span class="string">&quot;192.168.80.46&quot;</span>,</span><br><span class="line">    <span class="string">&quot;192.168.80.47&quot;</span>,</span><br><span class="line">    <span class="string">&quot;10.96.0.1&quot;</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&quot;not_before&quot;</span>: <span class="string">&quot;2021-06-09T05:20:00Z&quot;</span>,</span><br><span class="line">  <span class="string">&quot;not_after&quot;</span>: <span class="string">&quot;2031-06-07T05:20:00Z&quot;</span>,</span><br><span class="line">  <span class="string">&quot;sigalg&quot;</span>: <span class="string">&quot;SHA256WithRSA&quot;</span>,</span><br><span class="line">  <span class="string">&quot;authority_key_id&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="string">&quot;subject_key_id&quot;</span>: <span class="string">&quot;E3:84:0F:9C:00:07:4A:8F:5C:B2:35:45:A0:50:4D:3E:9D:C0:B4:D0&quot;</span>,</span><br><span class="line">  <span class="string">&quot;pem&quot;</span>: <span class="string">&quot;-----BEGIN CERTIFICATE-----\nMIIEezCCA2OgAwIBAgIUMFJTjEXe9sDDDpPXcAiUBt5+QyIwDQYJKoZIhvcNAQEL\nBQAwZTELMAkGA1UEBhMCQ04xEDAOBgNVBAgTB0JlaUppbmcxEDAOBgNVBAcTB0Jl\naUppbmcxDDAKBgNVBAoTA2s4czEPMA0GA1UECxMGU3lzdGVtMRMwEQYDVQQDEwpr\ndWJlcm5ldGVzMB4XDTIxMDYwOTA1MjAwMFoXDTMxMDYwNzA1MjAwMFowZTELMAkG\nA1UEBhMCQ04xEDAOBgNVBAgTB0JlaUppbmcxEDAOBgNVBAcTB0JlaUppbmcxDDAK\nBgNVBAoTA2s4czEPMA0GA1UECxMGU3lzdGVtMRMwEQYDVQQDEwprdWJlcm5ldGVz\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAw0BpjZQNEd6Oqu8ubEWG\nhbdwJecOTCfdbY+VLIKEm0Tys8ZBlu7OrtZ8Rj5OAZTXil0ZJz+hvHo8YTNJJ16g\njHV88VSpfoXD5DE59PITSFwfY1lWHVctC3Ddo9CM9cU9Ty+Kf29XcrLbc/VNGZTB\ncvKXoM3b6NkBKOdKphVjUvafhKC6ls2ac5uub3uqZTpPgBs/1PvINKNZkP5U6lUV\noTBMAT+qbQ9aggA+bA+WegL3jHU78ngo1XMnsb1HfAjwKDOf66smNJ/K+YjD+Cul\ngjpyqOQKGlz5xqXUcBgIMO9djI4f5hvaMsSje1aSJ/oh5AfQbxQsGjajlS80ED08\nxwIDAQABo4IBITCCAR0wDgYDVR0PAQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUF\nBwMBBggrBgEFBQcDAjAMBgNVHRMBAf8EAjAAMB0GA1UdDgQWBBTjhA+cAAdKj1yy\nNUWgUE0+ncC00DCBvgYDVR0RBIG2MIGzgglsb2NhbGhvc3SCCmt1YmVybmV0ZXOC\nEmt1YmVybmV0ZXMuZGVmYXVsdIIWa3ViZXJuZXRlcy5kZWZhdWx0LnN2Y4Iea3Vi\nZXJuZXRlcy5kZWZhdWx0LnN2Yy5jbHVzdGVygiRrdWJlcm5ldGVzLmRlZmF1bHQu\nc3ZjLmNsdXN0ZXIubG9jYWyHBH8AAAGHBMCoUAGHBMCoUAKHBMCoUC2HBMCoUC6H\nBMCoUC+HBAr+AAEwDQYJKoZIhvcNAQELBQADggEBAG+RUKp4cxz4EOqmAPiczkl2\nHciAg01RbCavoLoUWmoDDAQf7PIhQF2pLewFCwR5w6SwvCJAVdg+eHdefJ2MBtJr\nKQgbmEOBXd4Z5ZqBeSP6ViHvb1pKtRSldznZLfxjsVd0bN3na/JmS4TZ90SqLLtL\nN4CgGfTs2AfrtbtWIqewDMS9aWjBK8VePzLBmsdLddD4WYQOnl+QjdrX9bbqYRCG\nQo3CKvJ3JZqh6AJHcgKsm0702uMU/TCJwe1M8I8SpYrwA74uCBy3O9jXed1rZlrp\nRVURB6Ro7SMLjiadTJyf6AbLPMmZcPKHhZ1XG07q8Od2Kd+KVx1PxF3et6OOteE=\n-----END CERTIFICATE-----\n&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-12-分发证书"><a href="#3-12-分发证书" class="headerlink" title="3.12 分发证书"></a>3.12 分发证书</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /etc/kubernetes/pki</span><br><span class="line">cp *.pem /etc/kubernetes/pki</span><br></pre></td></tr></table></figure><h1 id="4-安装-etcd-多节点"><a href="#4-安装-etcd-多节点" class="headerlink" title="4. 安装 etcd  (多节点)"></a>4. 安装 etcd  (多节点)</h1><h2 id="4-1-节点-etcd-1"><a href="#4-1-节点-etcd-1" class="headerlink" title="4.1 节点 etcd-1"></a>4.1 节点 etcd-1</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p <span class="variable">$HOME</span>/k8s-install &amp;&amp; <span class="built_in">cd</span> <span class="variable">$HOME</span>/k8s-install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. 下载并安装</span></span><br><span class="line">wget https://github.com/etcd-io/etcd/releases/download/v3.5.0/etcd-v3.5.0-linux-amd64.tar.gz</span><br><span class="line">tar zxvf etcd-v3.5.0-linux-amd64.tar.gz</span><br><span class="line"></span><br><span class="line">mv etcd-v3.5.0-linux-amd64/&#123;etcd,etcdctl&#125; /usr/bin/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 配置文件</span></span><br><span class="line">mkdir -p /etc/etcd</span><br><span class="line">cat &gt; /etc/etcd/etcd.conf.yml &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string"># This is the configuration file for the etcd server.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Human-readable name for this member.</span></span><br><span class="line"><span class="string">name: &#x27;etcd-1&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Path to the data directory.</span></span><br><span class="line"><span class="string">data-dir: /var/lib/etcd/default.etcd</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Path to the dedicated wal directory.</span></span><br><span class="line"><span class="string">wal-dir:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Number of committed transactions to trigger a snapshot to disk.</span></span><br><span class="line"><span class="string">snapshot-count: 10000</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Time (in milliseconds) of a heartbeat interval.</span></span><br><span class="line"><span class="string">heartbeat-interval: 100</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Time (in milliseconds) for an election to timeout.</span></span><br><span class="line"><span class="string">election-timeout: 1000</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Raise alarms when backend size exceeds the given quota. 0 means use the</span></span><br><span class="line"><span class="string"># default quota.</span></span><br><span class="line"><span class="string">quota-backend-bytes: 0</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># List of comma separated URLs to listen on for peer traffic.</span></span><br><span class="line"><span class="string">listen-peer-urls: &#x27;https://localhost:2380,https://192.168.80.45:2380&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># List of comma separated URLs to listen on for client traffic.</span></span><br><span class="line"><span class="string">listen-client-urls: &#x27;https://localhost:2379,https://192.168.80.45:2379&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Maximum number of snapshot files to retain (0 is unlimited).</span></span><br><span class="line"><span class="string">max-snapshots: 5</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Maximum number of wal files to retain (0 is unlimited).</span></span><br><span class="line"><span class="string">max-wals: 5</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Comma-separated white list of origins for CORS (cross-origin resource sharing).</span></span><br><span class="line"><span class="string">cors:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># List of this member&#x27;s peer URLs to advertise to the rest of the cluster.</span></span><br><span class="line"><span class="string"># The URLs needed to be a comma-separated list.</span></span><br><span class="line"><span class="string">initial-advertise-peer-urls: &#x27;https://localhost:2380,https://192.168.80.45:2380&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># List of this member&#x27;s client URLs to advertise to the public.</span></span><br><span class="line"><span class="string"># The URLs needed to be a comma-separated list.</span></span><br><span class="line"><span class="string">advertise-client-urls: &#x27;https://localhost:2379,https://192.168.80.45:2379&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Discovery URL used to bootstrap the cluster.</span></span><br><span class="line"><span class="string">discovery:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Valid values include &#x27;exit&#x27;, &#x27;proxy&#x27;</span></span><br><span class="line"><span class="string">discovery-fallback: &#x27;proxy&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># HTTP proxy to use for traffic to discovery service.</span></span><br><span class="line"><span class="string">discovery-proxy:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># DNS domain used to bootstrap initial cluster.</span></span><br><span class="line"><span class="string">discovery-srv:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Initial cluster configuration for bootstrapping.</span></span><br><span class="line"><span class="string">initial-cluster: &#x27;etcd-1=https://192.168.80.45:2380,etcd-2=https://192.168.80.46:2380,etcd-3=https://192.168.80.47:2380&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Initial cluster token for the etcd cluster during bootstrap.</span></span><br><span class="line"><span class="string">initial-cluster-token: &#x27;etcd-cluster&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Initial cluster state (&#x27;new&#x27; or &#x27;existing&#x27;).</span></span><br><span class="line"><span class="string">initial-cluster-state: &#x27;new&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Reject reconfiguration requests that would cause quorum loss.</span></span><br><span class="line"><span class="string">strict-reconfig-check: false</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Accept etcd V2 client requests</span></span><br><span class="line"><span class="string">enable-v2: true</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Enable runtime profiling data via HTTP server</span></span><br><span class="line"><span class="string">enable-pprof: true</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Valid values include &#x27;on&#x27;, &#x27;readonly&#x27;, &#x27;off&#x27;</span></span><br><span class="line"><span class="string">proxy: &#x27;off&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Time (in milliseconds) an endpoint will be held in a failed state.</span></span><br><span class="line"><span class="string">proxy-failure-wait: 5000</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Time (in milliseconds) of the endpoints refresh interval.</span></span><br><span class="line"><span class="string">proxy-refresh-interval: 30000</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Time (in milliseconds) for a dial to timeout.</span></span><br><span class="line"><span class="string">proxy-dial-timeout: 1000</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Time (in milliseconds) for a write to timeout.</span></span><br><span class="line"><span class="string">proxy-write-timeout: 5000</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Time (in milliseconds) for a read to timeout.</span></span><br><span class="line"><span class="string">proxy-read-timeout: 0</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">client-transport-security:</span></span><br><span class="line"><span class="string">  # Path to the client server TLS cert file.</span></span><br><span class="line"><span class="string">  cert-file: /etc/kubernetes/pki/etcd.pem</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  # Path to the client server TLS key file.</span></span><br><span class="line"><span class="string">  key-file: /etc/kubernetes/pki/etcd-key.pem</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  # Enable client cert authentication.</span></span><br><span class="line"><span class="string">  client-cert-auth: true</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  # Path to the client server TLS trusted CA cert file.</span></span><br><span class="line"><span class="string">  trusted-ca-file: /etc/kubernetes/pki/ca.pem</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  # Client TLS using generated certificates</span></span><br><span class="line"><span class="string">  auto-tls: true</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">peer-transport-security:</span></span><br><span class="line"><span class="string">  # Path to the peer server TLS cert file.</span></span><br><span class="line"><span class="string">  cert-file: /etc/kubernetes/pki/etcd.pem</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  # Path to the peer server TLS key file.</span></span><br><span class="line"><span class="string">  key-file: /etc/kubernetes/pki/etcd-key.pem</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  # Enable peer client cert authentication.</span></span><br><span class="line"><span class="string">  client-cert-auth: true</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  # Path to the peer server TLS trusted CA cert file.</span></span><br><span class="line"><span class="string">  trusted-ca-file: /etc/kubernetes/pki/ca.pem</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  # Peer TLS using generated certificates.</span></span><br><span class="line"><span class="string">  auto-tls: true</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Enable debug-level logging for etcd.</span></span><br><span class="line"><span class="string">log-level: debug</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">logger: zap</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Specify &#x27;stdout&#x27; or &#x27;stderr&#x27; to skip journald logging even when running under systemd.</span></span><br><span class="line"><span class="string">log-outputs: [stderr]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Force to create a new one member cluster.</span></span><br><span class="line"><span class="string">force-new-cluster: false</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">auto-compaction-mode: periodic</span></span><br><span class="line"><span class="string">auto-compaction-retention: &quot;1&quot;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 开机启动</span></span><br><span class="line">cat &gt; /lib/systemd/system/etcd.service &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">[Unit]</span></span><br><span class="line"><span class="string">Description=Etcd Server</span></span><br><span class="line"><span class="string">After=network-online.target</span></span><br><span class="line"><span class="string">Wants=network-online.target</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Service]</span></span><br><span class="line"><span class="string">Type=notify</span></span><br><span class="line"><span class="string">ExecStart=/usr/bin/etcd --config-file=/etc/etcd/etcd.conf.yml</span></span><br><span class="line"><span class="string">Restart=on-failure</span></span><br><span class="line"><span class="string">RestartSec=5</span></span><br><span class="line"><span class="string">LimitNOFILE=65536</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Install]</span></span><br><span class="line"><span class="string">WantedBy=multi-user.target</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><h2 id="4-2-其他节点"><a href="#4-2-其他节点" class="headerlink" title="4.2 其他节点"></a>4.2 其他节点</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 解压克隆文件</span></span><br><span class="line">sudo -i</span><br><span class="line"><span class="built_in">cd</span> / &amp;&amp; mv /home/ubuntu/etcd-clone.tar / &amp;&amp; tar xvf etcd-clone.tar &amp;&amp; rm -f etcd-clone.tar</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 修改配置文件, 改成各自对应的IP和名称</span></span><br><span class="line">vi /etc/etcd/etcd.conf.yml</span><br></pre></td></tr></table></figure><h2 id="4-3-启动"><a href="#4-3-启动" class="headerlink" title="4.3 启动"></a>4.3 启动</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 开机启动</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start etcd</span><br><span class="line">systemctl status etcd</span><br><span class="line">systemctl <span class="built_in">enable</span> etcd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 运行状态</span></span><br><span class="line">etcdctl member list --cacert=/etc/kubernetes/pki/ca.pem --cert=/etc/kubernetes/pki/etcd.pem --key=/etc/kubernetes/pki/etcd-key.pem --write-out=table</span><br><span class="line">+------------------+---------+--------+----------------------------+----------------------------+------------+</span><br><span class="line">|        ID        | STATUS  |  NAME  |         PEER ADDRS         |        CLIENT ADDRS        | IS LEARNER |</span><br><span class="line">+------------------+---------+--------+----------------------------+----------------------------+------------+</span><br><span class="line">| 46bc5ad35e418584 | started | etcd-1 | https://192.168.80.45:2380 | https://192.168.80.45:2379 |      <span class="literal">false</span> |</span><br><span class="line">| 8f347c1327049bc8 | started | etcd-3 | https://192.168.80.47:2380 | https://192.168.80.47:2379 |      <span class="literal">false</span> |</span><br><span class="line">| b01e7a29099f3eb8 | started | etcd-2 | https://192.168.80.46:2380 | https://192.168.80.46:2379 |      <span class="literal">false</span> |</span><br><span class="line">+------------------+---------+--------+----------------------------+----------------------------+------------+</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 健康状态</span></span><br><span class="line">etcdctl endpoint health --cacert=/etc/kubernetes/pki/ca.pem --cert=/etc/kubernetes/pki/etcd.pem --key=/etc/kubernetes/pki/etcd-key.pem --cluster --write-out=table</span><br><span class="line">+----------------------------+--------+-------------+-------+</span><br><span class="line">|          ENDPOINT          | HEALTH |    TOOK     | ERROR |</span><br><span class="line">+----------------------------+--------+-------------+-------+</span><br><span class="line">| https://192.168.80.47:2379 |   <span class="literal">true</span> | 20.973639ms |       |</span><br><span class="line">| https://192.168.80.46:2379 |   <span class="literal">true</span> | 29.842299ms |       |</span><br><span class="line">| https://192.168.80.45:2379 |   <span class="literal">true</span> | 30.564766ms |       |</span><br><span class="line">+----------------------------+--------+-------------+-------+</span><br></pre></td></tr></table></figure><h1 id="4-安装-etcd-单节点"><a href="#4-安装-etcd-单节点" class="headerlink" title="4. 安装 etcd  (单节点)"></a>4. 安装 etcd  (单节点)</h1><h2 id="4-1-节点-etcd-1-1"><a href="#4-1-节点-etcd-1-1" class="headerlink" title="4.1 节点 etcd-1"></a>4.1 节点 etcd-1</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p <span class="variable">$HOME</span>/k8s-install &amp;&amp; <span class="built_in">cd</span> <span class="variable">$HOME</span>/k8s-install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. 下载并安装</span></span><br><span class="line">wget https://github.com/etcd-io/etcd/releases/download/v3.5.0/etcd-v3.5.0-linux-amd64.tar.gz</span><br><span class="line">tar zxvf etcd-v3.5.0-linux-amd64.tar.gz</span><br><span class="line"></span><br><span class="line">mv etcd-v3.5.0-linux-amd64/&#123;etcd,etcdctl&#125; /usr/bin/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 配置文件</span></span><br><span class="line">mkdir -p /etc/etcd</span><br><span class="line">cat &gt; /etc/etcd/etcd.conf.yml &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">name: &#x27;etcd-1&#x27;</span></span><br><span class="line"><span class="string">data-dir: /var/lib/etcd/default.etcd</span></span><br><span class="line"><span class="string">wal-dir:</span></span><br><span class="line"><span class="string">snapshot-count: 10000</span></span><br><span class="line"><span class="string">heartbeat-interval: 100</span></span><br><span class="line"><span class="string">election-timeout: 1000</span></span><br><span class="line"><span class="string">quota-backend-bytes: 0</span></span><br><span class="line"><span class="string">listen-peer-urls: &#x27;https://localhost:2380,https://192.168.80.45:2380&#x27;</span></span><br><span class="line"><span class="string">listen-client-urls: &#x27;https://localhost:2379,https://192.168.80.45:2379&#x27;</span></span><br><span class="line"><span class="string">max-snapshots: 5</span></span><br><span class="line"><span class="string">max-wals: 5</span></span><br><span class="line"><span class="string">cors:</span></span><br><span class="line"><span class="string">initial-advertise-peer-urls: &#x27;https://localhost:2380,https://192.168.80.45:2380&#x27;</span></span><br><span class="line"><span class="string">advertise-client-urls: &#x27;https://localhost:2379,https://192.168.80.45:2379&#x27;</span></span><br><span class="line"><span class="string">discovery:</span></span><br><span class="line"><span class="string">discovery-fallback: &#x27;proxy&#x27;</span></span><br><span class="line"><span class="string">discovery-proxy:</span></span><br><span class="line"><span class="string">discovery-srv:</span></span><br><span class="line"><span class="string">strict-reconfig-check: false</span></span><br><span class="line"><span class="string">enable-v2: true</span></span><br><span class="line"><span class="string">enable-pprof: true</span></span><br><span class="line"><span class="string">proxy: &#x27;off&#x27;</span></span><br><span class="line"><span class="string">proxy-failure-wait: 5000</span></span><br><span class="line"><span class="string">proxy-refresh-interval: 30000</span></span><br><span class="line"><span class="string">proxy-dial-timeout: 1000</span></span><br><span class="line"><span class="string">proxy-write-timeout: 5000</span></span><br><span class="line"><span class="string">proxy-read-timeout: 0</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">client-transport-security:</span></span><br><span class="line"><span class="string">  cert-file: /etc/kubernetes/pki/etcd.pem</span></span><br><span class="line"><span class="string">  key-file: /etc/kubernetes/pki/etcd-key.pem</span></span><br><span class="line"><span class="string">  client-cert-auth: true</span></span><br><span class="line"><span class="string">  trusted-ca-file: /etc/kubernetes/pki/ca.pem</span></span><br><span class="line"><span class="string">  auto-tls: true</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">peer-transport-security:</span></span><br><span class="line"><span class="string">  cert-file: /etc/kubernetes/pki/etcd.pem</span></span><br><span class="line"><span class="string">  key-file: /etc/kubernetes/pki/etcd-key.pem</span></span><br><span class="line"><span class="string">  client-cert-auth: true</span></span><br><span class="line"><span class="string">  trusted-ca-file: /etc/kubernetes/pki/ca.pem</span></span><br><span class="line"><span class="string">  auto-tls: true</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">log-level: debug</span></span><br><span class="line"><span class="string">logger: zap</span></span><br><span class="line"><span class="string">log-outputs: [stderr]</span></span><br><span class="line"><span class="string">force-new-cluster: false</span></span><br><span class="line"><span class="string">auto-compaction-mode: periodic</span></span><br><span class="line"><span class="string">auto-compaction-retention: &quot;1&quot;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 开机启动</span></span><br><span class="line">cat &gt; /lib/systemd/system/etcd.service &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">[Unit]</span></span><br><span class="line"><span class="string">Description=Etcd Server</span></span><br><span class="line"><span class="string">After=network-online.target</span></span><br><span class="line"><span class="string">Wants=network-online.target</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Service]</span></span><br><span class="line"><span class="string">Type=notify</span></span><br><span class="line"><span class="string">ExecStart=/usr/bin/etcd --config-file=/etc/etcd/etcd.conf.yml</span></span><br><span class="line"><span class="string">Restart=on-failure</span></span><br><span class="line"><span class="string">RestartSec=5</span></span><br><span class="line"><span class="string">LimitNOFILE=65536</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Install]</span></span><br><span class="line"><span class="string">WantedBy=multi-user.target</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 4. 启动</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start etcd</span><br><span class="line">systemctl status etcd</span><br><span class="line">systemctl <span class="built_in">enable</span> etcd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5. 运行状态</span></span><br><span class="line">etcdctl member list --cacert=/etc/kubernetes/pki/ca.pem --cert=/etc/kubernetes/pki/etcd.pem --key=/etc/kubernetes/pki/etcd-key.pem --write-out=table</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6. 健康状态</span></span><br><span class="line">etcdctl endpoint health --cacert=/etc/kubernetes/pki/ca.pem --cert=/etc/kubernetes/pki/etcd.pem --key=/etc/kubernetes/pki/etcd-key.pem --cluster --write-out=table</span><br></pre></td></tr></table></figure><h1 id="5-Master-节点"><a href="#5-Master-节点" class="headerlink" title="5. Master 节点"></a>5. Master 节点</h1><p>kubernetes master 节点组件：</p><ul><li>kube-apiserver</li><li>kube-scheduler</li><li>kube-controller-manager</li><li>kubelet （非必须，但必要）</li><li>kube-proxy（非必须，但必要）</li></ul><h2 id="5-1-安装准备"><a href="#5-1-安装准备" class="headerlink" title="5.1 安装准备"></a>5.1 安装准备</h2><p><a href="https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG/CHANGELOG-1.21.md">https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG/CHANGELOG-1.21.md</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p <span class="variable">$HOME</span>/k8s-install &amp;&amp; <span class="built_in">cd</span> <span class="variable">$HOME</span>/k8s-install</span><br><span class="line">wget https://dl.k8s.io/v1.21.4/kubernetes-server-linux-amd64.tar.gz</span><br><span class="line">tar zxvf kubernetes-server-linux-amd64.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> kubernetes/server/bin</span><br><span class="line">cp kube-apiserver kube-scheduler kube-controller-manager kubectl kubelet kube-proxy /usr/bin</span><br></pre></td></tr></table></figure><h2 id="5-2-apiserver"><a href="#5-2-apiserver" class="headerlink" title="5.2 apiserver"></a>5.2 apiserver</h2><h3 id="5-2-1-TLS-Bootstrapping-Token"><a href="#5-2-1-TLS-Bootstrapping-Token" class="headerlink" title="5.2.1 TLS Bootstrapping Token"></a>5.2.1 TLS Bootstrapping Token</h3><p><strong>启用 TLS Bootstrapping 机制：</strong></p><p>TLS Bootstraping：Master apiserver启用TLS认证后，Node节点kubelet和kube-proxy要与kube-apiserver进行通信，必须使用CA签发的有效证书才可以，当Node节点很多时，这种客户端证书颁发需要大量工作，同样也会增加集群扩展复杂度。为了简化流程，Kubernetes引入了TLS bootstraping机制来自动颁发客户端证书，kubelet会以一个低权限用户自动向apiserver申请证书，kubelet的证书由apiserver动态签署。所以强烈建议在Node上使用这种方式，目前主要用于kubelet，kube-proxy还是由我们统一颁发一个证书。</p><p><code>TLS bootstraping</code> 工作流程：</p><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/kubernetes/k8s-tls-bootstrap.png" alt="img"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">BOOTSTRAP_TOKEN=$(head -c 16 /dev/urandom | od -An -t x | tr -d <span class="string">&#x27; &#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 格式：token，用户名，UID，用户组</span></span><br><span class="line">cat &gt; /etc/kubernetes/token.csv &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">$&#123;BOOTSTRAP_TOKEN&#125;,kubelet-bootstrap,10001,&quot;system:node-bootstrapper&quot;</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><h3 id="5-2-2-开机启动"><a href="#5-2-2-开机启动" class="headerlink" title="5.2.2 开机启动"></a>5.2.2 开机启动</h3><p><code>--service-cluster-ip-range=10.96.0.0/16</code>: Service IP 段</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">KUBE_APISERVER_OPTS=<span class="string">&quot;--enable-admission-plugins=NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota \</span></span><br><span class="line"><span class="string">  --anonymous-auth=false \</span></span><br><span class="line"><span class="string">  --bind-address=192.168.80.45 \</span></span><br><span class="line"><span class="string">  --secure-port=6443 \</span></span><br><span class="line"><span class="string">  --advertise-address=192.168.80.45 \</span></span><br><span class="line"><span class="string">  --authorization-mode=Node,RBAC \</span></span><br><span class="line"><span class="string">  --runtime-config=api/all=true \</span></span><br><span class="line"><span class="string">  --enable-bootstrap-token-auth \</span></span><br><span class="line"><span class="string">  --service-cluster-ip-range=10.96.0.0/16 \</span></span><br><span class="line"><span class="string">  --token-auth-file=/etc/kubernetes/token.csv \</span></span><br><span class="line"><span class="string">  --service-node-port-range=30000-50000 \</span></span><br><span class="line"><span class="string">  --tls-cert-file=/etc/kubernetes/pki/kube-apiserver.pem  \</span></span><br><span class="line"><span class="string">  --tls-private-key-file=/etc/kubernetes/pki/kube-apiserver-key.pem \</span></span><br><span class="line"><span class="string">  --client-ca-file=/etc/kubernetes/pki/ca.pem \</span></span><br><span class="line"><span class="string">  --kubelet-client-certificate=/etc/kubernetes/pki/kube-apiserver.pem \</span></span><br><span class="line"><span class="string">  --kubelet-client-key=/etc/kubernetes/pki/kube-apiserver-key.pem \</span></span><br><span class="line"><span class="string">  --service-account-key-file=/etc/kubernetes/pki/ca-key.pem \</span></span><br><span class="line"><span class="string">  --service-account-signing-key-file=/etc/kubernetes/pki/ca-key.pem  \</span></span><br><span class="line"><span class="string">  --service-account-issuer=https://kubernetes.default.svc.cluster.local \</span></span><br><span class="line"><span class="string">  --etcd-cafile=/etc/kubernetes/pki/ca.pem \</span></span><br><span class="line"><span class="string">  --etcd-certfile=/etc/kubernetes/pki/etcd.pem \</span></span><br><span class="line"><span class="string">  --etcd-keyfile=/etc/kubernetes/pki/etcd-key.pem \</span></span><br><span class="line"><span class="string">  --etcd-servers=https://192.168.80.45:2379 \</span></span><br><span class="line"><span class="string">  --allow-privileged=true \</span></span><br><span class="line"><span class="string">  --audit-log-maxage=30 \</span></span><br><span class="line"><span class="string">  --audit-log-maxbackup=3 \</span></span><br><span class="line"><span class="string">  --audit-log-maxsize=100 \</span></span><br><span class="line"><span class="string">  --audit-log-path=/var/log/kubernetes/kube-apiserver-audit.log \</span></span><br><span class="line"><span class="string">  --event-ttl=1h \</span></span><br><span class="line"><span class="string">  --alsologtostderr=true \</span></span><br><span class="line"><span class="string">  --logtostderr=false \</span></span><br><span class="line"><span class="string">  --log-dir=/var/log/kubernetes \</span></span><br><span class="line"><span class="string">  --v=2&quot;</span></span><br><span class="line"></span><br><span class="line">cat &gt; /lib/systemd/system/kube-apiserver.service &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">[Unit]</span></span><br><span class="line"><span class="string">Description=Kubernetes API Server</span></span><br><span class="line"><span class="string">Documentation=https://github.com/kubernetes/kubernetes</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Service]</span></span><br><span class="line"><span class="string">ExecStart=/usr/bin/kube-apiserver $KUBE_APISERVER_OPTS</span></span><br><span class="line"><span class="string">Restart=on-failure</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Install]</span></span><br><span class="line"><span class="string">WantedBy=multi-user.target</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 启动</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start kube-apiserver </span><br><span class="line">systemctl status kube-apiserver </span><br><span class="line">systemctl <span class="built_in">enable</span> kube-apiserver</span><br></pre></td></tr></table></figure><h3 id="5-2-3-kubectl-管理集群"><a href="#5-2-3-kubectl-管理集群" class="headerlink" title="5.2.3 kubectl 管理集群"></a>5.2.3 kubectl 管理集群</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /root/.kube</span><br><span class="line"></span><br><span class="line">KUBE_CONFIG=/root/.kube/config</span><br><span class="line">KUBE_APISERVER=<span class="string">&quot;https://192.168.80.45:6443&quot;</span></span><br><span class="line"></span><br><span class="line">kubectl config set-cluster kubernetes \</span><br><span class="line">  --certificate-authority=/etc/kubernetes/pki/ca.pem \</span><br><span class="line">  --embed-certs=<span class="literal">true</span> \</span><br><span class="line">  --server=<span class="variable">$&#123;KUBE_APISERVER&#125;</span> \</span><br><span class="line">  --kubeconfig=<span class="variable">$&#123;KUBE_CONFIG&#125;</span></span><br><span class="line">kubectl config set-credentials cluster-admin \</span><br><span class="line">  --client-certificate=/etc/kubernetes/pki/admin.pem \</span><br><span class="line">  --client-key=/etc/kubernetes/pki/admin-key.pem \</span><br><span class="line">  --embed-certs=<span class="literal">true</span> \</span><br><span class="line">  --kubeconfig=<span class="variable">$&#123;KUBE_CONFIG&#125;</span></span><br><span class="line">kubectl config set-context default \</span><br><span class="line">  --cluster=kubernetes \</span><br><span class="line">  --user=cluster-admin \</span><br><span class="line">  --kubeconfig=<span class="variable">$&#123;KUBE_CONFIG&#125;</span></span><br><span class="line">kubectl config use-context default --kubeconfig=<span class="variable">$&#123;KUBE_CONFIG&#125;</span></span><br></pre></td></tr></table></figure><h3 id="5-2-4-授权-kubelet-bootstrap-用户允许请求证书"><a href="#5-2-4-授权-kubelet-bootstrap-用户允许请求证书" class="headerlink" title="5.2.4 授权 kubelet-bootstrap 用户允许请求证书"></a>5.2.4 授权 kubelet-bootstrap 用户允许请求证书</h3><p>防止错误：<code>failed to run Kubelet: cannot create certificate signing request: certificatesigningrequests.certificates.k8s.io is forbidden: User &quot;kubelet-bootstrap&quot; cannot create resource &quot;certificatesigningrequests&quot; in API group &quot;certificates.k8s.io&quot; at the cluster scope</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl create clusterrolebinding kubelet-bootstrap \</span><br><span class="line">--clusterrole=system:node-bootstrapper \</span><br><span class="line">--user=kubelet-bootstrap</span><br></pre></td></tr></table></figure><h3 id="5-2-5-授权-apiserver-访问-kubelet"><a href="#5-2-5-授权-apiserver-访问-kubelet" class="headerlink" title="5.2.5 授权 apiserver 访问 kubelet"></a>5.2.5 授权 <code>apiserver</code> 访问 <code>kubelet</code></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p <span class="variable">$HOME</span>/k8s-install &amp;&amp; <span class="built_in">cd</span> <span class="variable">$HOME</span>/k8s-install</span><br><span class="line"></span><br><span class="line">cat &gt; apiserver-to-kubelet-rbac.yaml &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">apiVersion: rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="string">kind: ClusterRole</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  annotations:</span></span><br><span class="line"><span class="string">    rbac.authorization.kubernetes.io/autoupdate: &quot;true&quot;</span></span><br><span class="line"><span class="string">  labels:</span></span><br><span class="line"><span class="string">    kubernetes.io/bootstrapping: rbac-defaults</span></span><br><span class="line"><span class="string">  name: system:kube-apiserver-to-kubelet</span></span><br><span class="line"><span class="string">rules:</span></span><br><span class="line"><span class="string">  - apiGroups:</span></span><br><span class="line"><span class="string">      - &quot;&quot;</span></span><br><span class="line"><span class="string">    resources:</span></span><br><span class="line"><span class="string">      - nodes/proxy</span></span><br><span class="line"><span class="string">      - nodes/stats</span></span><br><span class="line"><span class="string">      - nodes/log</span></span><br><span class="line"><span class="string">      - nodes/spec</span></span><br><span class="line"><span class="string">      - nodes/metrics</span></span><br><span class="line"><span class="string">      - pods/log</span></span><br><span class="line"><span class="string">    verbs:</span></span><br><span class="line"><span class="string">      - &quot;*&quot;</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">apiVersion: rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="string">kind: ClusterRoleBinding</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: system:kube-apiserver</span></span><br><span class="line"><span class="string">  namespace: &quot;&quot;</span></span><br><span class="line"><span class="string">roleRef:</span></span><br><span class="line"><span class="string">  apiGroup: rbac.authorization.k8s.io</span></span><br><span class="line"><span class="string">  kind: ClusterRole</span></span><br><span class="line"><span class="string">  name: system:kube-apiserver-to-kubelet</span></span><br><span class="line"><span class="string">subjects:</span></span><br><span class="line"><span class="string">  - apiGroup: rbac.authorization.k8s.io</span></span><br><span class="line"><span class="string">    kind: User</span></span><br><span class="line"><span class="string">    name: kubernetes</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">kubectl apply -f apiserver-to-kubelet-rbac.yaml</span><br></pre></td></tr></table></figure><h2 id="5-3-controller-manager"><a href="#5-3-controller-manager" class="headerlink" title="5.3 controller-manager"></a>5.3 controller-manager</h2><h3 id="5-3-1-kubeconfig"><a href="#5-3-1-kubeconfig" class="headerlink" title="5.3.1 kubeconfig"></a>5.3.1 kubeconfig</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">KUBE_CONFIG=<span class="string">&quot;/etc/kubernetes/kube-controller-manager.kubeconfig&quot;</span></span><br><span class="line">KUBE_APISERVER=<span class="string">&quot;https://192.168.80.45:6443&quot;</span></span><br><span class="line"></span><br><span class="line">kubectl config set-cluster kubernetes \</span><br><span class="line">  --certificate-authority=/etc/kubernetes/pki/ca.pem \</span><br><span class="line">  --embed-certs=<span class="literal">true</span> \</span><br><span class="line">  --server=<span class="variable">$&#123;KUBE_APISERVER&#125;</span> \</span><br><span class="line">  --kubeconfig=<span class="variable">$&#123;KUBE_CONFIG&#125;</span></span><br><span class="line">kubectl config set-credentials kube-controller-manager \</span><br><span class="line">  --client-certificate=/etc/kubernetes/pki/kube-controller-manager.pem \</span><br><span class="line">  --client-key=/etc/kubernetes/pki/kube-controller-manager-key.pem \</span><br><span class="line">  --embed-certs=<span class="literal">true</span> \</span><br><span class="line">  --kubeconfig=<span class="variable">$&#123;KUBE_CONFIG&#125;</span></span><br><span class="line">kubectl config set-context default \</span><br><span class="line">  --cluster=kubernetes \</span><br><span class="line">  --user=kube-controller-manager \</span><br><span class="line">  --kubeconfig=<span class="variable">$&#123;KUBE_CONFIG&#125;</span></span><br><span class="line">kubectl config use-context default --kubeconfig=<span class="variable">$&#123;KUBE_CONFIG&#125;</span></span><br></pre></td></tr></table></figure><h3 id="5-3-2-开机启动"><a href="#5-3-2-开机启动" class="headerlink" title="5.3.2 开机启动"></a>5.3.2 开机启动</h3><p><code>--cluster-cidr=10.244.0.0/16</code>: Pod IP  段</p><p><code>--service-cluster-ip-range=10.96.0.0/16</code>: Service IP 段</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">KUBE_CONTROLLER_MANAGER_OPTS=<span class="string">&quot;--logtostderr=false \</span></span><br><span class="line"><span class="string">--v=2 \</span></span><br><span class="line"><span class="string">--log-dir=/var/log/kubernetes \</span></span><br><span class="line"><span class="string">--leader-elect=true \</span></span><br><span class="line"><span class="string">--kubeconfig=/etc/kubernetes/kube-controller-manager.kubeconfig \</span></span><br><span class="line"><span class="string">--bind-address=127.0.0.1 \</span></span><br><span class="line"><span class="string">--allocate-node-cidrs=true \</span></span><br><span class="line"><span class="string">--cluster-cidr=10.244.0.0/16 \</span></span><br><span class="line"><span class="string">--service-cluster-ip-range=10.96.0.0/16 \</span></span><br><span class="line"><span class="string">--cluster-signing-cert-file=/etc/kubernetes/pki/ca.pem \</span></span><br><span class="line"><span class="string">--cluster-signing-key-file=/etc/kubernetes/pki/ca-key.pem  \</span></span><br><span class="line"><span class="string">--root-ca-file=/etc/kubernetes/pki/ca.pem \</span></span><br><span class="line"><span class="string">--service-account-private-key-file=/etc/kubernetes/pki/ca-key.pem \</span></span><br><span class="line"><span class="string">--cluster-signing-duration=87600h0m0s&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cat &gt; /lib/systemd/system/kube-controller-manager.service &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">[Unit]</span></span><br><span class="line"><span class="string">Description=Kubernetes Controller Manager</span></span><br><span class="line"><span class="string">Documentation=https://github.com/kubernetes/kubernetes</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Service]</span></span><br><span class="line"><span class="string">ExecStart=/usr/bin/kube-controller-manager $KUBE_CONTROLLER_MANAGER_OPTS</span></span><br><span class="line"><span class="string">Restart=on-failure</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Install]</span></span><br><span class="line"><span class="string">WantedBy=multi-user.target</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start kube-controller-manager</span><br><span class="line">systemctl status kube-controller-manager</span><br><span class="line">systemctl <span class="built_in">enable</span> kube-controller-manager</span><br></pre></td></tr></table></figure><h2 id="5-4-scheduler"><a href="#5-4-scheduler" class="headerlink" title="5.4 scheduler"></a>5.4 scheduler</h2><h3 id="5-4-1-kubeconfig"><a href="#5-4-1-kubeconfig" class="headerlink" title="5.4.1 kubeconfig"></a>5.4.1 kubeconfig</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">KUBE_CONFIG=<span class="string">&quot;/etc/kubernetes/kube-scheduler.kubeconfig&quot;</span></span><br><span class="line">KUBE_APISERVER=<span class="string">&quot;https://192.168.80.45:6443&quot;</span></span><br><span class="line"></span><br><span class="line">kubectl config set-cluster kubernetes \</span><br><span class="line">  --certificate-authority=/etc/kubernetes/pki/ca.pem \</span><br><span class="line">  --embed-certs=<span class="literal">true</span> \</span><br><span class="line">  --server=<span class="variable">$&#123;KUBE_APISERVER&#125;</span> \</span><br><span class="line">  --kubeconfig=<span class="variable">$&#123;KUBE_CONFIG&#125;</span></span><br><span class="line">kubectl config set-credentials kube-scheduler \</span><br><span class="line">  --client-certificate=/etc/kubernetes/pki/kube-scheduler.pem \</span><br><span class="line">  --client-key=/etc/kubernetes/pki/kube-scheduler-key.pem \</span><br><span class="line">  --embed-certs=<span class="literal">true</span> \</span><br><span class="line">  --kubeconfig=<span class="variable">$&#123;KUBE_CONFIG&#125;</span></span><br><span class="line">kubectl config set-context default \</span><br><span class="line">  --cluster=kubernetes \</span><br><span class="line">  --user=kube-scheduler \</span><br><span class="line">  --kubeconfig=<span class="variable">$&#123;KUBE_CONFIG&#125;</span></span><br><span class="line">kubectl config use-context default --kubeconfig=<span class="variable">$&#123;KUBE_CONFIG&#125;</span></span><br></pre></td></tr></table></figure><h3 id="5-4-2-开机启动"><a href="#5-4-2-开机启动" class="headerlink" title="5.4.2 开机启动"></a>5.4.2 开机启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">KUBE_SCHEDULER_OPTS=<span class="string">&quot;--logtostderr=false \</span></span><br><span class="line"><span class="string">--v=2 \</span></span><br><span class="line"><span class="string">--log-dir=/var/log/kubernetes \</span></span><br><span class="line"><span class="string">--leader-elect \</span></span><br><span class="line"><span class="string">--kubeconfig=/etc/kubernetes/kube-scheduler.kubeconfig \</span></span><br><span class="line"><span class="string">--bind-address=127.0.0.1&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cat &gt; /lib/systemd/system/kube-scheduler.service &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">[Unit]</span></span><br><span class="line"><span class="string">Description=Kubernetes Scheduler</span></span><br><span class="line"><span class="string">Documentation=https://github.com/kubernetes/kubernetes</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Service]</span></span><br><span class="line"><span class="string">ExecStart=/usr/bin/kube-scheduler $KUBE_SCHEDULER_OPTS</span></span><br><span class="line"><span class="string">Restart=on-failure</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Install]</span></span><br><span class="line"><span class="string">WantedBy=multi-user.target</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start kube-scheduler</span><br><span class="line">systemctl status kube-scheduler</span><br><span class="line">systemctl <span class="built_in">enable</span> kube-scheduler</span><br></pre></td></tr></table></figure><h2 id="5-5-kubelet"><a href="#5-5-kubelet" class="headerlink" title="5.5 kubelet"></a>5.5 kubelet</h2><h3 id="5-5-1-参数配置"><a href="#5-5-1-参数配置" class="headerlink" title="5.5.1 参数配置"></a>5.5.1 参数配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/kubernetes/kubelet-config.yml &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">kind: KubeletConfiguration</span></span><br><span class="line"><span class="string">apiVersion: kubelet.config.k8s.io/v1beta1</span></span><br><span class="line"><span class="string">address: 0.0.0.0</span></span><br><span class="line"><span class="string">port: 10250</span></span><br><span class="line"><span class="string">readOnlyPort: 10255</span></span><br><span class="line"><span class="string">cgroupDriver: cgroupfs</span></span><br><span class="line"><span class="string">clusterDNS:</span></span><br><span class="line"><span class="string">- 10.96.0.2</span></span><br><span class="line"><span class="string">clusterDomain: cluster.local </span></span><br><span class="line"><span class="string">failSwapOn: false</span></span><br><span class="line"><span class="string">authentication:</span></span><br><span class="line"><span class="string">  anonymous:</span></span><br><span class="line"><span class="string">    enabled: false</span></span><br><span class="line"><span class="string">  webhook:</span></span><br><span class="line"><span class="string">    cacheTTL: 2m0s</span></span><br><span class="line"><span class="string">    enabled: true</span></span><br><span class="line"><span class="string">  x509:</span></span><br><span class="line"><span class="string">    clientCAFile: /etc/kubernetes/pki/ca.pem </span></span><br><span class="line"><span class="string">authorization:</span></span><br><span class="line"><span class="string">  mode: Webhook</span></span><br><span class="line"><span class="string">  webhook:</span></span><br><span class="line"><span class="string">    cacheAuthorizedTTL: 5m0s</span></span><br><span class="line"><span class="string">    cacheUnauthorizedTTL: 30s</span></span><br><span class="line"><span class="string">evictionHard:</span></span><br><span class="line"><span class="string">  imagefs.available: 15%</span></span><br><span class="line"><span class="string">  memory.available: 100Mi</span></span><br><span class="line"><span class="string">  nodefs.available: 10%</span></span><br><span class="line"><span class="string">  nodefs.inodesFree: 5%</span></span><br><span class="line"><span class="string">maxOpenFiles: 1000000</span></span><br><span class="line"><span class="string">maxPods: 110</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><h3 id="5-5-2-kubeconfig"><a href="#5-5-2-kubeconfig" class="headerlink" title="5.5.2 kubeconfig"></a>5.5.2 kubeconfig</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">BOOTSTRAP_TOKEN=$(cat /etc/kubernetes/token.csv | awk -F, <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">KUBE_CONFIG=<span class="string">&quot;/etc/kubernetes/bootstrap.kubeconfig&quot;</span></span><br><span class="line">KUBE_APISERVER=<span class="string">&quot;https://192.168.80.45:6443&quot;</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成 kubelet bootstrap kubeconfig 配置文件</span></span><br><span class="line">kubectl config set-cluster kubernetes \</span><br><span class="line">  --certificate-authority=/etc/kubernetes/pki/ca.pem \</span><br><span class="line">  --embed-certs=<span class="literal">true</span> \</span><br><span class="line">  --server=<span class="variable">$&#123;KUBE_APISERVER&#125;</span> \</span><br><span class="line">  --kubeconfig=<span class="variable">$&#123;KUBE_CONFIG&#125;</span></span><br><span class="line">kubectl config set-credentials <span class="string">&quot;kubelet-bootstrap&quot;</span> \</span><br><span class="line">  --token=<span class="variable">$&#123;BOOTSTRAP_TOKEN&#125;</span> \</span><br><span class="line">  --kubeconfig=<span class="variable">$&#123;KUBE_CONFIG&#125;</span></span><br><span class="line">kubectl config set-context default \</span><br><span class="line">  --cluster=kubernetes \</span><br><span class="line">  --user=<span class="string">&quot;kubelet-bootstrap&quot;</span> \</span><br><span class="line">  --kubeconfig=<span class="variable">$&#123;KUBE_CONFIG&#125;</span></span><br><span class="line">kubectl config use-context default --kubeconfig=<span class="variable">$&#123;KUBE_CONFIG&#125;</span></span><br></pre></td></tr></table></figure><h3 id="5-5-3-开机启动"><a href="#5-5-3-开机启动" class="headerlink" title="5.5.3 开机启动"></a>5.5.3 开机启动</h3><p>其中：<code>--kubeconfig=/etc/kubernetes/kubelet.kubeconfig</code> 在加入集群时自动生成</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">KUBELET_OPTS=<span class="string">&quot;--logtostderr=false \</span></span><br><span class="line"><span class="string">--v=2 \</span></span><br><span class="line"><span class="string">--log-dir=/var/log/kubernetes \</span></span><br><span class="line"><span class="string">--hostname-override=k8s-master1 \</span></span><br><span class="line"><span class="string">--network-plugin=cni \</span></span><br><span class="line"><span class="string">--kubeconfig=/etc/kubernetes/kubelet.kubeconfig \</span></span><br><span class="line"><span class="string">--bootstrap-kubeconfig=/etc/kubernetes/bootstrap.kubeconfig \</span></span><br><span class="line"><span class="string">--config=/etc/kubernetes/kubelet-config.yml \</span></span><br><span class="line"><span class="string">--cert-dir=/etc/kubernetes/pki \</span></span><br><span class="line"><span class="string">--pod-infra-container-image=mirrorgooglecontainers/pause-amd64:3.1&quot;</span></span><br><span class="line"></span><br><span class="line">cat &gt; /lib/systemd/system/kubelet.service &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">[Unit]</span></span><br><span class="line"><span class="string">Description=Kubernetes Kubelet</span></span><br><span class="line"><span class="string">After=docker.service</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Service]</span></span><br><span class="line"><span class="string">ExecStart=/usr/bin/kubelet $KUBELET_OPTS</span></span><br><span class="line"><span class="string">Restart=on-failure</span></span><br><span class="line"><span class="string">LimitNOFILE=65536</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Install]</span></span><br><span class="line"><span class="string">WantedBy=multi-user.target</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start kubelet</span><br><span class="line">systemctl status kubelet</span><br><span class="line">systemctl <span class="built_in">enable</span> kubelet</span><br></pre></td></tr></table></figure><h3 id="5-5-4-加入集群"><a href="#5-5-4-加入集群" class="headerlink" title="5.5.4 加入集群"></a>5.5.4 加入集群</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看kubelet证书请求</span></span><br><span class="line">kubectl get csr</span><br><span class="line">NAME                                                   AGE   SIGNERNAME                                    REQUESTOR           CONDITION</span><br><span class="line">node-csr-ghWG-AWFM9sxJbr5A-BIq9puVIRxfFHrQlwDjYbHba8   25s   kubernetes.io/kube-apiserver-client-kubelet   kubelet-bootstrap   Pending</span><br><span class="line"></span><br><span class="line"><span class="comment"># 批准申请</span></span><br><span class="line">kubectl certificate approve node-csr-ghWG-AWFM9sxJbr5A-BIq9puVIRxfFHrQlwDjYbHba8</span><br><span class="line"></span><br><span class="line"><span class="comment"># 再次查看证书</span></span><br><span class="line">kubectl get csr</span><br><span class="line">NAME                                                   AGE   SIGNERNAME                                    REQUESTOR           CONDITION</span><br><span class="line">node-csr-ghWG-AWFM9sxJbr5A-BIq9puVIRxfFHrQlwDjYbHba8   53m   kubernetes.io/kube-apiserver-client-kubelet   kubelet-bootstrap   Approved,Issued</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看节点（由于网络插件还没有部署，节点会没有准备就绪 NotReady）</span></span><br><span class="line">kubectl get node</span><br><span class="line">NAME          STATUS     ROLES    AGE   VERSION</span><br><span class="line">k8s-master1   NotReady   &lt;none&gt;   4m8s   v1.21.4</span><br></pre></td></tr></table></figure><h2 id="5-6-kube-proxy"><a href="#5-6-kube-proxy" class="headerlink" title="5.6 kube-proxy"></a>5.6 kube-proxy</h2><h3 id="5-6-1-参数配置"><a href="#5-6-1-参数配置" class="headerlink" title="5.6.1 参数配置"></a>5.6.1 参数配置</h3><p><code>clusterCIDR: 10.96.0.0/16</code>: Service IP 段，与apiserver &amp; controller-manager 的<code>--service-cluster-ip-range</code> 一致</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/kubernetes/kube-proxy-config.yml &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">kind: KubeProxyConfiguration</span></span><br><span class="line"><span class="string">apiVersion: kubeproxy.config.k8s.io/v1alpha1</span></span><br><span class="line"><span class="string">bindAddress: 0.0.0.0</span></span><br><span class="line"><span class="string">metricsBindAddress: 0.0.0.0:10249</span></span><br><span class="line"><span class="string">clientConnection:</span></span><br><span class="line"><span class="string">  kubeconfig: /etc/kubernetes/kube-proxy.kubeconfig</span></span><br><span class="line"><span class="string">hostnameOverride: k8s-master1</span></span><br><span class="line"><span class="string">clusterCIDR: 10.96.0.0/16</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><h3 id="5-6-2-kubeconfig-文件"><a href="#5-6-2-kubeconfig-文件" class="headerlink" title="5.6.2 kubeconfig 文件"></a>5.6.2 kubeconfig 文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">KUBE_CONFIG=<span class="string">&quot;/etc/kubernetes/kube-proxy.kubeconfig&quot;</span></span><br><span class="line">KUBE_APISERVER=<span class="string">&quot;https://192.168.80.45:6443&quot;</span></span><br><span class="line"></span><br><span class="line">kubectl config set-cluster kubernetes \</span><br><span class="line">  --certificate-authority=/etc/kubernetes/pki/ca.pem \</span><br><span class="line">  --embed-certs=<span class="literal">true</span> \</span><br><span class="line">  --server=<span class="variable">$&#123;KUBE_APISERVER&#125;</span> \</span><br><span class="line">  --kubeconfig=<span class="variable">$&#123;KUBE_CONFIG&#125;</span></span><br><span class="line">kubectl config set-credentials kube-proxy \</span><br><span class="line">  --client-certificate=/etc/kubernetes/pki/kube-proxy.pem \</span><br><span class="line">  --client-key=/etc/kubernetes/pki/kube-proxy-key.pem \</span><br><span class="line">  --embed-certs=<span class="literal">true</span> \</span><br><span class="line">  --kubeconfig=<span class="variable">$&#123;KUBE_CONFIG&#125;</span></span><br><span class="line">kubectl config set-context default \</span><br><span class="line">  --cluster=kubernetes \</span><br><span class="line">  --user=kube-proxy \</span><br><span class="line">  --kubeconfig=<span class="variable">$&#123;KUBE_CONFIG&#125;</span></span><br><span class="line">kubectl config use-context default --kubeconfig=<span class="variable">$&#123;KUBE_CONFIG&#125;</span></span><br></pre></td></tr></table></figure><h3 id="5-6-3-开机启动"><a href="#5-6-3-开机启动" class="headerlink" title="5.6.3 开机启动"></a>5.6.3 开机启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">KUBE_PROXY_OPTS=<span class="string">&quot;--logtostderr=false \</span></span><br><span class="line"><span class="string">--v=2 \</span></span><br><span class="line"><span class="string">--proxy-mode=iptables \</span></span><br><span class="line"><span class="string">--log-dir=/var/log/kubernetes \</span></span><br><span class="line"><span class="string">--config=/etc/kubernetes/kube-proxy-config.yml&quot;</span></span><br><span class="line"></span><br><span class="line">cat &gt; /lib/systemd/system/kube-proxy.service &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">[Unit]</span></span><br><span class="line"><span class="string">Description=Kubernetes Proxy</span></span><br><span class="line"><span class="string">After=network.target</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Service]</span></span><br><span class="line"><span class="string">ExecStart=/usr/bin/kube-proxy $KUBE_PROXY_OPTS</span></span><br><span class="line"><span class="string">Restart=on-failure</span></span><br><span class="line"><span class="string">LimitNOFILE=65536</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Install]</span></span><br><span class="line"><span class="string">WantedBy=multi-user.target</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start kube-proxy</span><br><span class="line">systemctl status kube-proxy</span><br><span class="line">systemctl <span class="built_in">enable</span> kube-proxy</span><br></pre></td></tr></table></figure><h2 id="5-7-集群管理"><a href="#5-7-集群管理" class="headerlink" title="5.7 集群管理"></a>5.7 集群管理</h2><h3 id="5-7-1-集群配置信息"><a href="#5-7-1-集群配置信息" class="headerlink" title="5.7.1 集群配置信息"></a>5.7.1 集群配置信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">kubectl config view</span><br><span class="line"></span><br><span class="line">apiVersion: v1</span><br><span class="line">clusters:</span><br><span class="line">- cluster:</span><br><span class="line">    certificate-authority-data: DATA+OMITTED</span><br><span class="line">    server: https://192.168.80.45:6443</span><br><span class="line">  name: kubernetes</span><br><span class="line">contexts:</span><br><span class="line">- context:</span><br><span class="line">    cluster: kubernetes</span><br><span class="line">    user: cluster-admin</span><br><span class="line">  name: default</span><br><span class="line">current-context: default</span><br><span class="line">kind: Config</span><br><span class="line">preferences: &#123;&#125;</span><br><span class="line">users:</span><br><span class="line">- name: cluster-admin</span><br><span class="line">  user:</span><br><span class="line">    client-certificate-data: REDACTED</span><br><span class="line">    client-key-data: REDACTED</span><br></pre></td></tr></table></figure><h3 id="5-7-2-集群状态"><a href="#5-7-2-集群状态" class="headerlink" title="5.7.2 集群状态"></a>5.7.2 集群状态</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">kubectl get cs</span><br><span class="line">Warning: v1 ComponentStatus is deprecated <span class="keyword">in</span> v1.19+</span><br><span class="line">NAME                 STATUS    MESSAGE             ERROR</span><br><span class="line">scheduler            Healthy   ok</span><br><span class="line">controller-manager   Healthy   ok</span><br><span class="line">etcd-1               Healthy   &#123;<span class="string">&quot;health&quot;</span>:<span class="string">&quot;true&quot;</span>&#125;</span><br><span class="line">etcd-2               Healthy   &#123;<span class="string">&quot;health&quot;</span>:<span class="string">&quot;true&quot;</span>&#125;</span><br><span class="line">etcd-0               Healthy   &#123;<span class="string">&quot;health&quot;</span>:<span class="string">&quot;true&quot;</span>&#125;</span><br></pre></td></tr></table></figure><h2 id="5-8-命令补全"><a href="#5-8-命令补全" class="headerlink" title="5.8 命令补全"></a>5.8 命令补全</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apt install -y bash-completion</span><br><span class="line"><span class="built_in">source</span> /usr/share/bash-completion/bash_completion</span><br><span class="line"><span class="built_in">source</span> &lt;(kubectl completion bash)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;source &lt;(kubectl completion bash)&quot;</span> &gt;&gt; ~/.bashrc</span><br></pre></td></tr></table></figure><h1 id="6-网络插件"><a href="#6-网络插件" class="headerlink" title="6. 网络插件"></a>6. 网络插件</h1><p><strong>其中涉及的IP段，要与 kube-controller-manager中  “–cluster-cidr”  一致</strong></p><h2 id="6-1-CNI-Plugins"><a href="#6-1-CNI-Plugins" class="headerlink" title="6.1 CNI Plugins"></a>6.1 CNI Plugins</h2><p>所有节点都要操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p <span class="variable">$HOME</span>/k8s-install/network &amp;&amp; <span class="built_in">cd</span> <span class="variable">$_</span></span><br><span class="line">wget https://github.com/containernetworking/plugins/releases/download/v0.9.1/cni-plugins-linux-amd64-v0.9.1.tgz</span><br><span class="line"></span><br><span class="line">mkdir -p /opt/cni/bin</span><br><span class="line">tar zxvf cni-plugins-linux-amd64-v0.9.1.tgz -C /opt/cni/bin</span><br></pre></td></tr></table></figure><h2 id="6-2-calico"><a href="#6-2-calico" class="headerlink" title="6.2 calico"></a>6.2 calico</h2><p><code>Calico</code>是一个纯三层的数据中心网络方案，是目前Kubernetes主流的网络方案。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p <span class="variable">$HOME</span>/k8s-install/network &amp;&amp; <span class="built_in">cd</span> <span class="variable">$HOME</span>/k8s-install/network</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. 下载插件</span></span><br><span class="line">wget https://docs.projectcalico.org/manifests/calico.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># CIDR的值，与 kube-controller-manager中“--cluster-cidr=10.244.0.0/16” 一致</span></span><br><span class="line">vi calico.yaml</span><br><span class="line">   3680             <span class="comment"># The default IPv4 pool to create on startup if none exists. Pod IPs will be</span></span><br><span class="line">   3681             <span class="comment"># chosen from this range. Changing this value after installation will have</span></span><br><span class="line">   3682             <span class="comment"># no effect. This should fall within `--cluster-cidr`.</span></span><br><span class="line">   3683             - name: CALICO_IPV4POOL_CIDR</span><br><span class="line">   3684               value: <span class="string">&quot;10.244.0.0/16&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 安装网络插件</span></span><br><span class="line">kubectl apply -f calico.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 检查是否启动</span></span><br><span class="line">kubectl get pod -n kube-system</span><br><span class="line">NAME                                       READY   STATUS    RESTARTS   AGE</span><br><span class="line">calico-kube-controllers-7f4f5bf95d-tgklk   1/1     Running   0          2m7s</span><br><span class="line">calico-node-fwv5x                          1/1     Running   0          2m8s</span><br><span class="line">calico-node-ttt2c                          1/1     Running   0          2m8s</span><br><span class="line">calico-node-xjvjf                          1/1     Running   0          2m8s</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4. 节点状态正常</span></span><br><span class="line">kubectl get node</span><br><span class="line">NAME          STATUS   ROLES    AGE   VERSION</span><br><span class="line">k8s-master1   Ready    master   65m   v1.21.4</span><br><span class="line">k8s-node01    Ready    node     20m   v1.21.4</span><br><span class="line">k8s-node02    Ready    node     20m   v1.21.4</span><br></pre></td></tr></table></figure><h2 id="6-3-flannel"><a href="#6-3-flannel" class="headerlink" title="6.3 flannel"></a>6.3 flannel</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p <span class="variable">$HOME</span>/k8s-install/network &amp;&amp; <span class="built_in">cd</span> <span class="variable">$HOME</span>/k8s-install/network</span><br><span class="line"></span><br><span class="line">wget https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml</span><br><span class="line">kubectl apply -f kube-flannel.yml</span><br><span class="line"></span><br><span class="line">vi kube-flannel.yml</span><br><span class="line"> <span class="string">&quot;Network&quot;</span>: <span class="string">&quot;10.244.0.0/16&quot;</span>,</span><br><span class="line"></span><br><span class="line">kubectl get pod -n kube-system</span><br><span class="line">NAME                    READY   STATUS    RESTARTS   AGE</span><br><span class="line">kube-flannel-ds-8qnnx   1/1     Running   0          10s</span><br><span class="line">kube-flannel-ds-979lc   1/1     Running   0          16m</span><br><span class="line">kube-flannel-ds-kgmgg   1/1     Running   0          16m</span><br><span class="line"></span><br><span class="line">kubectl get node</span><br><span class="line">NAME          STATUS   ROLES    AGE   VERSION</span><br><span class="line">k8s-master1   Ready    master   85m   v1.21.4</span><br><span class="line">k8s-node01    Ready    node     40m   v1.21.4</span><br><span class="line">k8s-node02    Ready    node     40m   v1.21.4</span><br></pre></td></tr></table></figure><h2 id="6-4-ovs-cni"><a href="#6-4-ovs-cni" class="headerlink" title="6.4 ovs-cni"></a>6.4 ovs-cni</h2><h3 id="6-4-1-安装-open-vswitch"><a href="#6-4-1-安装-open-vswitch" class="headerlink" title="6.4.1 安装 open-vswitch"></a>6.4.1 安装 open-vswitch</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install openvswitch-switch</span><br></pre></td></tr></table></figure><h3 id="6-4-2-安装-multus"><a href="#6-4-2-安装-multus" class="headerlink" title="6.4.2 安装 multus"></a>6.4.2 安装 multus</h3><p>multus创建的crd资源network-attachment-definitions来定义ovs配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/k8snetworkplumbingwg/multus-cni/master/images/multus-daemonset.yml</span><br><span class="line"></span><br><span class="line">kubectl apply -f multus-daemonset.yml</span><br></pre></td></tr></table></figure><h3 id="6-4-3-安装-ovs-cni"><a href="#6-4-3-安装-ovs-cni" class="headerlink" title="6.4.3 安装 ovs-cni"></a>6.4.3 安装 ovs-cni</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/k8snetworkplumbingwg/ovs-cni/blob/main/manifests/ovs-cni.yml.in</span><br><span class="line"></span><br><span class="line"><span class="comment"># 参照配置</span></span><br><span class="line">cat &gt; ovs-cni.yml &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">apiVersion: apps/v1</span></span><br><span class="line"><span class="string">kind: DaemonSet</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: ovs-cni-amd64</span></span><br><span class="line"><span class="string">  namespace: kube-system</span></span><br><span class="line"><span class="string">  labels:</span></span><br><span class="line"><span class="string">    tier: node</span></span><br><span class="line"><span class="string">    app: ovs-cni</span></span><br><span class="line"><span class="string">spec:</span></span><br><span class="line"><span class="string">  selector:</span></span><br><span class="line"><span class="string">    matchLabels:</span></span><br><span class="line"><span class="string">      app: ovs-cni</span></span><br><span class="line"><span class="string">  template:</span></span><br><span class="line"><span class="string">    metadata:</span></span><br><span class="line"><span class="string">      labels:</span></span><br><span class="line"><span class="string">        tier: node</span></span><br><span class="line"><span class="string">        app: ovs-cni</span></span><br><span class="line"><span class="string">      annotations:</span></span><br><span class="line"><span class="string">        description: OVS CNI allows users to attach their Pods/VMs to Open vSwitch bridges available on nodes</span></span><br><span class="line"><span class="string">    spec:</span></span><br><span class="line"><span class="string">      serviceAccountName: ovs-cni-marker</span></span><br><span class="line"><span class="string">      hostNetwork: true</span></span><br><span class="line"><span class="string">      nodeSelector:</span></span><br><span class="line"><span class="string">        beta.kubernetes.io/arch: amd64</span></span><br><span class="line"><span class="string">      tolerations:</span></span><br><span class="line"><span class="string">      - key: node-role.kubernetes.io/master</span></span><br><span class="line"><span class="string">        operator: Exists</span></span><br><span class="line"><span class="string">        effect: NoSchedule</span></span><br><span class="line"><span class="string">      initContainers:</span></span><br><span class="line"><span class="string">      - name: ovs-cni-plugin</span></span><br><span class="line"><span class="string">        image: quay.io/kubevirt/ovs-cni-plugin:latest</span></span><br><span class="line"><span class="string">        command: [&#x27;cp&#x27;, &#x27;/ovs&#x27;, &#x27;/host/opt/cni/bin/ovs&#x27;]</span></span><br><span class="line"><span class="string">        imagePullPolicy: IfNotPresent</span></span><br><span class="line"><span class="string">        securityContext:</span></span><br><span class="line"><span class="string">          privileged: true</span></span><br><span class="line"><span class="string">        volumeMounts:</span></span><br><span class="line"><span class="string">        - name: cnibin</span></span><br><span class="line"><span class="string">          mountPath: /host/opt/cni/bin</span></span><br><span class="line"><span class="string">      containers:</span></span><br><span class="line"><span class="string">      - name: ovs-cni-marker</span></span><br><span class="line"><span class="string">        image: quay.io/kubevirt/ovs-cni-marker:latest</span></span><br><span class="line"><span class="string">        imagePullPolicy: IfNotPresent</span></span><br><span class="line"><span class="string">        securityContext:</span></span><br><span class="line"><span class="string">          privileged: true</span></span><br><span class="line"><span class="string">        args:</span></span><br><span class="line"><span class="string">          - -node-name</span></span><br><span class="line"><span class="string">          - $(NODE_NAME)</span></span><br><span class="line"><span class="string">          - -ovs-socket</span></span><br><span class="line"><span class="string">          - /host/var/run/openvswitch/db.sock</span></span><br><span class="line"><span class="string">        volumeMounts:</span></span><br><span class="line"><span class="string">          - name: ovs-var-run</span></span><br><span class="line"><span class="string">            mountPath: /host/var/run/openvswitch</span></span><br><span class="line"><span class="string">        env:</span></span><br><span class="line"><span class="string">          - name: NODE_NAME</span></span><br><span class="line"><span class="string">            valueFrom:</span></span><br><span class="line"><span class="string">              fieldRef:</span></span><br><span class="line"><span class="string">                fieldPath: spec.nodeName</span></span><br><span class="line"><span class="string">      volumes:</span></span><br><span class="line"><span class="string">        - name: cnibin</span></span><br><span class="line"><span class="string">          hostPath:</span></span><br><span class="line"><span class="string">            path: /opt/cni/bin</span></span><br><span class="line"><span class="string">        - name: ovs-var-run</span></span><br><span class="line"><span class="string">          hostPath:</span></span><br><span class="line"><span class="string">            path: /var/run/openvswitch</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">kind: ClusterRole</span></span><br><span class="line"><span class="string">apiVersion: rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: ovs-cni-marker-cr</span></span><br><span class="line"><span class="string">rules:</span></span><br><span class="line"><span class="string">- apiGroups:</span></span><br><span class="line"><span class="string">  - &quot;&quot;</span></span><br><span class="line"><span class="string">  resources:</span></span><br><span class="line"><span class="string">  - nodes</span></span><br><span class="line"><span class="string">  - nodes/status</span></span><br><span class="line"><span class="string">  verbs:</span></span><br><span class="line"><span class="string">  - get</span></span><br><span class="line"><span class="string">  - update</span></span><br><span class="line"><span class="string">  - patch</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">kind: ClusterRoleBinding</span></span><br><span class="line"><span class="string">apiVersion: rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: ovs-cni-marker-crb</span></span><br><span class="line"><span class="string">roleRef:</span></span><br><span class="line"><span class="string">  apiGroup: rbac.authorization.k8s.io</span></span><br><span class="line"><span class="string">  kind: ClusterRole</span></span><br><span class="line"><span class="string">  name: ovs-cni-marker-cr</span></span><br><span class="line"><span class="string">subjects:</span></span><br><span class="line"><span class="string">- kind: ServiceAccount</span></span><br><span class="line"><span class="string">  name: ovs-cni-marker</span></span><br><span class="line"><span class="string">  namespace: kube-system</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">apiVersion: v1</span></span><br><span class="line"><span class="string">kind: ServiceAccount</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: ovs-cni-marker</span></span><br><span class="line"><span class="string">  namespace: kube-system</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 安装 ovs-cni</span></span><br><span class="line">kubectl apply -f ovs-cni.yaml</span><br></pre></td></tr></table></figure><h3 id="6-4-4-网桥"><a href="#6-4-4-网桥" class="headerlink" title="6.4.4 网桥"></a>6.4.4 网桥</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 创建网桥</span></span><br><span class="line">ovs-vsctl add-br br1</span><br><span class="line">ovs-vsctl show</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 查看node是否使用了网桥</span></span><br><span class="line">kubectl describe node k8s-master</span><br><span class="line">...</span><br><span class="line">Capacity:</span><br><span class="line">  ovs-cni.network.kubevirt.io/br1:  1k     <span class="comment"># 默认写死 1k</span></span><br><span class="line">...</span><br><span class="line">Allocatable:</span><br><span class="line">  ovs-cni.network.kubevirt.io/br1:  1k     <span class="comment"># 默认写死 1k</span></span><br></pre></td></tr></table></figure><h3 id="6-4-5-网络扩展"><a href="#6-4-5-网络扩展" class="headerlink" title="6.4.5 网络扩展"></a>6.4.5 网络扩展</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; ovs-ipam-net.yml &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">apiVersion: &quot;k8s.cni.cncf.io/v1&quot;</span></span><br><span class="line"><span class="string">kind: NetworkAttachmentDefinition</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: ovs-ipam-net</span></span><br><span class="line"><span class="string">  annotations:</span></span><br><span class="line"><span class="string">    k8s.v1.cni.cncf.io/resourceName: ovs-cni.network.kubevirt.io/br1</span></span><br><span class="line"><span class="string">spec:</span></span><br><span class="line"><span class="string">  config: &#x27;&#123;</span></span><br><span class="line"><span class="string">      &quot;cniVersion&quot;: &quot;0.3.1&quot;,</span></span><br><span class="line"><span class="string">      &quot;type&quot;: &quot;ovs&quot;,</span></span><br><span class="line"><span class="string">      &quot;bridge&quot;: &quot;br1&quot;,</span></span><br><span class="line"><span class="string">      &quot;vlan&quot;: 100,</span></span><br><span class="line"><span class="string">      &quot;ipam&quot;: &#123;</span></span><br><span class="line"><span class="string">        &quot;type&quot;: &quot;static&quot;</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">    &#125;&#x27;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">kubectl apply -f ovs-ipam-net.yml</span><br></pre></td></tr></table></figure><h3 id="6-4-6-验证"><a href="#6-4-6-验证" class="headerlink" title="6.4.6 验证"></a>6.4.6 验证</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 创建pod</span></span><br><span class="line">cat &gt; ovs-test.yml &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">apiVersion: v1</span></span><br><span class="line"><span class="string">kind: Pod</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: samplepod-1</span></span><br><span class="line"><span class="string">  annotations:</span></span><br><span class="line"><span class="string">    k8s.v1.cni.cncf.io/networks: &#x27;[</span></span><br><span class="line"><span class="string">        &#123;</span></span><br><span class="line"><span class="string">          &quot;name&quot;: &quot;ovs-ipam-net&quot;,</span></span><br><span class="line"><span class="string">          &quot;ips&quot;: [&quot;10.10.10.1/24&quot;]</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">]&#x27;</span></span><br><span class="line"><span class="string">spec:</span></span><br><span class="line"><span class="string">  containers:</span></span><br><span class="line"><span class="string">  - name: pod-1</span></span><br><span class="line"><span class="string">    command: [&quot;sleep&quot;, &quot;99999&quot;]</span></span><br><span class="line"><span class="string">    image: alpine</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">apiVersion: v1</span></span><br><span class="line"><span class="string">kind: Pod</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: samplepod-2</span></span><br><span class="line"><span class="string">  annotations:</span></span><br><span class="line"><span class="string">    k8s.v1.cni.cncf.io/networks: &#x27;[</span></span><br><span class="line"><span class="string">        &#123;</span></span><br><span class="line"><span class="string">          &quot;name&quot;: &quot;ovs-ipam-net&quot;,</span></span><br><span class="line"><span class="string">          &quot;ips&quot;: [&quot;10.10.10.2/24&quot;]</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">]&#x27;</span></span><br><span class="line"><span class="string">spec:</span></span><br><span class="line"><span class="string">  containers:</span></span><br><span class="line"><span class="string">  - name: pod-2</span></span><br><span class="line"><span class="string">    command: [&quot;sleep&quot;, &quot;99999&quot;]</span></span><br><span class="line"><span class="string">    image: alpine</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. zhic</span></span><br><span class="line">kubectl apply -f ovs-test.yml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 通信测试</span></span><br><span class="line">kubectl <span class="built_in">exec</span> -it samplepod-1 -- ping 10.10.10.2 -c 5</span><br><span class="line">PING 10.10.10.2 (10.10.10.2): 56 data bytes</span><br><span class="line">64 bytes from 10.10.10.2: seq=0 ttl=127 time=10.266 ms</span><br><span class="line">64 bytes from 10.10.10.2: seq=1 ttl=127 time=7.423 ms</span><br><span class="line">64 bytes from 10.10.10.2: seq=2 ttl=127 time=7.265 ms</span><br><span class="line">64 bytes from 10.10.10.2: seq=3 ttl=127 time=14.498 </span><br></pre></td></tr></table></figure><h1 id="7-Node-节点"><a href="#7-Node-节点" class="headerlink" title="7. Node 节点"></a>7. Node 节点</h1><p>Kubernetes node节点组件：</p><ul><li>kubelet</li><li>kube-proxy</li></ul><h2 id="6-1-克隆准备-master节点执行"><a href="#6-1-克隆准备-master节点执行" class="headerlink" title="6.1 克隆准备 (master节点执行)"></a>6.1 克隆准备 (master节点执行)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p <span class="variable">$HOME</span>/k8s-install &amp;&amp; <span class="built_in">cd</span> <span class="variable">$HOME</span>/k8s-install</span><br><span class="line"></span><br><span class="line">tar cvf worker-node-clone.tar /usr/bin/&#123;kubelet,kube-proxy&#125; /lib/systemd/system/&#123;kubelet,kube-proxy&#125;.service /etc/kubernetes/kubelet* /etc/kubernetes/kube-proxy* /etc/kubernetes/pki /etc/kubernetes/bootstrap.kubeconfig</span><br><span class="line"></span><br><span class="line">scp worker-node-clone.tar ubuntu@192.168.80.46:/home/ubuntu</span><br><span class="line">scp worker-node-clone.tar ubuntu@192.168.80.47:/home/ubuntu</span><br></pre></td></tr></table></figure><h2 id="6-2-克隆节点"><a href="#6-2-克隆节点" class="headerlink" title="6.2 克隆节点"></a>6.2 克隆节点</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> / &amp;&amp; mv /home/ubuntu/worker-node-clone.tar / &amp;&amp; tar xvf worker-node-clone.tar &amp;&amp; rm -f worker-node-clone.tar</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除证书申请审批后自动生成的文件，后面重新生成</span></span><br><span class="line">rm -f /etc/kubernetes/kubelet.kubeconfig </span><br><span class="line">rm -f /etc/kubernetes/pki/kubelet*</span><br><span class="line"></span><br><span class="line"><span class="comment"># 日志目录</span></span><br><span class="line">mkdir -p /var/<span class="built_in">log</span>/kubernetes</span><br></pre></td></tr></table></figure><h2 id="6-3-修改配置"><a href="#6-3-修改配置" class="headerlink" title="6.3 修改配置"></a>6.3 修改配置</h2><p>按实际节点名称修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubelet</span></span><br><span class="line">vi /lib/systemd/system/kubelet.service</span><br><span class="line">--hostname-override=k8s-node01</span><br><span class="line"></span><br><span class="line"><span class="comment"># kube-proxy</span></span><br><span class="line">vi /etc/kubernetes/kube-proxy-config.yml</span><br><span class="line">hostnameOverride: k8s-node01</span><br></pre></td></tr></table></figure><h2 id="6-4-开机启动"><a href="#6-4-开机启动" class="headerlink" title="6.4 开机启动"></a>6.4 开机启动</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start kubelet kube-proxy</span><br><span class="line">systemctl status kubelet kube-proxy</span><br><span class="line">systemctl <span class="built_in">enable</span> kubelet kube-proxy</span><br></pre></td></tr></table></figure><h2 id="6-5-加入集群-master节点执行"><a href="#6-5-加入集群-master节点执行" class="headerlink" title="6.5 加入集群 (master节点执行)"></a>6.5 加入集群 (master节点执行)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 节点信息</span></span><br><span class="line">kubectl get csr</span><br><span class="line">NAME                                                   AGE   SIGNERNAME                                    REQUESTOR           CONDITION</span><br><span class="line">node-csr-ghWG-AWFM9sxJbr5A-BIq9puVIRxfFHrQlwDjYbHba8   94m   kubernetes.io/kube-apiserver-client-kubelet   kubelet-bootstrap   Approved,Issued</span><br><span class="line">node-csr-r2GF_8R3zuUe9BCf6eHeijWnzyPDDy-6WQUFOrOAQjA   34s   kubernetes.io/kube-apiserver-client-kubelet   kubelet-bootstrap   Pending</span><br><span class="line">node-csr-wvcKDHm38jQgjyaLiA_G2ycc2Qvmecf_iRRd9IqlSEw   97s   kubernetes.io/kube-apiserver-client-kubelet   kubelet-bootstrap   Pending</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 批准加入</span></span><br><span class="line">kubectl certificate approve node-csr-r2GF_8R3zuUe9BCf6eHeijWnzyPDDy-6WQUFOrOAQjA </span><br><span class="line">kubectl certificate approve node-csr-wvcKDHm38jQgjyaLiA_G2ycc2Qvmecf_iRRd9IqlSEw</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 集群节点</span></span><br><span class="line">kubectl get node</span><br><span class="line">NAME          STATUS   ROLES    AGE     VERSION</span><br><span class="line">k8s-master1   NotReady   &lt;none&gt;   45m   v1.21.4</span><br><span class="line">k8s-node01    NotReady   &lt;none&gt;   6s    v1.21.4</span><br><span class="line">k8s-node02    NotReady   &lt;none&gt;   10s   v1.21.4</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4. 设置标签，即更改节点角色</span></span><br><span class="line">kubectl label node k8s-master1 node-role.kubernetes.io/master=</span><br><span class="line">kubectl label node k8s-node01 node-role.kubernetes.io/node=</span><br><span class="line">kubectl label node k8s-node02 node-role.kubernetes.io/node=</span><br><span class="line"></span><br><span class="line">kubectl get node</span><br><span class="line">NAME          STATUS     ROLES    AGE     VERSION</span><br><span class="line">k8s-master1   NotReady   master   49m     v1.21.4</span><br><span class="line">k8s-node01    NotReady   node     3m45s   v1.21.4</span><br><span class="line">k8s-node02    NotReady   node     3m49s   v1.21.4</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5. 设置污点：是master节点无法创建pod</span></span><br><span class="line">kubectl taint nodes k8s-master1 node-role.kubernetes.io/master=:NoSchedule</span><br><span class="line"></span><br><span class="line">kubectl describe node k8s-master1</span><br><span class="line">Taints:             node-role.kubernetes.io/master:NoSchedule</span><br><span class="line">                    node.kubernetes.io/not-ready:NoSchedule</span><br></pre></td></tr></table></figure><h1 id="8-Addons"><a href="#8-Addons" class="headerlink" title="8. Addons"></a>8. Addons</h1><h2 id="8-1-CoreDNS"><a href="#8-1-CoreDNS" class="headerlink" title="8.1 CoreDNS"></a>8.1 CoreDNS</h2><p>CoreDNS用于集群内部Service名称解析</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p <span class="variable">$HOME</span>/k8s-install/coredns &amp;&amp; <span class="built_in">cd</span> <span class="variable">$HOME</span>/k8s-install/coredns</span><br><span class="line"></span><br><span class="line">wget https://raw.githubusercontent.com/coredns/deployment/master/kubernetes/coredns.yaml.sed</span><br><span class="line">wget https://raw.githubusercontent.com/coredns/deployment/master/kubernetes/deploy.sh</span><br><span class="line"></span><br><span class="line">chmod +x deploy.sh</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> CLUSTER_DNS_SVC_IP=<span class="string">&quot;10.96.0.2&quot;</span></span><br><span class="line"><span class="built_in">export</span> CLUSTER_DNS_DOMAIN=<span class="string">&quot;cluster.local&quot;</span></span><br><span class="line"></span><br><span class="line">./deploy.sh -i <span class="variable">$&#123;CLUSTER_DNS_SVC_IP&#125;</span> -d <span class="variable">$&#123;CLUSTER_DNS_DOMAIN&#125;</span> | kubectl apply -f -</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询状态</span></span><br><span class="line">kubectl get pods -n kube-system | grep coredns</span><br><span class="line">coredns-746fcb4bc5-nts2k                   1/1     Running   0          6m2s</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证 busybox1.33.1有问题</span></span><br><span class="line">kubectl run -it --rm dns-test --image=busybox:1.28.4 /bin/sh</span><br><span class="line">If you don<span class="string">&#x27;t see a command prompt, try pressing enter.</span></span><br><span class="line"><span class="string">/ # nslookup kubernetes</span></span><br><span class="line"><span class="string">Server:         10.96.0.2</span></span><br><span class="line"><span class="string">Address:        10.96.0.2:53</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Name:   kubernetes.default.svc.cluster.local</span></span><br><span class="line"><span class="string">Address: 10.0.0.1</span></span><br></pre></td></tr></table></figure><p>DNS问题排查：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># dns service</span></span><br><span class="line">kubectl get svc -n kube-system</span><br><span class="line">NAME       TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)                  AGE</span><br><span class="line">kube-dns   ClusterIP   10.96.0.2   &lt;none&gt;        53/UDP,53/TCP,9153/TCP   13m</span><br><span class="line"></span><br><span class="line"><span class="comment"># endpoints 是否正常</span></span><br><span class="line">kubectl get endpoints kube-dns -n kube-system</span><br><span class="line">NAME       ENDPOINTS                                        AGE</span><br><span class="line">kube-dns   10.244.85.194:53,10.244.85.194:53,10.244.85.194:9153   13m</span><br><span class="line"></span><br><span class="line"><span class="comment"># coredns 增加解析日志</span></span><br><span class="line">CoreDNS 配置参数说明：</span><br><span class="line">errors: 输出错误信息到控制台。</span><br><span class="line">health：CoreDNS 进行监控检测，检测地址为 http://localhost:8080/health 如果状态为不健康则让 Pod 进行重启。</span><br><span class="line">ready: 全部插件已经加载完成时，将通过 endpoints 在 8081 端口返回 HTTP 状态 200。</span><br><span class="line">kubernetes：CoreDNS 将根据 Kubernetes 服务和 pod 的 IP 回复 DNS 查询。</span><br><span class="line">prometheus：是否开启 CoreDNS Metrics 信息接口，如果配置则开启，接口地址为 http://localhost:9153/metrics</span><br><span class="line">forward：任何不在Kubernetes 集群内的域名查询将被转发到预定义的解析器 (/etc/resolv.conf)。</span><br><span class="line">cache：启用缓存，30 秒 TTL。</span><br><span class="line">loop：检测简单的转发循环，如果找到循环则停止 CoreDNS 进程。</span><br><span class="line">reload：监听 CoreDNS 配置，如果配置发生变化则重新加载配置。</span><br><span class="line">loadbalance：DNS 负载均衡器，默认 round_robin。</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑 coredns 配置</span></span><br><span class="line">kubectl edit configmap coredns -n kube-system</span><br><span class="line">apiVersion: v1</span><br><span class="line">data:</span><br><span class="line">  Corefile: |</span><br><span class="line">    .:53 &#123;</span><br><span class="line">        <span class="built_in">log</span>     <span class="comment"># new add</span></span><br><span class="line">        errors</span><br><span class="line">        health &#123;</span><br><span class="line">          lameduck 5s</span><br><span class="line">        &#125;</span><br><span class="line">        ready</span><br><span class="line">        kubernetes cluster.local in-addr.arpa ip6.arpa &#123;</span><br><span class="line">          fallthrough in-addr.arpa ip6.arpa</span><br><span class="line">        &#125;</span><br><span class="line">        prometheus :9153</span><br><span class="line">        forward . /etc/resolv.conf &#123;</span><br><span class="line">          max_concurrent 1000</span><br><span class="line">        &#125;</span><br><span class="line">        cache 30</span><br><span class="line">        loop</span><br><span class="line">        reload</span><br><span class="line">        loadbalance</span><br><span class="line">    &#125;</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  annotations:</span><br><span class="line">    kubectl.kubernetes.io/last-applied-configuration: |</span><br><span class="line">      &#123;<span class="string">&quot;apiVersion&quot;</span>:<span class="string">&quot;v1&quot;</span>,<span class="string">&quot;data&quot;</span>:&#123;<span class="string">&quot;Corefile&quot;</span>:<span class="string">&quot;.:53 &#123;\n    errors\n    health &#123;\n      lameduck 5s\n    &#125;\n    ready\n    kubernetes cluster.local in-addr.arpa ip6.arpa &#123;\n      fallthrough in-addr.arpa ip6.arpa\n    &#125;\n    prometheus :9153\n    forward . /etc/resolv.conf &#123;\n      max_concurrent 1000\n    &#125;\n    cache 30\n    loop\n    reload\n    loadbalance\n&#125;\n&quot;</span>&#125;,<span class="string">&quot;kind&quot;</span>:<span class="string">&quot;ConfigMap&quot;</span>,<span class="string">&quot;metadata&quot;</span>:&#123;<span class="string">&quot;annotations&quot;</span>:&#123;&#125;,<span class="string">&quot;name&quot;</span>:<span class="string">&quot;coredns&quot;</span>,<span class="string">&quot;namespace&quot;</span>:<span class="string">&quot;kube-system&quot;</span>&#125;&#125;</span><br><span class="line">  creationTimestamp: <span class="string">&quot;2021-05-13T11:57:45Z&quot;</span></span><br><span class="line">  name: coredns</span><br><span class="line">  namespace: kube-system</span><br><span class="line">  resourceVersion: <span class="string">&quot;38460&quot;</span></span><br><span class="line">  selfLink: /api/v1/namespaces/kube-system/configmaps/coredns</span><br><span class="line">  uid: c62a856d-1fc3-4fe9-b5f1-3ca0dbeb39c1</span><br></pre></td></tr></table></figure><p>回滚操作：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/coredns/deployment/master/kubernetes/rollback.sh</span><br><span class="line">chmod +x rollback.sh</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> CLUSTER_DNS_SVC_IP=<span class="string">&quot;10.96.0.2&quot;</span></span><br><span class="line"><span class="built_in">export</span> CLUSTER_DNS_DOMAIN=<span class="string">&quot;cluster.local&quot;</span></span><br><span class="line"></span><br><span class="line">./rollback.sh -i <span class="variable">$&#123;CLUSTER_DNS_SVC_IP&#125;</span> -d <span class="variable">$&#123;CLUSTER_DNS_DOMAIN&#125;</span> | kubectl apply -f -</span><br><span class="line"></span><br><span class="line">kubectl delete --namespace=kube-system deployment coredns</span><br></pre></td></tr></table></figure><h2 id="8-2-Dashboard"><a href="#8-2-Dashboard" class="headerlink" title="8.2 Dashboard"></a>8.2 Dashboard</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p <span class="variable">$HOME</span>/k8s-install/dashboard &amp;&amp; <span class="built_in">cd</span> <span class="variable">$HOME</span>/k8s-install/dashboard</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. 下载并安装</span></span><br><span class="line">curl https://raw.githubusercontent.com/kubernetes/dashboard/v2.2.0/aio/deploy/recommended.yaml -o dashboard.yaml</span><br><span class="line"></span><br><span class="line">kubectl apply -f dashboard.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 检查运行状态</span></span><br><span class="line">kubectl get pods -n kubernetes-dashboard -o wide</span><br><span class="line">NAME                                             READY   STATUS    RESTARTS   AGE    IP           NODE          NOMINATED NODE   READINESS GATES</span><br><span class="line">dashboard-metrics-scraper-79c5968bdc-xkm78   1/1     Running   0          23m   10.244.159.129   k8s-master1   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kubernetes-dashboard-9f9799597-d8g8t         1/1     Running   0          23m   10.244.58.193    k8s-node02    &lt;none&gt;           &lt;none&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 检查服务状态</span></span><br><span class="line">kubectl get svc -n kubernetes-dashboard -o wide</span><br><span class="line">NAME                                TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)    AGE    SELECTOR</span><br><span class="line">dashboard-metrics-scraper   ClusterIP   10.96.14.1      &lt;none&gt;        8000/TCP   24m   k8s-app=dashboard-metrics-scraper</span><br><span class="line">kubernetes-dashboard        ClusterIP   10.96.219.125   &lt;none&gt;        443/TCP    24m   k8s-app=kubernetes-dashboard</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 4. 服务改为NodePort方式</span></span><br><span class="line">kubectl edit svc kubernetes-dashboard  -n  kubernetes-dashboard</span><br><span class="line"><span class="built_in">type</span>: ClusterIP =&gt; <span class="built_in">type</span>: NodePort</span><br><span class="line"> </span><br><span class="line">kubectl get svc -n kubernetes-dashboard -o wide</span><br><span class="line">NAME                        TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)         AGE     SELECTOR</span><br><span class="line">dashboard-metrics-scraper   ClusterIP   10.96.14.1      &lt;none&gt;        8000/TCP        3h30m   k8s-app=dashboard-metrics-scraper</span><br><span class="line">kubernetes-dashboard        NodePort    10.96.219.125   &lt;none&gt;        443:31639/TCP   3h30m   k8s-app=kubernetes-dashboard</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5. 创建service account并绑定默认cluster-admin管理员集群角色：</span></span><br><span class="line">kubectl create serviceaccount dashboard-admin -n kube-system</span><br><span class="line">kubectl create clusterrolebinding dashboard-admin --clusterrole=cluster-admin --serviceaccount=kube-system:dashboard-admin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6. 获取访问 token</span></span><br><span class="line">kubectl describe secrets -n kube-system $(kubectl -n kube-system get secret | awk <span class="string">&#x27;/dashboard-admin/&#123;print $1&#125;&#x27;</span>)</span><br><span class="line">Name:         dashboard-admin-token-xwd72</span><br><span class="line">Namespace:    kube-system</span><br><span class="line">Labels:       &lt;none&gt;</span><br><span class="line">Annotations:  kubernetes.io/service-account.name: dashboard-admin</span><br><span class="line">              kubernetes.io/service-account.uid: 013e9f84-827f-4dc7-81b3-874a28bfebc6</span><br><span class="line"></span><br><span class="line">Type:  kubernetes.io/service-account-token</span><br><span class="line"></span><br><span class="line">Data</span><br><span class="line">====</span><br><span class="line">ca.crt:     1310 bytes</span><br><span class="line">namespace:  11 bytes</span><br><span class="line">token:      eyJhbGciOiJSUzI1NiIsImtpZCI6InNQRElCQTlPRUZ5SU54STQ1QWllLXlKMTFCcmZieG0wVTJnRlpzYlBNLXcifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJkYXNoYm9hcmQtYWRtaW4tdG9rZW4teHdkNzIiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiZGFzaGJvYXJkLWFkbWluIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiMDEzZTlmODQtODI3Zi00ZGM3LTgxYjMtODc0YTI4YmZlYmM2Iiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50Omt1YmUtc3lzdGVtOmRhc2hib2FyZC1hZG1pbiJ9.O-DI-0IlLFP2pDRKzQYJrZeDAnVvW1IjU-iVwGzvwID7BH0v6kXfWnti07qm8VkuGFJtpuQsmrf6v4sUeRDhr95kZlEVV8Rxnes6oixrkXdk3fR4xreh4lh6ZgCzbER6xI8pMG-j9KNjTRdY6gQPJuOThtI9ab13dpTT5AYpggA2O98DFfgcJ_DzD05hhk6TghOdoro00msHRSUrsEiH0CYa_3PiyPlkvmmY3MlJPsBTdO2pCDzcrjQ2L5EaJAvSh6OodkRY6ymOwfcbfPs3WwSocCEfwkogYOCAQhMC4NU3Jea_hoeFqzLdS1PK5R2rPT-wqemwjDKn0E6jUv6juw</span><br><span class="line"></span><br><span class="line"><span class="comment"># 7. 访问</span></span><br><span class="line">https://192.168.80.45:31639</span><br></pre></td></tr></table></figure><h1 id="9-高可用"><a href="#9-高可用" class="headerlink" title="9. 高可用"></a>9. 高可用</h1><table><thead><tr><th>角色</th><th>IP</th><th>组件</th><th>备注</th></tr></thead><tbody><tr><td>k8s-master1</td><td>192.168.80.45</td><td>etcd, api-server, controller-manager, scheduler, kubelet, kube-proxy, docker</td><td></td></tr><tr><td>k8s-node01</td><td>192.168.80.46</td><td>etcd, kubelet, kube-proxy, docker</td><td></td></tr><tr><td>k8s-node02</td><td>192.168.80.47</td><td>etcd, kubelet, kube-proxy, docker</td><td></td></tr><tr><td>k8s-master2</td><td>192.168.80.49</td><td>etcd, api-server, controller-manager, scheduler, kubelet, kube-proxy, docker</td><td>新增节点</td></tr></tbody></table><h2 id="9-1-准备操作-Master-1"><a href="#9-1-准备操作-Master-1" class="headerlink" title="9.1 准备操作 (Master-1)"></a>9.1 准备操作 (Master-1)</h2><h3 id="9-1-1-kube-apiserver-证书更新"><a href="#9-1-1-kube-apiserver-证书更新" class="headerlink" title="9.1.1 kube-apiserver 证书更新"></a>9.1.1 kube-apiserver 证书更新</h3><p>在新增节点的IP段未在证书中时需要如下操作：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /root/ssl &amp;&amp; <span class="built_in">cd</span> /root/ssl</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. 证书签名请求文件</span></span><br><span class="line">cat &gt; apiserver-csr.json &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    &quot;CN&quot;: &quot;kubernetes&quot;,</span></span><br><span class="line"><span class="string">    &quot;hosts&quot;: [</span></span><br><span class="line"><span class="string">      &quot;127.0.0.1&quot;,</span></span><br><span class="line"><span class="string">      &quot;localhost&quot;,</span></span><br><span class="line"><span class="string">      &quot;192.168.80.1&quot;,</span></span><br><span class="line"><span class="string">      &quot;192.168.80.2&quot;,</span></span><br><span class="line"><span class="string">      &quot;192.168.80.3&quot;,</span></span><br><span class="line"><span class="string">      &quot;192.168.80.45&quot;,</span></span><br><span class="line"><span class="string">      &quot;192.168.80.46&quot;,</span></span><br><span class="line"><span class="string">      &quot;192.168.80.47&quot;,</span></span><br><span class="line"><span class="string">      &quot;192.168.80.48&quot;,</span></span><br><span class="line"><span class="string">      &quot;192.168.80.49&quot;,</span></span><br><span class="line"><span class="string">      &quot;10.96.0.1&quot;,</span></span><br><span class="line"><span class="string">      &quot;kubernetes&quot;,</span></span><br><span class="line"><span class="string">      &quot;kubernetes.default&quot;,</span></span><br><span class="line"><span class="string">      &quot;kubernetes.default.svc&quot;,</span></span><br><span class="line"><span class="string">      &quot;kubernetes.default.svc.cluster&quot;,</span></span><br><span class="line"><span class="string">      &quot;kubernetes.default.svc.cluster.local&quot;</span></span><br><span class="line"><span class="string">    ],</span></span><br><span class="line"><span class="string">    &quot;key&quot;: &#123;</span></span><br><span class="line"><span class="string">        &quot;algo&quot;: &quot;rsa&quot;,</span></span><br><span class="line"><span class="string">        &quot;size&quot;: 2048</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    &quot;names&quot;: [</span></span><br><span class="line"><span class="string">        &#123;</span></span><br><span class="line"><span class="string">            &quot;C&quot;: &quot;CN&quot;,</span></span><br><span class="line"><span class="string">            &quot;ST&quot;: &quot;BeiJing&quot;,</span></span><br><span class="line"><span class="string">            &quot;L&quot;: &quot;BeiJing&quot;,</span></span><br><span class="line"><span class="string">            &quot;O&quot;: &quot;k8s&quot;,</span></span><br><span class="line"><span class="string">            &quot;OU&quot;: &quot;System&quot;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    ]</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 生成证书</span></span><br><span class="line">cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes apiserver-csr.json | cfssljson -bare apiserver</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 证书更新</span></span><br><span class="line">cp apiserver*.pem /etc/kubernetes/pki</span><br><span class="line">scp apiserver*.pem ubuntu@192.168.80.46:/home/ubuntu</span><br><span class="line">scp apiserver*.pem ubuntu@192.168.80.47:/home/ubuntu</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4. node节点证书更新</span></span><br><span class="line">chown root:root /home/ubuntu/apiserver*.pem </span><br><span class="line">mv /home/ubuntu/apiserver*.pem /etc/kubernetes/pki</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5. 重启 apiserver</span></span><br><span class="line">systemctl restart kube-apiserver</span><br><span class="line">systemctl status kube-apiserver</span><br></pre></td></tr></table></figure><h3 id="9-1-2-增加主机"><a href="#9-1-2-增加主机" class="headerlink" title="9.1.2 增加主机"></a>9.1.2 增加主机</h3><p>在 k8s-master1, k8s-node01, k8s-node02 上制作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;192.168.80.49  k8s-master2&#x27;</span> &gt;&gt; /etc/hosts</span><br></pre></td></tr></table></figure><h2 id="9-2-扩容-Master"><a href="#9-2-扩容-Master" class="headerlink" title="9.2 扩容 Master"></a>9.2 扩容 Master</h2><h3 id="9-2-1-初始化"><a href="#9-2-1-初始化" class="headerlink" title="9.2.1 初始化"></a>9.2.1 初始化</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 修改主机名</span></span><br><span class="line">hostnamectl set-hostname k8s-master2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 主机名解析</span></span><br><span class="line">cat &gt;&gt; /etc/hosts &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">192.168.80.45  k8s-master1</span></span><br><span class="line"><span class="string">192.168.80.46  k8s-node01</span></span><br><span class="line"><span class="string">192.168.80.47  k8s-node02</span></span><br><span class="line"><span class="string">192.168.80.49  k8s-master2</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 禁用 swap</span></span><br><span class="line">swapoff -a &amp;&amp; sed -i <span class="string">&#x27;/ swap / s/^\(.*\)$/#\1/g&#x27;</span> /etc/fstab</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4. 将桥接的IPv4流量传递到iptables的链 </span></span><br><span class="line">cat &gt; /etc/sysctl.d/k8s.conf &lt;&lt; <span class="string">EOF </span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-ip6tables = 1 </span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-iptables = 1 </span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">sysctl --system </span><br><span class="line"></span><br><span class="line"><span class="comment"># 5. 域名解析</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;nameserver 8.8.8.8&quot;</span> &gt;&gt; /etc/resolv.conf</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 6. 时间同步 </span></span><br><span class="line">apt install ntpdate -y </span><br><span class="line">ntpdate ntp1.aliyun.com</span><br><span class="line"></span><br><span class="line">crontab -e</span><br><span class="line">*/30 * * * * /usr/sbin/ntpdate-u ntp1.aliyun.com &gt;&gt; /var/<span class="built_in">log</span>/ntpdate.log 2&gt;&amp;1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 7. 日志目录</span></span><br><span class="line">mkdir -p /var/<span class="built_in">log</span>/kubernetes</span><br></pre></td></tr></table></figure><h3 id="9-2-2-克隆"><a href="#9-2-2-克隆" class="headerlink" title="9.2.2 克隆"></a>9.2.2 克隆</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. k8s-master1 上执行</span></span><br><span class="line">mkdir -p <span class="variable">$HOME</span>/k8s-install &amp;&amp; <span class="built_in">cd</span> <span class="variable">$HOME</span>/k8s-install</span><br><span class="line">tar zcvf master-node-clone.tar.gz /usr/bin/kube* /lib/systemd/system/kube*.service /etc/kubernetes /root/.kube/config /usr/bin/docker* /usr/bin/runc /usr/bin/containerd* /usr/bin/ctr /etc/docker /lib/systemd/system/docker.service</span><br><span class="line"></span><br><span class="line">scp master-node-clone.tar.gz ubuntu@192.168.80.49:/home/ubuntu</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. k8s-master2 执行</span></span><br><span class="line"><span class="built_in">cd</span> / &amp;&amp; mv /home/ubuntu/master-node-clone.tar.gz / &amp;&amp; tar zxvf master-node-clone.tar.gz &amp;&amp; rm -f master-node-clone.tar.gz</span><br><span class="line"></span><br><span class="line">rm -f /etc/kubernetes/kubelet.kubeconfig </span><br><span class="line">rm -f /etc/kubernetes/pki/kubelet*</span><br></pre></td></tr></table></figure><h3 id="9-2-3-更新配置"><a href="#9-2-3-更新配置" class="headerlink" title="9.2.3 更新配置"></a>9.2.3 更新配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/kubernetes/kube-apiserver.conf </span><br><span class="line">--bind-address=192.168.80.49 \</span><br><span class="line">--advertise-address=192.168.80.49 \</span><br><span class="line"></span><br><span class="line">sed -i <span class="string">&#x27;s#k8s-master1#k8s-master2#&#x27;</span> /etc/kubernetes/*</span><br><span class="line"></span><br><span class="line">sed -i <span class="string">&#x27;s#192.168.80.45:6443#192.168.80.49:6443#&#x27;</span> /etc/kubernetes/*</span><br><span class="line"></span><br><span class="line">vi /root/.kube/config</span><br><span class="line">server: https://192.168.80.49:6443</span><br></pre></td></tr></table></figure><h3 id="9-2-4-开机启动"><a href="#9-2-4-开机启动" class="headerlink" title="9.2.4 开机启动"></a>9.2.4 开机启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start docker kube-apiserver kube-controller-manager kube-scheduler kubelet kube-proxy</span><br><span class="line">systemctl status docker kube-apiserver kube-controller-manager kube-scheduler kubelet kube-proxy</span><br><span class="line">systemctl <span class="built_in">enable</span> docker kube-apiserver kube-controller-manager kube-scheduler kubelet kube-proxy</span><br></pre></td></tr></table></figure><h3 id="9-2-5-集群状态"><a href="#9-2-5-集群状态" class="headerlink" title="9.2.5 集群状态"></a>9.2.5 集群状态</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">kubectl get cs</span><br><span class="line">Warning: v1 ComponentStatus is deprecated <span class="keyword">in</span> v1.19+</span><br><span class="line">NAME                 STATUS    MESSAGE             ERROR</span><br><span class="line">controller-manager   Healthy   ok</span><br><span class="line">scheduler            Healthy   ok</span><br><span class="line">etcd-2               Healthy   &#123;<span class="string">&quot;health&quot;</span>:<span class="string">&quot;true&quot;</span>&#125;</span><br><span class="line">etcd-1               Healthy   &#123;<span class="string">&quot;health&quot;</span>:<span class="string">&quot;true&quot;</span>&#125;</span><br><span class="line">etcd-0               Healthy   &#123;<span class="string">&quot;health&quot;</span>:<span class="string">&quot;true&quot;</span>&#125;</span><br></pre></td></tr></table></figure><h3 id="9-2-6-加入集群"><a href="#9-2-6-加入集群" class="headerlink" title="9.2.6 加入集群"></a>9.2.6 加入集群</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">kubectl get csr</span><br><span class="line">NAME                                                   AGE     SIGNERNAME                                    REQUESTOR           CONDITION</span><br><span class="line">node-csr-HfzAqSEc7sIIG9QFHip4vGFnFZhyZnYjBVGWQyGpz54   7m49s   kubernetes.io/kube-apiserver-client-kubelet   kubelet-bootstrap   Pending</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 批准加入</span></span><br><span class="line">kubectl certificate approve node-csr-HfzAqSEc7sIIG9QFHip4vGFnFZhyZnYjBVGWQyGpz54</span><br><span class="line"></span><br><span class="line">kubectl get node</span><br><span class="line">NAME          STATUS   ROLES    AGE     VERSION</span><br><span class="line">NAME          STATUS     ROLES    AGE   VERSION</span><br><span class="line">k8s-master1   Ready      master   27h   v1.21.4</span><br><span class="line">k8s-master2   NotReady   &lt;none&gt;   11s   v1.21.4</span><br><span class="line">k8s-node01    Ready      node     27h   v1.21.4</span><br><span class="line">k8s-node02    Ready      node     27h   v1.21.4</span><br></pre></td></tr></table></figure><h3 id="9-2-7-打标和污点"><a href="#9-2-7-打标和污点" class="headerlink" title="9.2.7 打标和污点"></a>9.2.7 打标和污点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置标签</span></span><br><span class="line">kubectl label node k8s-master2 node-role.kubernetes.io/master=</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置污点：是master节点无法创建pod</span></span><br><span class="line">kubectl taint nodes k8s-master2 node-role.kubernetes.io/master=:NoSchedule</span><br><span class="line"></span><br><span class="line"><span class="comment"># 节点信息</span></span><br><span class="line">kubectl get nodes --show-labels</span><br><span class="line">NAME          STATUS   ROLES    AGE     VERSION    LABELS</span><br><span class="line">k8s-master1   Ready    master   27h     v1.21.4   beta.kubernetes.io/arch=amd64,beta.kubernetes.io/os=linux,kubernetes.io/arch=amd64,kubernetes.io/hostname=k8s-master1,kubernetes.io/os=linux,node-role.kubernetes.io/master=</span><br><span class="line">k8s-master2   Ready    master   2m13s   v1.21.4   beta.kubernetes.io/arch=amd64,beta.kubernetes.io/os=linux,kubernetes.io/arch=amd64,kubernetes.io/hostname=k8s-master2,kubernetes.io/os=linux,node-role.kubernetes.io/master=</span><br><span class="line">k8s-node01    Ready    node     27h     v1.21.4   beta.kubernetes.io/arch=amd64,beta.kubernetes.io/os=linux,kubernetes.io/arch=amd64,kubernetes.io/hostname=k8s-node01,kubernetes.io/os=linux,node-role.kubernetes.io/node=</span><br><span class="line">k8s-node02    Ready    node     27h     v1.21.4   beta.kubernetes.io/arch=amd64,beta.kubernetes.io/os=linux,kubernetes.io/arch=amd64,kubernetes.io/hostname=k8s-node02,kubernetes.io/os=linux,node-role.kubernetes.io/node=</span><br></pre></td></tr></table></figure><h2 id="9-3-高可用负载均衡"><a href="#9-3-高可用负载均衡" class="headerlink" title="9.3 高可用负载均衡"></a>9.3 高可用负载均衡</h2><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/kubernetes/k8s-apiserver-keepalived.png" alt="img"> </p><p><code>Nginx</code>: 主流Web服务和反向代理服务器，这里用四层实现对apiserver实现负载均衡。</p><p><code>Keepalived</code>: 主流高可用软件，基于VIP绑定实现服务器双机热备。Keepalived主要根据Nginx运行状态判断是否需要故障转移（漂移VIP），例如当Nginx主节点挂掉，VIP会自动绑定在Nginx备节点，从而保证VIP一直可用，实现Nginx高可用。</p><p>服务器规划：</p><table><thead><tr><th><strong>角色</strong></th><th><strong>IP</strong></th><th>组件</th></tr></thead><tbody><tr><td>k8s-master1</td><td>192.168.80.45</td><td>kube-apiserver</td></tr><tr><td>k8s-master2</td><td>192.168.80.49</td><td>kube-apiserver</td></tr><tr><td>k8s-loadbalancer1</td><td>192.168.80.2</td><td>nginx, keepalived</td></tr><tr><td>k8s-loadbalancer2</td><td>192.168.80.3</td><td>nginx, keepalived</td></tr><tr><td>VIP</td><td>192.168.80.1</td><td>虚拟IP</td></tr></tbody></table><h3 id="9-3-1-安装软件"><a href="#9-3-1-安装软件" class="headerlink" title="9.3.1 安装软件"></a>9.3.1 安装软件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install nginx keepalived -y</span><br></pre></td></tr></table></figure><h3 id="9-3-2-配置Nginx"><a href="#9-3-2-配置Nginx" class="headerlink" title="9.3.2 配置Nginx"></a>9.3.2 配置Nginx</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/nginx/nginx.conf &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line">user nginx;</span><br><span class="line">worker_processes auto;</span><br><span class="line">error_log /var/<span class="built_in">log</span>/nginx/error.log;</span><br><span class="line">pid /run/nginx.pid;</span><br><span class="line"></span><br><span class="line">include /usr/share/nginx/modules/*.conf;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections 1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">stream &#123;</span><br><span class="line"></span><br><span class="line">    log_format  main  <span class="string">&#x27;$remote_addr $upstream_addr - [$time_local] $status $upstream_bytes_sent&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/k8s-access.log  main;</span><br><span class="line"></span><br><span class="line">    upstream k8s-apiserver &#123;</span><br><span class="line">       server 192.168.80.45:6443;   <span class="comment"># Master1 APISERVER IP:PORT</span></span><br><span class="line">       server 192.168.80.49:6443;   <span class="comment"># Master2 APISERVER IP:PORT</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    server &#123;</span><br><span class="line">       listen 16443; </span><br><span class="line">       proxy_pass k8s-apiserver;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    log_format  main  <span class="string">&#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span></span><br><span class="line">                      <span class="string">&#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span></span><br><span class="line">                      <span class="string">&#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile            on;</span><br><span class="line">    tcp_nopush          on;</span><br><span class="line">    tcp_nodelay         on;</span><br><span class="line">    keepalive_timeout   65;</span><br><span class="line">    types_hash_max_size 2048;</span><br><span class="line"></span><br><span class="line">    include             /etc/nginx/mime.types;</span><br><span class="line">    default_type        application/octet-stream;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80 default_server;</span><br><span class="line">        server_name  _;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="9-3-3-keepalived-配置-master"><a href="#9-3-3-keepalived-配置-master" class="headerlink" title="9.3.3 keepalived 配置 (master)"></a>9.3.3 keepalived 配置 (master)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/keepalived/keepalived.conf &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">global_defs &#123; </span></span><br><span class="line"><span class="string">   notification_email &#123; </span></span><br><span class="line"><span class="string">     acassen@firewall.loc </span></span><br><span class="line"><span class="string">     failover@firewall.loc </span></span><br><span class="line"><span class="string">     sysadmin@firewall.loc </span></span><br><span class="line"><span class="string">   &#125; </span></span><br><span class="line"><span class="string">   notification_email_from Alexandre.Cassen@firewall.loc  </span></span><br><span class="line"><span class="string">   smtp_server 127.0.0.1 </span></span><br><span class="line"><span class="string">   smtp_connect_timeout 30 </span></span><br><span class="line"><span class="string">   router_id NGINX_MASTER</span></span><br><span class="line"><span class="string">&#125; </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 检查脚本</span></span><br><span class="line"><span class="string">vrrp_script check_nginx &#123;</span></span><br><span class="line"><span class="string">    script &quot;/etc/keepalived/check_nginx.sh&quot;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">vrrp_instance VI_1 &#123; </span></span><br><span class="line"><span class="string">    state MASTER </span></span><br><span class="line"><span class="string">    interface ens33 # 修改为实际网卡名</span></span><br><span class="line"><span class="string">    virtual_router_id 51 # VRRP 路由 ID实例，每个实例是唯一的 </span></span><br><span class="line"><span class="string">    priority 100    # 优先级，备服务器设置 90 </span></span><br><span class="line"><span class="string">    advert_int 1    # 指定VRRP 心跳包通告间隔时间，默认1秒 </span></span><br><span class="line"><span class="string">    authentication &#123; </span></span><br><span class="line"><span class="string">        auth_type PASS      </span></span><br><span class="line"><span class="string">        auth_pass 1111 </span></span><br><span class="line"><span class="string">    &#125;  </span></span><br><span class="line"><span class="string">    # 虚拟IP</span></span><br><span class="line"><span class="string">    virtual_ipaddress &#123; </span></span><br><span class="line"><span class="string">        192.168.80.1/24</span></span><br><span class="line"><span class="string">    &#125; </span></span><br><span class="line"><span class="string">    track_script &#123;</span></span><br><span class="line"><span class="string">        check_nginx</span></span><br><span class="line"><span class="string">    &#125; </span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><h3 id="9-3-4-keepalived-配置-slave"><a href="#9-3-4-keepalived-配置-slave" class="headerlink" title="9.3.4 keepalived 配置 (slave)"></a>9.3.4 keepalived 配置 (slave)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/keepalived/keepalived.conf &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">global_defs &#123; </span></span><br><span class="line"><span class="string">   notification_email &#123; </span></span><br><span class="line"><span class="string">     acassen@firewall.loc </span></span><br><span class="line"><span class="string">     failover@firewall.loc </span></span><br><span class="line"><span class="string">     sysadmin@firewall.loc </span></span><br><span class="line"><span class="string">   &#125; </span></span><br><span class="line"><span class="string">   notification_email_from Alexandre.Cassen@firewall.loc  </span></span><br><span class="line"><span class="string">   smtp_server 127.0.0.1 </span></span><br><span class="line"><span class="string">   smtp_connect_timeout 30 </span></span><br><span class="line"><span class="string">   router_id NGINX_BACKUP</span></span><br><span class="line"><span class="string">&#125; </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 检查脚本</span></span><br><span class="line"><span class="string">vrrp_script check_nginx &#123;</span></span><br><span class="line"><span class="string">    script &quot;/etc/keepalived/check_nginx.sh&quot;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">vrrp_instance VI_1 &#123; </span></span><br><span class="line"><span class="string">    state BACKUP </span></span><br><span class="line"><span class="string">    interface ens33 # 修改为实际网卡名</span></span><br><span class="line"><span class="string">    virtual_router_id 51 # VRRP 路由 ID实例，每个实例是唯一的 </span></span><br><span class="line"><span class="string">    priority 90     # 优先级，备服务器设置 90 </span></span><br><span class="line"><span class="string">    advert_int 1    # 指定VRRP 心跳包通告间隔时间，默认1秒 </span></span><br><span class="line"><span class="string">    authentication &#123; </span></span><br><span class="line"><span class="string">        auth_type PASS      </span></span><br><span class="line"><span class="string">        auth_pass 1111 </span></span><br><span class="line"><span class="string">    &#125;  </span></span><br><span class="line"><span class="string">    # 虚拟IP</span></span><br><span class="line"><span class="string">    virtual_ipaddress &#123; </span></span><br><span class="line"><span class="string">        192.168.80.1/24</span></span><br><span class="line"><span class="string">    &#125; </span></span><br><span class="line"><span class="string">    track_script &#123;</span></span><br><span class="line"><span class="string">        check_nginx</span></span><br><span class="line"><span class="string">    &#125; </span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><h3 id="9-3-5-keepalived-检查脚本"><a href="#9-3-5-keepalived-检查脚本" class="headerlink" title="9.3.5 keepalived 检查脚本"></a>9.3.5 keepalived 检查脚本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/keepalived/check_nginx.sh  &lt;&lt; <span class="string">&quot;EOF&quot;</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">count=$(ss -antp |grep 16443 |egrep -cv <span class="string">&quot;grep|$$&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$count</span>&quot;</span> -eq 0 ];<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">exit</span> 0</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">chmod +x /etc/keepalived/check_nginx.sh</span><br></pre></td></tr></table></figure><h3 id="9-3-6-启动服务"><a href="#9-3-6-启动服务" class="headerlink" title="9.3.6 启动服务"></a>9.3.6 启动服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start nginx keepalived</span><br><span class="line">systemctl <span class="built_in">enable</span> nginx keepalived</span><br></pre></td></tr></table></figure><h3 id="9-3-7-状态检查"><a href="#9-3-7-状态检查" class="headerlink" title="9.3.7 状态检查"></a>9.3.7 状态检查</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">ip addr</span><br><span class="line"></span><br><span class="line">curl -k https://192.168.80.1:16443/version</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;major&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">  <span class="string">&quot;minor&quot;</span>: <span class="string">&quot;19&quot;</span>,</span><br><span class="line">  <span class="string">&quot;gitVersion&quot;</span>: <span class="string">&quot;v1.21.4&quot;</span>,</span><br><span class="line">  <span class="string">&quot;gitCommit&quot;</span>: <span class="string">&quot;c6a2f08fc4378c5381dd948d9ad9d1080e3e6b33&quot;</span>,</span><br><span class="line">  <span class="string">&quot;gitTreeState&quot;</span>: <span class="string">&quot;clean&quot;</span>,</span><br><span class="line">  <span class="string">&quot;buildDate&quot;</span>: <span class="string">&quot;2021-05-12T12:19:22Z&quot;</span>,</span><br><span class="line">  <span class="string">&quot;goVersion&quot;</span>: <span class="string">&quot;go1.15.12&quot;</span>,</span><br><span class="line">  <span class="string">&quot;compiler&quot;</span>: <span class="string">&quot;gc&quot;</span>,</span><br><span class="line">  <span class="string">&quot;platform&quot;</span>: <span class="string">&quot;linux/amd64&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="9-3-8-Worker-Node-连接到-LB-VIP"><a href="#9-3-8-Worker-Node-连接到-LB-VIP" class="headerlink" title="9.3.8 Worker Node 连接到 LB VIP"></a>9.3.8 Worker Node 连接到 LB VIP</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;s#192.168.80.45:6443#192.168.80.1:16443#&#x27;</span> /etc/kubernetes/*</span><br><span class="line">systemctl restart kubelet kube-proxy</span><br><span class="line"></span><br><span class="line">kubectl get node</span><br><span class="line">NAME          STATUS   ROLES    AGE     VERSION</span><br><span class="line">k8s-master1   Ready    master   3d17h   v1.21.4</span><br><span class="line">k8s-master2   Ready    master   2d16h   v1.21.4</span><br><span class="line">k8s-node01    Ready    node     3d15h   v1.21.4</span><br><span class="line">k8s-node02    Ready    node     3d15h   v1.21.4</span><br></pre></td></tr></table></figure><h1 id="10-删除节点"><a href="#10-删除节点" class="headerlink" title="10. 删除节点"></a>10. 删除节点</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. k8s-master2 上，停止kubelet进程</span></span><br><span class="line">systemctl stop kubelet</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 检查 k8s-master2 是否已下线</span></span><br><span class="line">kubectl get nodes</span><br><span class="line">NAME          STATUS     ROLES    AGE   VERSION</span><br><span class="line">k8s-master1   Ready      master   40h   v1.21.4</span><br><span class="line">k8s-master2   NotReady   master   12h   v1.21.4</span><br><span class="line">k8s-node01    Ready      node     40h   v1.21.4</span><br><span class="line">k8s-node02    Ready      node     40h   v1.21.4</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 删除节点</span></span><br><span class="line">kubectl drain k8s-master2</span><br><span class="line">node/k8s-master2 cordoned</span><br><span class="line">error: unable to drain node <span class="string">&quot;k8s-master2&quot;</span>, aborting <span class="built_in">command</span>...</span><br><span class="line"></span><br><span class="line">There are pending nodes to be drained:</span><br><span class="line"> k8s-master2</span><br><span class="line">error: cannot delete DaemonSet-managed Pods (use --ignore-daemonsets to ignore): kube-system/calico-node-lwj2r</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4. 强制下线</span></span><br><span class="line">kubectl drain k8s-master2 --ignore-daemonsets</span><br><span class="line">node/k8s-master2 already cordoned</span><br><span class="line">WARNING: ignoring DaemonSet-managed Pods: kube-system/calico-node-lwj2r</span><br><span class="line">node/k8s-master2 drained</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5. 下线状态</span></span><br><span class="line">kubectl get nodes</span><br><span class="line">NAME          STATUS                     ROLES    AGE   VERSION</span><br><span class="line">k8s-master1   Ready                      master   40h   v1.21.4</span><br><span class="line">k8s-master2   Ready,SchedulingDisabled   master   12h   v1.21.4</span><br><span class="line">k8s-node01    Ready                      node     39h   v1.21.4</span><br><span class="line">k8s-node02    Ready                      node     39h   v1.21.4</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6. 恢复操作 (如有必要)</span></span><br><span class="line">kubectl uncordon k8s-master2</span><br><span class="line">node/k8s-master2 uncordoned</span><br><span class="line"></span><br><span class="line">kubectl get nodes</span><br><span class="line">NAME          STATUS   ROLES    AGE   VERSION</span><br><span class="line">k8s-master1   Ready    master   40h   v1.21.4</span><br><span class="line">k8s-master2   Ready    master   12h   v1.21.4</span><br><span class="line">k8s-node01    Ready    node     39h   v1.21.4</span><br><span class="line">k8s-node02    Ready    node     39h   v1.21.4</span><br><span class="line"></span><br><span class="line"><span class="comment"># 7. 彻底删除</span></span><br><span class="line">kubectl delete node k8s-master2 </span><br><span class="line"></span><br><span class="line">kubectl get nodes</span><br><span class="line">NAME          STATUS   ROLES    AGE   VERSION</span><br><span class="line">k8s-master1   Ready    master   41h   v1.21.4</span><br><span class="line">k8s-node01    Ready    node     40h   v1.21.4</span><br><span class="line">k8s-node02    Ready    node     40h   v1.21.4</span><br></pre></td></tr></table></figure><h1 id="Z-补充"><a href="#Z-补充" class="headerlink" title="Z. 补充"></a>Z. 补充</h1><h2 id="组件日志级别"><a href="#组件日志级别" class="headerlink" title="组件日志级别"></a>组件日志级别</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">--v=0Generally useful for this to ALWAYS be visible to an operator.</span><br><span class="line">--v=1A reasonable default log level if you don’t want verbosity.</span><br><span class="line">--v=2Useful steady state information about the service and important log messages that may correlate to significant changes in the system. This is the recommended default log level for most systems.</span><br><span class="line">--v=3Extended information about changes.</span><br><span class="line">--v=4Debug level verbosity.</span><br><span class="line">--v=6Display requested resources.</span><br><span class="line">--v=7Display HTTP request headers.</span><br><span class="line">--v=8Display HTTP request contents</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> kubernetes </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes 集群kubeadmin安装</title>
      <link href="/2021/05/31/Kubernetes%20%E9%9B%86%E7%BE%A4kubeadm%E5%AE%89%E8%A3%85/"/>
      <url>/2021/05/31/Kubernetes%20%E9%9B%86%E7%BE%A4kubeadm%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="1-Kubeadm原理"><a href="#1-Kubeadm原理" class="headerlink" title="1. Kubeadm原理"></a>1. Kubeadm原理</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建一个 Master 节点</span></span><br><span class="line">$ kubeadm init</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将一个 Node 节点加入到当前集群中</span></span><br><span class="line">$ kubeadm join &lt;Master 节点的 IP 和端口 &gt;</span><br></pre></td></tr></table></figure><p>执行 kubeadm init：</p><ul><li>自动检查集群机器是否合规</li><li>自动生成集群运行所需的各类证书及各类配置，并将Master节点信息保存在名为cluster-info的ConfigMap中。</li><li>通过static Pod方式，运行API server, controller manager 、scheduler及etcd组件。</li><li>生成Token以便其他节点加入集群</li></ul><p>执行 kubeadm join时：</p><ul><li>节点通过token访问kube-apiserver，获取cluster-info中信息，主要是apiserver的授权信息（节点信任集群）。</li><li>通过授权信息，kubelet可执行TLS bootstrapping，与apiserver真正建立互信任关系（集群信任节点）。</li></ul><p><strong>kubeadm做的事就是把大部分组件都容器化，通过StaticPod方式运行，并自动化了大部分的集群配置及认证等工作，简单几步即可搭建一个可用Kubernetes的集群。</strong></p><span id="more"></span><h1 id="2-Haproxy"><a href="#2-Haproxy" class="headerlink" title="2. Haproxy"></a>2. Haproxy</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装haproxy</span></span><br><span class="line">yum install haproxy -y </span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改haproxy配置</span></span><br><span class="line">cat &lt;&lt; <span class="string">EOF &gt; /etc/haproxy/haproxy.cfg</span></span><br><span class="line"><span class="string">global</span></span><br><span class="line"><span class="string">    log         127.0.0.1 local2</span></span><br><span class="line"><span class="string">    chroot      /var/lib/haproxy</span></span><br><span class="line"><span class="string">    pidfile     /var/run/haproxy.pid</span></span><br><span class="line"><span class="string">    maxconn     4000</span></span><br><span class="line"><span class="string">    user        haproxy</span></span><br><span class="line"><span class="string">    group       haproxy</span></span><br><span class="line"><span class="string">    daemon</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">defaults</span></span><br><span class="line"><span class="string">    mode                    tcp</span></span><br><span class="line"><span class="string">    log                     global</span></span><br><span class="line"><span class="string">    retries                 3</span></span><br><span class="line"><span class="string">    timeout connect         10s</span></span><br><span class="line"><span class="string">    timeout client          1m</span></span><br><span class="line"><span class="string">    timeout server          1m</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">frontend kube-apiserver</span></span><br><span class="line"><span class="string">    bind *:6443 # 指定前端端口</span></span><br><span class="line"><span class="string">    mode tcp</span></span><br><span class="line"><span class="string">    default_backend master</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">backend master # 指定后端机器及端口，负载方式为轮询</span></span><br><span class="line"><span class="string">    balance roundrobin</span></span><br><span class="line"><span class="string">    server master-1  192.168.41.230:6443 check maxconn 2000</span></span><br><span class="line"><span class="string">    server master-2  192.168.41.231:6443 check maxconn 2000</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 开机默认启动haproxy，开启服务</span></span><br><span class="line">systemctl <span class="built_in">enable</span> haproxy</span><br><span class="line">systemctl start haproxy</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查服务端口情况：</span></span><br><span class="line"><span class="comment"># netstat -lntup | grep 6443</span></span><br><span class="line">tcp        0      0 0.0.0.0:6443            0.0.0.0:*               LISTEN      3110/haproxy</span><br></pre></td></tr></table></figure><h1 id="3-集群安装"><a href="#3-集群安装" class="headerlink" title="3. 集群安装"></a>3. 集群安装</h1><table><thead><tr><th><strong>角色</strong></th><th><strong>IP</strong></th><th><strong>组件</strong></th></tr></thead><tbody><tr><td>k8s-master</td><td>192.168.80.40</td><td>kube-apiserver，kube-controller-manager，kube-scheduler，docker, etcd</td></tr><tr><td>k8s-node1</td><td>192.168.80.41</td><td>kubelet，kube-proxy，docker，etcd</td></tr><tr><td>k8s-node2</td><td>192.168.80.42</td><td>kubelet，kube-proxy，docker，etcd</td></tr></tbody></table><p>K8S 版本：1.19.11</p><h2 id="3-1-准备工作"><a href="#3-1-准备工作" class="headerlink" title="3.1 准备工作"></a>3.1 准备工作</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 修改主机名</span></span><br><span class="line">hostnamectl set-hostname k8s-master</span><br><span class="line">hostnamectl set-hostname k8s-node01</span><br><span class="line">hostnamectl set-hostname k8s-node02</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 主机名解析</span></span><br><span class="line">cat &gt;&gt; /etc/hosts &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">192.168.80.40  k8s-master</span></span><br><span class="line"><span class="string">192.168.80.41  k8s-node01</span></span><br><span class="line"><span class="string">192.168.80.42  k8s-node02</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 禁用 swap</span></span><br><span class="line">swapoff -a &amp;&amp; sed -i <span class="string">&#x27;/ swap / s/^\(.*\)$/#\1/g&#x27;</span> /etc/fstab</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4. 将桥接的IPv4流量传递到iptables的链 </span></span><br><span class="line">cat &gt; /etc/sysctl.d/k8s.conf &lt;&lt; <span class="string">EOF </span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-ip6tables = 1 </span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-iptables = 1 </span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">sysctl --system </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 5. 时间同步 </span></span><br><span class="line">apt install ntpdate -y </span><br><span class="line">ntpdate ntp1.aliyun.com</span><br><span class="line"></span><br><span class="line">crontab -e</span><br><span class="line">*/30 * * * * /usr/sbin/ntpdate-u ntp1.aliyun.com &gt;&gt; /var/<span class="built_in">log</span>/ntpdate.log 2&gt;&amp;1</span><br></pre></td></tr></table></figure><h2 id="3-2-安装-kubeadm"><a href="#3-2-安装-kubeadm" class="headerlink" title="3.2 安装 kubeadm"></a>3.2 安装 kubeadm</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">curl https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg | apt-key add - </span><br><span class="line">cat &gt;/etc/apt/sources.list.d/kubernetes.list &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">deb https://mirrors.aliyun.com/kubernetes/apt/ kubernetes-xenial main</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">apt-get update</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询可用版本</span></span><br><span class="line">apt-cache policy kubeadm</span><br><span class="line">1.19.11-00</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 docker 19.03.15~3-0~ubuntu-xenial</span></span><br><span class="line">apt-get install kubeadm=1.19.11-00~ubuntu-xenial -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># master</span></span><br><span class="line">apt-get install -y  kubeadm </span><br><span class="line">apt-get install -y kubeadm=1.19.11-00 kubelet=1.19.11-00 kubectl=1.19.11-00</span><br><span class="line"></span><br><span class="line"><span class="comment"># node</span></span><br><span class="line">apt-get install -y kubeadm=1.19.11-00 kubelet=1.19.11-00</span><br></pre></td></tr></table></figure><h2 id="3-3-Master-节点"><a href="#3-3-Master-节点" class="headerlink" title="3.3 Master 节点"></a>3.3 Master 节点</h2><p><strong>初始化：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">kubeadm init \</span><br><span class="line">  --apiserver-advertise-address=192.168.80.40 \</span><br><span class="line">  --image-repository registry.aliyuncs.com/google_containers \</span><br><span class="line">  --kubernetes-version v1.19.11 \</span><br><span class="line">  --service-cidr=10.96.0.0/12 \</span><br><span class="line">  --pod-network-cidr=10.244.0.0/16 \</span><br><span class="line">  --ignore-preflight-errors=all</span><br></pre></td></tr></table></figure><p>输出结果，用于节点加入集群：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Your Kubernetes control-plane has initialized successfully!</span><br><span class="line"></span><br><span class="line">To start using your cluster, you need to run the following as a regular user:</span><br><span class="line"></span><br><span class="line">  mkdir -p <span class="variable">$HOME</span>/.kube</span><br><span class="line">  sudo cp -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line">  sudo chown $(id -u):$(id -g) <span class="variable">$HOME</span>/.kube/config</span><br><span class="line"></span><br><span class="line">You should now deploy a pod network to the cluster.</span><br><span class="line">Run <span class="string">&quot;kubectl apply -f [podnetwork].yaml&quot;</span> with one of the options listed at:</span><br><span class="line">  https://kubernetes.io/docs/concepts/cluster-administration/addons/</span><br><span class="line"></span><br><span class="line">Then you can join any number of worker nodes by running the following on each as root:</span><br><span class="line"></span><br><span class="line">kubeadm join 192.168.80.40:6443 --token a6jcpy.a33lzoxwxs0zx0fr \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:986154509030b5a816cd6afc796d104c0f3fe24ff1e59bf769cb89b72f904112</span><br></pre></td></tr></table></figure><p><strong>kubectl 连接 k8s 认证：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 不配置</span></span><br><span class="line">kubectl get node</span><br><span class="line">The connection to the server localhost:8080 was refused - did you specify the right host or port?</span><br><span class="line"></span><br><span class="line">mkdir -p <span class="variable">$HOME</span>/.kube</span><br><span class="line">sudo cp -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line">sudo chown $(id -u):$(id -g) <span class="variable">$HOME</span>/.kube/config</span><br></pre></td></tr></table></figure><h2 id="3-3-Node-节点"><a href="#3-3-Node-节点" class="headerlink" title="3.3 Node 节点"></a>3.3 Node 节点</h2><p><strong>加入集群:</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubeadm join 192.168.80.40:6443 --token a6jcpy.a33lzoxwxs0zx0fr \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:986154509030b5a816cd6afc796d104c0f3fe24ff1e59bf769cb89b72f904112</span><br></pre></td></tr></table></figure><h2 id="3-4-安装网络插件"><a href="#3-4-安装网络插件" class="headerlink" title="3.4 安装网络插件"></a>3.4 安装网络插件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 节点状态</span></span><br><span class="line">kubectl get node</span><br><span class="line">NAME         STATUS     ROLES    AGE    VERSION</span><br><span class="line">k8s-master   NotReady   master   7m4s   v1.19.11</span><br><span class="line">k8s-node01   NotReady   &lt;none&gt;   8s     v1.19.11</span><br><span class="line">k8s-node02   NotReady   &lt;none&gt;   4s     v1.19.11</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查日志，发现网络插件未安装</span></span><br><span class="line">journalctl -u kubelet -f</span><br><span class="line">Jun 02 14:24:29 k8s-master kubelet[75636]: W0602 14:24:29.172144   75636 cni.go:239] Unable to update cni config: no networks found <span class="keyword">in</span> /etc/cni/net.d</span><br><span class="line">Jun 02 14:24:32 k8s-master kubelet[75636]: E0602 14:24:32.958021   75636 kubelet.go:2129] Container runtime network not ready: NetworkReady=<span class="literal">false</span> reason:NetworkPluginNotReady message:docker: network plugin is not ready: cni config uninitialized</span><br></pre></td></tr></table></figure><p>安装 calico 网络插件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p <span class="variable">$HOME</span>/k8s-install &amp;&amp; <span class="built_in">cd</span> <span class="variable">$HOME</span>/k8s-install</span><br><span class="line"></span><br><span class="line">wget https://docs.projectcalico.org/manifests/calico.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># CIDR的值，与 kubeadm中“--pod-network-cidr=10.244.0.0/16” 一致</span></span><br><span class="line">vi calico.yaml</span><br><span class="line">   3680             <span class="comment"># The default IPv4 pool to create on startup if none exists. Pod IPs will be</span></span><br><span class="line">   3681             <span class="comment"># chosen from this range. Changing this value after installation will have</span></span><br><span class="line">   3682             <span class="comment"># no effect. This should fall within `--cluster-cidr`.</span></span><br><span class="line">   3683             - name: CALICO_IPV4POOL_CIDR</span><br><span class="line">   3684               value: <span class="string">&quot;10.244.0.0/16&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装网络插件</span></span><br><span class="line">kubectl apply -f calico.yaml</span><br></pre></td></tr></table></figure><p>检查 网络插件状态：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pod -n kube-system</span><br><span class="line">NAME                                       READY   STATUS    RESTARTS   AGE</span><br><span class="line">calico-kube-controllers-7f4f5bf95d-22gcz   1/1     Running   0          88s</span><br><span class="line">calico-node-cj7fv                          1/1     Running   0          89s</span><br><span class="line">calico-node-n26cx                          1/1     Running   0          89s</span><br><span class="line">calico-node-rcqrf                          1/1     Running   0          89s</span><br><span class="line">coredns-6d56c8448f-hn5h4                   1/1     Running   0          21m</span><br><span class="line">coredns-6d56c8448f-wfwlf                   1/1     Running   0          21m</span><br><span class="line">etcd-k8s-master                            1/1     Running   0          21m</span><br><span class="line">kube-apiserver-k8s-master                  1/1     Running   0          21m</span><br><span class="line">kube-controller-manager-k8s-master         1/1     Running   0          21m</span><br><span class="line">kube-proxy-5pvd8                           1/1     Running   0          14m</span><br><span class="line">kube-proxy-bqfkf                           1/1     Running   0          21m</span><br><span class="line">kube-proxy-mdc4h                           1/1     Running   0          14m</span><br><span class="line">kube-scheduler-k8s-master                  1/1     Running   0          21m</span><br><span class="line"></span><br><span class="line">kubectl get node</span><br><span class="line">NAME         STATUS   ROLES    AGE   VERSION</span><br><span class="line">k8s-master   Ready    master   22m   v1.19.11</span><br><span class="line">k8s-node01   Ready    &lt;none&gt;   15m   v1.19.11</span><br><span class="line">k8s-node02   Ready    &lt;none&gt;   15m   v1.19.11</span><br></pre></td></tr></table></figure><h2 id="3-5-节点角色"><a href="#3-5-节点角色" class="headerlink" title="3.5 节点角色"></a>3.5 节点角色</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> kubectl get node --show-labels</span><br><span class="line">NAME         STATUS   ROLES    AGE   VERSION    LABELS</span><br><span class="line">k8s-master   Ready    master   25m   v1.19.11   beta.kubernetes.io/arch=amd64,beta.kubernetes.io/os=linux,kubernetes.io/arch=amd64,kubernetes.io/hostname=k8s-master,kubernetes.io/os=linux,node-role.kubernetes.io/master=</span><br><span class="line">k8s-node01   Ready    &lt;none&gt;   18m   v1.19.11   beta.kubernetes.io/arch=amd64,beta.kubernetes.io/os=linux,kubernetes.io/arch=amd64,kubernetes.io/hostname=k8s-node01,kubernetes.io/os=linux</span><br><span class="line">k8s-node02   Ready    &lt;none&gt;   18m   v1.19.11   beta.kubernetes.io/arch=amd64,beta.kubernetes.io/os=linux,kubernetes.io/arch=amd64,kubernetes.io/hostname=k8s-node02,kubernetes.io/os=linux</span><br><span class="line"></span><br><span class="line">kubectl label node k8s-node01 node-role.kubernetes.io/node=</span><br><span class="line">kubectl label node k8s-node02 node-role.kubernetes.io/node=</span><br></pre></td></tr></table></figure><h2 id="3-6-token-过期"><a href="#3-6-token-过期" class="headerlink" title="3.6 token 过期"></a>3.6 token 过期</h2><p>kubeadm join 加入集群时，需要2个参数，–token与–discovery-token-ca-cert-hash。其中，token有限期一般是24小时，如果超过时间要新增节点，就需要重新生成token。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># token</span></span><br><span class="line">kubeadm token create</span><br><span class="line">s058gw.c5x6eeze2875sza1</span><br><span class="line"></span><br><span class="line"><span class="comment"># discovery-token-ca-cert-hash</span></span><br><span class="line">openssl x509 -pubkey -<span class="keyword">in</span> /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2&gt;/dev/null | openssl dgst -sha256 -hex | sed <span class="string">&#x27;s/^.* //&#x27;</span></span><br><span class="line">986154509030b5a816cd6afc796d104c0f3fe24ff1e59bf769cb89b72f904112</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新节点加入</span></span><br><span class="line">kubeadm join api-serverip:port --token s058gw.c5x6eeze28**** --discovery-token-ca-cert-hash 9592464b295699696ce35e5d1dd155580ee29d9bd0884b*****</span><br><span class="line"></span><br><span class="line">kubeadm join 192.168.80.40:6443 --token s058gw.c5x6eeze2875sza1 \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:986154509030b5a816cd6afc796d104c0f3fe24ff1e59bf769cb89b72f904112</span><br></pre></td></tr></table></figure><h1 id="4-问题汇总"><a href="#4-问题汇总" class="headerlink" title="4. 问题汇总"></a>4. 问题汇总</h1><h2 id="4-1-kubelet-无法正常启动"><a href="#4-1-kubelet-无法正常启动" class="headerlink" title="4.1 kubelet 无法正常启动"></a>4.1 kubelet 无法正常启动</h2><p>kubelet无法正常启动，导致执行kubeadm时出现如下错误：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[wait-control-plane] Waiting <span class="keyword">for</span> the kubelet to boot up the control plane as static Pods from directory <span class="string">&quot;/etc/kubernetes/manifests&quot;</span>. This can take up to 4m0s</span><br><span class="line">[kubelet-check] Initial timeout of 40s passed.</span><br><span class="line"></span><br><span class="line">        Unfortunately, an error has occurred:</span><br><span class="line">                timed out waiting <span class="keyword">for</span> the condition</span><br><span class="line"></span><br><span class="line">        This error is likely caused by:</span><br><span class="line">                - The kubelet is not running</span><br><span class="line">                - The kubelet is unhealthy due to a misconfiguration of the node <span class="keyword">in</span> some way (required cgroups disabled)</span><br><span class="line"></span><br><span class="line">        If you are on a systemd-powered system, you can try to troubleshoot the error with the following commands:</span><br><span class="line">                - <span class="string">&#x27;systemctl status kubelet&#x27;</span></span><br><span class="line">                - <span class="string">&#x27;journalctl -xeu kubelet&#x27;</span></span><br><span class="line"></span><br><span class="line">        Additionally, a control plane component may have crashed or exited when started by the container runtime.</span><br><span class="line">        To troubleshoot, list all containers using your preferred container runtimes CLI.</span><br><span class="line"></span><br><span class="line">        Here is one example how you may list all Kubernetes containers running <span class="keyword">in</span> docker:</span><br><span class="line">                - <span class="string">&#x27;docker ps -a | grep kube | grep -v pause&#x27;</span></span><br><span class="line">                Once you have found the failing container, you can inspect its logs with:</span><br><span class="line">                - <span class="string">&#x27;docker logs CONTAINERID&#x27;</span></span><br></pre></td></tr></table></figure><p>解决办法，修改 docker 的cgroupdriver:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/docker/daemon.json &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  &quot;exec-opts&quot;: [&quot;native.cgroupdriver=systemd&quot;],</span></span><br><span class="line"><span class="string">  &quot;log-driver&quot;: &quot;json-file&quot;,</span></span><br><span class="line"><span class="string">  &quot;log-opts&quot;: &#123;</span></span><br><span class="line"><span class="string">    &quot;max-size&quot;: &quot;100m&quot;</span></span><br><span class="line"><span class="string">  &#125;,</span></span><br><span class="line"><span class="string">  &quot;storage-driver&quot;: &quot;overlay2&quot;,</span></span><br><span class="line"><span class="string">  &quot;storage-opts&quot;: [</span></span><br><span class="line"><span class="string">    &quot;overlay2.override_kernel_check=true&quot;</span></span><br><span class="line"><span class="string">  ]</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">mkdir -p /etc/systemd/system/docker.service.d</span><br><span class="line"></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><p>重做初始化：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubeadm reset</span><br><span class="line"></span><br><span class="line">kubeadm init xxx</span><br></pre></td></tr></table></figure><h2 id="4-2-ubuntu-16-默认内核"><a href="#4-2-ubuntu-16-默认内核" class="headerlink" title="4.2 ubuntu 16 默认内核"></a>4.2 ubuntu 16 默认内核</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">uname -r</span><br><span class="line">4.4.0-142-generic</span><br><span class="line"></span><br><span class="line"><span class="comment"># 内核参数告警</span></span><br><span class="line">systemctl status docker</span><br><span class="line">● docker.service - Docker Application Container Engine</span><br><span class="line">   Loaded: loaded (/lib/systemd/system/docker.service; enabled; vendor preset: enabled)</span><br><span class="line">   Active: active (running) since Wed 2021-06-02 14:11:22 CST; 10s ago</span><br><span class="line">     Docs: https://docs.docker.com</span><br><span class="line"> Main PID: 52488 (dockerd)</span><br><span class="line">    Tasks: 10</span><br><span class="line">   Memory: 57.5M</span><br><span class="line">      CPU: 1.767s</span><br><span class="line">   CGroup: /system.slice/docker.service</span><br><span class="line">           └─52488 /usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock</span><br><span class="line"></span><br><span class="line">Jun 02 14:11:22 k8s-node01 dockerd[52488]: time=<span class="string">&quot;2021-06-02T14:11:22.031860026+08:00&quot;</span> level=warning msg=<span class="string">&quot;Your kernel does not support swap memory limit&quot;</span></span><br><span class="line">Jun 02 14:11:22 k8s-node01 dockerd[52488]: time=<span class="string">&quot;2021-06-02T14:11:22.031910601+08:00&quot;</span> level=warning msg=<span class="string">&quot;Your kernel does not support cgroup rt period&quot;</span></span><br><span class="line">Jun 02 14:11:22 k8s-node01 dockerd[52488]: time=<span class="string">&quot;2021-06-02T14:11:22.031917871+08:00&quot;</span> level=warning msg=<span class="string">&quot;Your kernel does not support cgroup rt runtime&quot;</span></span><br><span class="line">Jun 02 14:11:22 k8s-node01 dockerd[52488]: time=<span class="string">&quot;2021-06-02T14:11:22.032178268+08:00&quot;</span> level=info msg=<span class="string">&quot;Loading containers: start.&quot;</span></span><br><span class="line">Jun 02 14:11:22 k8s-node01 dockerd[52488]: time=<span class="string">&quot;2021-06-02T14:11:22.118451062+08:00&quot;</span> level=info msg=<span class="string">&quot;Default bridge (docker0) is assigned with an IP address 172.17.0.0/16. Daemon option --bip c</span></span><br><span class="line"><span class="string">Jun 02 14:11:22 k8s-node01 dockerd[52488]: time=&quot;</span>2021-06-02T14:11:22.146043534+08:00<span class="string">&quot; level=info msg=&quot;</span>Loading containers: <span class="keyword">done</span>.<span class="string">&quot;</span></span><br><span class="line"><span class="string">Jun 02 14:11:22 k8s-node01 dockerd[52488]: time=&quot;</span>2021-06-02T14:11:22.614147613+08:00<span class="string">&quot; level=info msg=&quot;</span>Docker daemon<span class="string">&quot; commit=99e3ed8919 graphdriver(s)=overlay2 version=19.03.15</span></span><br><span class="line"><span class="string">Jun 02 14:11:22 k8s-node01 dockerd[52488]: time=&quot;</span>2021-06-02T14:11:22.614842390+08:00<span class="string">&quot; level=info msg=&quot;</span>Daemon has completed initialization<span class="string">&quot;</span></span><br><span class="line"><span class="string">Jun 02 14:11:22 k8s-node01 dockerd[52488]: time=&quot;</span>2021-06-02T14:11:22.654911232+08:00<span class="string">&quot; level=info msg=&quot;</span>API listen on /var/run/docker.sock<span class="string">&quot;</span></span><br></pre></td></tr></table></figure><h1 id="5-结论"><a href="#5-结论" class="headerlink" title="5. 结论"></a>5. 结论</h1><ul><li>ubuntu 16 安装k8s 不需要升级内核</li><li>kubelet 启动，docker的 cgroupdriver 必须是 systemd, 否则无法正常启动</li></ul>]]></content>
      
      
      <categories>
          
          <category> kubernetes </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>TCP</title>
      <link href="/2021/03/17/TCP/"/>
      <url>/2021/03/17/TCP/</url>
      
        <content type="html"><![CDATA[<h1 id="1-TCP"><a href="#1-TCP" class="headerlink" title="1. TCP"></a>1. TCP</h1><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/network/tcp_transfer.png" alt="a"></p><p>TCP 是<strong>面向连接、可靠的、基于字节流</strong>的<font color="blue">传输层</font>通信协议。</p><ul><li>面向连接：一对一的连接。不像 UDP 可以同时向多个主机发送消息。</li><li>可靠的：网络链路中出现变化，TCP 可以保证一个报文一定能够到达指定端。</li></ul><span id="more"></span><h2 id="1-1-TCP-头"><a href="#1-1-TCP-头" class="headerlink" title="1.1 TCP 头"></a>1.1 TCP 头</h2><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/network/tcp_header.png" alt="a"></p><p><strong>序列号</strong>：建立连接时，计算机生成的随机数作为初始值，通过 SYN 包传给接收端主机，每发送一次数据，就累加 1。<strong><font color="red">解决网络包乱序问题</font></strong></p><p><strong>确认应答号</strong>：下一次“期望”收到的数据的序列号，发生端收到这个确认应答后，认为这个序列号以前的数据都被正确接收。<strong><font color="red">解决丢包问题</font></strong></p><p><strong>控制位</strong>：</p><ul><li>ACK：确认应答字段有效。除了最初建立连接时的 SYN 包之外该位必须为1</li><li>RST：TCP 连接中出现异常，必须强行断开连接</li><li>SYN：希望建立连接，在其“序列号”字段初始化后设定</li><li>FIN：通信结束，断开连接，不会再发送数据时设定</li></ul><h2 id="1-2-TCP-连接"><a href="#1-2-TCP-连接" class="headerlink" title="1.2 TCP 连接"></a>1.2 TCP 连接</h2><p><strong>用于保证可靠性和流量控制维护的某些状态信息，包括Socket、序列号和窗口大小称为连接</strong></p><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/network/tcp_connect.png" alt="a"></p><ul><li><strong>Socket</strong>：IP + Port</li><li><strong>序列号</strong>：解决乱序等问题</li><li><strong>窗口大小</strong>：流量控制</li></ul><h2 id="1-3-唯一确定一个连接"><a href="#1-3-唯一确定一个连接" class="headerlink" title="1.3 唯一确定一个连接"></a>1.3 唯一确定一个连接</h2><p>通过 TCP 四元组来确定：</p><ul><li>源地址</li><li>源端口</li><li>目标地址</li><li>目标端口</li></ul><p>源地址和目标地址 (32-bit)：在 IP 头部中，通过 IP 协议发送报文给对方主机</p><p>源端口和目标端口 (16-bit)：在 TCP 头部中，通过 TCP 协议把报文发给哪一个进程。</p><h2 id="1-4-三次握手-amp-四次挥手"><a href="#1-4-三次握手-amp-四次挥手" class="headerlink" title="1.4 三次握手 &amp; 四次挥手"></a>1.4 三次握手 &amp; 四次挥手</h2><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/linux/tcp-3handshakes-4waves.jpg" alt="tcp"></p><p>TCP 状态：</p><ul><li>LISTENING: 服务端侦听远端TCP连接请求，等待被连接</li><li>SYN_SENT: 客户端调用connect方法，发送一个SYN请求建立连接</li><li>SYN_RCVD: 服务端收到连接请求并确认后，调用accept方法</li><li>ESTABLISHED: 连接建立</li><li>FIN_WAIT_1:  主动关闭连接，调用close方法后</li><li>CLOSING: FIN_WAIT_1后，等待对端关闭确认 （较少出现）</li><li>CLOSE_WAIT: 收到关闭请求，等待关闭</li><li>FIN_WAIT_2: 收到关闭ACK确认后</li><li>LAST_ACK: 收到关闭请求(CLOSE_WAIT)后，被动关闭连接，调用close方法</li><li>TIME_WAIT: 主动关闭连接，收到被动关闭连接(LAST_ACK)后。等待足够的时间，确保远程TCP连接中断确认，最大程度保证双方正常结束，需等待2*MSL时间才能进行下一次连接</li><li>CLOSED： 被动关闭端收到ACK后，进入CLOSED，连接结束</li></ul><p><strong>总结：</strong></p><p>TCP 建立连接时，通过三次握手<strong>能防止历史连接的建立，能减少双方不必要的资源开销，能帮助双方同步初始化序列号</strong>。序列号能够保证数据包不重复、不丢弃和按序传输。</p><p>不使用「两次握手」和「四次握手」的原因：</p><ul><li>两次握手：无法防止历史连接的建立，会造成双方资源的浪费，也无法可靠的同步双方序列号；</li><li>四次握手：三次握手就已经理论上最少可靠连接建立，所以不需要使用更多的通信次数。</li></ul><h3 id="1-4-1-TIME-WAIT"><a href="#1-4-1-TIME-WAIT" class="headerlink" title="1.4.1 TIME_WAIT"></a>1.4.1 TIME_WAIT</h3><p>主动关闭Socket端会进入TIME_WAIT状态，并持续2MSL时间长度。</p><p>MSL (maximum segment lifetime)：表示一个IP数据包在互联网上生存的最长时间，超过这个时间将在网络中消失。MSL建议值为2分钟，但传统上为30s</p><p>因此，TIME_WAIT状态一般维持在1-4分钟</p><p>TIME_WAIT 作用：</p><ul><li><p>可靠地实现TCP全双工连接终止</p></li><li><p>允许老的重复连接在网络中消逝</p></li></ul><p>TIME_WAIT 危害：</p><ul><li><p>过多会占用内存，一个TIME_WAIT占用4k</p></li><li><p>网络差的情况下，如果主动方无TIME_WAIT等待，关闭当前连接后，主动方与被动方又重新建立新的TCP连接，此时被动方重传或延时过来的FIN包会直接影响当前新的TCP连接</p></li></ul><p>如何避免：</p><ul><li><p>设置socket选项为SO_REUSEADDR，端口可重用</p></li><li><p>由于<strong>TIME_WAIT状态是主动关闭一方出现</strong>的，所以在协议逻辑设计时，<strong>尽量由客户端主动关闭</strong>，避免服务端出现TIME_WAIT</p></li></ul><h3 id="1-4-2-SYN-攻击"><a href="#1-4-2-SYN-攻击" class="headerlink" title="1.4.2 SYN 攻击"></a>1.4.2 SYN 攻击</h3><p>什么是SYN攻击？</p><ul><li>在三次握手过程中，收到客户端SYN，服务端ACK该请求后进入SYN_RCVD状态，该状态称为半连接(half-open connect)，只有等服务端收到ACK再次确认后，才进入ESTABLISHED状态</li><li>SYN 攻击，即<strong>客户端在短时间内大量伪造不存在的IP地址，向服务端不断地发送SYN包</strong>，服务端回复ACK确认包，并等待客户端确认。但由于源地址不存在，服务端需要不断重发ACK包直至超时，大量SYN包长时间占用未连接队列，导致正常SYN请求被丢弃，网络阻塞服务不可用。</li><li>DoS/DDoS 是一种典型的SYN攻击</li></ul><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/network/tcp_syn_attack.png" alt="attack"></p><p>如何检测 SYN 攻击？</p><ul><li>服务器上存在大量半连接状态 (SYN_RCVD)</li><li>大量随机的源 IP 地址</li></ul><p>如何预防 SYN 攻击?</p><p>完全阻止SYN攻击是不可能的，可通过一些方法减轻SYN攻击：</p><ul><li>缩短超时时间(SYN Timeout)</li><li>增加最大半数连接数</li><li>过滤网关防护</li><li>SYN cookies 技术</li></ul><p>Linux 内核参数：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 队列最大值</span></span><br><span class="line">net.core.netdev_max_backlog</span><br><span class="line"></span><br><span class="line"><span class="comment"># SYN_RCVD 状态连接的最大个数</span></span><br><span class="line">net.ipv4.tcp_max_syn_backlog</span><br><span class="line"></span><br><span class="line"><span class="comment"># 超出处理能时，对新的 SYN 直接回报 RST，丢弃连接</span></span><br><span class="line">net.ipv4.tcp_abort_on_overflow</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启用 cookie</span></span><br><span class="line">net.ipv4.tcp_syncookies = 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 当 「 SYN 队列」满之后，后续服务器收到 SYN 包，不进入「 SYN 队列」；</span></span><br><span class="line"><span class="comment"># 计算出一个 cookie 值，再以 SYN + ACK 中的「序列号」返回客户端，</span></span><br><span class="line"><span class="comment"># 服务端接收到客户端的应答报文时，服务器会检查这个 ACK 包的合法性。如果合法，直接放入到「 Accept 队列」。</span></span><br><span class="line"><span class="comment"># 最后应用通过调用 accpet() socket 接口，从「 Accept 队列」取出的连接。</span></span><br></pre></td></tr></table></figure><h2 id="1-5-KeepAlive"><a href="#1-5-KeepAlive" class="headerlink" title="1.5 KeepAlive"></a>1.5 KeepAlive</h2><p>TCP数据交互完成后，未主动释放连接，在无法知道对端的情况下保持了这个连接，长时间累积导致非常多的半打开连接，造成系统资源浪费。</p><p>KeepAlive: 隔一段时间给对端发送一个探测包，如果对方回应ACK，则认为连接还是存活的。在超过一定重试次数之后还是未收到对方的回应，则丢弃该连接。</p><h2 id="1-6-如何实现长连接"><a href="#1-6-如何实现长连接" class="headerlink" title="1.6 如何实现长连接"></a>1.6 如何实现长连接</h2><ul><li><p>HeartBeat心跳包</p><p>客户端每隔一小段时间向服务器发送一个数据包，通知服务器自己仍然在线。30s 00 00 03</p></li><li><p>TCP协议的KeepAlive机制</p><p>默认不打开，要用setsockopt将SOL_SOCKET.SO_KEEPALIVE设置为1，并且设置参数<code>tcp_keepalive_time/tcp_keepalive_probes/tcp_keepalive_intvl</code></p><p>keep-alive机制，可以减少tcp连接建立的次数，也意味着减少TIME_WAIT连接状态，以此来提高服务器性能</p><p>但keep-alive也可能导致系统资源被无效占用，合适设置keep-alive timeout时间非常重要</p></li></ul><h2 id="1-7-滑动窗口"><a href="#1-7-滑动窗口" class="headerlink" title="1.7 滑动窗口"></a>1.7 滑动窗口</h2><p>滑动窗口（Sliding window）是一种流量控制技术，它被用来改善网络吞吐量，即容许发送方在接收任何应答之前传送附加的包，接收方告诉发送方在某一个时刻能送多少包（成为窗口尺寸)</p><p>让发送的每一个包都有一个id，接收端必须对每一个包进行确认，这样设备A一次多发送几个片段，而不必等候ACK，同时接收端也要告知它能够收多少，这样发送端发起来也有个限制，当然还需要保证顺序性，不要乱序，对于乱序的状况，我们可以允许等待一定情况下的乱序，比如说先缓存提前到的数据，然后去等待需要的数据，如果一定时间没来就DROP掉，来保证顺序性！</p><p><strong>接收端可以根据自己的状况通告窗口大小，从而控制发送端的发送，进行流量控制。</strong></p><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/network/tcp_sliding_window.png" alt="sliding_window"></p><p><strong>滑动窗口原理：</strong></p><ul><li><p>TCP并不是每一个报文段都会回复ACK确认，可能会对多个报文段发送1个ACK (累积ACK确认)。</p></li><li><p>比如发送方有1/2/3个报文段，接收方收到2/3报文段后，一直未收到报文段“1”，将会丢弃报文段2/3.</p></li></ul><p>实现滑动窗口：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> (</span><br><span class="line">limitCount  <span class="keyword">int32</span>      = <span class="number">10</span> <span class="comment">// 限频总数</span></span><br><span class="line">limitBucket <span class="keyword">int</span>        = <span class="number">6</span>  <span class="comment">// 滑动窗口个数</span></span><br><span class="line">curCount    <span class="keyword">int32</span>      = <span class="number">0</span>  <span class="comment">// 当前限频数量</span></span><br><span class="line">head        *ring.Ring      <span class="comment">// 环形队列 (链表)</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">addr, err := net.ResolveTCPAddr(<span class="string">&quot;tcp4&quot;</span>, <span class="string">&quot;:3000&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">listener, err := net.ListenTCP(<span class="string">&quot;tcp&quot;</span>, addr)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> listener.Close()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化滑动窗口</span></span><br><span class="line">head = ring.New(limitBucket)</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; limitBucket; i++ &#123;</span><br><span class="line">head.Value = <span class="number">0</span></span><br><span class="line">head = head.Next()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 启动执行器</span></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">ticker := time.NewTicker(time.Second)</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-ticker.C:</span><br><span class="line">subCount := <span class="keyword">int32</span>(<span class="number">0</span> - head.Value.(<span class="keyword">int</span>))</span><br><span class="line">newCount := atomic.AddInt32(&amp;curCount, subCount)</span><br><span class="line"></span><br><span class="line"><span class="comment">// useless, only for print</span></span><br><span class="line">arr := [<span class="number">6</span>]<span class="keyword">int</span>&#123;&#125;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; limitBucket; i++ &#123;</span><br><span class="line">arr[i] = head.Value.(<span class="keyword">int</span>)</span><br><span class="line">head = head.Next()</span><br><span class="line">&#125;</span><br><span class="line">fmt.Printf(<span class="string">&quot;subCount: %d, newCount: %d, arr: %v\n&quot;</span>, subCount, newCount, arr)</span><br><span class="line"></span><br><span class="line">head.Value = <span class="number">0</span></span><br><span class="line">head = head.Next()</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理请求</span></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">conn, err := listener.Accept()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Println(err)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> handle(&amp;conn)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">handle</span><span class="params">(conn *net.Conn)</span></span> &#123;</span><br><span class="line"><span class="keyword">defer</span> (*conn).Close()</span><br><span class="line"></span><br><span class="line">count := atomic.AddInt32(&amp;curCount, <span class="number">1</span>)</span><br><span class="line"><span class="keyword">if</span> count &gt; limitCount &#123;</span><br><span class="line">atomic.AddInt32(&amp;curCount, <span class="number">-1</span>)</span><br><span class="line">msg := <span class="string">&quot;HTTP/1.1 404 NOT FOUND\r\n\r\nError, too many request, please try later.&quot;</span></span><br><span class="line">(*conn).Write([]<span class="keyword">byte</span>(msg))</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">mu := sync.Mutex&#123;&#125;</span><br><span class="line">mu.Lock()</span><br><span class="line">pos := head.Prev()</span><br><span class="line">val := pos.Value.(<span class="keyword">int</span>)</span><br><span class="line">val++</span><br><span class="line">pos.Value = val</span><br><span class="line">mu.Unlock()</span><br><span class="line"></span><br><span class="line">time.Sleep(time.Second)</span><br><span class="line">msg := <span class="string">&quot;HTTP/1.1 200 OK\r\n\r\nWell done.&quot;</span></span><br><span class="line">(*conn).Write([]<span class="keyword">byte</span>(msg))</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用HTTP压测工具hey：</p><p><a href="https://github.com/rakyll/hey">https://github.com/rakyll/hey</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">hey -c 6 -n 300 -q 6 -t 80 http://localhost:3000</span><br><span class="line"></span><br><span class="line">Summary:</span><br><span class="line">  Total:        11.6708 secs</span><br><span class="line">  Slowest:      1.0423 secs</span><br><span class="line">  Fastest:      0.0013 secs</span><br><span class="line">  Average:      0.0735 secs</span><br><span class="line">  Requests/sec: 25.7051</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Response time histogram:</span><br><span class="line">  0.001 [1]     |</span><br><span class="line">  0.105 [279]   |■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■</span><br><span class="line">  0.210 [0]     |</span><br><span class="line">  0.314 [0]     |</span><br><span class="line">  0.418 [0]     |</span><br><span class="line">  0.522 [0]     |</span><br><span class="line">  0.626 [0]     |</span><br><span class="line">  0.730 [0]     |</span><br><span class="line">  0.834 [0]     |</span><br><span class="line">  0.938 [0]     |</span><br><span class="line">  1.042 [20]    |■■■</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Latency distribution:</span><br><span class="line">  10% <span class="keyword">in</span> 0.0033 secs</span><br><span class="line">  25% <span class="keyword">in</span> 0.0052 secs</span><br><span class="line">  50% <span class="keyword">in</span> 0.0065 secs</span><br><span class="line">  75% <span class="keyword">in</span> 0.0076 secs</span><br><span class="line">  90% <span class="keyword">in</span> 0.0091 secs</span><br><span class="line">  95% <span class="keyword">in</span> 1.0066 secs</span><br><span class="line">  99% <span class="keyword">in</span> 1.0417 secs</span><br><span class="line"></span><br><span class="line">Details (average, fastest, slowest):</span><br><span class="line">  DNS+dialup:   0.0052 secs, 0.0013 secs, 1.0423 secs</span><br><span class="line">  DNS-lookup:   0.0036 secs, 0.0002 secs, 0.0359 secs</span><br><span class="line">  req write:    0.0001 secs, 0.0000 secs, 0.0023 secs</span><br><span class="line">  resp <span class="built_in">wait</span>:    19.8696 secs, 0.0001 secs, 851.1748 secs</span><br><span class="line">  resp <span class="built_in">read</span>:    0.0002 secs, 0.0000 secs, 0.0023 secs</span><br><span class="line"></span><br><span class="line">Status code distribution:</span><br><span class="line">  [200] 20 responses</span><br><span class="line">  [404] 280 responses</span><br></pre></td></tr></table></figure><h2 id="1-8-MTU-amp-MSS"><a href="#1-8-MTU-amp-MSS" class="headerlink" title="1.8 MTU &amp; MSS"></a>1.8 MTU &amp; MSS</h2><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/network/mtu_mss.png" alt="a"></p><p><code>MTU</code>: 一个网络包的最大长度，以太网一般未 1500 字节</p><p><code>MSS</code>：除去 IP 和 TCP 头部后，一个网络包能容纳的 TCP 数据的最大长度</p><p>当 IP 层有一个超过 MTU 大小的数据（TCP 头部 + TCP 数据）要发送，那么 IP 层就要进行分片，把数据分片成若干片，保证每一个分片都小于 MTU。把一份 IP 数据报进行分片以后，由目标主机的 IP 层来进行重新组装后，再交给上一层 TCP 传输层。</p><p>但是，如果一个 IP 分片丢失，整个 IP 报文的所有分片都得重传。</p><p>因为 IP 层本身没有超时重传机制，它由传输层的 TCP 来负责超时和重传。</p><p>当接收方发现 TCP 报文（头部 + 数据）的某一片丢失后，则不会响应 ACK 给对方，那么发送方的 TCP 在超时后，就会重发「整个 TCP 报文（头部 + 数据）」。</p><p>因此，可以得知由 IP 层进行分片传输，是非常没有效率的。</p><p>所以，为了达到最佳的传输效能 TCP 协议在建立连接的时候通常要协商双方的 MSS 值，当 TCP 层发现数据超过 MSS 时，则就先会进行分片，当然由它形成的 IP 包的长度也就不会大于 MTU ，自然也就不用 IP 分片了。</p><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/network/mtu_mss_dump.png" alt="a"></p><p>经过 TCP 层分片后，如果一个 TCP 分片丢失后，<strong>进行重发时也是以 MSS 为单位</strong>，而不用重传所有的分片，大大增加了重传的效率。</p><h1 id="2-UDP"><a href="#2-UDP" class="headerlink" title="2. UDP"></a>2. UDP</h1><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/network/udp_header.png" alt="a"></p><ul><li>目标和源端口：告诉 UDP 协议应该把报文发给哪个进程。</li><li>包长度： UDP 首部的长度跟数据的长度之和。</li><li>校验和：提供可靠的 UDP 首部和数据而设计。</li></ul><p>UDP是一个简单的传输层协议，与TCP相比，有如下特征：</p><ul><li>UDP 缺乏可靠性。不提供确认、序列号、超时重传等机制。</li><li>UDP 数据报可能在网络中被复制，被重新排序。即UDP不保证数据一定到达目的地，也不保证数据报的先后顺序，也不保证每个数据报只到达一次</li><li>UDP 数据报有长度的。如果一个数据报正确地到达目的地，该数据报的长度也随着随着数据一起传给了接收方。</li><li>UDP 面向无连接的。UDP客户端与服务器不存在长期关系，不需要经过三次握手和四次挥手操作</li><li>UDP支持多播和广播</li></ul><h1 id="3-TCP-vs-UDP"><a href="#3-TCP-vs-UDP" class="headerlink" title="3. TCP vs UDP"></a>3. TCP vs UDP</h1><table><thead><tr><th></th><th>连接</th><th>协议</th><th>可靠性</th><th>使用场景</th></tr></thead><tbody><tr><td>TCP</td><td>面向连接</td><td>流协议，无大小限制</td><td>可靠</td><td>可靠的通信。使用校验和、确认和重传机制来确保可靠传输</td></tr><tr><td>UDP</td><td>无连接</td><td>数据包协议，有限制</td><td>不可靠</td><td>1. 包总量较小的通信(DNS, SNMP) 2.视频、音频等流媒体（即时通信）3.广播通信</td></tr></tbody></table><p>tcp 传输的是数据流，udp是数据包；tcp要进行三次握手、udp不需要</p><p><strong>TCP 和 UDP 区别：</strong></p><p><em>1. 连接</em></p><ul><li>TCP 面向连接，传输数据前先要建立连接。</li><li>UDP 不需要连接，即刻传输数据。</li></ul><p><em>2. 服务对象</em></p><ul><li>TCP 是一对一的两点服务。</li><li>UDP 支持一对一、一对多、多对多的交互通信</li></ul><p><em>3. 可靠性</em></p><ul><li>TCP 是可靠交付数据的，数据可以无差错、不丢失、不重复、按需到达。</li><li>UDP 是尽最大努力交付，不保证可靠交付数据。</li></ul><p><em>4. 拥塞控制、流量控制</em></p><ul><li>TCP 有拥塞控制和流量控制机制，保证数据传输的安全性。</li><li>UDP 没有，即使网络非常拥堵了，也不会影响 UDP 的发送速率。</li></ul><p><em>5. 首部开销</em></p><ul><li>TCP 首部长度较长，会有一定的开销，首部在没有使用「选项」字段时是 <code>20</code> 个字节，如果使用了「选项」字段则会变长的。</li><li>UDP 首部只有 8 个字节，并且是固定不变的，开销较小。</li></ul><p><em>6. 传输方式</em></p><ul><li>TCP 流式传输，没有边界，但保证顺序和可靠。</li><li>UDP 一个包一个包的发送，是有边界的，但可能会丢包和乱序。</li></ul><p><em>7. 分片不同</em></p><ul><li>TCP 的数据大小如果大于 MSS 大小，则会在传输层进行分片，目标主机收到后，也同样在传输层组装 TCP 数据包，如果中途丢失了一个分片，只需要传输丢失的这个分片。</li><li>UDP 的数据大小如果大于 MTU 大小，则会在 IP 层进行分片，目标主机收到后，在 IP 层组装完数据，接着再传给传输层，但是如果中途丢了一个分片，则就需要重传所有的数据包，这样传输效率非常差，所以通常 UDP 的报文应该小于 MTU。</li></ul><p><strong>TCP 和 UDP 应用场景：</strong></p><p>由于 TCP 是面向连接，能保证数据的可靠性交付，常用于：</p><ul><li><code>FTP</code> 文件传输</li><li><code>HTTP</code> / <code>HTTPS</code></li></ul><p>由于 UDP 面向无连接，它可以随时发送数据，再加上UDP本身的处理既简单又高效，常用于：</p><ul><li>包总量较少的通信，如 <code>DNS</code> 、<code>SNMP</code> 等</li><li>视频、音频等多媒体通信</li><li>广播通信</li></ul><p><strong>为什么 UDP 头部没有「首部长度」字段，而 TCP 头部有「首部长度」字段呢？</strong></p><p>原因是 TCP 有<strong>可变长</strong>的「选项」字段，而 UDP 头部长度则是<strong>不会变化</strong>的，无需多一个字段去记录 UDP 的首部长度。</p><p><strong>为什么 UDP 头部有「包长度」字段，而 TCP 头部则没有「包长度」字段呢？</strong></p><p>TCP 负载数据长度：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TCP数据总长度 = IP总长度 - IP首部长度 - TCP首部长度</span><br></pre></td></tr></table></figure><h1 id="4-网络包"><a href="#4-网络包" class="headerlink" title="4. 网络包"></a>4. 网络包</h1><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/network/http_packet.png" alt="a"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>HTTP</title>
      <link href="/2021/01/09/HTTP/"/>
      <url>/2021/01/09/HTTP/</url>
      
        <content type="html"><![CDATA[<h1 id="1-HTTP"><a href="#1-HTTP" class="headerlink" title="1. HTTP"></a>1. HTTP</h1><h2 id="1-1-特性"><a href="#1-1-特性" class="headerlink" title="1.1 特性"></a>1.1 特性</h2><ul><li>构建在TCP上的应用层协议</li><li>无连接无状态</li></ul><h2 id="1-2-状态码"><a href="#1-2-状态码" class="headerlink" title="1.2 状态码"></a>1.2 状态码</h2><ul><li><code>200 OK</code> </li><li><code>301 Moved Permanently</code> 永久重定向，后续请求直接发往新地址</li><li><code>302 Moved Temporarily</code> 临时重定向</li><li><code>304 Not Modified</code> 文件未修改，直接使用缓存文件</li><li><code>400 Bad Request</code> 客户端请求有语法错误</li><li><code>401 Unauthorized</code> 请求未经授权</li><li><code>403 Forbidden</code> 认证通过，但无权限访问资源</li><li><code>404 Not Found</code> 请求的资源不存在</li><li><code>405 Method Not Allowed</code> </li><li><code>500 Internal Server Error</code> </li><li><code>502 Bad Gateway</code> 与upstream建立了连接，但响应超时。可能原因：后端代码执行超时、数据库响应慢等 (received an invalid response from the upstream server)</li><li><code>503 Service Unavailable</code> 服务器当前不能够处理客户端的请求，在一段时间之后，服务器可能会恢复正常。(The server cannot handle the request, because it is overloaded or down for maintenance, generally this is temporary state.) </li><li><code>504 Gateway Time-out</code> 完全无法与upstream建立连接，一般是nginx配置错误 (did not receive a timely response from the upstream server)</li></ul><span id="more"></span><h2 id="1-3-持久连接"><a href="#1-3-持久连接" class="headerlink" title="1.3 持久连接"></a>1.3 持久连接</h2><ul><li><p>请求头：<code>Connection: Keep-Alive</code> HTTP/1.1默认</p></li><li><p>HTTP Keep-Alive 简单说就是保持当前的TCP连接，避免了重新建立连接。</p></li><li><p>HTTP 长连接不可能一直保持，例如 <code>Keep-Alive: timeout=5, max=100</code>，表示这个TCP通道可以保持5秒，max=100，表示这个长连接最多接收100次请求就断开。</p></li></ul><h2 id="1-4-Transfer-Encoding"><a href="#1-4-Transfer-Encoding" class="headerlink" title="1.4 Transfer-Encoding"></a>1.4 <code>Transfer-Encoding</code></h2><p>用来标示 HTTP 报文传输格式，默认chunked，表示消息体由数量未定的块组成，并以最后一个大小为0的块为结束。</p><p>每一个非空的块都以该块包含数据的字节数（字节数以十六进制表示）开始，跟随一个CRLF （回车及换行），然后是数据本身，最后块CRLF结束。</p><h2 id="1-5-Cookie-amp-Session"><a href="#1-5-Cookie-amp-Session" class="headerlink" title="1.5 Cookie &amp; Session"></a>1.5 Cookie &amp; Session</h2><p>都是为了解决HTTP无状态问题，发展出来的保存客户端状态的一种机制</p><h3 id="1-5-1-Cookie"><a href="#1-5-1-Cookie" class="headerlink" title="1.5.1 Cookie"></a>1.5.1 Cookie</h3><ul><li>客户端机制，浏览器存储在用户电脑上的一小段文本文件</li><li>http请求时，会将这些信息发生至服务器，服务器可根据这些信息来识别不同的用户</li><li>客户端可禁用Cookie</li><li>缺点：<ul><li>不良站点用Cookie收集用户隐私信息</li><li>Cookie窃取，黑客可通过Cookie来模拟用户的请求行为（跨站脚本攻击XSS）</li></ul></li></ul><h3 id="1-5-2-Session"><a href="#1-5-2-Session" class="headerlink" title="1.5.2 Session"></a>1.5.2 Session</h3><ul><li>服务端机制，服务器使用一种类似散列表的结构来保持信息，当客户端请求时，创建一个session请发给客户端，下一次客户端请求，服务端首先去检查这个请求是否包含了session标识</li><li>具体实现方式：<ul><li>Cookie方式：服务器给每个Session分配一个唯一的JSESSIONID，并通过Cookie发送给客户端。当客户端发起新的请求时，将在Cookie头重携带这个JSESSIONID，这样服务器就能够找个这个客户端对应的Session</li><li>URL回写：服务器在发送给浏览器页面的所有链接中都携带JSESSIONID参数，这样客户端点击任何一个链接都会把JSESSIONID带回服务器</li></ul></li></ul><h2 id="1-6-跨站攻击"><a href="#1-6-跨站攻击" class="headerlink" title="1.6 跨站攻击"></a>1.6 跨站攻击</h2><h3 id="1-6-1-CSRF-（XSRF）"><a href="#1-6-1-CSRF-（XSRF）" class="headerlink" title="1.6.1 CSRF （XSRF）"></a>1.6.1 CSRF （XSRF）</h3><p>Cross-site Request Forgery, 跨站请求伪造</p><p>伪造请求，冒充用户在站内的正常操作。用户点击链接时，恶意js伪造请求，比如删除、转账、该密码、发送邮件等操作</p><p>预防 CSRF 攻击：</p><ul><li>关键操作使用 POST 请求</li><li>验证码</li><li>检测 Referer，关联的请求地址应该一致</li><li>Token</li></ul><h3 id="1-6-2-XSS"><a href="#1-6-2-XSS" class="headerlink" title="1.6.2 XSS"></a>1.6.2 XSS</h3><p>Cross Site Scripting， 跨站脚本攻击</p><p>客户端提交含有 js 的内容文本，但服务器没有过滤或转义掉这些脚本，当内容发布到了页面上，其他用户访问这个页面的时候就会运行这些脚本。</p><p>预防 XSS 攻击：</p><ul><li>将用户输入的内容进行 HTML escape 转义</li></ul><h1 id="2-HTTPS"><a href="#2-HTTPS" class="headerlink" title="2. HTTPS"></a>2. HTTPS</h1><p>HTTPS: HTTP over TSL</p><p>TSL: Transport Layer Security, SSL的后续版本</p><p>SSL: Secure Socket Layer</p><h2 id="2-1-证书认证"><a href="#2-1-证书认证" class="headerlink" title="2.1 证书认证"></a>2.1 证书认证</h2><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/encrypt/https-flow.jpg" alt="https"></p><p>上图为单向认证，双向认证时，需要客户端把自己的证书发回服务端认证</p><h2 id="2-2-中间人攻击"><a href="#2-2-中间人攻击" class="headerlink" title="2.2 中间人攻击"></a>2.2 中间人攻击</h2><p>中间人攻击 (MITM, Man In The Middle Attack): 攻击者与通信的两端分别建立独立的连续，并交换其所收到的数据，使通信的两端都认为他们正在进行一个私密的连接与对方直接对话。</p><h1 id="3-HTTP2"><a href="#3-HTTP2" class="headerlink" title="3. HTTP2"></a>3. HTTP2</h1><p>影响一个HTTP网络请求的因素主要有两个：带宽和延迟</p><ul><li><p>带宽：当前的互联网已解决</p></li><li><p>延迟：</p><ul><li><p>浏览器阻塞(HOL blocking): 同一个域名，浏览器同时只能有 4 个连接（不同内核可能不同），超过最大连接数限制，后续请求将被阻塞</p></li><li><p>DNS查询(DNS Lookup): 解析域名为IP需要耗费一定的时间，通常可以利用DNS缓存解决</p></li><li><p>建立连接(Initial connection): HTTP基于TCP协议，浏览器最快也要进行三次握手才能将HTTP请求报文发往服务器，但建立的连接无法复用。</p></li></ul></li></ul><p>HTTP2.0新特性：</p><ul><li><p>新的二进制格式 (Binary Format)</p><p>HTTP1.x的解析基于文本，但文本协议存在多种格式，需要考虑的健壮性问题较多。二进制则不同，只认0和1组合。</p></li><li><p>多路复用(MultiPlexing)</p><p>连接共享，每个request对应一个id，这样一个连接就可以承载多个request</p></li><li><p>header压缩 (HPACK)</p><p>使用encoder来减少需要传输的header大小，通信双发各自cache一份header fields表，既避免了重复的header传输，又减小了传输字节数</p></li><li><p>服务器推送 (server push)</p><p>服务器可以向浏览器发生请求之外的内容，比如正在请求一个页面时，服务器会把页面相关的logo，CSS等文件直接推送到客户端。</p></li></ul><h1 id="4-Web-缓存"><a href="#4-Web-缓存" class="headerlink" title="4. Web 缓存"></a>4. Web 缓存</h1><p>缓存：保存在浏览器中的数据，再次请求服务时，如果相同的URL，直接使用浏览器中的缓存响应访问请求，不会再次向服务器发送请求</p><p>三种情况：</p><ul><li><p>未找到缓存（黑色线）</p></li><li><p>缓存未过期（蓝色线）</p></li><li><p>缓存已过期（红色线）缓存过期判断服务器文件是否更新的两种方法：</p><ul><li><p>将本地文件的最后修改时间发会服务器，check下文件是否已更新，如果没有，不下载新的文件，只需要更新本地缓存文件的过期时间</p></li><li><p>客户端文件有版本好，当服务器更新了版本，再次请求时，服务器根据版本判断缓存是否需要更新</p></li></ul></li></ul><p>通过HTTP-HEADER控制缓存：</p><ul><li>Expires和Cache-Control: HTTP1.0使用Expires，1.1为Cache-Control:max-age规定了缓存的有效时间</li><li>Last-Modified/If-Modified-Since: 缓存过期后，check服务端文件是否更新的第一种方式</li><li>ETag/If-None-Match: 缓存过期时check服务端文件是否过期的第二种方式</li></ul><p>无法被浏览器缓存的请求：</p><ul><li><p>HTTP头中：Cache-Control:no-cache, pragma:no-cache (HTTP1.0), Cache-Control:max-age=0</p></li><li><p>需要根据Cookie，认证信息等决定输入内容的动态请求不能被缓存</p></li><li><p>POST请求无法被缓存</p></li></ul><h1 id="5-HTTP-amp-WebSocket"><a href="#5-HTTP-amp-WebSocket" class="headerlink" title="5. HTTP &amp; WebSocket"></a>5. HTTP &amp; WebSocket</h1><h2 id="5-1-协议"><a href="#5-1-协议" class="headerlink" title="5.1 协议"></a>5.1 协议</h2><ul><li><p>HTTP 1.0: 在一次 TCP 连接中只能完成一个 HTTP 请求</p></li><li><p>HTTP 1.1: keep-alive，在一次 TCP 连接中完成多个 HTTP 请求</p></li><li><p>Websocket: 借用HTTP协议来完成握手</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">Connection:</span> <span class="string">Upgrade</span></span><br><span class="line"><span class="attr">Sec-WebSocket-Extensions:</span> <span class="string">permessage-deflate;</span> <span class="string">client_max_window_bits</span></span><br><span class="line"><span class="attr">Sec-WebSocket-Key:</span> <span class="string">km9iqxp+3H2ndD5zXkAczA==</span></span><br><span class="line"><span class="attr">Sec-WebSocket-Version:</span> <span class="number">13</span></span><br><span class="line"><span class="attr">Upgrade:</span> <span class="string">websocket</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="5-2-通信方式比较："><a href="#5-2-通信方式比较：" class="headerlink" title="5.2 通信方式比较："></a>5.2 通信方式比较：</h2><ul><li>ajax轮询：浏览器隔几秒向服务器发起一个请求，询问服务器是否有新信息。需要服务器有很快的处理速度和资源。（速度）</li><li>long poll：采用阻塞模式，客户端发起连接后，如果没消息，就一直不返回Response给客户端。直到有消息才返回，返回完之后，客户端再次建立连接，周而复始。需要有很高的并发，也就是说同时接待客户的能力。（场地大小）</li><li>WebSocket：一次HTTP握手后，整个通讯过程是建立在该连接状态中。服务器可主动推送消息给客户端。</li></ul><p><strong>WebSocket和HTTP最大不同</strong>：</p><ul><li>WebSocket是一种双向通信协议。在建立连接后，WebSocket服务器端和客户端都能主动向对方发送或接收数据，就像Socket一样；</li><li>WebSocket需要像TCP一样，先建立连接，连接成功后才能相互通信。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux基础知识</title>
      <link href="/2020/09/21/Linux%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
      <url>/2020/09/21/Linux%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<h1 id="1-负载均衡"><a href="#1-负载均衡" class="headerlink" title="1. 负载均衡"></a>1. 负载均衡</h1><h2 id="1-1-SLB"><a href="#1-1-SLB" class="headerlink" title="1.1 SLB"></a>1.1 SLB</h2><p>SLB: Server Load Balance</p><ul><li><p>通过设置虚拟服务地址（IP），将位于同一区域（Region）的多台云服务器（Elastic Compute Service，ECS）的资源虚拟成一个高性能、高可用的应用服务池；再根据应用指定的方式，将来自客户端的网络请求分发到云服务器池中</p></li><li><p>SLB服务会检查云服务器池中ECS的健康状态，自动隔离异常状态的ECS，从而解决了单台ECS的单点问题，同时提高了应用的整体服务能力</p></li></ul><p>负载均衡算法：</p><ul><li><p>轮询 (Round Robin)</p></li><li><p>最小连接 (Leaster Connections): 优先选择连接数最小的服务器</p></li><li><p>Source: 根据请求源IP的hash值来选择要转发的服务器，保证特定用户连接到相同服务器</p></li></ul><span id="more"></span><h2 id="1-2-LVS"><a href="#1-2-LVS" class="headerlink" title="1.2 LVS"></a>1.2 LVS</h2><p>LVS：Linux Virtual Server</p><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/golang/LVS.jpg" alt="lvs"></p><ol><li><p>当用户向负载均衡调度器(Director Server)发起请求，调度器将请求发送至内核空间</p></li><li><p>PREROUTING链首先会接收到用户请求，判断目标IP是否本机IP，将数据包发往INPUT链</p></li><li><p>IPVS工作在INPUT上，当用户请求到达INPUT时，IPVS会将用户请求和定义好的集群服务进行比对，如果请求时集群服务，那么IPVS将强行修改数据包里的目标IP和端口，并将新数据包发往POSTROUTING链</p></li><li><p>POSTROUTING链接收数据包后发现目标IP地址刚好时自己的后端服务器，通过选路，将数据包最终发送给后端服务器</p></li></ol><p>LVS 程序组成：</p><ul><li>ipvs: ip virtual server, 工作在内核空间的一段代码，实现负载均衡调度</li><li>ipvsadm: 工作在用户空间，负责ipvs内核框架的编写规则</li></ul><p>iptables 内置的4个表:</p><ul><li><p>filter: 包过滤</p></li><li><p>nat: 网络地址转换</p></li><li><p>mangle: 包重构(修改)</p></li><li><p>raw: 数据跟踪处理</p></li></ul><p>链（chains）: 数据包传播的路径，每一条链其实就是众多规则中的一个检查清单，每一条链中可以有一 条或数条规则</p><p>默认包括5种规则链</p><ul><li><p>INPUT：处理入站数据包</p></li><li><p>OUTPUT：处理出站数据包</p></li><li><p>FORWARD：处理转发数据包</p></li><li><p>POSTROUTING链：在进行路由选择后处理数据包（对数据链进行源地址修改转换）</p></li><li><p>PREROUTING链：在进行路由选择前处理数据包（做目标地址转换）</p></li></ul><h1 id="2-高可用软件"><a href="#2-高可用软件" class="headerlink" title="2. 高可用软件"></a>2. 高可用软件</h1><ul><li>Heartbeat：可实现对服务器资源（IP即程序服务等资源）的监控和管理，并在出现故障的情况下，将资源集合从一台已经故障的计算机快速转移到另一台机器上继续提供服务</li><li>Keepalived:<ul><li>通过IP漂移，实现服务的高可用：服务器集群共享一个虚拟IP，同一时间只有一个服务器占有虚拟IP并对外提供服务，若该服务器不可用，则虚拟IP漂移到另一台服务器并对外提供服务</li><li>对LVS应用服务器集群状态进行监控：若应用不可用，则keepalived将其从集群中摘除，若服务器恢复，将其加入集群中</li></ul></li></ul><h1 id="3-弹性伸缩"><a href="#3-弹性伸缩" class="headerlink" title="3. 弹性伸缩"></a>3. 弹性伸缩</h1><p>弹性伸缩（Auto Scaling): 根据业务需求和伸缩策略，自动调整计算机资源。请求高峰时，自动增加业务实例数量，以保证性能不受影响；请求低谷时，自动释放业务实例数量以减低成本</p><h1 id="4-孤儿进程-amp-僵尸进程"><a href="#4-孤儿进程-amp-僵尸进程" class="headerlink" title="4. 孤儿进程 &amp; 僵尸进程"></a>4. 孤儿进程 &amp; 僵尸进程</h1><p>孤儿进程：父进程退出，但它的子进程还在运行，那么这些进程即为孤儿进程。孤儿进程会被init进程（PID=1）接收，并由init进程堆它们完成状态收集工作</p><p>僵尸进程：一个进程使用fork创建子进程，如果子进程退出，而父进程未调用wait或waitpid获取子进程状态，那么子进程描述符仍然保存在系统中，这种进程称之为僵尸进程。</p><h1 id="5-epoll-amp-select"><a href="#5-epoll-amp-select" class="headerlink" title="5. epoll &amp; select"></a>5. epoll &amp; select</h1><ul><li><p>epoll 和 select 都是I/O多路复用技术，都实现同时监听多个I/O事件的状态</p></li><li><p>epoll 比 select 高效，主要基于其操作系统支持的 I/O 事件通知机制，而select是基于轮询机制</p></li><li><p>epoll 支持水平触发和边缘触发两种模式</p></li></ul><h1 id="6-ping-IP"><a href="#6-ping-IP" class="headerlink" title="6. ping IP"></a>6. ping IP</h1><ol><li><p>根据目地IP和路由表决定走哪个网卡</p></li><li><p>根据网卡子网掩码判断目的IP是否在子网内</p></li><li><p>如果不在子网内，则通过arp缓存查询IP的网卡地址，不存在的话先通过广播询问目的IP的mac地址，该地址会缓存下来</p></li><li><p>根据获取的mac地址，然后发包</p></li></ol><h1 id="7-解决hash冲突的办法"><a href="#7-解决hash冲突的办法" class="headerlink" title="7. 解决hash冲突的办法"></a>7. 解决hash冲突的办法</h1><h2 id="7-1-开放地址法"><a href="#7-1-开放地址法" class="headerlink" title="7.1 开放地址法"></a>7.1 开放地址法</h2><p>即 <strong>再散列法</strong>，基本思想：当关键字key的哈希地址p=H(key) 出现冲突时，以p为基础，产生另一个哈希地址p1，如果p1仍然冲突，再以p为基础，产生另一个哈希地址p2，…，直到找出一个不冲突的哈希地址pi ，将相应元素存入其中。</p><ul><li>线性探测再散列：冲突发生时，顺序查看表中下一单元，直到找出一个空单元或查遍全表。</li><li>二次探测再散列：冲突发生时，在表的左右进行跳跃式探测，比较灵活 （1^2，-1^2， …)</li><li>伪随机探测再散列: 建立一个伪随机数发生器，并给定一个随机数做起点</li></ul><h2 id="7-2-再哈希法"><a href="#7-2-再哈希法" class="headerlink" title="7.2 再哈希法"></a>7.2 再哈希法</h2><p>使用不同的哈希函数，直到冲突解决</p><p>缺点：耗时较长</p><h2 id="7-3-链地址法"><a href="#7-3-链地址法" class="headerlink" title="7.3 链地址法"></a>7.3 链地址法</h2><p>将哈希值相同的元素构成一个同义词的单链表，并将单链表的头指针存放在哈希表的第i个单元中，查找、插入和删除主要在同义词链表中进行。<strong>链表法适用于经常进行插入和删除的情况</strong>。</p><h2 id="7-4-建立一个公共溢出区"><a href="#7-4-建立一个公共溢出区" class="headerlink" title="7.4 建立一个公共溢出区"></a>7.4 建立一个公共溢出区</h2><p>将哈希表分为公共表和溢出表，当溢出发生时，将所有溢出数据统一放到溢出区。</p><h1 id="8-Git"><a href="#8-Git" class="headerlink" title="8. Git"></a>8. Git</h1><p>git rebase</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 合并多次提交记录</span></span><br><span class="line">git rebase -i HEAD~4    <span class="comment"># 最近四次</span></span><br><span class="line">git rebase --edit-todo  <span class="comment"># 异常退出vi时执行</span></span><br><span class="line">git rebase --<span class="built_in">continue</span>   <span class="comment"># 返回继续编辑</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 合并分支 </span></span><br><span class="line">git checkout master</span><br><span class="line">git pull</span><br><span class="line"></span><br><span class="line">git checkout dev</span><br><span class="line">git rebase master       <span class="comment"># 将master最新分支同步到当前分支</span></span><br><span class="line">git rebase --<span class="built_in">continue</span>   <span class="comment"># 有冲突，并解决冲突后执行</span></span><br><span class="line">git rebase --abort      <span class="comment"># 有冲突，放弃，回到rebase前的状态</span></span><br><span class="line"></span><br><span class="line">git checkout master</span><br><span class="line">git merge dev</span><br><span class="line">git push</span><br></pre></td></tr></table></figure></blockquote><p>git rebase master 做了哪些操作？</p><ol><li>先取消当前dev分支的提交记录</li><li>将在当前dev中新开发的代码保存成patch文件，存入.git/rebase目录下</li><li>当前dev分支合并最新的master分支</li><li>将patch文件应用到当前dev分支</li></ol><p>在 dev 分支，使用 git rebase master，然后就会把 dev 接到 master 分支之上。Git 是这么做的：</p><ul><li>首先，找到这两条分支的最近公共祖先 LCA</li><li>然后，从 master 节点开始，重演 LCA 到 dev 几个 commit 的修改，如果这些修改和 LCA 到 master 的 commit 有冲突，就会提示你手动解决冲突</li><li>最后，把 dev 的分支完全接到 master 上面。</li></ul><h1 id="9-进程、线程、协程"><a href="#9-进程、线程、协程" class="headerlink" title="9. 进程、线程、协程"></a>9. 进程、线程、协程</h1><h2 id="9-1-进程"><a href="#9-1-进程" class="headerlink" title="9.1 进程"></a>9.1 进程</h2><p>进程：程序的执行过程，包括了动态创建、调度和消亡的整个过程，是程序资源管理的最小单位</p><p>多进程模型：启动多个服务进程。由于多进程地址空间不同，数据不能共享，需要搭建各个进程间的通信桥梁，即IPC (InterProcess Communication)</p><p>常见IPC类型</p><ul><li><p>管道 Pipe：一个内核缓冲区，以先进先出FIFO的方式从缓冲区存取数据；以半双工方式通信，数据只能单向流动，且只能在父子进程间通信</p></li><li><p>命名管道FIFO：以文件形式存于文件系统中 <code>/tmp/fifo</code>, 只要可以访问该文件的进程，均可通信</p></li><li><p>信号 Signal：用户空间进程和内核直接交互，内核可利用信号来通知用户空间进程发生哪些系统事件</p></li><li><p>消息队列 Message Queue：存放在内核中的消息链表，每个消息队列由消息队列标识符表示，只在内核重启或主动删除时，消息队列才会被删除</p></li><li><p>共享内存 Shared memory：多个进程可以直接读写同一块内存空间，是最快的IPC</p></li><li><p>套接字 Socket：通过网络接口将数据发送到本机的不同进程或远程计算机的进程</p></li></ul><h2 id="9-2-线程"><a href="#9-2-线程" class="headerlink" title="9.2 线程"></a>9.2 线程</h2><p>线程：进程中，资源调度的最小单位</p><p>多线程模型：</p><ul><li><p>线程同步：线程之间的一种直接制约关系，一个线程的执行依赖另一个线程的通知，当它没有得到另一个线程的通知时必须等待，直到消息到达时才被唤醒。</p></li><li><p>线程互斥：多线程对资源访问的排他性，即多个线程要使用某个共享资源时，任何时刻最多只允许一个线程获得该共享资源的使用权</p></li></ul><p>多线程同步和互斥方法：</p><ul><li><p>互斥锁</p></li><li><p>条件变量</p></li><li><p>读写锁</p></li><li><p>自旋锁：线程反复去获取<strong>锁</strong>，但这个锁被其他线程占用，此线程将会等待，间隔一段时间后再次尝试获取。这种<strong>循环加锁的等待机制被称为自旋锁(spinlock)</strong></p></li><li><p>信号量</p></li></ul><h2 id="9-3-协程"><a href="#9-3-协程" class="headerlink" title="9.3 协程"></a>9.3 协程</h2><p>协程：一种比线程更轻量化的微线程</p><p>协程优势：</p><ul><li><p>协程在线程内实现，因此始终在一个线程中共享资源，不存在多线程抢占资源和资源同步问题</p></li><li><p>生产者协程和消费者协程，相互配合协作完成工作，而不是相互抢占</p></li><li><p>协程的创建和切换开销比线程小的多</p></li></ul><h2 id="9-4-总结"><a href="#9-4-总结" class="headerlink" title="9.4 总结"></a>9.4 总结</h2><p>进程、线程、协程的关系和区别：</p><ul><li>进程拥有独立的堆和栈，既不共享堆，也不共享栈，由操作系统负责调度。</li><li>线程拥有独立的栈和共享的堆，由操作系统负责调度（内核线程）。</li><li>协程拥有独立的栈和共享的堆，有 golang 的调度器负责调度。</li></ul><h2 id="9-5-实现自旋锁"><a href="#9-5-实现自旋锁" class="headerlink" title="9.5 实现自旋锁"></a>9.5 实现自旋锁</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> SpinLock <span class="keyword">uint32</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewSpinLock</span><span class="params">()</span> *<span class="title">SpinLock</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> lock SpinLock</span><br><span class="line"><span class="keyword">return</span> &amp;lock</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(sl *SpinLock)</span> <span class="title">Lock</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> !atomic.CompareAndSwapUint32((*<span class="keyword">uint32</span>)(sl), <span class="number">0</span>, <span class="number">1</span>) &#123;</span><br><span class="line">runtime.Gosched()</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(sl *SpinLock)</span> <span class="title">Unlock</span><span class="params">()</span></span> &#123;</span><br><span class="line">atomic.StoreUint32((*<span class="keyword">uint32</span>)(sl), <span class="number">0</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="10-函数递归问题"><a href="#10-函数递归问题" class="headerlink" title="10. 函数递归问题"></a>10. 函数递归问题</h1><p><strong>为什么递归“效率低”？</strong> </p><ul><li><p>函数调用开销问题：函数调用前，需要做许多工作，比如准备函数内局部变量使用的空间、保存函数的参数，记录函数调用位置等，这些操作较为耗资源。</p></li><li><p>某些递归算法，本身存在低效问题。斐波那契中求某一项，子问题会大量重复出现，产生大量重复计算，效率低下</p></li><li><p>不断入栈出栈操作</p></li><li><p>栈容量的限制，可能导致stack overflow</p></li></ul><h1 id="11-压测工具"><a href="#11-压测工具" class="headerlink" title="11. 压测工具"></a>11. 压测工具</h1><ol><li>vegeta： 高性能http(s)负载测试工具。它是一个负载测试工具而不是基准测试工具。基准测试试图找到系统在峰值容量下所能承受的极限，而负载测试则倾向于讲述系统在不同的负载点和配置下的表现。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;GET http://10.137.8.40&quot;</span> | vegeta attack -rate=20000 -duration=60s | tee test.dat | vegeta report -ouput test-result.dat</span><br></pre></td></tr></table></figure><p>​    QPS: query per second</p><ol start="2"><li>goconvey: 集成go test, 支持Web-GUI</li></ol><p>关于goconvey，下面说法正确的是（ABC）<br>A. goconvey是一个支持golang的单元测试框架<br>B. goconvey能够自动监控文件修改并启动测试，并可以将测试结果实时输出到web界面<br>C. goconvey提供了丰富的断言简化测试用例的编写<br>D. goconvey无法与go test集成</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestStringSliceEqual</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">  Convey(<span class="string">&quot;TestStringSliceEqual should return true when a != nil &amp;&amp; b != nil&quot;</span>, t, <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">    a := []<span class="keyword">string</span>&#123;<span class="string">&quot;hello&quot;</span>, <span class="string">&quot;goconvey&quot;</span>&#125;</span><br><span class="line">    b := []<span class="keyword">string</span>&#123;<span class="string">&quot;hello&quot;</span>, <span class="string">&quot;goconvey&quot;</span>&#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>GoStub</li></ol><p>GoStub框架的使用场景如下：<br>A、为一个全局变量打桩<br>B、为一个函数打桩<br>C、为一个过程打桩<br>D、由任意相同或不同的基本场景组合而成</p><h1 id="12-字符编码"><a href="#12-字符编码" class="headerlink" title="12. 字符编码"></a>12. 字符编码</h1><p>大端 (LitteEndian)：高位写左边，从左向右读</p><p>小端 (LitteEndian)：高位写右边，从右向左读</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Go 相关概念</title>
      <link href="/2020/07/17/Go%20%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/"/>
      <url>/2020/07/17/Go%20%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/</url>
      
        <content type="html"><![CDATA[<h1 id="1-逃逸分析"><a href="#1-逃逸分析" class="headerlink" title="1. 逃逸分析"></a>1. 逃逸分析</h1><h2 id="1-1-堆和栈："><a href="#1-1-堆和栈：" class="headerlink" title="1.1 堆和栈："></a>1.1 堆和栈：</h2><ul><li>堆（Heap）：<ul><li>一般情况下，手动申请、分配、释放。内存大小并不定，较大的对象。另外其分配相对慢，涉及到的指令动作也相对多</li><li>堆在内存分配中类似于往一个房间里摆放各种家具，家具的尺寸有大有小。</li><li>引用类型 (指针、slice、map、chan、interface)的地址对应的数据存储内存通常分配在堆上</li></ul></li><li>栈（Stack）：<ul><li>由编译器进行管理，自动申请、分配、释放。一般不会太大，我们常见的函数参数，局部变量等等都会存放在栈上</li><li>栈是一种拥有特殊规则的线性表数据结构,只允许线性表的一端放入数据,之后再这一端取出数据,按照后进先出(lifo)的顺序</li><li>值类型 (整型、浮点型、bool、string、array和struct) 的变量直接存储值，内存通常分配在栈上</li></ul></li></ul><span id="more"></span><h2 id="1-2-逃逸分析"><a href="#1-2-逃逸分析" class="headerlink" title="1.2 逃逸分析"></a>1.2 逃逸分析</h2><p>逃逸分析就是确定一个变量要放堆上还是栈上，规则如下：</p><ul><li>是否有在其他地方（非局部）被引用。只要有可能被引用了，那么它一定分配到堆上。否则分配到栈上</li><li>即使没有被外部引用，但对象过大，无法存放在栈区上。依然有可能分配到堆上</li></ul><h2 id="1-3-需要逃逸的原因"><a href="#1-3-需要逃逸的原因" class="headerlink" title="1.3 需要逃逸的原因"></a>1.3 需要逃逸的原因</h2><p>频繁申请、分配堆内存是有一定 “代价” 的。会影响应用程序运行的效率，间接影响到整体系统。因此 “按需分配” 最大限度的灵活利用资源，才是正确的治理之道</p><h2 id="1-4-查看逃逸分析"><a href="#1-4-查看逃逸分析" class="headerlink" title="1.4 查看逃逸分析"></a>1.4 查看逃逸分析</h2><h3 id="1-4-1-通过编译器命令，就可以看到详细的逃逸分析过程"><a href="#1-4-1-通过编译器命令，就可以看到详细的逃逸分析过程" class="headerlink" title="1.4.1 通过编译器命令，就可以看到详细的逃逸分析过程"></a>1.4.1 通过编译器命令，就可以看到详细的逃逸分析过程</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">go build -gcflags <span class="string">&#x27;-m -l&#x27;</span> main.go</span><br><span class="line"></span><br><span class="line">-m: 进行内存分配分析</span><br><span class="line">-l: 禁用掉 inline 函数内联, 避免程序内联</span><br></pre></td></tr></table></figure><h3 id="1-4-2-通过反编译命令查看"><a href="#1-4-2-通过反编译命令查看" class="headerlink" title="1.4.2 通过反编译命令查看"></a>1.4.2 通过反编译命令查看</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go tool compile -S main.go</span><br></pre></td></tr></table></figure><h2 id="1-5-逃逸案例"><a href="#1-5-逃逸案例" class="headerlink" title="1.5 逃逸案例"></a>1.5 逃逸案例</h2><h3 id="1-5-1-指针"><a href="#1-5-1-指针" class="headerlink" title="1.5.1 指针"></a>1.5.1 指针</h3><p>1) 外部引用，逃逸</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> User <span class="keyword">struct</span> &#123;</span><br><span class="line">ID   <span class="keyword">int</span></span><br><span class="line">Name <span class="keyword">string</span></span><br><span class="line">Age  <span class="keyword">byte</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetUser</span><span class="params">()</span> *<span class="title">User</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> &amp;User&#123;</span><br><span class="line">ID:   <span class="number">1</span>,</span><br><span class="line">Name: <span class="string">&quot;jack&quot;</span>,</span><br><span class="line">Age:  <span class="number">12</span>,</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">_ = GetUser()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ go build -gcflags <span class="string">&quot;-m -l&quot;</span> main.go </span><br><span class="line"><span class="comment"># command-line-arguments</span></span><br><span class="line">./main.go:10:9: &amp;User literal escapes to heap</span><br><span class="line"></span><br><span class="line">$ go tool compile -S main.go | grep CALL</span><br><span class="line">        0x0028 00040 (main.go:10)       CALL    runtime.newobject(SB)</span><br><span class="line">        0x005f 00095 (main.go:9)        CALL    runtime.morestack_noctxt(SB)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2）外部未引用，不逃逸</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">s := <span class="built_in">new</span>(<span class="keyword">string</span>)</span><br><span class="line">*s = <span class="string">&quot;abc&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ go build -gcflags <span class="string">&quot;-m -l&quot;</span> main.go </span><br><span class="line"><span class="comment"># command-line-arguments</span></span><br><span class="line">./main.go:4:10: new(string) does not escape</span><br><span class="line"></span><br><span class="line">$ go tool compile -S main.go | grep CALL</span><br></pre></td></tr></table></figure><h3 id="1-5-2-未确定类型"><a href="#1-5-2-未确定类型" class="headerlink" title="1.5.2 未确定类型"></a>1.5.2 未确定类型</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">s := <span class="built_in">new</span>(<span class="keyword">string</span>)</span><br><span class="line">*s = <span class="string">&quot;abc&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//fmt.Println(*s) // not escape</span></span><br><span class="line">fmt.Println(s) <span class="comment">// escape to heap</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>原因：<code>func Println(a ...interface&#123;&#125;) (n int, err error)</code>接收任意类型，在编译时无法确定具体类型，因此产生逃逸</p><h3 id="1-5-3-泄漏参数"><a href="#1-5-3-泄漏参数" class="headerlink" title="1.5.3 泄漏参数"></a>1.5.3 泄漏参数</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> User <span class="keyword">struct</span> &#123;</span><br><span class="line">ID   <span class="keyword">int</span></span><br><span class="line">Name <span class="keyword">string</span></span><br><span class="line">Age  <span class="keyword">byte</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetUser</span><span class="params">(u *User)</span> *<span class="title">User</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> u</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">_ = GetUser(&amp;User&#123;ID: <span class="number">1</span>, Name: <span class="string">&quot;jack&quot;</span>, Age: <span class="number">12</span>&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ go build -gcflags <span class="string">&quot;-m -l&quot;</span> main.go </span><br><span class="line"><span class="comment"># command-line-arguments</span></span><br><span class="line">./main.go:9:14: leaking param: u to result ~r1 level=0</span><br><span class="line">./main.go:14:14: &amp;User literal does not escape</span><br></pre></td></tr></table></figure><p>使其逃逸：被外部所引用，将分配到堆上</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> User <span class="keyword">struct</span> &#123;</span><br><span class="line">ID   <span class="keyword">int</span></span><br><span class="line">Name <span class="keyword">string</span></span><br><span class="line">Age  <span class="keyword">byte</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetUser</span><span class="params">(u User)</span> *<span class="title">User</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> &amp;u</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">_ = GetUser(User&#123;ID: <span class="number">1</span>, Name: <span class="string">&quot;jack&quot;</span>, Age: <span class="number">12</span>&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ go build -gcflags <span class="string">&quot;-m -l&quot;</span> main.go </span><br><span class="line"><span class="comment"># command-line-arguments</span></span><br><span class="line">./main.go:9:14: moved to heap: u</span><br></pre></td></tr></table></figure><h1 id="2-new和make："><a href="#2-new和make：" class="headerlink" title="2. new和make："></a>2. new和make：</h1><ul><li><p>new：</p><ul><li>分配内存</li><li>设置零值</li><li>返回指针（重要）</li></ul></li><li><p>make:</p><ul><li>sice, map, chan</li><li>分配内存</li><li>返回对象 (对象本身为引用类型，不需要返回指针)</li></ul></li></ul><h1 id="3-Go类型断言："><a href="#3-Go类型断言：" class="headerlink" title="3. Go类型断言："></a>3. Go类型断言：</h1><p>1) Type Assertion</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">t := o.(T)</span><br><span class="line">t, ok := o.(T)</span><br></pre></td></tr></table></figure><p>2) Type Switch</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> o.(<span class="keyword">type</span>) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="keyword">int</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="keyword">string</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="literal">nil</span>:</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="4-slice"><a href="#4-slice" class="headerlink" title="4. slice"></a>4. slice</h1><h2 id="4-1-slice扩容的内存管理"><a href="#4-1-slice扩容的内存管理" class="headerlink" title="4.1 slice扩容的内存管理"></a>4.1 slice扩容的内存管理</h2><ul><li>翻新扩展：当前元素为 kindNoPointers，将在老 Slice cap 的地址后继续申请空间用于扩容</li><li>举家搬迁：重新申请一块内存地址，整体迁移并扩容</li></ul><p>cap &lt; 1024: cap = cap * 2<br>cap &gt;= 1024: cap = cap + cap/4</p><h2 id="4-2-empty-amp-nil-slice"><a href="#4-2-empty-amp-nil-slice" class="headerlink" title="4.2 empty &amp; nil slice"></a>4.2 empty &amp; nil slice</h2><p>len 和 cap 均等于0</p><p>1) empty: <code>arary -&gt; []int&#123;&#125;</code> 指向空数组</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s := []<span class="keyword">int</span>&#123;&#125;</span><br><span class="line">s = <span class="built_in">make</span>([]<span class="keyword">int</span>, <span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>2) nil: <code>array -&gt; nil</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> s []<span class="keyword">int</span></span><br></pre></td></tr></table></figure><h1 id="5-指针"><a href="#5-指针" class="headerlink" title="5. 指针"></a>5. 指针</h1><h2 id="5-1-空指针"><a href="#5-1-空指针" class="headerlink" title="5.1 空指针"></a>5.1 空指针</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> p1 *<span class="keyword">int</span></span><br><span class="line"><span class="keyword">var</span> p2 = <span class="built_in">new</span>(<span class="keyword">int</span>)</span><br><span class="line"></span><br><span class="line">fmt.Println(p1 == <span class="literal">nil</span>) <span class="comment">// true</span></span><br><span class="line">fmt.Println(p2 == <span class="literal">nil</span>) <span class="comment">// false</span></span><br><span class="line"></span><br><span class="line">fmt.Println(*p1) <span class="comment">// panic: nil pointer dereference</span></span><br><span class="line">fmt.Println(*p2) <span class="comment">// 0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="6-slice-参数"><a href="#6-slice-参数" class="headerlink" title="6. slice 参数"></a>6. slice 参数</h1><ul><li>可通过下标修改原始slice的元素值</li><li>append操作，会改变slice指向的底层数组</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">a := <span class="built_in">make</span>([]<span class="keyword">int</span>, <span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">fmt.Printf(<span class="string">&quot;a=%v, len=%d, cap=%d, ptr=%p\n&quot;</span>, a, <span class="built_in">len</span>(a), <span class="built_in">cap</span>(a), &amp;a)</span><br><span class="line"></span><br><span class="line">foo(a)</span><br><span class="line">fmt.Printf(<span class="string">&quot;a=%v, len=%d, cap=%d, ptr=%p\n&quot;</span>, a, <span class="built_in">len</span>(a), <span class="built_in">cap</span>(a), &amp;a)</span><br><span class="line"></span><br><span class="line">bar(&amp;a)</span><br><span class="line">fmt.Printf(<span class="string">&quot;a=%v, len=%d, cap=%d, ptr=%p\n&quot;</span>, a, <span class="built_in">len</span>(a), <span class="built_in">cap</span>(a), &amp;a)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">foo</span><span class="params">(a []<span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">a[<span class="number">0</span>] = <span class="number">9</span>            <span class="comment">// slice副本指向的 array 未变，所以能够修改原始 a 的值</span></span><br><span class="line">a = <span class="built_in">append</span>(a, <span class="number">1</span>, <span class="number">2</span>) <span class="comment">// append操作，a指向的地址改变</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;%p\n&quot;</span>, &amp;a)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">bar</span><span class="params">(a *[]<span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">*a = <span class="built_in">append</span>(*a, <span class="number">5</span>, <span class="number">6</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="7-并发读写map"><a href="#7-并发读写map" class="headerlink" title="7. 并发读写map"></a>7. 并发读写map</h1><p>fatal error: concurrent map read and map write</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">mapTest</span><span class="params">()</span></span> &#123;</span><br><span class="line">m := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">int</span>]<span class="keyword">int</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">m[<span class="number">0</span>] = <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">_ = m[<span class="number">0</span>]</span><br><span class="line">&#125;</span><br><span class="line">&#125;()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解决方案：sync.Map</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">//mapTest()</span></span><br><span class="line">syncMap()</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-time.After(time.Second):</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">syncMap</span><span class="params">()</span></span> &#123;</span><br><span class="line">m := sync.Map&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">m.Store(<span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">_, _ = m.Load(<span class="number">0</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="8-Go-接口"><a href="#8-Go-接口" class="headerlink" title="8. Go 接口"></a>8. Go 接口</h1><p>Go 接口为非侵入式接口</p><ul><li>非侵入式接口: 接口的定义者无需知道接口被哪些类型实现了, 而接口的实现者也不需要知道实现了哪些接口, 无需指明已经实现了哪些接口, 只需要关注自己实现的是什么样的接口即可. 编译器会自己识别哪个类型实现哪些接口</li><li>侵入式接口: 主要体现是实现接口的类需要很明确的声明自己实现了哪个接口</li></ul><h1 id="9-Go-并发"><a href="#9-Go-并发" class="headerlink" title="9. Go 并发"></a>9. Go 并发</h1><p>CSP: Communicating Sequential Process 通信顺序进程，消息传递模型</p><p>Goroutine: 轻量级线程, 简称协程。一个Goroutine 的栈启动很小(2k或者4k)。当Goroutine的栈空间不够的时候,会根据需要动态伸缩栈大小(甚至可到到1G)。</p><p>Go 语言线程模型：</p><ul><li>M: 内核线程（物理线程）</li><li>P: 执行Go代码所必须的资源（上下文环境）</li><li>G: 待执行的Go代码，即协程本身</li></ul><h2 id="9-1-sync-Mutex-互斥锁"><a href="#9-1-sync-Mutex-互斥锁" class="headerlink" title="9.1 sync.Mutex 互斥锁"></a>9.1 sync.Mutex 互斥锁</h2><p>解决 goroutine 抢占公共资源问题</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> m = <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">int</span>]<span class="keyword">int</span>)</span><br><span class="line"><span class="keyword">var</span> lock sync.Mutex</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">1</span>; i &lt;= <span class="number">10</span>; i++ &#123;</span><br><span class="line"><span class="keyword">go</span> factorial(i)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">time.Sleep(time.Second * <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> k, v := <span class="keyword">range</span> m &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;%d!=%d\n&quot;</span>, k, v)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">factorial</span><span class="params">(n <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">res := <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">1</span>; i &lt;= n; i++ &#123;</span><br><span class="line">res *= i</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">lock.Lock()</span><br><span class="line">m[n] = res</span><br><span class="line">lock.Unlock()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="9-2-并发数据同步"><a href="#9-2-并发数据同步" class="headerlink" title="9.2 并发数据同步"></a>9.2 并发数据同步</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">add</span><span class="params">(n <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">defer</span> wg.Done()</span><br><span class="line"></span><br><span class="line"><span class="comment">// method1: Found 1 data race</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ &#123;</span><br><span class="line">runtime.Gosched()</span><br><span class="line">c++</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// method2: 正常</span></span><br><span class="line"><span class="comment">/*for i := 0; i &lt; n; i++ &#123;</span></span><br><span class="line"><span class="comment">atomic.AddInt64(&amp;c, 1)</span></span><br><span class="line"><span class="comment">runtime.Gosched()</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// method3: 正常</span></span><br><span class="line"><span class="comment">/*defer lock.Unlock()</span></span><br><span class="line"><span class="comment">lock.Lock()</span></span><br><span class="line"><span class="comment">for i := 0; i &lt; n; i++ &#123;</span></span><br><span class="line"><span class="comment">c++</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">wg.Add(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> add(<span class="number">3</span>)</span><br><span class="line"><span class="keyword">go</span> add(<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line">wg.Wait()</span><br><span class="line">fmt.Println(<span class="string">&quot;c =&quot;</span>, c)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>检测并发竞争状态：<code>go run --race main.go</code></p><p><code>sync.WaitGroup</code>: 等待组。用于等待一组线程的结束。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(wg *WaitGroup)</span> <span class="title">Add</span><span class="params">(delta <span class="keyword">int</span>)</span>   // 等待个数计数器</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(wg *WaitGroup)</span> <span class="title">Done</span><span class="params">()</span>           // 子线程结束，计数器减1</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(wg *WaitGroup)</span> <span class="title">Wait</span><span class="params">()</span>           // 阻塞等待所有子线程结束，即计数器为0</span></span><br></pre></td></tr></table></figure><p><code>sync/atomic</code>: 原子操作包。以底层的加锁机制来同步访问整型变量和指针。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">AddInt64</span><span class="params">(addr *<span class="keyword">int64</span>, delta <span class="keyword">int64</span>)</span> <span class="params">(<span class="built_in">new</span> <span class="keyword">int64</span>)</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">LoadInt64</span><span class="params">(addr *<span class="keyword">int64</span>)</span> <span class="params">(val <span class="keyword">int64</span>)</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">StoreInt64</span><span class="params">(addr *<span class="keyword">int64</span>, val <span class="keyword">int64</span>)</span></span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Go Context</title>
      <link href="/2020/07/16/Go%20Context/"/>
      <url>/2020/07/16/Go%20Context/</url>
      
        <content type="html"><![CDATA[<h1 id="1-简介"><a href="#1-简介" class="headerlink" title="1. 简介"></a>1. 简介</h1><p>context 管理了一组呈现树状结构的 Goroutine, 让每个Goroutine 都拥有相同的上下文, 并且可以在这个上下文中传递数据</p><h2 id="1-1-结构图"><a href="#1-1-结构图" class="headerlink" title="1.1 结构图"></a>1.1 结构图</h2><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/golang/go_context.png" alt="go_context"></p><span id="more"></span><h2 id="1-2-Context-interface"><a href="#1-2-Context-interface" class="headerlink" title="1.2 Context interface"></a>1.2 Context interface</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Context <span class="keyword">interface</span> &#123;</span><br><span class="line">    <span class="comment">// 标识deadline是否已经设置了, 没有设置时, ok的值是false, 并返回初始的time.Time</span></span><br><span class="line">Deadline() (deadline time.Time, ok <span class="keyword">bool</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返回一个channel, 当返回关闭的channel时可以执行一些操作</span></span><br><span class="line">Done() &lt;-<span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 描述context关闭的原因,通常在Done()收到关闭通知之后才能知道原因</span></span><br><span class="line">Err() error</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取上游Goroutine 传递给下游Goroutine的某些数据</span></span><br><span class="line">    Value(key <span class="keyword">interface</span>&#123;&#125;) <span class="keyword">interface</span>&#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方法说明：</p><ul><li>Deadline: 设置截止时间。第一个参数表示截止时间点，第二个参数是否设置了截止时间。未设置截止时间，需要通过cancel()来取消</li><li>Done(): 在被cancel时返回的一个只读通道</li><li>Err(): 被cancel的原因</li><li>Value(): 绑定到Context上的值</li></ul><h2 id="1-3-emptyCtx"><a href="#1-3-emptyCtx" class="headerlink" title="1.3 emptyCtx"></a>1.3 emptyCtx</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// An emptyCtx is never canceled, has no values, and has no deadline. It is not</span></span><br><span class="line"><span class="comment">// struct&#123;&#125;, since vars of this type must have distinct addresses.</span></span><br><span class="line"><span class="keyword">type</span> emptyCtx <span class="keyword">int</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(*emptyCtx)</span> <span class="title">Deadline</span><span class="params">()</span> <span class="params">(deadline time.Time, ok <span class="keyword">bool</span>)</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(*emptyCtx)</span> <span class="title">Done</span><span class="params">()</span> &lt;-<span class="title">chan</span> <span class="title">struct</span></span>&#123;&#125; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(*emptyCtx)</span> <span class="title">Err</span><span class="params">()</span> <span class="title">error</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(*emptyCtx)</span> <span class="title">Value</span><span class="params">(key <span class="keyword">interface</span>&#123;&#125;)</span> <span class="title">interface</span></span>&#123;&#125; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(e *emptyCtx)</span> <span class="title">String</span><span class="params">()</span> <span class="title">string</span></span> &#123;</span><br><span class="line">    <span class="keyword">switch</span> e &#123;</span><br><span class="line">    <span class="keyword">case</span> background:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;context.Background&quot;</span></span><br><span class="line">    <span class="keyword">case</span> todo:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;context.TODO&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;unknown empty Context&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">    background = <span class="built_in">new</span>(emptyCtx)</span><br><span class="line">    todo       = <span class="built_in">new</span>(emptyCtx)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Background returns a non-nil, empty Context. It is never canceled, has no</span></span><br><span class="line"><span class="comment">// values, and has no deadline. It is typically used by the main function,</span></span><br><span class="line"><span class="comment">// initialization, and tests, and as the top-level Context for incoming</span></span><br><span class="line"><span class="comment">// requests.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Background</span><span class="params">()</span> <span class="title">Context</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> background</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// TODO returns a non-nil, empty Context. Code should use context.TODO when</span></span><br><span class="line"><span class="comment">// it&#x27;s unclear which Context to use or it is not yet available (because the</span></span><br><span class="line"><span class="comment">// surrounding function has not yet been extended to accept a Context</span></span><br><span class="line"><span class="comment">// parameter).</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TODO</span><span class="params">()</span> <span class="title">Context</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> todo</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-4-cancelCtx"><a href="#1-4-cancelCtx" class="headerlink" title="1.4 cancelCtx"></a>1.4 cancelCtx</h2><p>对外暴露了 Err() Done() String() 方法</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// A cancelCtx can be canceled. When canceled, it also cancels any children</span></span><br><span class="line"><span class="comment">// that implement canceler.</span></span><br><span class="line"><span class="keyword">type</span> cancelCtx <span class="keyword">struct</span> &#123;</span><br><span class="line">    Context</span><br><span class="line"></span><br><span class="line">    mu       sync.Mutex            <span class="comment">// protects following fields</span></span><br><span class="line">    done     <span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;         <span class="comment">// created lazily, closed by first cancel call</span></span><br><span class="line">    children <span class="keyword">map</span>[canceler]<span class="keyword">struct</span>&#123;&#125; <span class="comment">// set to nil by the first cancel call</span></span><br><span class="line">    err      error                 <span class="comment">// set to non-nil by the first cancel call</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *cancelCtx)</span> <span class="title">Done</span><span class="params">()</span> &lt;-<span class="title">chan</span> <span class="title">struct</span></span>&#123;&#125; &#123;</span><br><span class="line">    c.mu.Lock()</span><br><span class="line">    <span class="keyword">if</span> c.done == <span class="literal">nil</span> &#123;</span><br><span class="line">        c.done = <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    d := c.done</span><br><span class="line">    c.mu.Unlock()</span><br><span class="line">    <span class="keyword">return</span> d</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *cancelCtx)</span> <span class="title">Err</span><span class="params">()</span> <span class="title">error</span></span> &#123;</span><br><span class="line">    c.mu.Lock()</span><br><span class="line">    err := c.err</span><br><span class="line">    c.mu.Unlock()</span><br><span class="line">    <span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *cancelCtx)</span> <span class="title">String</span><span class="params">()</span> <span class="title">string</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> fmt.Sprintf(<span class="string">&quot;%v.WithCancel&quot;</span>, c.Context)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// cancel closes c.done, cancels each of c&#x27;s children, and, if</span></span><br><span class="line"><span class="comment">// removeFromParent is true, removes c from its parent&#x27;s children.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *cancelCtx)</span> <span class="title">cancel</span><span class="params">(removeFromParent <span class="keyword">bool</span>, err error)</span></span> &#123;</span><br><span class="line">    <span class="keyword">if</span> err == <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="built_in">panic</span>(<span class="string">&quot;context: internal error: missing cancel error&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    c.mu.Lock()</span><br><span class="line">    <span class="keyword">if</span> c.err != <span class="literal">nil</span> &#123;</span><br><span class="line">        c.mu.Unlock()</span><br><span class="line">        <span class="keyword">return</span> <span class="comment">// already canceled</span></span><br><span class="line">    &#125;</span><br><span class="line">    c.err = err</span><br><span class="line">    <span class="keyword">if</span> c.done == <span class="literal">nil</span> &#123;</span><br><span class="line">        c.done = closedchan</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">close</span>(c.done)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> child := <span class="keyword">range</span> c.children &#123;</span><br><span class="line">        <span class="comment">// <span class="doctag">NOTE:</span> acquiring the child&#x27;s lock while holding parent&#x27;s lock.</span></span><br><span class="line">        child.cancel(<span class="literal">false</span>, err)</span><br><span class="line">    &#125;</span><br><span class="line">    c.children = <span class="literal">nil</span></span><br><span class="line">    c.mu.Unlock()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> removeFromParent &#123;</span><br><span class="line">        removeChild(c.Context, c)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-5-valueCtx"><a href="#1-5-valueCtx" class="headerlink" title="1.5 valueCtx"></a>1.5 valueCtx</h2><p>通过 valueCtx 结构知道仅是在Context 的基础上增加了元素 key 和 value</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// A valueCtx carries a key-value pair. It implements Value for that key and</span></span><br><span class="line"><span class="comment">// delegates all other calls to the embedded Context.</span></span><br><span class="line"><span class="keyword">type</span> valueCtx <span class="keyword">struct</span> &#123;</span><br><span class="line">    Context</span><br><span class="line">    key, val <span class="keyword">interface</span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *valueCtx)</span> <span class="title">String</span><span class="params">()</span> <span class="title">string</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> fmt.Sprintf(<span class="string">&quot;%v.WithValue(%#v, %#v)&quot;</span>, c.Context, c.key, c.val)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *valueCtx)</span> <span class="title">Value</span><span class="params">(key <span class="keyword">interface</span>&#123;&#125;)</span> <span class="title">interface</span></span>&#123;&#125; &#123;</span><br><span class="line">    <span class="keyword">if</span> c.key == key &#123;</span><br><span class="line">        <span class="keyword">return</span> c.val</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> c.Context.Value(key)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-6-timerCtx"><a href="#1-6-timerCtx" class="headerlink" title="1.6 timerCtx"></a>1.6 timerCtx</h2><p>在cancelCtx 基础上增加了字段 timer 和 deadline</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> timerCtx <span class="keyword">struct</span> &#123;</span><br><span class="line">    cancelCtx</span><br><span class="line">    timer *time.Timer <span class="comment">// Under cancelCtx.mu.</span></span><br><span class="line"></span><br><span class="line">    deadline time.Time</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *timerCtx)</span> <span class="title">Deadline</span><span class="params">()</span> <span class="params">(deadline time.Time, ok <span class="keyword">bool</span>)</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> c.deadline, <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *timerCtx)</span> <span class="title">String</span><span class="params">()</span> <span class="title">string</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> fmt.Sprintf(<span class="string">&quot;%v.WithDeadline(%s [%s])&quot;</span>, c.cancelCtx.Context, c.deadline, time.Until(c.deadline))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *timerCtx)</span> <span class="title">cancel</span><span class="params">(removeFromParent <span class="keyword">bool</span>, err error)</span></span> &#123;</span><br><span class="line">    c.cancelCtx.cancel(<span class="literal">false</span>, err)</span><br><span class="line">    <span class="keyword">if</span> removeFromParent &#123;</span><br><span class="line">        <span class="comment">// Remove this timerCtx from its parent cancelCtx&#x27;s children.</span></span><br><span class="line">        removeChild(c.cancelCtx.Context, c)</span><br><span class="line">    &#125;</span><br><span class="line">    c.mu.Lock()</span><br><span class="line">    <span class="keyword">if</span> c.timer != <span class="literal">nil</span> &#123;</span><br><span class="line">        c.timer.Stop()</span><br><span class="line">        c.timer = <span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line">    c.mu.Unlock()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="2-使用示例"><a href="#2-使用示例" class="headerlink" title="2. 使用示例"></a>2. 使用示例</h1><ul><li>通过 Background() 和 TODO() 创建最 emptyCtx 实例 ,通常是作为根节点</li><li>通过 WithCancel() 创建 cancelCtx 实例</li><li>通过 WithValue() 创建 valueCtx 实例</li><li>通过 WithDeadline 和 WithTimeout 创建 timerCtx 实例</li></ul><h2 id="2-1-WithCancel"><a href="#2-1-WithCancel" class="headerlink" title="2.1 WithCancel"></a>2.1 WithCancel</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Operate1</span><span class="params">(ctx context.Context)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-ctx.Done():</span><br><span class="line">fmt.Println(<span class="string">&quot;Operate1 done.&quot;</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">fmt.Println(<span class="string">&quot;Operate1&quot;</span>, time.Now().Format(<span class="string">&quot;2006-01-02 15:04:05&quot;</span>))</span><br><span class="line">time.Sleep(<span class="number">2</span> * time.Second)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Operate2</span><span class="params">(ctx context.Context)</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;Operate2&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Do1</span><span class="params">(ctx context.Context)</span></span> &#123;</span><br><span class="line"><span class="keyword">go</span> Do2(ctx)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-ctx.Done():</span><br><span class="line">fmt.Println(<span class="string">&quot;Do1 done.&quot;</span>)</span><br><span class="line">fmt.Println(ctx.Err())</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">fmt.Println(<span class="string">&quot;Do1:&quot;</span>, time.Now().Format(<span class="string">&quot;2006-01-02 15:04:05&quot;</span>))</span><br><span class="line">time.Sleep(<span class="number">2</span> * time.Second)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Do2</span><span class="params">(ctx context.Context)</span></span> &#123;</span><br><span class="line"><span class="keyword">go</span> Operate1(ctx)</span><br><span class="line"><span class="keyword">go</span> Operate2(ctx)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-ctx.Done():</span><br><span class="line">fmt.Println(<span class="string">&quot;Do2 done.&quot;</span>)</span><br><span class="line">fmt.Println(ctx.Err())</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">fmt.Println(<span class="string">&quot;Do2:&quot;</span>, time.Now().Format(<span class="string">&quot;2006-01-02 15:04:05&quot;</span>))</span><br><span class="line">time.Sleep(<span class="number">2</span> * time.Second)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">ctx, cancel := context.WithCancel(context.Background())</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> Do1(ctx)</span><br><span class="line"></span><br><span class="line">time.Sleep(<span class="number">5</span> * time.Second)</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">&quot;Stop all goroutines&quot;</span>)</span><br><span class="line">cancel()</span><br><span class="line"></span><br><span class="line">time.Sleep(<span class="number">2</span> * time.Second)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-2-WithDeadline"><a href="#2-2-WithDeadline" class="headerlink" title="2.2 WithDeadline"></a>2.2 WithDeadline</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">task1</span><span class="params">(ctx context.Context)</span></span> &#123;</span><br><span class="line">n := <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-ctx.Done():</span><br><span class="line">fmt.Println(ctx.Err())</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">fmt.Println(<span class="string">&quot;task1:&quot;</span>, n)</span><br><span class="line">n++</span><br><span class="line">time.Sleep(time.Second)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">task2</span><span class="params">(ctx context.Context)</span></span> &#123;</span><br><span class="line">n := <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-ctx.Done():</span><br><span class="line">fmt.Println(ctx.Err())</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">fmt.Println(<span class="string">&quot;task2:&quot;</span>, n)</span><br><span class="line">n++</span><br><span class="line">time.Sleep(time.Second)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">after5Sec := time.Now().Add(<span class="number">5</span> * time.Second)</span><br><span class="line"></span><br><span class="line">ctx, cancel := context.WithDeadline(context.Background(), after5Sec)</span><br><span class="line"><span class="keyword">defer</span> cancel()</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> task1(ctx)</span><br><span class="line"><span class="keyword">go</span> task2(ctx)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-ctx.Done():</span><br><span class="line">fmt.Println(<span class="string">&quot;Main done:&quot;</span>, ctx.Err())</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-3-WithTimeout"><a href="#2-3-WithTimeout" class="headerlink" title="2.3 WithTimeout"></a>2.3 WithTimeout</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">task</span><span class="params">(ctx context.Context)</span></span> &#123;</span><br><span class="line">n := <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-ctx.Done():</span><br><span class="line">fmt.Println(<span class="string">&quot;task is done.&quot;</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">fmt.Println(<span class="string">&quot;task:&quot;</span>, n)</span><br><span class="line">n++</span><br><span class="line">time.Sleep(time.Second)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">ctx, cancel := context.WithTimeout(context.Background(), <span class="number">6</span>*time.Second)</span><br><span class="line"><span class="keyword">defer</span> cancel()</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> task(ctx)</span><br><span class="line"></span><br><span class="line">n := <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-time.Tick(<span class="number">2</span> * time.Second):</span><br><span class="line"><span class="keyword">if</span> n == <span class="number">9</span> &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Printf(<span class="string">&quot;n=%d\n&quot;</span>, n)</span><br><span class="line">n++</span><br><span class="line"><span class="comment">//case &lt;-ctx.Done():</span></span><br><span class="line"><span class="comment">//fmt.Println(&quot;Main done:&quot;, ctx.Err())</span></span><br><span class="line"><span class="comment">//return</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-4-WithValue"><a href="#2-4-WithValue" class="headerlink" title="2.4 WithValue"></a>2.4 WithValue</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">v1</span><span class="params">(ctx context.Context)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-ctx.Done():</span><br><span class="line">fmt.Println(<span class="string">&quot;v1 done:&quot;</span>, ctx.Err())</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">fmt.Println(ctx.Value(<span class="string">&quot;key&quot;</span>))</span><br><span class="line">time.Sleep(<span class="number">3</span> * time.Second)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">v2</span><span class="params">(ctx context.Context)</span></span> &#123;</span><br><span class="line">fmt.Println(ctx.Value(<span class="string">&quot;key&quot;</span>))</span><br><span class="line">fmt.Println(ctx.Value(<span class="string">&quot;v3&quot;</span>))</span><br><span class="line"></span><br><span class="line">ctx = context.WithValue(ctx, <span class="string">&quot;key&quot;</span>, <span class="string">&quot;modify from v2&quot;</span>)</span><br><span class="line"><span class="keyword">go</span> v1(ctx)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">v3</span><span class="params">(ctx context.Context)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> v := ctx.Value(<span class="string">&quot;key&quot;</span>); v != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;Key =&quot;</span>, v)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ctx = context.WithValue(ctx, <span class="string">&quot;v3&quot;</span>, <span class="string">&quot;value of v3&quot;</span>)</span><br><span class="line"><span class="keyword">go</span> v2(ctx)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-ctx.Done():</span><br><span class="line">fmt.Println(<span class="string">&quot;v3 done:&quot;</span>, ctx.Err())</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">fmt.Println(<span class="string">&quot;v3&quot;</span>)</span><br><span class="line">time.Sleep(<span class="number">2</span> * time.Second)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">ctx, cancel := context.WithCancel(context.Background())</span><br><span class="line">ctx = context.WithValue(ctx, <span class="string">&quot;key&quot;</span>, <span class="string">&quot;main&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> v3(ctx)</span><br><span class="line"></span><br><span class="line">time.Sleep(<span class="number">10</span> * time.Second)</span><br><span class="line">cancel()</span><br><span class="line">time.Sleep(<span class="number">3</span> * time.Second)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="3-其他示例"><a href="#3-其他示例" class="headerlink" title="3. 其他示例"></a>3. 其他示例</h1><h2 id="3-1-关闭协程"><a href="#3-1-关闭协程" class="headerlink" title="3.1 关闭协程"></a>3.1 关闭协程</h2><h3 id="3-1-1-使用channel"><a href="#3-1-1-使用channel" class="headerlink" title="3.1.1 使用channel"></a>3.1.1 使用channel</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">c := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">bool</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">5</span>; i++ &#123;</span><br><span class="line"><span class="keyword">go</span> monitor(c, i)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">time.Sleep(time.Second)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 关闭channel</span></span><br><span class="line"><span class="built_in">close</span>(c)</span><br><span class="line"></span><br><span class="line">time.Sleep(<span class="number">5</span> * time.Second)</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">&quot;Done&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">monitor</span><span class="params">(c <span class="keyword">chan</span> <span class="keyword">bool</span>, num <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> v := &lt;-c:</span><br><span class="line">fmt.Printf(<span class="string">&quot;Monitor[%d], receive [%v], stopping.\n&quot;</span>, num, v)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">fmt.Printf(<span class="string">&quot;Monitor[%d] is running now.\n&quot;</span>, num)</span><br><span class="line">time.Sleep(<span class="number">2</span> * time.Second)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-1-2-使用Context"><a href="#3-1-2-使用Context" class="headerlink" title="3.1.2 使用Context"></a>3.1.2 使用Context</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">ctx, cancel := context.WithCancel(context.Background())</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">5</span>; i++ &#123;</span><br><span class="line"><span class="keyword">go</span> monitor(ctx, i)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">time.Sleep(time.Second)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 取消操作</span></span><br><span class="line">cancel()</span><br><span class="line"></span><br><span class="line">time.Sleep(<span class="number">5</span> * time.Second)</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">&quot;Done&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">monitor</span><span class="params">(ctx context.Context, num <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> v := &lt;-ctx.Done():</span><br><span class="line">fmt.Printf(<span class="string">&quot;Monitor[%d], receive [%v], stopping.\n&quot;</span>, num, v)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">fmt.Printf(<span class="string">&quot;Monitor[%d] is running now.\n&quot;</span>, num)</span><br><span class="line">time.Sleep(<span class="number">2</span> * time.Second)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-2-WithDeadline-和-WithTimeout"><a href="#3-2-WithDeadline-和-WithTimeout" class="headerlink" title="3.2 WithDeadline 和 WithTimeout"></a>3.2 WithDeadline 和 WithTimeout</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">//ctx, cancel := context.WithDeadline(context.Background(), time.Now().Add(time.Second))</span></span><br><span class="line">ctx, cancel := context.WithTimeout(context.Background(), time.Second)</span><br><span class="line"><span class="keyword">defer</span> cancel()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">5</span>; i++ &#123;</span><br><span class="line"><span class="keyword">go</span> monitor(ctx, i)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">time.Sleep(<span class="number">5</span> * time.Second)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err := ctx.Err(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;Reason: %v\n&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">&quot;Done&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">monitor</span><span class="params">(ctx context.Context, num <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-ctx.Done():</span><br><span class="line">fmt.Printf(<span class="string">&quot;Monitor[%d] stopped.\n&quot;</span>, num)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">fmt.Printf(<span class="string">&quot;Monitor[%d] is running...\n&quot;</span>, num)</span><br><span class="line">time.Sleep(<span class="number">2</span> * time.Second)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-3-WithValue"><a href="#3-3-WithValue" class="headerlink" title="3.3 WithValue"></a>3.3 WithValue</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">ctx1, cancel := context.WithCancel(context.Background())</span><br><span class="line">ctx2, cancel := context.WithTimeout(ctx1, time.Second)</span><br><span class="line">ctx3 := context.WithValue(ctx2, <span class="string">&quot;name&quot;</span>, <span class="string">&quot;jack&quot;</span>)</span><br><span class="line"><span class="keyword">defer</span> cancel()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">5</span>; i++ &#123;</span><br><span class="line"><span class="keyword">go</span> monitor(ctx3, i)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">time.Sleep(<span class="number">5</span> * time.Second)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err := ctx3.Err(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;Reason: %v\n&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">&quot;Done&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">monitor</span><span class="params">(ctx context.Context, num <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-ctx.Done():</span><br><span class="line">fmt.Printf(<span class="string">&quot;Monitor[%d] stopped.\n&quot;</span>, num)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">value := ctx.Value(<span class="string">&quot;name&quot;</span>)</span><br><span class="line">fmt.Printf(<span class="string">&quot;Monitor[%d] is running, value is %v\n&quot;</span>, num, value)</span><br><span class="line">time.Sleep(<span class="number">2</span> * time.Second)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>MySQL</title>
      <link href="/2020/03/24/MySQL/"/>
      <url>/2020/03/24/MySQL/</url>
      
        <content type="html"><![CDATA[<h1 id="1-简介"><a href="#1-简介" class="headerlink" title="1. 简介"></a>1. 简介</h1><h2 id="1-1-架构图"><a href="#1-1-架构图" class="headerlink" title="1.1 架构图"></a>1.1 架构图</h2><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/mysql/mysql-arch.png" alt="a"></p><h2 id="1-2-SQL-执行流程"><a href="#1-2-SQL-执行流程" class="headerlink" title="1.2 SQL 执行流程"></a>1.2 SQL 执行流程</h2><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/mysql/mysql-execute-sql.png" alt="a"></p><span id="more"></span><p><strong>连接器:</strong> 处理客户端的连接、获取用户权限、维持和管理连接</p><p><strong>查询缓存</strong>: 连接器拿到查询SQL后，先通过key-value方式查询缓存，如果缓存存在则直接返回。但是，它非常容易失效，只要表进行了更新，该表相关的所有查询缓存都会被清空。MySQL 8.0 已删除该功能</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> @<span class="variable">@query</span>_cache_type;</span><br></pre></td></tr></table></figure><p><strong>分析器</strong>:</p><ul><li><p>词法分析 (识别关键字，操作，表名，列名)</p></li><li><p>语法分析 (判断是否符合语法）</p></li></ul><p><strong>优化器:</strong> 决定使用哪个索引；有多表关联时，决定表的连接顺序。最后输出执行方案</p><p><strong>执行器:</strong> 执行SQL时，先判断用户是否对表有查询权限。如果没有，返回没有权限的错误。如果有权限，执行语句扫描表中的数据</p><h2 id="1-3-数据类型"><a href="#1-3-数据类型" class="headerlink" title="1.3 数据类型"></a>1.3 数据类型</h2><ul><li>DECIMAL：高精度。float/double 浮点数近似值</li><li>CHAR：定长，存取效率高；VARCHAR变长，节约磁盘空间。</li><li>VARCHAR(50)和VARCHAR(200): 存储相同字符串，所占空间相同，但后者在排序时会消耗更多内存，因为order by采取fixed_length计算col长度。</li><li>INT(10): 10表示数据的长度，不是存储数据的大小。</li><li>CHAR(10): 10位固定字符串，不足补空格</li><li>VARCHAR(10): 10位可变字符串，不补空格</li><li>TEXT/BLOB：尽量避免使用，查询时会使用临时表，导致严重性能开销</li><li>TIMESTAMP：比 datetime 空间效率高</li></ul><h1 id="2-引擎"><a href="#2-引擎" class="headerlink" title="2. 引擎"></a>2. 引擎</h1><table><thead><tr><th></th><th>MyISAM</th><th>InnoDB</th></tr></thead><tbody><tr><td>存储结构</td><td>每张表三个文件：表结构(.frm)，表数据(.MYD)，表索引(.MYI)</td><td>所有表存储在一个或多个文件中，甚至独立的表空间文件中。</td></tr><tr><td>存储空间</td><td>可被压缩，存储空间减小</td><td>需要更多的内存和存储，会在内存中建立其专用的缓冲池用于高速缓冲数据和索引</td></tr><tr><td>备份恢复</td><td>通过拷贝表相关的三个文件即可</td><td>拷贝数据文件、备份binlog，或使用mysqldump。</td></tr><tr><td>文件格式</td><td>数据和索引分开存储 <code>.MYD</code> &amp; <code>.MYI</code></td><td>数据和索引集中存储  <code>.idb</code></td></tr><tr><td>存储顺序</td><td>按记录插入顺序保存</td><td>按主键大小有序插入</td></tr><tr><td>外键</td><td>不支持</td><td>支持</td></tr><tr><td>事务</td><td>不支持</td><td>支持</td></tr><tr><td>锁</td><td>表锁，不适合高并发</td><td>表锁、行锁，适合高并发</td></tr><tr><td>SELECT</td><td>MyIASM 更优</td><td></td></tr><tr><td>I &amp; U &amp; D</td><td></td><td>InnoDB 更优</td></tr><tr><td>索引实现方式</td><td>B+树，堆表</td><td>B+树，索引组织表</td></tr><tr><td>哈希索引</td><td>不支持</td><td>支持</td></tr><tr><td>全文索引</td><td>支持</td><td>不支持</td></tr></tbody></table><h2 id="2-1-聚簇索引"><a href="#2-1-聚簇索引" class="headerlink" title="2.1 聚簇索引"></a>2.1 聚簇索引</h2><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/mysql/mysql-clustered-index-innodb.png" alt="a"></p><p>聚簇索引：叶节点存储了行数据、主键及其他索引的列数据。主键索引、覆盖索引都非常高效。</p><p>非聚簇索引：叶节点只存储了行数据地址，需要再次寻址才能得到数据</p><p>InnoDB: 主键使用聚簇索引</p><p>MyISAM: 主键和普通索引，都是非聚合索引</p><p>聚簇索引优点：数据检索高效</p><p>聚簇索引缺点：</p><ul><li>插入速度严重依赖插入顺序</li><li>更新主键代价很高，会导致被更新行移动</li><li>二级索引访问需要两次索引查找，第一次找主键，第二次根据主键找到数据</li></ul><h2 id="2-2-InnoDB"><a href="#2-2-InnoDB" class="headerlink" title="2.2 InnoDB"></a>2.2 InnoDB</h2><p><strong>支持事务、行锁、外键约束，MyISAM均不支持</strong>。</p><p>InnoDB 的四大特性：</p><ul><li>插入缓冲 (insert buffer)</li><li>二次写 (double write)</li><li>自适应哈希索引 (ahi)</li><li>预读 (read ahead)</li></ul><h1 id="3-索引"><a href="#3-索引" class="headerlink" title="3. 索引"></a>3. 索引</h1><h2 id="3-1-什么是索引"><a href="#3-1-什么是索引" class="headerlink" title="3.1 什么是索引"></a>3.1 什么是索引</h2><p>索引是一种特殊的文件，它采用排序的数据结构，保存表中记录的引用指针。能实现快速检索表数据。底层实现为B树及B+树。</p><p><strong>索引原理：</strong></p><ul><li>把创建了索引的列进行排序</li><li>把排序结果生成倒排表</li><li>在倒排表内容上拼上数据地址链</li><li>查询时，先拿到倒排表内容，再取出地址链，从而拿到具体数据</li></ul><p><strong>索引的优缺点：</strong></p><ul><li>优点：提高了数据的检索速度</li><li>缺点：<ul><li>时间方面：创建和维护索引，到要消耗时间。对表数据进行写操作，索引也要进行维护，从而降低了执行效率</li><li>空间方面：需要占用额外的磁盘</li></ul></li></ul><p><strong>使用场景：</strong></p><ul><li>where</li><li>order by, group by</li><li>join</li></ul><p><strong>覆盖索引：</strong>select 的字段，<strong>都建立了索引</strong>，此时将直接从索引表返回数据，不需要再次扫描数据表。索引覆盖能够很大的提高查询效率。</p><h2 id="3-2-数据结构"><a href="#3-2-数据结构" class="headerlink" title="3.2 数据结构"></a>3.2 数据结构</h2><h3 id="3-2-1-BTree-amp-B-Tree"><a href="#3-2-1-BTree-amp-B-Tree" class="headerlink" title="3.2.1 BTree &amp; B+Tree"></a>3.2.1 BTree &amp; B+Tree</h3><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/mysql/mysql-btree-bptree.png" alt="a"></p><table><thead><tr><th>BTree</th><th>B+Tree</th></tr></thead><tbody><tr><td>所有节点都有数据指针</td><td>只有叶子节点有数据指针</td></tr><tr><td>key可能不在叶子节点上，因此搜索需要更多时间</td><td>key都在叶子节点上，因此搜索更快，更准</td></tr><tr><td>树中没有key的重复项</td><td>key重复，所有节点都在叶子上</td></tr><tr><td>插入会耗费更多时间</td><td>插入容易</td></tr><tr><td>内部节点删除非常复杂，树需要进行大量转换</td><td>删除任何节点都很容易，因为所有节点都在叶子节点上</td></tr><tr><td>叶子节点不存储为结构链表</td><td>叶子节点存储为结构链表</td></tr><tr><td>没有多余的搜索键</td><td>可能存在冗余的搜索键</td></tr></tbody></table><p><strong>B+树优于B树的原因：</strong></p><ul><li><strong>B+树空间利用率更高，可减少IO次数，磁盘读写代价更低</strong>。因为B+树内部节点没有指向关键字具体信息的指针，只做索引使用，内部节点相对B树小</li><li><strong>B+树的查询效率更加稳定</strong>。B+树所有关键字的查询路径长度相同，导致每个关键字的查询效率相当。</li><li><strong>B+树增删节点的效率更高</strong>。</li></ul><p><strong>相关树总结：</strong></p><ul><li><p>平衡二叉树：基于二分法的策略提高数据的查找速度的二叉树的数据结构；</p><ul><li>每个节点最多拥有两个子节点</li><li>Left-child &lt; Node &lt; Right-child</li><li>树的左右两边的层数相差最多一层</li></ul></li><li><p>BTree: 平衡多路查找树，即查找路径不止两个</p><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/mysql/mysql-btree.png" alt="a"></p></li><li><p>B+Tree: </p><ul><li><strong>非叶子节点</strong>：不保存关键字记录的指针，只进行数据索引</li><li><strong>叶子节点</strong>：保存父节点的所有关键字记录的指针，所有数据地址必须要到叶子节点才能获取到。所以每次数据查询的次数都一样</li></ul><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/mysql/mysql-bptree.png" alt="a"></p></li></ul><p><strong>查询方式：</strong></p><ul><li><p>主键索引区：PI, 关联数据的地址，按主键查询</p></li><li><p>普通索引区：SI, 关联id的地址，然后再到达上面的地址</p></li></ul><h3 id="3-2-2-哈希索引"><a href="#3-2-2-哈希索引" class="headerlink" title="3.2.2 哈希索引"></a>3.2.2 哈希索引</h3><p>通过hash算法实现，常见hash算法有直接定址法、平方取中法、折叠法、除数取余法、随机数法等</p><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/mysql/mysql-hash-index.png" alt="a"></p><p>特点：</p><ul><li>仅支持”=”,”IN”和”&lt;=&gt;”查询，不能使用范围</li><li>检索效率非常高，索引的检索可以一次定位，不像B-Tree 索引需要从根节点到枝节点，最后才能访问到页节点这样多次的IO访问，所以 Hash 索引的查询效率要远高于 B-Tree 索引</li><li>只有Memory存储引擎显示支持hash索引</li></ul><h3 id="3-2-3-全文索引"><a href="#3-2-3-全文索引" class="headerlink" title="3.2.3 全文索引"></a>3.2.3 全文索引</h3><p>全文索引：搜索引擎使用的一种关键技术，当前 MyISAM 和 InnoDB 均支持</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tbl_article(</span><br><span class="line">`id` <span class="type">INT</span>(<span class="number">11</span>) auto_increment <span class="keyword">primary</span> key,</span><br><span class="line">    `title` <span class="type">VARCHAR</span>(<span class="number">64</span>) <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">default</span> <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    `content` TEXT</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"># 全文索引</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> tbl_article <span class="keyword">ADD</span> FULLTEXT(content);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">from</span> tbl_article <span class="keyword">WHERE</span> <span class="keyword">MATCH</span>(content) AGAINST(<span class="string">&#x27;New York&#x27;</span> <span class="keyword">IN</span> <span class="keyword">NATURAL</span> <span class="keyword">LANGUAGE</span> MODE);</span><br></pre></td></tr></table></figure><h2 id="3-3-使用原则"><a href="#3-3-使用原则" class="headerlink" title="3.3 使用原则"></a>3.3 使用原则</h2><ul><li><p>最左前缀匹配严重：联合索引尤为重要</p></li><li><p>较频繁的查询条件字段，应建立索引</p></li><li><p>更新频繁的字段，不适合做索引</p></li><li><p>数量大量重复的字段，不适合做索引</p></li><li><p>尽量扩展索引，不要新建索引</p></li><li><p>外键列，一定要建索引</p></li><li><p>text, blob 不能建立普通索引</p></li><li><p>NULL值字段不要创建索引，应改为NOT NULL，并设置DEFAULT</p></li><li><p>索引字段越小越好，key过长会导致间接索引层次增加，性能降低</p></li></ul><h1 id="4-事务"><a href="#4-事务" class="headerlink" title="4. 事务"></a>4. 事务</h1><p>事务：数据库执行过程中的一个逻辑单位，由一个有限的数据库操作序列构成。</p><h2 id="4-1-ACID"><a href="#4-1-ACID" class="headerlink" title="4.1 ACID"></a>4.1 ACID</h2><table><thead><tr><th>特性</th><th>含义</th></tr></thead><tbody><tr><td>原子性 Atomicity</td><td>事务作为一个整体被执行，要么全部成功，要么全部失败</td></tr><tr><td>一致性 Consistent</td><td>数据库无中间状态，数据库中的数据应满足完整性约束</td></tr><tr><td>隔离性 Isolation</td><td>多个事务并发执行，相互不影响</td></tr><tr><td>持久性 Durability</td><td>提交成功的事务，对数据库的修改是永久的，不可逆</td></tr></tbody></table><h2 id="4-2-隔离级别"><a href="#4-2-隔离级别" class="headerlink" title="4.2 隔离级别"></a>4.2 隔离级别</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">SET [SESSION | GLOBAL] TRANSACTION ISOLATION LEVEL &#123;READ UNCOMMITTED | READ COMMITTED | REPEATABLE READ | SERIALIZABLE&#125;</span><br><span class="line"></span><br><span class="line">SELECT @@global.tx_isolation;</span><br><span class="line">SELECT @@session.tx_isolation;</span><br><span class="line">SELECT @@tx_isolation;</span><br><span class="line"></span><br><span class="line"># 设置为 read uncommitted</span><br><span class="line">set session transaction isolation level read uncommitted;</span><br></pre></td></tr></table></figure><table><thead><tr><th>级别</th><th>含义</th><th>脏读</th><th>不可重复读</th><th>幻读</th></tr></thead><tbody><tr><td>读未提交 (Read Uncommitted)</td><td><strong>一个事务可以读取到另一个事务还未提交的数据</strong></td><td>Y</td><td>Y</td><td>Y</td></tr><tr><td>读已提交 (Read Committed)</td><td><strong>事务中多次读取同一数据，都能读到其他事务提交的数据</strong></td><td>N</td><td>Y</td><td>Y</td></tr><tr><td>可重复读 (Repeatable Read)</td><td><strong>事务中多次读取同一数据，即使其他事务提交了该是数据，该数据在本事务中不会改变。</strong></td><td>N</td><td>N</td><td>Y</td></tr><tr><td>可串行化 (Serializable)</td><td>事务串行执行，不允许并发</td><td>N</td><td>N</td><td>N</td></tr></tbody></table><ul><li><strong>脏读</strong>：一个事务内，读取到了其他事务还没提交的数据。</li><li><strong>不可重复读</strong>：一个事务内，多次读同一数据，如果另一个事务恰好修改了这个数据，那么在第一个事务中，两次读取的数据就可能不一致。</li><li><strong>幻读</strong>：一个事务内，第一次查询某条记录，发现没有，但当试图更新这条不存在的记录时，竟然成功，并且再次读取同一条记录，竟然存在。</li></ul><h1 id="5-锁"><a href="#5-锁" class="headerlink" title="5. 锁"></a>5. 锁</h1><h2 id="5-1-锁的分类"><a href="#5-1-锁的分类" class="headerlink" title="5.1 锁的分类"></a>5.1 锁的分类</h2><ul><li>操作颗粒度<ul><li>表级锁(偏读)：偏向MyISAM引擎，开销少，加锁快；无死锁；锁定粒度大，锁冲突概率高，并发度低</li><li>行级锁(偏写)：偏向InnoDB引擎，开销大，加锁慢；会产生死锁；锁定粒度小，锁冲突概率低，并发度高</li><li>页锁：DBD引擎，开销介于行锁和表锁之间，会出现死锁</li></ul></li><li>操作类型：<ul><li>读锁(共享锁): 多个读操作可同时进行而不相互影响</li><li>写锁(排他锁): 写操作未完成前，它会阻断其他写锁和读锁</li></ul></li></ul><h2 id="5-2-表级锁"><a href="#5-2-表级锁" class="headerlink" title="5.2 表级锁"></a>5.2 表级锁</h2><p>表读锁：</p><table><thead><tr><th>操作</th><th>session 1 (lock A read)</th><th>session X</th></tr></thead><tbody><tr><td>读A表</td><td>YES</td><td>YES</td></tr><tr><td>写A表</td><td>NO</td><td>NO</td></tr><tr><td>读写B表</td><td>NO</td><td>YES</td></tr></tbody></table><p>表写锁：</p><table><thead><tr><th>操作</th><th>session 1 (lock A write)</th><th>session X</th></tr></thead><tbody><tr><td>读A表</td><td>YES</td><td>NO</td></tr><tr><td>写A表</td><td>YES</td><td>NO</td></tr><tr><td>读写B表</td><td>NO</td><td>YES</td></tr></tbody></table><p>总结：<strong>读锁阻塞写，但不会阻塞读；而写锁会把读和写都阻塞。</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 查看是否已加锁 in_use=1</span><br><span class="line">show open tables; </span><br><span class="line">    </span><br><span class="line">lock table tbl_A read;</span><br><span class="line">lock table tbl_B write;</span><br><span class="line">    </span><br><span class="line">unlock tables;</span><br><span class="line"></span><br><span class="line"># 表锁分析</span><br><span class="line">show status like &#x27;table_locks%&#x27;</span><br><span class="line">table_locks_immediate --产生表级锁的次数，每加一次表锁，自动累加1</span><br><span class="line">table_locks_waited --表级锁定后，发生等待的次数</span><br></pre></td></tr></table></figure><h2 id="5-3-行级锁"><a href="#5-3-行级锁" class="headerlink" title="5.3 行级锁"></a>5.3 行级锁</h2><p>行锁算法：</p><ul><li>Record lock: 单行记录上的锁</li><li>Gap lock： 间隙锁，锁定一个范围，不包括记录本身</li><li>Next-key lock: record+gap 锁定一个范围，包含记录本身</li></ul><h3 id="5-3-1-行锁"><a href="#5-3-1-行锁" class="headerlink" title="5.3.1 行锁"></a>5.3.1 行锁</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">create table tbl_emp (</span><br><span class="line">    id int(11) auto_increment primary key, </span><br><span class="line">    name varchar(20) not null default &#x27;&#x27;,</span><br><span class="line">    age smallint(4) not null default 0</span><br><span class="line">);</span><br><span class="line">create index idx_name on tbl_emp(name);</span><br><span class="line">insert into tbl_emp values(1, &#x27;eli&#x27;, 34);</span><br><span class="line">insert into tbl_emp values(2, &#x27;rania&#x27;, 26);</span><br><span class="line"></span><br><span class="line">-- session 1</span><br><span class="line">set autocommit=0;</span><br><span class="line">update tbl_emp set age=32 where id=1;</span><br><span class="line"></span><br><span class="line">-- session 2</span><br><span class="line">set autocommit=0;</span><br><span class="line">update tbl_emp set age=33 where id=1; --locked</span><br><span class="line">update tbl_emp set age=24 where id=2; --ok</span><br><span class="line"></span><br><span class="line">---索引失效，行锁变表锁--------</span><br><span class="line">-- session 1</span><br><span class="line">set autocommit=0;</span><br><span class="line">update tbl_emp set age=18 where name=123; --索引失效，MySQL8.0直接错误</span><br><span class="line"></span><br><span class="line">-- session 2</span><br><span class="line">set autocommit=0;</span><br><span class="line">update tbl_emp set age=19 where name=&#x27;123&#x27;; --locked</span><br><span class="line">update tbl_emp set age=28 where name=&#x27;eli&#x27;; --locked</span><br></pre></td></tr></table></figure><h3 id="5-3-2-间隙锁："><a href="#5-3-2-间隙锁：" class="headerlink" title="5.3.2 间隙锁："></a>5.3.2 间隙锁：</h3><p>当用范围作为检索条件时，InnoDB会将整个范围锁定，即使该范围内有不存在的记录。这些不存在的记录即为间隙(gap)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tbl_gap(</span><br><span class="line">a <span class="type">int</span>(<span class="number">10</span>),</span><br><span class="line">    b <span class="type">varchar</span>(<span class="number">20</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tbl_gap <span class="keyword">values</span>(<span class="number">1</span>, <span class="string">&#x27;a&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tbl_gap <span class="keyword">values</span>(<span class="number">3</span>, <span class="string">&#x27;a&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tbl_gap <span class="keyword">values</span>(<span class="number">4</span>, <span class="string">&#x27;a&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tbl_gap <span class="keyword">values</span>(<span class="number">6</span>, <span class="string">&#x27;a&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tbl_gap <span class="keyword">values</span>(<span class="number">7</span>, <span class="string">&#x27;a&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- session 1</span></span><br><span class="line"><span class="keyword">set</span> autocommit<span class="operator">=</span><span class="number">0</span>;</span><br><span class="line">update tbl_gap <span class="keyword">set</span> b<span class="operator">=</span><span class="string">&#x27;x&#x27;</span> <span class="keyword">where</span> a <span class="operator">&gt;=</span><span class="number">1</span> <span class="keyword">and</span> a <span class="operator">&lt;=</span> <span class="number">6</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- session 2</span></span><br><span class="line"><span class="keyword">set</span> autocommit<span class="operator">=</span><span class="number">0</span>;</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tbl_gap(a, b) <span class="keyword">values</span>(<span class="number">2</span>, <span class="string">&#x27;b&#x27;</span>); <span class="comment">--locked</span></span><br></pre></td></tr></table></figure><h3 id="5-3-3-锁定一行"><a href="#5-3-3-锁定一行" class="headerlink" title="5.3.3 锁定一行"></a>5.3.3 锁定一行</h3><p>如何锁定一行：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">begin</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> tbl_a <span class="keyword">where</span> id<span class="operator">=</span><span class="number">5</span> <span class="keyword">for</span> update;</span><br><span class="line"></span><br><span class="line"><span class="keyword">commit</span>;</span><br></pre></td></tr></table></figure><p><code>select ... for update ...where ...</code>的锁行为：</p><ul><li><p>使用了索引，为行锁</p></li><li><p>未使用索引，为表锁</p></li><li><p>未查到数据，无锁</p></li></ul><h3 id="5-3-4-行锁总结"><a href="#5-3-4-行锁总结" class="headerlink" title="5.3.4 行锁总结"></a>5.3.4 行锁总结</h3><ul><li>尽可能让所有数据检索通过索引来完成，避免无索引升级为表锁</li><li>尽可能减少检索条件，避免间隙锁</li></ul><h2 id="5-4-死锁"><a href="#5-4-死锁" class="headerlink" title="5.4 死锁"></a>5.4 死锁</h2><p>死锁: 两个或多个事务在同一资源上相互占用，并请求锁定对方的资源，从而导致恶性循环的现象。</p><p>解决死锁：</p><p>1）如果不同程序会并发存取多个表，尽量约定以相同的顺序访问表，可大大降低死锁机会。</p><p>2）同一事务中，尽可能做的一次锁定所需的所有资源，减少死锁产生的概率。</p><p>3）对非常容易产生死锁的业务，可尝试使用升级锁定颗粒度，通过表级锁来减少死锁发生的概率。</p><h2 id="5-5-MVVC"><a href="#5-5-MVVC" class="headerlink" title="5.5 MVVC"></a>5.5 MVVC</h2><ul><li><strong>悲观锁</strong>：想办法避免冲突。每次去拿数据时，都认为别人会修改，所以每次在拿数据时都上锁。</li><li><strong>乐观锁</strong>：允许冲突，但发生冲突时，有能力解决。乐观的认为冲突不会发生，除非检测到确实产生了冲突<ul><li>逻辑时钟 (Logical Clock)</li><li>MVCC：Multi-version Concurrent Control</li></ul></li></ul><blockquote><p>实现乐观锁：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> data <span class="keyword">AS</span> old_data, version <span class="keyword">AS</span> old_version <span class="keyword">FROM</span> ...;</span><br><span class="line">UPDATE ... <span class="keyword">SET</span> data <span class="operator">=</span> new_data, version <span class="operator">=</span> new_version <span class="keyword">WHERE</span> version <span class="operator">=</span> old_version;</span><br><span class="line"></span><br><span class="line">if (updated_row <span class="operator">&gt;</span> <span class="number">0</span>) &#123;</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span> 乐观锁获取成功，操作完成</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span> 乐观锁获取失败，回滚并重试</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><p>MVCC 中的版本一般选择使用时间戳或者事务ID来标识。在处理一个写请求时，MVCC不是简单的有新值覆盖旧值，而是为这一项添加一个新版本数据。在读取一个数据项时，要先确定读取的版本，然后根据版本找到对应的数据。MVCC中的读操作永远不会被阻塞。</p><p>MVCC两种读形式：</p><ul><li><p>快照读：读取的只是当前事务的可见版本，不用加锁。<code>select * from tablename where id=xxx</code> 即为快照读</p></li><li><p>当前读：读取当前版本，比如特殊的读操作，更新/插入/删除操作</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> tablename <span class="keyword">where</span> id<span class="operator">=</span>xxx lock <span class="keyword">in</span> share mode;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> tablename <span class="keyword">where</span> id<span class="operator">=</span>xxx <span class="keyword">for</span> update;</span><br><span class="line"></span><br><span class="line">update tablename <span class="keyword">set</span> ...</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tablename(xxx,) <span class="keyword">values</span>(xxx,)</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> tablename <span class="keyword">where</span> id<span class="operator">=</span>xxx;</span><br></pre></td></tr></table></figure></li></ul><h1 id="6-视图"><a href="#6-视图" class="headerlink" title="6. 视图"></a>6. 视图</h1><p>视图：本质上是一种虚拟表，在物理上不存在，其内容和真实的表相似。它的行和列来自定义视图的查询所引用基本表，在具体引用视图时动态生成。</p><h2 id="6-1-特点"><a href="#6-1-特点" class="headerlink" title="6.1 特点"></a>6.1 特点</h2><ul><li><p>视图是由一个或多个实表产生的虚表</p></li><li><p>视图的建立和删除不影响基本表</p></li><li><p>对视图内容的更新(增删改)直接影响基本表</p></li><li><p>当视图来自多个基本表时，不允许添加和删除数据</p></li></ul><h2 id="6-2-使用场景"><a href="#6-2-使用场景" class="headerlink" title="6.2 使用场景"></a>6.2 使用场景</h2><p>视图的用途：优化SQL查询，提高开发效率</p><ul><li>重用SQL语句</li><li>简化复杂的SQL操作。编写完查询后，可方便重用而不必关心查询细节</li><li>使用表的组成部分而不是整表</li><li>保护数据。可给用户授予表的部分数据访问权限而不是整个表</li><li>改变数据格式和表示。</li></ul><h2 id="6-3-优缺点"><a href="#6-3-优缺点" class="headerlink" title="6.3 优缺点"></a>6.3 优缺点</h2><ul><li><p>优点：</p><ul><li>查询简单化</li><li>数据安全性</li><li>逻辑数据独立性。视图对重构数据库提供了一定程度的逻辑独立性</li></ul></li><li><p>缺点：</p><ul><li>性能。如果视图由一个复杂的多表查询定义，那么即使视图的一个简单查询，也需要花费一定的时间</li><li>修改限制。较复杂的视图，可能是不可修改的</li></ul></li></ul><h1 id="7-存储过程"><a href="#7-存储过程" class="headerlink" title="7. 存储过程"></a>7. 存储过程</h1><p>存储过程：一个预编译的SQL语句，允许模块化设计，即只要创建一次，后续可多次调用。</p><p>优点：</p><ul><li>预编译的，执行效率高</li><li>存储过程代码直接放数据库，通过存储过程名称调用，减少网络通信</li><li>安全性高，执行存储过程需要一定的权限</li><li>可重复使用</li></ul><p>缺点：</p><ul><li>调试麻烦</li><li>移植困难</li><li>带引用关系的对象发生改变，受影响的存储过程、包将需要重新编译</li><li>维护困难。对于大型项目，多版本迭代的数据结构变化，存储过程维护会相当麻烦。</li></ul><p>存储过程实例：</p><ul><li><p>设置参数log_bin_trust_function_creators</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--创建函数，可能出错: This function has none of DETERMINISTIC...</span></span><br><span class="line"><span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;log_bin_trust_function_creators&#x27;</span>;</span><br><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> log_bin_trust_function_creators<span class="operator">=</span><span class="number">1</span>;</span><br></pre></td></tr></table></figure></li><li><p>创建函数，随机产生数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> rand_string(n <span class="type">INT</span>) <span class="keyword">RETURNS</span> <span class="type">VARCHAR</span>(<span class="number">255</span>)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">DECLARE</span> chars <span class="type">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;abcdefghijk...LMNOPQRSTUVWXYZ&#x27;</span>;</span><br><span class="line"><span class="keyword">DECLARE</span> ret <span class="type">VARCHAR</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">DECLARE</span> i <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>;</span><br><span class="line">WHILE i <span class="operator">&lt;</span> n DO</span><br><span class="line"><span class="keyword">SET</span> ret <span class="operator">=</span> CONCAT(ret, <span class="built_in">SUBSTRING</span>(chars, <span class="built_in">FLOOR</span>(<span class="number">1</span><span class="operator">+</span>RAND()<span class="operator">*</span><span class="number">52</span>),<span class="number">1</span>));</span><br><span class="line"><span class="keyword">SET</span> i <span class="operator">=</span> i <span class="operator">+</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">END</span> WHILE;</span><br><span class="line"><span class="keyword">RETURN</span> ret;</span><br><span class="line"><span class="keyword">END</span>$$</span><br></pre></td></tr></table></figure></li><li><p>创建存储过程</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> insert_emp(<span class="keyword">IN</span> <span class="keyword">start</span> <span class="type">INT</span>(<span class="number">10</span>), <span class="keyword">IN</span> <span class="keyword">offset</span> <span class="type">INT</span>(<span class="number">10</span>))</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">DECLARE</span> i <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">SET</span> autocommit<span class="operator">=</span><span class="number">0</span>; # </span><br><span class="line">REPEAT</span><br><span class="line"><span class="keyword">SET</span> i <span class="operator">=</span> i <span class="operator">+</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(name, ...) <span class="keyword">VALUES</span>(rand_string(<span class="number">4</span>), ...);</span><br><span class="line">UNTIL i <span class="operator">=</span> <span class="keyword">offset</span> </span><br><span class="line"><span class="keyword">END</span> REPEAT;</span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br><span class="line"><span class="keyword">END</span>$$</span><br></pre></td></tr></table></figure></li><li><p>调用存储过程</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER ;<span class="keyword">CALL</span> insert_emp(<span class="number">100</span>, <span class="number">50</span>);</span><br></pre></td></tr></table></figure></li></ul><h1 id="8-主从复制"><a href="#8-主从复制" class="headerlink" title="8. 主从复制"></a>8. 主从复制</h1><p>主从复制：将主库中的DDL和DML操作通过二进制日志(BINLOG) 传输到从库上，然后在从库上重现这些操作，使主从数据库一致</p><p>主从复制的用途：</p><ul><li>主数据库宕机，切到从库继续工作</li><li>实现读写分离</li><li>数据库日常备份</li></ul><p>主从复制流程：</p><p>主：binlog线程，记录下所有改变数据的日志到binlog中</p><p>从：io线程，从master上拉取binlog日志，并放入relay log中</p><p>从：sql执行线程，执行relay log中的语句</p><h2 id="8-1-读写分离方案"><a href="#8-1-读写分离方案" class="headerlink" title="8.1 读写分离方案"></a>8.1 读写分离方案</h2><ul><li><p><code>mysql-proxy</code></p><ul><li><p>优点：直接实现了读写分离和负载均衡，不用修改代码</p></li><li><p>缺点：性能低，不支持事务。不推荐使用</p></li></ul></li><li><p>ORM实现</p></li></ul><h2 id="8-2-主从配置"><a href="#8-2-主从配置" class="headerlink" title="8.2 主从配置"></a>8.2 主从配置</h2><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># master</span></span><br><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"><span class="attr">port</span>=<span class="number">3306</span></span><br><span class="line"><span class="attr">server-id</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">log-bin</span>=/data/mysql/mysql-bin</span><br><span class="line"><span class="attr">log-err</span>=/data/mysql/mysql-err</span><br><span class="line"></span><br><span class="line"><span class="comment"># slave</span></span><br><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"><span class="attr">server-id</span>=<span class="number">2</span></span><br></pre></td></tr></table></figure><p>授权：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># master</span><br><span class="line"><span class="keyword">grant</span> replication save <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">to</span> <span class="string">&#x27;root@192.168.80.3&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line">flush privileges;</span><br><span class="line"><span class="keyword">show</span> master status\G</span><br><span class="line"></span><br><span class="line"># slave</span><br><span class="line">change master <span class="keyword">to</span> master_host<span class="operator">=</span><span class="string">&#x27;192.168.80.1&#x27;</span>, master_user<span class="operator">=</span><span class="string">&#x27;root&#x27;</span>, master_password<span class="operator">=</span><span class="string">&#x27;123456&#x27;</span>, master_log_file<span class="operator">=</span><span class="string">&#x27;mysql-bin.000002&#x27;</span>, master_log_pos<span class="operator">=</span><span class="number">1206</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">start</span> slave;</span><br><span class="line"><span class="keyword">show</span> slave status\G</span><br><span class="line">...</span><br><span class="line">Salve_IO_Running: Yes   # 成功</span><br><span class="line">Slave_SQL_Running: Yes</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h1 id="9-SQL"><a href="#9-SQL" class="headerlink" title="9. SQL"></a>9. SQL</h1><h2 id="9-1-语句分类"><a href="#9-1-语句分类" class="headerlink" title="9.1 语句分类"></a>9.1 语句分类</h2><ul><li>DDL: CREATE, DROP, ALTER，TRUNCATE</li><li>DQL: SELECT</li><li>DML: INSERT, UPDATE, DELETE</li><li>DCL: GRANT, REVOKE, COMMIT, ROLLBACK</li></ul><h2 id="9-2-关联查询"><a href="#9-2-关联查询" class="headerlink" title="9.2 关联查询"></a>9.2 关联查询</h2><ul><li><p>INNER JOIN</p></li><li><p>LEFT JOIN：以左表为主，先查出左表，然后按照ON的关联条件匹配右表，没有匹配到用NULL填充。</p></li><li><p>RIGHT JOIN：以右表为主，先查出右表，然后按照ON的关联条件匹配左表，没有匹配到用NULL填充。</p></li><li><p>FULL OUTER JOIN ：MySQL不支持，但可实现</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> A <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> B A.id<span class="operator">=</span>B.aid </span><br><span class="line"><span class="keyword">UNION</span> </span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> A <span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> B A.id<span class="operator">=</span>B.aid;</span><br></pre></td></tr></table></figure></li><li><p>UNION：合并多个集合(联合查询的列必须一致)，<strong>相同的记录会合并</strong></p></li><li><p>UNION ALL：不会合并重复行，效率比UNION低</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/mysql/mysql-join.png" alt="a"></p><h2 id="9-3-子查询"><a href="#9-3-子查询" class="headerlink" title="9.3 子查询"></a>9.3 子查询</h2><ul><li>条件：一条SQL语句的查询结果作为另一条查询语句的条件或查询结果</li><li>嵌套：多条SQL语句嵌套使用，内部的SQL查询语句称为子查询</li></ul><p>子查询的三种情况：</p><p>1）子查询是一个单行单例，使用“=”</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users <span class="keyword">where</span> age<span class="operator">=</span>(<span class="keyword">select</span> <span class="built_in">max</span>(age) <span class="keyword">from</span> users);</span><br></pre></td></tr></table></figure><p>2）子查询是一个多行单例，使用“in”</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users <span class="keyword">where</span> age <span class="keyword">in</span> (<span class="keyword">select</span> age <span class="keyword">from</span> users <span class="keyword">where</span> gender<span class="operator">=</span><span class="string">&#x27;female&#x27;</span>);</span><br></pre></td></tr></table></figure><p>3）子查询是多行多列，结果集类似一张虚表，但不能使用where</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dept d, (<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users <span class="keyword">where</span> age<span class="operator">&gt;</span><span class="number">20</span>) u <span class="keyword">where</span> u.dept_id<span class="operator">=</span>d.id;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> d.<span class="operator">*</span>, u.<span class="operator">*</span> <span class="keyword">from</span> dept d <span class="keyword">inner</span> <span class="keyword">join</span> users u <span class="keyword">on</span> d.id<span class="operator">=</span><span class="operator">=</span>u.dept_id <span class="keyword">where</span> u.age<span class="operator">&gt;</span><span class="number">20</span>;</span><br></pre></td></tr></table></figure><h2 id="9-4-in-amp-exists"><a href="#9-4-in-amp-exists" class="headerlink" title="9.4 in &amp; exists"></a>9.4 in &amp; exists</h2><p>in: 把外表和内表做hash连接</p><p>exists： 对外表做loop循环，每次loop循环再对内表进行查询</p><p>执行效率对比：</p><ul><li>如果查询的两个表大小相当，in和exists差别不大</li><li>如果两个表中一个较小，一个较大，则子查询表大的用exists，子查询表小的on-going-in</li><li>not exists 使用索引，但not in无法使用索引，所以not exists更高效</li></ul><h2 id="9-5-分页"><a href="#9-5-分页" class="headerlink" title="9.5 分页"></a>9.5 分页</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> table_name LIMIT <span class="number">5</span>;     <span class="operator">/</span><span class="operator">/</span> <span class="number">1</span><span class="operator">~</span><span class="number">5</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> table_name LIMIT <span class="number">5</span>,<span class="number">10</span>;  <span class="operator">/</span><span class="operator">/</span> <span class="number">6</span><span class="operator">~</span><span class="number">15</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> table_name LIMIT <span class="number">5</span>,<span class="number">-1</span>;  <span class="operator">/</span><span class="operator">/</span> <span class="number">6</span><span class="operator">~</span><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h2 id="9-6-查找字段相同的数据"><a href="#9-6-查找字段相同的数据" class="headerlink" title="9.6 查找字段相同的数据"></a>9.6 查找字段相同的数据</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> a.id <span class="keyword">from</span> group_member a,</span><br><span class="line">(<span class="keyword">select</span> group_id, user_id, status <span class="keyword">from</span> group_member <span class="keyword">group</span> <span class="keyword">by</span> group_id, user_id, status <span class="keyword">having</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="operator">&gt;</span> <span class="number">1</span>) b</span><br><span class="line"><span class="keyword">where</span> a.group_id<span class="operator">=</span>b.group_id <span class="keyword">and</span> a.user_id<span class="operator">=</span>b.user_id <span class="keyword">and</span> a.status<span class="operator">=</span>b.status;</span><br></pre></td></tr></table></figure><h2 id="9-7-循环更新数据"><a href="#9-7-循环更新数据" class="headerlink" title="9.7 循环更新数据"></a>9.7 循环更新数据</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">UPDATE contact a <span class="keyword">INNER</span> <span class="keyword">JOIN</span> users b <span class="keyword">ON</span> a.inviter<span class="operator">=</span>b.phone <span class="keyword">SET</span> a.inviter_id<span class="operator">=</span>b.id;</span><br><span class="line">UPDATE contact a <span class="keyword">INNER</span> <span class="keyword">JOIN</span> users b <span class="keyword">ON</span> a.invitee<span class="operator">=</span>b.phone <span class="keyword">SET</span> a.invitee_id<span class="operator">=</span>b.id;</span><br></pre></td></tr></table></figure><h2 id="9-8-强制删除外键引用的表"><a href="#9-8-强制删除外键引用的表" class="headerlink" title="9.8 强制删除外键引用的表"></a>9.8 强制删除外键引用的表</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> FOREIGN_KEY_CHECKS <span class="operator">=</span> <span class="number">0</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> users;</span><br><span class="line"><span class="keyword">SET</span> FOREIGN_KEY_CHECKS <span class="operator">=</span> <span class="number">1</span>;</span><br></pre></td></tr></table></figure><h1 id="10-日志"><a href="#10-日志" class="headerlink" title="10. 日志"></a>10. 日志</h1><h2 id="10-1-undoLog"><a href="#10-1-undoLog" class="headerlink" title="10.1 undoLog"></a>10.1 undoLog</h2><p><strong>事务回滚日志</strong></p><ul><li><p>insert undo log: 插入数据时产生，事务提交后丢弃</p></li><li><p>update undo log: 更新或删除数据时产生，快照读的时候需要所以不能直接删除，只有当系统没有比这个log更早的read-view的时候才能被删除</p></li></ul><h2 id="10-2-redoLog"><a href="#10-2-redoLog" class="headerlink" title="10.2 redoLog"></a>10.2 redoLog</h2><p><strong>重做日志文件，记录数据修改之后的值，用于持久化到磁盘中</strong></p><ul><li><p>redo log buffer: 内存中的日志缓冲，易丢失</p></li><li><p>redo log file: 磁盘上的日志文件，持久化的。记录物理数据页修改的信息。当数据更新时，InnoDB会先将数据更新，然后记录redoLog在内存中，然后找个时间将redoLog持久化到磁盘。不管提交是否成功都要记录</p></li></ul><h2 id="10-3-binLog"><a href="#10-3-binLog" class="headerlink" title="10.3 binLog"></a>10.3 binLog</h2><p><strong>逻辑日志，记录sql的原始逻辑</strong></p><p>数据修改时，binlog会追加写入指定大小的物理文件中，如果文件写满则创建一个新的文件写入；用于复制和恢复在主从复制中，从库利用主库的binlog进行重播。</p><p>binlog 的三种格式：statement, row 和 mixed</p><ul><li><p>statement：每一条修改数据的sql都会记录在binlog中。不需要记录每一行的变化，减少了 binlog 日志量，节约了 IO，提高性能。由于sql的执行是有上下文的，因此在保存的时候，需要保存相关的信息，同时还有一些使用了函数之类的语句无法被记录复制。</p></li><li><p>row：不记录sql语句上下文信息，仅保存那条记录被修改。记录单元为每一行的改动，基本可以全部记录下来。但由于操作过多，导致大量行改动 (如：alter table)。此种模式的文件保存信息过多，日志量太大。（新版优化：当表结构发生变化时，记录操作语言，而不是行记录）</p></li><li><p>mixed：折中方案。普通操作使用statement记录，当无法使用statement时使用row。</p></li></ul><h1 id="11-查询分析"><a href="#11-查询分析" class="headerlink" title="11. 查询分析"></a>11. 查询分析</h1><h2 id="11-1-问题分析"><a href="#11-1-问题分析" class="headerlink" title="11.1 问题分析"></a>11.1 问题分析</h2><ul><li>开启慢查询日志，设置阈值，比如超过5s即为慢SQL，将其记录下来</li><li>explain 分析慢SQL，可解决大部分问题</li><li>show profile，查询SQL的执行细节和生命周期</li><li>数据库参数调优</li></ul><h2 id="11-2-慢查询日志"><a href="#11-2-慢查询日志" class="headerlink" title="11.2 慢查询日志"></a>11.2 慢查询日志</h2><p>slow_query_log: 慢查询日志参数</p><p>long_query_time：慢查询SQL记录阈值，默认10s</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show variables like &#x27;slow_query_log%&#x27;;</span><br><span class="line">+---------------------+------------------------------------+</span><br><span class="line">| Variable_name       | Value                              |</span><br><span class="line">+---------------------+------------------------------------+</span><br><span class="line">| slow_query_log      | OFF                                |</span><br><span class="line">| slow_query_log_file | /var/lib/mysql/ubuntu20-a-slow.log |</span><br><span class="line">+---------------------+------------------------------------+</span><br><span class="line"></span><br><span class="line">mysql&gt; show variables like &#x27;long_query_time%&#x27;;</span><br><span class="line">+-----------------+-----------+</span><br><span class="line">| Variable_name   | Value     |</span><br><span class="line">+-----------------+-----------+</span><br><span class="line">| long_query_time | 10.000000 |</span><br><span class="line">+-----------------+-----------+</span><br><span class="line"></span><br><span class="line">mysql&gt; set global slow_query_log=1;</span><br><span class="line"></span><br><span class="line">mysql&gt; set global long_query_time=5;</span><br></pre></td></tr></table></figure><p>慢SQL分析工具：mysqldumpslow</p><h2 id="11-3-explain"><a href="#11-3-explain" class="headerlink" title="11.3 explain"></a>11.3 explain</h2><h3 id="11-3-1-explain-详解"><a href="#11-3-1-explain-详解" class="headerlink" title="11.3.1 explain 详解"></a>11.3.1 explain 详解</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; explain select * from tbl_emp where id=1;</span><br><span class="line">+----+-------------+---------+------------+-------+---------------+---------+---------+-------+------+----------+-------+</span><br><span class="line">| id | select_type | table   | partitions | type  | possible_keys | key     | key_len | ref   | rows | filtered | Extra |</span><br><span class="line">+----+-------------+---------+------------+-------+---------------+---------+---------+-------+------+----------+-------+</span><br><span class="line">|  1 | SIMPLE      | tbl_emp | NULL       | const | PRIMARY       | PRIMARY | 4       | const |    1 |   100.00 | NULL  |</span><br><span class="line">+----+-------------+---------+------------+-------+---------------+---------+---------+-------+------+----------+-------+</span><br></pre></td></tr></table></figure><p>注意字段含义：</p><ul><li><p>id: 优先级</p><ul><li>相同时，自上而下顺序执行</li><li>不同时，id值越大，越早执行</li></ul></li><li><p>select_type: 查询类型</p><ul><li>simple</li><li>primary: 最外层查询，也是最后的查询</li><li>subquery</li><li>derived：衍生虚表</li><li>union</li><li>union result: 联合结果合并</li></ul></li><li><p>table：表名称，也可以为<code>&lt;derived N&gt;</code>或<code>&lt;UNION N&gt;</code></p></li><li><p>type: 访问类型，从好到差的顺序如下，至少需要优化到range</p><ul><li>system: 表中只有一条数据，相当于系统表</li><li>const: 一次索引就能找到，即主键、唯一索引</li><li>eq_ref: 唯一性索引扫描，只有一条数据与之匹配，常见于主键、唯一索引</li><li>ref: 非唯一性索引扫描，可能匹配到多条数据</li><li>range: 检索特定范围的行。使用一个索引来选择行，即 <code>between, &gt;, &lt;, in</code></li><li>index: 全索引扫描 <code>select id from tbl_user</code>, 直接从索引中获取数据</li><li>ALL: 全表扫描 <code>select * from tbl_user</code></li></ul></li><li><p>possible_keys: 可能使用到的索引，但不一定实际使用</p></li><li><p>key：</p><ul><li>primary: 主键索引</li><li>idx_X: 普通索引名</li><li>NULL：未使用索引</li></ul></li><li><p>key_len: 索引字段最大可能长度，越小越好</p></li><li><p>ref: 索引条件使用到的值。<code>where uid=tbl_user.id and name=&#39;R&amp;D&#39;</code></p><ul><li>const: 常量条件</li><li>tbl_user.ID</li><li>NULL</li></ul></li><li><p>rows: 估算所查记录需要读取的行数，越小越好</p></li><li><p>Extra:</p><ul><li>Using filesort: 索引外排序，即无法使用索引进行排序，被称为文件排序。order by 未用到索引时出现。要想办法优化</li><li>Using temporary: 使用临时表保存中间结果，常见于order by 或group by。较严重问题，可将by后的字段建立联合索引来解决该问题</li><li>Using index: 使用索引。索引覆盖：查询的列，可直接从索引中得到，不必读取数据行，即查询的列被所建索引覆盖</li><li>Using where</li><li>Using join buffer</li><li>impossible where: where 条件 false, <code>where name=&#39;jack&#39; and name=&#39;tom&#39;</code></li><li>select tables optimized away</li><li>distinct</li></ul></li></ul><h3 id="11-3-2-索引优化"><a href="#11-3-2-索引优化" class="headerlink" title="11.3.2 索引优化"></a>11.3.2 索引优化</h3><ul><li>尽量减少join中的NestedLoop的循环总是：永远用小结果集驱动大结果集。</li><li>优先优化NestedLoop的内层循环</li><li>保证join中被驱动表上join条件字段被建立索引</li></ul><p>优化原则：<strong>小表驱动大表，即小表数据作为过滤条件</strong></p><p>A为大表，B为小表，此时 in 的效率大于 exists:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> A <span class="keyword">where</span> b_id <span class="keyword">in</span> (<span class="keyword">select</span> id <span class="keyword">from</span> B)</span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="keyword">for</span> <span class="keyword">select</span> id <span class="keyword">from</span> B</span><br><span class="line"><span class="keyword">for</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> A <span class="keyword">where</span> A.b_id <span class="operator">=</span> B.id</span><br></pre></td></tr></table></figure><p>A为小表，B为大表，此时 exists 的效率大于 in:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> A <span class="keyword">exists</span> (<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> B <span class="keyword">where</span> B.id <span class="operator">=</span> A.b_id)</span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="keyword">for</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> A</span><br><span class="line"><span class="keyword">for</span> <span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> B <span class="keyword">where</span> B.id <span class="operator">=</span> A.b_id</span><br></pre></td></tr></table></figure><p>注意：exists (sub-query) 只返回 True 或 False</p><h3 id="11-3-3-索引失效"><a href="#11-3-3-索引失效" class="headerlink" title="11.3.3 索引失效"></a>11.3.3 索引失效</h3><ul><li><p>全值匹配最优</p></li><li><p>最佳左前缀法则</p></li><li><p>不在索引列上做任何操作（计算、函数、类型转换等），会导致全表扫描</p></li><li><p>不能使用索引中范围条件右边的列 <code>where name=&#39;jack&#39; and age&gt;20 and score=90</code>   三字段索引</p></li><li><p>尽量使用覆盖索引（即直接从索引中查询数据，无需扫描表）即少使用<code>select *</code></p></li><li><p>使用不等于(!= 或 &lt;&gt;)时，无法使用索引，导致全表扫描</p></li><li><p>is null, is not null 无法使用索引</p></li><li><p><code>like %xxx...</code> 无法使用索引，导致全表扫描。</p><ul><li>解决方案：使用覆盖索引（即select 索引列），然后从索引中直接获取</li></ul></li><li><p>字符串不加单引号索引失效</p></li><li><p>少用<code>or</code>，它会导致索引失效 </p></li></ul><h3 id="11-3-4-索引总结"><a href="#11-3-4-索引总结" class="headerlink" title="11.3.4 索引总结"></a>11.3.4 索引总结</h3><ol><li>带头大哥不能死</li><li>中间兄弟不能断，永远要符合左前缀最佳匹配原则</li><li>索引列上不计算</li><li>like %加右边</li><li>范围之后全失效</li><li>字符串有引号</li></ol><h2 id="11-4-Show-profile"><a href="#11-4-Show-profile" class="headerlink" title="11.4 Show profile"></a>11.4 Show profile</h2><p>用来分析当前会话中语句执行的资源消耗情况，可用于SQL的调优测量。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;profiling&#x27;</span>;</span><br><span class="line"><span class="keyword">set</span> profiling<span class="operator">=</span><span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--执行一堆查询</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> ...</span><br><span class="line"></span><br><span class="line"><span class="keyword">show</span> profiles;</span><br><span class="line"></span><br><span class="line"><span class="keyword">show</span> profile cpu, block io <span class="keyword">for</span> query <span class="number">10</span>;</span><br><span class="line"><span class="comment">-- all, block io, cpu, memory, ...</span></span><br></pre></td></tr></table></figure><p>严重问题：</p><ul><li>converting HEAP to MyISAM: 查询结果太大，内存不足，使用磁盘</li><li>creating tmp table: 拷贝数据到临时表，用完删除</li><li>copying to tmp table on disk: 临时表存储在磁盘上，更要命</li><li>locked：</li></ul><h2 id="11-5-全局查询日志"><a href="#11-5-全局查询日志" class="headerlink" title="11.5 全局查询日志"></a>11.5 全局查询日志</h2><p>注意：绝对不能在生产环境开启此功能</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show variables like &#x27;general_log%&#x27;;</span><br><span class="line">+------------------+-------------------------------+</span><br><span class="line">| Variable_name    | Value                         |</span><br><span class="line">+------------------+-------------------------------+</span><br><span class="line">| general_log      | OFF                           |</span><br><span class="line">| general_log_file | /var/lib/mysql/ubuntu20-a.log |</span><br><span class="line">+------------------+-------------------------------+</span><br><span class="line"></span><br><span class="line">show variables like &#x27;general_log&#x27;</span><br><span class="line">set global general_log=1;</span><br><span class="line">set global log_output=&#x27;TABLE&#x27;;</span><br><span class="line"></span><br><span class="line">select * from mysql.general_log;</span><br></pre></td></tr></table></figure><h2 id="11-6-Order-by"><a href="#11-6-Order-by" class="headerlink" title="11.6 Order by"></a>11.6 Order by</h2><p>尽量使用 index 方式排序，避免使用 FileSort 方式排序</p><p>Order by使用Index的条件：</p><ul><li>order by 后使用索引最左前列</li><li>Where 条件与 order by子句条件组合满足索引最左前列</li></ul><p>提高 order by 效率：</p><ul><li><p>不要用 <code>select *</code>, 只查询order by 后的字段：</p><ul><li>query的字段长度总和小于max_length_for_sort_data时，排序字段不为TEXT|BLOB时，使用单路排序，否则使用多路排序（即两次磁盘扫描）</li><li>两种算法的数据可能超出sort_buffer容量，超出之后，会创建tmp文件进行合并排序，导致多次IO</li></ul></li><li><p>sort_buffer_size：尝试提高该参数值，避免产生tmp文件</p></li><li><p>max_length_for_sort_data: 尝试提高该参数值会增加改进算法的效率。但如果太高，会导致磁盘IO过高，CPU使用率低的情况</p></li></ul><p>排序的两种方式：filesort, index</p><p><code>KEY a_b_c (a, b, c)</code></p><p>order by 使用索引左前缀：</p><ul><li>ORDER BY a</li><li>ORDER BY a, b</li><li>ORDER BY a, b, c</li><li>ORDER BY a DESC, b DESC, c DESC</li></ul><p>WHERE中的索引与order by中的索引构成最左前缀：</p><ul><li><p>WHERE a=const ORDER BY b, c</p></li><li><p>WHERE a=const AND b=const ORDER BY c</p></li><li><p>WHERE a=const AND b&gt;const ORDER BY b, c</p></li></ul><p>不能使用索引进行排序</p><ul><li>ORDER BY a ASC, B DESC, c DESC    // 排序不一致</li><li>WHERE x=const ORDER BY b, c  // 丢失a索引</li><li>WHERE a=const ORDER BY c      // 丢失b索引</li><li>WHERE a=const ORDER BY a, d  // d不是索引的一部分</li><li>WHERE a in (…) ORDER BY b, c  // 范围不能使用索引</li></ul><h2 id="11-7-Group-by"><a href="#11-7-Group-by" class="headerlink" title="11.7 Group by"></a>11.7 Group by</h2><ul><li>Group by 本质上先排序后分组，遵照索引最佳左前缀原则</li><li>当无法使用索引时，增大max_length_for_sort_data和sort_buffer_size参数</li><li>where 高于 having，能写在where的限定条件不要去having限定</li></ul><h1 id="12-SQL-性能优化"><a href="#12-SQL-性能优化" class="headerlink" title="12. SQL 性能优化"></a>12. SQL 性能优化</h1><ol><li><p>为避免全表扫描，涉及 WHERE 和 ORDER BY 的字段建立索引</p></li><li><p>避免 WHERE 中使用 NULL 判断，建表时尽量使用NOT NULL</p></li><li><p>避免 WHERE 中使用 != 或 &lt;&gt;，这些操作可使用索引：&lt;, &lt;=, =, &gt;, &gt;=, BETWEEN, IN，LIKE (某些时候)</p></li><li><p>避免 WHERE 中使用 OR，它会导致引擎放弃使用索引而进行全表扫描，可以使用 UNION 代替</p></li><li><p>慎用 IN 和 NOT IN，连续的数值，推荐BETWEEN </p></li><li><p>WHERE 中字段 不要使用函数、表达式</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> record <span class="keyword">WHERE</span> amount<span class="operator">/</span><span class="number">30</span> <span class="operator">&lt;</span> <span class="number">1000</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> record <span class="keyword">WHERE</span> <span class="keyword">convert</span>(<span class="type">char</span>(<span class="number">10</span>), <span class="type">date</span>, <span class="number">112</span>) <span class="operator">=</span> <span class="string">&#x27;20201220&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p>用EXISTS 代替 IN</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> num <span class="keyword">from</span> a <span class="keyword">where</span> num <span class="keyword">in</span> (<span class="keyword">select</span> num <span class="keyword">from</span> b)</span><br><span class="line"><span class="keyword">select</span> num <span class="keyword">from</span> a <span class="keyword">where</span> num <span class="keyword">exists</span> (<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> b)</span><br></pre></td></tr></table></figure></li><li><p>索引会提高SELECT的效率，但也降低了INSERT和UPDATE的效率(索引重建), 一个表的索引，最好不要超过6个</p></li><li><p>JOIN的表不要超过5个，考虑使用临时表。</p></li><li><p>少用子查询，视图嵌套不要超过2层</p></li><li><p>数量统计，用<code>count(1)</code>代替 <code>count(*)</code></p></li><li><p>记录是否存在，用 EXISTS 代替 <code>count(1)</code></p></li><li><p><code>&gt;=</code> 效率比 <code>&gt;</code> 高</p></li><li><p>GROUP BY 前，先进行数据过滤：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> job, <span class="built_in">avg</span>(sal) <span class="keyword">from</span> emp <span class="keyword">GROUP</span> <span class="keyword">BY</span> job <span class="keyword">HAVING</span> job<span class="operator">=</span><span class="string">&#x27;engineer&#x27;</span> <span class="keyword">or</span> job<span class="operator">=</span><span class="string">&#x27;saler&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> job, <span class="built_in">avg</span>(sal) <span class="keyword">from</span> emp <span class="keyword">where</span> job<span class="operator">=</span><span class="string">&#x27;engineer&#x27;</span> <span class="keyword">or</span> job<span class="operator">=</span><span class="string">&#x27;saler&#x27;</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span> job;</span><br></pre></td></tr></table></figure></li><li><p>尽量不使用触发器，trigger事件比较耗时</p></li><li><p>避免使用DISTINCT</p></li></ol><h1 id="13-索引问题"><a href="#13-索引问题" class="headerlink" title="13. 索引问题"></a>13. 索引问题</h1><h2 id="13-1-什么是索引"><a href="#13-1-什么是索引" class="headerlink" title="13.1 什么是索引"></a>13.1 什么是索引</h2><p>索引是一种特殊的文件，InnoDB 数据库上的索引是表空间的一个组成部分，它包含了对数据表中所有记录的引用指针，所以它要占用物理空间。</p><p>索引是一种排序的数据结构，以协助夸斯查询、更新数据库中数据。索引的实现通常使用B树及B+树。</p><h2 id="13-2-索引优缺点"><a href="#13-2-索引优缺点" class="headerlink" title="13.2 索引优缺点"></a>13.2 索引优缺点</h2><p>优点：</p><ul><li>提高检索速度</li></ul><p>缺点：</p><ul><li>创建和维护索引要消耗时间，即对表中数据进行增、删、改，索引也需要维护</li><li>索引需要占用物理空间</li></ul><h2 id="13-3-索引类型"><a href="#13-3-索引类型" class="headerlink" title="13.3 索引类型"></a>13.3 索引类型</h2><p><strong>按存储结构：</strong></p><ul><li>BTree, B+Tree 索引</li><li>Hash 索引</li><li>full-index 全文索引</li><li>R-Tree</li></ul><p><strong>按应用层次：</strong></p><ul><li>普通索引</li><li>唯一索引</li><li>符合索引</li></ul><h2 id="13-4-索引底层实现"><a href="#13-4-索引底层实现" class="headerlink" title="13.4 索引底层实现"></a>13.4 索引底层实现</h2><ul><li><p>Hash索引：基于hash表，只有精确匹配索引的查询才有效。对每行的索引列计算一个哈希值，并将其存储到索引表中，同时索引表中保存指向每列数据的指针。</p></li><li><p>B+Tree: 数据都住叶子节点上，并且增加了顺序访问指针，每个叶子节点都指向相邻的叶子节点的地址。相比BTree，进行范围查找只需要查找两个节点，进行遍历接口，效率更高</p><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/mysql/mysql-b+tree-data.png" alt="a"></p></li></ul><h2 id="13-5-选-B-Tree，而不是BTree，-Hash-二叉树，-红黑树"><a href="#13-5-选-B-Tree，而不是BTree，-Hash-二叉树，-红黑树" class="headerlink" title="13.5 选 B+Tree，而不是BTree， Hash,  二叉树， 红黑树"></a>13.5 选 B+Tree，而不是BTree， Hash,  二叉树， 红黑树</h2><p><strong>BTree</strong>:</p><ul><li><strong>B+树磁盘读写代价更低</strong>：B+树的内部节点并没有指向关键字具体信息的指针，因此其内部节点相对BTree更小，如果把所有同一内部节点的关键字存放放在同一盘块中，那么盘块所能容纳的关键字数量也越多，一次性读入内存的需要查找的关键字也就越多，相对IO读写次数就降低了。</li><li><strong>B+树的数据存储在叶子节点上，分支节点均为索引</strong>：方便扫库，只需要扫一遍叶子节点接口。而B树因为其分支节点同样存储着数据，要找到具体的数据，需要进行一次中序遍历按序来扫。</li></ul><p><strong>Hash</strong>:</p><ul><li>可快速定位，单没有排序，IO复杂度高</li><li>适合等值查询，不支持范围查询</li><li>不支持部分索引匹配查询</li></ul><p><strong>二叉树</strong>：树的高度不均匀，不能自平衡，查找效率和数据有关(树的高度)，IO代价高</p><p><strong>红黑树</strong>：树的高度随着数据量增加而增加，IO代价高</p><h1 id="99-问题集"><a href="#99-问题集" class="headerlink" title="99. 问题集"></a>99. 问题集</h1><h2 id="99-1-删除百万级别数据"><a href="#99-1-删除百万级别数据" class="headerlink" title="99.1 删除百万级别数据"></a>99.1 删除百万级别数据</h2><p>不要直接去操作，直接操作会存在索引更新问题；另外删除过程中断，会导致回滚</p><p>1）先删除索引 </p><p>2）删除无用数据</p><p>3）重建索引</p><h2 id="99-2-线上环境大表，添加索引"><a href="#99-2-线上环境大表，添加索引" class="headerlink" title="99.2 线上环境大表，添加索引"></a>99.2 线上环境大表，添加索引</h2><p>数据量超过100W，直接增加索引，可能导致服务器奔溃</p><p>两种方法：</p><p>1）临时表</p><p>注意：此方法可能会损失少量数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--复制旧表结构</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> new_table <span class="keyword">like</span> old_table;</span><br><span class="line"></span><br><span class="line"><span class="comment">--加字段、索引</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> new_table <span class="keyword">add</span> index (<span class="keyword">column</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">--拷贝旧表数据</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> new_table(field1, field2, ...) <span class="keyword">select</span> field1, field2, ... <span class="keyword">from</span> old_table;</span><br><span class="line"></span><br><span class="line"><span class="comment">--修改表名</span></span><br><span class="line">rename <span class="keyword">table</span> old_table <span class="keyword">to</span> old_table_bak;</span><br><span class="line">rename <span class="keyword">table</span> new_table <span class="keyword">to</span> old_table;</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> admin_user RENAME <span class="keyword">TO</span> a_user;</span><br></pre></td></tr></table></figure><p>2）主从切换</p><p>从库中进行加字段、索引</p><p>主库切换到从库</p><h2 id="99-3-大表数据查询优化"><a href="#99-3-大表数据查询优化" class="headerlink" title="99.3 大表数据查询优化"></a>99.3 大表数据查询优化</h2><p>1）优化schema、sql、索引</p><p>2）增加缓存 redis 等</p><p>3）主从复制，读写分离</p><p>4）垂直拆分（一表分多表）。根据模块耦合度，将一个大的系统拆分成多个小系统，即分布式系统</p><p>5）水平切分（存储数据分片）。大表，考虑选择合适的分片(sharding key).</p><p>分片问题：</p><ul><li>事务：需要支持分布式事务</li><li>跨库join、count, order by, group by及聚合函数等：分别在各个节点上得到结果，然后在应用程序端进行合并。</li><li>数据迁移、容量规划、扩容</li><li>ID问题：Twitter的分布式自增ID算法Snowflake</li><li>跨分区排序：多节点查询，结果集汇总并再排序</li></ul><h2 id="99-4-慢查询优化"><a href="#99-4-慢查询优化" class="headerlink" title="99.4 慢查询优化"></a>99.4 慢查询优化</h2><ul><li>分析查询语句，检查是否load了额外的数据，对查询语句重写，去除多余的查询</li><li>分析语句的执行计划，获取其使用索引的情况，优化索引，使其尽可能命中</li><li>已无法优化的大表，考虑横向或纵向分表</li></ul><h2 id="99-5-使用主键"><a href="#99-5-使用主键" class="headerlink" title="99.5 使用主键"></a>99.5 使用主键</h2><p>主键的好处：确保数据在整张表中的唯一性。在CURD的时候能确保操作数据范围安全</p><p>推荐使用自增ID，而不是UUID。因为InnoDB中的主键索引是聚簇索引，即主键索引的B+上叶子节点上存储了主键索引及全部数据(按顺序)。使用自增ID，只需要不断想后排列即可；但如果是UUID，先确定顺序，导致数据移动等操作，使插入性能下降。</p><h2 id="99-6-字段定义要求not-null的好处"><a href="#99-6-字段定义要求not-null的好处" class="headerlink" title="99.6 字段定义要求not null的好处"></a>99.6 字段定义要求not null的好处</h2><p>null值会占用更多的字节，也会在程序中造成很多与预期不符的情况</p><h2 id="99-7-存储密码散列"><a href="#99-7-存储密码散列" class="headerlink" title="99.7 存储密码散列"></a>99.7 存储密码散列</h2><p>密码散列、盐值、也会手机号等固定长度的字符串应该使用char而不是varchar，这样可以节约空间且提高检索效率。</p><h2 id="99-8-数据库CPU飙升到500-怎么处理"><a href="#99-8-数据库CPU飙升到500-怎么处理" class="headerlink" title="99.8 数据库CPU飙升到500%怎么处理"></a>99.8 数据库CPU飙升到500%怎么处理</h2><p>1）使用top观察是不是mysqld占用导致的，如果不是，找到占用高的进程，并进行处理</p><p>2）对于mysqld造成的问题，可以使用<code>show processlist</code> 查看 session 情况，是否有消耗 sql 的资源在运行。查看执行计划是否准确，index是否缺失等</p><h2 id="99-9-重复值高的字段不能建索引"><a href="#99-9-重复值高的字段不能建索引" class="headerlink" title="99.9 重复值高的字段不能建索引"></a>99.9 重复值高的字段不能建索引</h2><p>未命中索引的原因：</p><ul><li><p>查询的数据量可能已经是总数据量的20%以上了，这个时候就会选择表扫描。</p></li><li><p>索引坏块，需要重建索引。</p></li></ul><p>原因：</p><p>1）非聚簇索引存储了对主键的引用，如果select字段不在非聚簇索引内，就需要跳到主键索引（图中从右边索引树跳到左边的索引树），再获取select字段值</p><p>2）如果非聚簇索引值重复率高，那么将查询时就会出现图中从右边跳到左边的情况，导致整个流程很慢</p><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/mysql/mysql-clustered-index.png" alt="a"></p>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Go 缓存淘汰策略</title>
      <link href="/2020/01/12/Go%20%E7%BC%93%E5%AD%98%E6%B7%98%E6%B1%B0%E7%AD%96%E7%95%A5/"/>
      <url>/2020/01/12/Go%20%E7%BC%93%E5%AD%98%E6%B7%98%E6%B1%B0%E7%AD%96%E7%95%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="1-LRU"><a href="#1-LRU" class="headerlink" title="1. LRU"></a>1. LRU</h1><p>Least Recently Used, 最近最少使用缓存。目的：淘汰最长时间未被使用的元素</p><ul><li>快速存取原始</li><li>固定的最大容量，不会无限制增长</li><li>达到最大容量后，新增元素时，会把最近最少使用的元素删除，再放入新元素</li></ul><span id="more"></span><h2 id="1-1-示例代码"><a href="#1-1-示例代码" class="headerlink" title="1.1 示例代码"></a>1.1 示例代码</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Entry <span class="keyword">struct</span> &#123;</span><br><span class="line">Key   <span class="keyword">string</span></span><br><span class="line">Value <span class="keyword">interface</span>&#123;&#125;</span><br><span class="line">pre   *Entry</span><br><span class="line">next  *Entry</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Cache <span class="keyword">struct</span> &#123;</span><br><span class="line">cache    <span class="keyword">map</span>[<span class="keyword">string</span>]*Entry</span><br><span class="line">capacity <span class="keyword">int</span></span><br><span class="line">head     *Entry</span><br><span class="line">tail     *Entry</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">newCache</span><span class="params">(<span class="built_in">cap</span> <span class="keyword">int</span>)</span> *<span class="title">Cache</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> &amp;Cache&#123;cache: <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]*Entry), capacity: <span class="built_in">cap</span>&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> lock sync.RWMutex</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(cache *Cache)</span> <span class="title">Put</span><span class="params">(key <span class="keyword">string</span>, val <span class="keyword">interface</span>&#123;&#125;)</span> <span class="title">interface</span></span>&#123;&#125; &#123;</span><br><span class="line">lock.Lock()</span><br><span class="line"><span class="keyword">defer</span> lock.Unlock()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> existVal, exist := cache.cache[key]; exist &#123;</span><br><span class="line">cache.moveToHead(existVal)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 重设 head 元素</span></span><br><span class="line">e := &amp;Entry&#123;Key: key, Value: val, next: cache.head&#125;</span><br><span class="line"><span class="keyword">if</span> cache.head != <span class="literal">nil</span> &#123;</span><br><span class="line">cache.head.pre = e</span><br><span class="line">&#125;</span><br><span class="line">cache.head = e</span><br><span class="line"></span><br><span class="line"><span class="comment">// 第一次新增元素时，tail 为 nil</span></span><br><span class="line"><span class="keyword">if</span> cache.tail == <span class="literal">nil</span> &#123;</span><br><span class="line">cache.tail = e</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cache.cache[key] = e</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(cache.cache) &lt;= cache.capacity &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理超出容量范围的元素</span></span><br><span class="line">removedEntry := cache.tail</span><br><span class="line">cache.tail = cache.tail.pre</span><br><span class="line">removedEntry.pre = <span class="literal">nil</span></span><br><span class="line">cache.tail.next = <span class="literal">nil</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">delete</span>(cache.cache, removedEntry.Key)</span><br><span class="line"><span class="keyword">return</span> removedEntry.Value</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(cache *Cache)</span> <span class="title">Get</span><span class="params">(key <span class="keyword">string</span>)</span> <span class="title">interface</span></span>&#123;&#125; &#123;</span><br><span class="line">lock.Lock()</span><br><span class="line"><span class="keyword">defer</span> lock.Unlock()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> existVal, exist := cache.cache[key]; exist &#123;</span><br><span class="line">cache.moveToHead(existVal)</span><br><span class="line"><span class="keyword">return</span> existVal.Value</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(cache *Cache)</span> <span class="title">moveToHead</span><span class="params">(e *Entry)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> e == cache.head &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 从link中断开，并连接前后元素</span></span><br><span class="line">e.pre.next = e.next</span><br><span class="line"><span class="keyword">if</span> e == cache.tail &#123;</span><br><span class="line">cache.tail = e.pre</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">e.next.pre = e.pre</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">e.pre = <span class="literal">nil</span></span><br><span class="line">e.next = cache.head</span><br><span class="line">cache.head.pre = e</span><br><span class="line">cache.head = e</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">cache := newCache(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">cache.Put(<span class="string">&quot;1&quot;</span>, <span class="string">&quot;Golang&quot;</span>)</span><br><span class="line">fmt.Println(cache.Get(<span class="string">&quot;1&quot;</span>))</span><br><span class="line"></span><br><span class="line">cache.Put(<span class="string">&quot;2&quot;</span>, <span class="string">&quot;Python&quot;</span>)</span><br><span class="line">fmt.Println(cache.Get(<span class="string">&quot;1&quot;</span>))</span><br><span class="line"></span><br><span class="line">cache.Put(<span class="string">&quot;3&quot;</span>, <span class="string">&quot;Java&quot;</span>)</span><br><span class="line">fmt.Println(cache.Get(<span class="string">&quot;1&quot;</span>))</span><br><span class="line"></span><br><span class="line">fmt.Println(cache.Get(<span class="string">&quot;2&quot;</span>)) <span class="comment">// nil</span></span><br><span class="line">fmt.Println(cache.Get(<span class="string">&quot;3&quot;</span>)) <span class="comment">// Java</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-2-完整代码"><a href="#1-2-完整代码" class="headerlink" title="1.2 完整代码"></a>1.2 完整代码</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> LinkNode <span class="keyword">struct</span> &#123;</span><br><span class="line">    key, val  <span class="keyword">int</span></span><br><span class="line">    pre, next *LinkNode</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> LRUCache <span class="keyword">struct</span> &#123;</span><br><span class="line">    m          <span class="keyword">map</span>[<span class="keyword">int</span>]*LinkNode</span><br><span class="line">    <span class="built_in">cap</span>        <span class="keyword">int</span></span><br><span class="line">    head, tail *LinkNode</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Constructor</span><span class="params">(capacity <span class="keyword">int</span>)</span> <span class="title">LRUCache</span></span> &#123;</span><br><span class="line">    head := &amp;LinkNode&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="literal">nil</span>, <span class="literal">nil</span>&#125;</span><br><span class="line">    tail := &amp;LinkNode&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="literal">nil</span>, <span class="literal">nil</span>&#125;</span><br><span class="line">    head.next = tail</span><br><span class="line">    tail.pre = head</span><br><span class="line">    <span class="keyword">return</span> LRUCache&#123;<span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">int</span>]*LinkNode), capacity, head, tail&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(this *LRUCache)</span> <span class="title">Get</span><span class="params">(key <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">    cache := this.m</span><br><span class="line">    <span class="keyword">if</span> v, exist := cache[key]; exist &#123;</span><br><span class="line">        this.MoveToHead(v)</span><br><span class="line">        <span class="keyword">return</span> v.val</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(this *LRUCache)</span> <span class="title">RemoveNode</span><span class="params">(node *LinkNode)</span></span> &#123;</span><br><span class="line">    node.pre.next = node.next</span><br><span class="line">    node.next.pre = node.pre</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(this *LRUCache)</span> <span class="title">AddNode</span><span class="params">(node *LinkNode)</span></span> &#123;</span><br><span class="line">    head := this.head</span><br><span class="line">    node.next = head.next</span><br><span class="line">    head.next.pre = node</span><br><span class="line">    node.pre = head</span><br><span class="line">    head.next = node</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(this *LRUCache)</span> <span class="title">MoveToHead</span><span class="params">(node *LinkNode)</span></span> &#123;</span><br><span class="line">    this.RemoveNode(node)</span><br><span class="line">    this.AddNode(node)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(this *LRUCache)</span> <span class="title">Put</span><span class="params">(key <span class="keyword">int</span>, value <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">    tail := this.tail</span><br><span class="line">    cache := this.m</span><br><span class="line">    <span class="keyword">if</span> v, exist := cache[key]; exist &#123;</span><br><span class="line">        v.val = value</span><br><span class="line">        this.MoveToHead(v)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        v := &amp;LinkNode&#123;key, value, <span class="literal">nil</span>, <span class="literal">nil</span>&#125;</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(cache) == this.<span class="built_in">cap</span> &#123;</span><br><span class="line">            <span class="built_in">delete</span>(cache, tail.pre.key)</span><br><span class="line">            this.RemoveNode(tail.pre)</span><br><span class="line">        &#125;</span><br><span class="line">        this.AddNode(v)</span><br><span class="line">        cache[key] = v</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="2-LFU"><a href="#2-LFU" class="headerlink" title="2. LFU"></a>2. LFU</h1><p>LFU（Least Frequently Used）算法根据数据的历史访问频率来淘汰数据，其核心思想是“如果数据过去被访问多次，那么将来被访问的频率也更高”。LFU的每个数据块都有一个引用计数，所有数据块按照引用计数排序，具有相同引用计数的数据块则按照时间排序。LFU需要记录所有数据的访问记录，内存消耗较高；需要基于引用计数排序，性能消耗较高。在算法实现复杂度上，LFU要远大于LRU。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> LFUCache <span class="keyword">struct</span> &#123;</span><br><span class="line">cache               <span class="keyword">map</span>[<span class="keyword">int</span>]*Node</span><br><span class="line">freq                <span class="keyword">map</span>[<span class="keyword">int</span>]*DoubleList</span><br><span class="line">ncap, size, minFreq <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(this *LFUCache)</span> <span class="title">IncrFreq</span><span class="params">(node *Node)</span></span> &#123;</span><br><span class="line">_freq := node.freq</span><br><span class="line">this.freq[_freq].RemoveNode(node)</span><br><span class="line"><span class="keyword">if</span> this.minFreq == _freq &amp;&amp; this.freq[_freq].IsEmpty() &#123;</span><br><span class="line">this.minFreq++</span><br><span class="line"><span class="built_in">delete</span>(this.freq, _freq)</span><br><span class="line">&#125;</span><br><span class="line">node.freq++</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> this.freq[node.freq] == <span class="literal">nil</span> &#123;</span><br><span class="line">this.freq[node.freq] = createDL()</span><br><span class="line">&#125;</span><br><span class="line">this.freq[node.freq].AddFirst(node)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Constructor</span><span class="params">(capacity <span class="keyword">int</span>)</span> <span class="title">LFUCache</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> LFUCache&#123;</span><br><span class="line">cache: <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">int</span>]*Node),</span><br><span class="line">freq:  <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">int</span>]*DoubleList),</span><br><span class="line">ncap:  capacity,</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(this *LFUCache)</span> <span class="title">Get</span><span class="params">(key <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> node, ok := this.cache[key]; ok &#123;</span><br><span class="line">this.IncrFreq(node)</span><br><span class="line"><span class="keyword">return</span> node.val</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(this *LFUCache)</span> <span class="title">Put</span><span class="params">(key <span class="keyword">int</span>, value <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> this.ncap == <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//节点存在</span></span><br><span class="line"><span class="keyword">if</span> node, ok := this.cache[key]; ok &#123;</span><br><span class="line">node.val = value</span><br><span class="line">this.IncrFreq(node)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> this.size &gt;= this.ncap &#123;</span><br><span class="line">node := this.freq[this.minFreq].RemoveLast()</span><br><span class="line"><span class="built_in">delete</span>(this.cache, node.key)</span><br><span class="line">this.size--</span><br><span class="line">&#125;</span><br><span class="line">x := &amp;Node&#123;key: key, val: value, freq: <span class="number">1</span>&#125;</span><br><span class="line">this.cache[key] = x</span><br><span class="line"><span class="keyword">if</span> this.freq[<span class="number">1</span>] == <span class="literal">nil</span> &#123;</span><br><span class="line">this.freq[<span class="number">1</span>] = createDL()</span><br><span class="line">&#125;</span><br><span class="line">this.freq[<span class="number">1</span>].AddFirst(x)</span><br><span class="line">this.minFreq = <span class="number">1</span></span><br><span class="line">this.size++</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//节点node</span></span><br><span class="line"><span class="keyword">type</span> Node <span class="keyword">struct</span> &#123;</span><br><span class="line">key, val, freq <span class="keyword">int</span></span><br><span class="line">prev, next     *Node</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//双链表</span></span><br><span class="line"><span class="keyword">type</span> DoubleList <span class="keyword">struct</span> &#123;</span><br><span class="line">tail, head *Node</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建一个双链表</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">createDL</span><span class="params">()</span> *<span class="title">DoubleList</span></span> &#123;</span><br><span class="line">head, tail := &amp;Node&#123;&#125;, &amp;Node&#123;&#125;</span><br><span class="line">head.next, tail.prev = tail, head</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> &amp;DoubleList&#123;</span><br><span class="line">tail: tail,</span><br><span class="line">head: head,</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(this *DoubleList)</span> <span class="title">IsEmpty</span><span class="params">()</span> <span class="title">bool</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> this.head.next == this.tail</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//将node添加为双链表的第一个元素</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(this *DoubleList)</span> <span class="title">AddFirst</span><span class="params">(node *Node)</span></span> &#123;</span><br><span class="line">node.next = this.head.next</span><br><span class="line">node.prev = this.head</span><br><span class="line"></span><br><span class="line">this.head.next.prev = node</span><br><span class="line">this.head.next = node</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(this *DoubleList)</span> <span class="title">RemoveNode</span><span class="params">(node *Node)</span></span> &#123;</span><br><span class="line">node.next.prev = node.prev</span><br><span class="line">node.prev.next = node.next</span><br><span class="line"></span><br><span class="line">node.next = <span class="literal">nil</span></span><br><span class="line">node.prev = <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(this *DoubleList)</span> <span class="title">RemoveLast</span><span class="params">()</span> *<span class="title">Node</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> this.IsEmpty() &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">lastNode := this.tail.prev</span><br><span class="line">this.RemoveNode(lastNode)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> lastNode</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go 遍历树</title>
      <link href="/2020/01/09/Go%20%E9%81%8D%E5%8E%86%E6%A0%91/"/>
      <url>/2020/01/09/Go%20%E9%81%8D%E5%8E%86%E6%A0%91/</url>
      
        <content type="html"><![CDATA[<h1 id="1-二叉树遍历"><a href="#1-二叉树遍历" class="headerlink" title="1. 二叉树遍历"></a>1. 二叉树遍历</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">      1</span><br><span class="line">    /   \</span><br><span class="line">  2       3</span><br><span class="line"> / \    /  \</span><br><span class="line">4   5  6    7</span><br><span class="line">      / \</span><br><span class="line">     8   9</span><br><span class="line"></span><br><span class="line">前序输出: 1 2 4 5 3 6 8 9 7</span><br><span class="line">中序输出: 4 2 5 1 8 6 9 3 7</span><br><span class="line">后序输出: 4 5 2 8 9 6 7 3 1</span><br><span class="line">层序输出: 1 2 3 4 5 6 7 8 9</span><br></pre></td></tr></table></figure><span id="more"></span><h1 id="2-实现代码"><a href="#2-实现代码" class="headerlink" title="2. 实现代码"></a>2. 实现代码</h1><h2 id="2-1-构建二叉树"><a href="#2-1-构建二叉树" class="headerlink" title="2.1 构建二叉树"></a>2.1 构建二叉树</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Tree <span class="keyword">struct</span> &#123;</span><br><span class="line">Val    <span class="keyword">int</span></span><br><span class="line">Left   *Tree</span><br><span class="line">Right  *Tree</span><br><span class="line">IsRoot <span class="keyword">bool</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> root = &amp;Tree&#123;</span><br><span class="line">Val:    <span class="number">1</span>,</span><br><span class="line">Left:   node2,</span><br><span class="line">Right:  node3,</span><br><span class="line">IsRoot: <span class="literal">true</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> node2 = &amp;Tree&#123;</span><br><span class="line">Val:   <span class="number">2</span>,</span><br><span class="line">Left:  node4,</span><br><span class="line">Right: node5,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> node3 = &amp;Tree&#123;</span><br><span class="line">Val:   <span class="number">3</span>,</span><br><span class="line">Left:  node6,</span><br><span class="line">Right: node7,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> node4 = &amp;Tree&#123;</span><br><span class="line">Val: <span class="number">4</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> node5 = &amp;Tree&#123;</span><br><span class="line">Val: <span class="number">5</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> node6 = &amp;Tree&#123;</span><br><span class="line">Val:   <span class="number">6</span>,</span><br><span class="line">Left:  node8,</span><br><span class="line">Right: node9,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> node7 = &amp;Tree&#123;</span><br><span class="line">Val: <span class="number">7</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> node8 = &amp;Tree&#123;</span><br><span class="line">Val: <span class="number">8</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> node9 = &amp;Tree&#123;</span><br><span class="line">Val: <span class="number">9</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-2-前序遍历"><a href="#2-2-前序遍历" class="headerlink" title="2.2 前序遍历"></a>2.2 前序遍历</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">preorder</span><span class="params">(t *Tree)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> t == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Printf(<span class="string">&quot;%d, &quot;</span>, t.Val)</span><br><span class="line">preorder(t.Left)</span><br><span class="line">preorder(t.Right)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-3-中序遍历"><a href="#2-3-中序遍历" class="headerlink" title="2.3 中序遍历"></a>2.3 中序遍历</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">inorder</span><span class="params">(t *Tree)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> t == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">inorder(t.Left)</span><br><span class="line">fmt.Printf(<span class="string">&quot;%d, &quot;</span>, t.Val)</span><br><span class="line">inorder(t.Right)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-4-后序遍历"><a href="#2-4-后序遍历" class="headerlink" title="2.4 后序遍历"></a>2.4 后序遍历</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">postorder</span><span class="params">(t *Tree)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> t == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">postorder(t.Left)</span><br><span class="line">postorder(t.Right)</span><br><span class="line">fmt.Printf(<span class="string">&quot;%d, &quot;</span>, t.Val)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-5-层序遍历"><a href="#2-5-层序遍历" class="headerlink" title="2.5 层序遍历"></a>2.5 层序遍历</h2><p>先将二叉树改造为队列</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Queue <span class="keyword">struct</span> &#123;</span><br><span class="line">Val    []*Tree</span><br><span class="line">Length <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(q *Queue)</span> <span class="title">Push</span><span class="params">(t *Tree)</span></span> &#123;</span><br><span class="line">q.Val = <span class="built_in">append</span>(q.Val, t)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(q *Queue)</span> <span class="title">Pop</span><span class="params">()</span> *<span class="title">Tree</span></span> &#123;</span><br><span class="line"><span class="built_in">len</span> := q.Len()</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span> == <span class="number">0</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(<span class="string">&quot;Queue is empty&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">node := q.Val[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span> == <span class="number">1</span> &#123;</span><br><span class="line">q.Val = []*Tree&#123;&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">q.Val = q.Val[<span class="number">1</span>:]</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> node</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(q *Queue)</span> <span class="title">Len</span><span class="params">()</span> <span class="title">int</span></span> &#123;</span><br><span class="line">q.Length = <span class="built_in">len</span>(q.Val)</span><br><span class="line"><span class="keyword">return</span> q.Length</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">levelorder</span><span class="params">(t *Tree)</span></span> &#123;</span><br><span class="line">queue := Queue&#123;&#125;</span><br><span class="line">queue.Push(root)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> queue.Len() &gt; <span class="number">0</span> &#123;</span><br><span class="line">node := queue.Pop()</span><br><span class="line"><span class="keyword">if</span> node == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(<span class="string">&quot;node is nil&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> node.IsRoot &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;%d, &quot;</span>, node.Val)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> node.Left != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;%d, &quot;</span>, node.Left.Val)</span><br><span class="line">queue.Push(node.Left)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> node.Right != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;%d, &quot;</span>, node.Right.Val)</span><br><span class="line">queue.Push(node.Right)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go Etcd</title>
      <link href="/2020/01/03/Go%20Etcd/"/>
      <url>/2020/01/03/Go%20Etcd/</url>
      
        <content type="html"><![CDATA[<h1 id="1-etcd-介绍"><a href="#1-etcd-介绍" class="headerlink" title="1. etcd 介绍"></a>1. etcd 介绍</h1><p>概念：高可用的分布式key-value存储，可用于配置共享和服务发现</p><p>类似项目：zookeeper 和 consul</p><p>接口：提供restful的http接口，使用简单</p><p>实现算法：基于raft算法的强一致性、高可用的服务存储目录</p><p> 应用场景:</p><ul><li>服务注册与发现</li><li>配置中心</li><li>分布式锁</li><li>master选举</li></ul><h1 id="2-etcd-安装-docker"><a href="#2-etcd-安装-docker" class="headerlink" title="2. etcd 安装 (docker)"></a>2. etcd 安装 (docker)</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">$ docker pull gcr.io/etcd-development/etcd:v3.4.13 </span><br><span class="line"></span><br><span class="line">$ rm -rf /tmp/etcd-data.tmp &amp;&amp; mkdir -p /tmp/etcd-data.tmp</span><br><span class="line"></span><br><span class="line">$ docker run \</span><br><span class="line">  -p 2379:2379 \</span><br><span class="line">  -p 2380:2380 \</span><br><span class="line">  --mount <span class="built_in">type</span>=<span class="built_in">bind</span>,<span class="built_in">source</span>=/tmp/etcd-data.tmp,destination=/etcd-data \</span><br><span class="line">  --name etcd-gcr-v3.4.13 \</span><br><span class="line">  --detach gcr.io/etcd-development/etcd:v3.4.13 \</span><br><span class="line">  /usr/<span class="built_in">local</span>/bin/etcd \</span><br><span class="line">  --name s1 \</span><br><span class="line">  --data-dir /etcd-data \</span><br><span class="line">  --listen-client-urls http://0.0.0.0:2379 \</span><br><span class="line">  --advertise-client-urls http://0.0.0.0:2379 \</span><br><span class="line">  --listen-peer-urls http://0.0.0.0:2380 \</span><br><span class="line">  --initial-advertise-peer-urls http://0.0.0.0:2380 \</span><br><span class="line">  --initial-cluster s1=http://0.0.0.0:2380 \</span><br><span class="line">  --initial-cluster-token tkn \</span><br><span class="line">  --initial-cluster-state new \</span><br><span class="line">  --log-level info \</span><br><span class="line">  --logger zap \</span><br><span class="line">  --log-outputs stderr</span><br><span class="line">  </span><br><span class="line">$ docker <span class="built_in">exec</span> -it etcd-gcr-v3.4.13 /bin/sh</span><br><span class="line"><span class="comment"># etcdctl version</span></span><br><span class="line">etcdctl version: 3.4.13</span><br><span class="line">API version: 3.4</span><br><span class="line"><span class="comment"># etcdctl endpoint health</span></span><br><span class="line">127.0.0.1:2379 is healthy: successfully committed proposal: took = 29.242978ms</span><br><span class="line"><span class="comment"># etcdctl put name jack</span></span><br><span class="line">OK</span><br><span class="line"><span class="comment"># etcdctl get name</span></span><br><span class="line">name</span><br><span class="line">jack</span><br></pre></td></tr></table></figure><h1 id="3-etcd-使用"><a href="#3-etcd-使用" class="headerlink" title="3. etcd 使用"></a>3. etcd 使用</h1><h2 id="3-1-连接-etcd"><a href="#3-1-连接-etcd" class="headerlink" title="3.1 连接 etcd"></a>3.1 连接 etcd</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 客户端配置</span></span><br><span class="line">config := clientv3.Config &#123;</span><br><span class="line">  Endpoints: []<span class="keyword">string</span>&#123;<span class="string">&quot;localhost:2379&quot;</span>&#125;,</span><br><span class="line">  DialTimeout: <span class="number">5</span> * time.Second,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 建立连接</span></span><br><span class="line">cli, err := clientv3.New(config)</span><br></pre></td></tr></table></figure><h2 id="3-2-新增或修改数据"><a href="#3-2-新增或修改数据" class="headerlink" title="3.2 新增或修改数据"></a>3.2 新增或修改数据</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">put</span><span class="params">(cli *clientv3.Client)</span></span> &#123;</span><br><span class="line">ctx, cancel := context.WithTimeout(context.Background(), time.Second)</span><br><span class="line">putResp, err := cli.Put(ctx, <span class="string">&quot;/logagent/conf/&quot;</span>, <span class="string">&quot;sample_value&quot;</span>)</span><br><span class="line">cancel()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(putResp.Header.Revision)</span><br><span class="line"><span class="keyword">if</span> putResp.PrevKv != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;prev Value:&quot;</span>, putResp.PrevKv.Value)</span><br><span class="line">fmt.Println(<span class="string">&quot;CreateRevision:&quot;</span>, putResp.PrevKv.CreateRevision)</span><br><span class="line">fmt.Println(<span class="string">&quot;ModRevision:&quot;</span>, putResp.PrevKv.ModRevision)</span><br><span class="line">fmt.Println(<span class="string">&quot;Version:&quot;</span>, putResp.PrevKv.Version)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-3-获取数据"><a href="#3-3-获取数据" class="headerlink" title="3.3 获取数据"></a>3.3 获取数据</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">get</span><span class="params">(cli *clientv3.Client)</span></span> &#123;</span><br><span class="line">ctx, cancel := context.WithTimeout(context.Background(), time.Second)</span><br><span class="line">getResp, err := cli.Get(ctx, <span class="string">&quot;/logagent/conf/&quot;</span>)</span><br><span class="line">cancel()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, ev := <span class="keyword">range</span> getResp.Kvs &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;Get %s: %s\n&quot;</span>, ev.Key, ev.Value)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-4-删除数据"><a href="#3-4-删除数据" class="headerlink" title="3.4 删除数据"></a>3.4 删除数据</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">del</span><span class="params">(cli *clientv3.Client)</span></span> &#123;</span><br><span class="line">ctx, cancel := context.WithTimeout(context.Background(), time.Second)</span><br><span class="line">delResp, err := cli.Delete(ctx, <span class="string">&quot;/logagent/conf/&quot;</span>)</span><br><span class="line">cancel()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(delResp.PrevKvs) &gt; <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">for</span> _, ev := <span class="keyword">range</span> delResp.PrevKvs &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;Delete %s: %s\n&quot;</span>, ev.Key, ev.Value)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(delResp.Deleted)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-5-设置租期"><a href="#3-5-设置租期" class="headerlink" title="3.5 设置租期"></a>3.5 设置租期</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">lease</span><span class="params">(cli *clientv3.Client)</span></span> &#123;</span><br><span class="line">ctx, cancel := context.WithTimeout(context.Background(), time.Second)</span><br><span class="line">leaseGrantResp, err := cli.Grant(ctx, <span class="number">10</span>)</span><br><span class="line">cancel()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">leaseId := leaseGrantResp.ID</span><br><span class="line"></span><br><span class="line">ctx, cancel = context.WithTimeout(context.Background(), time.Second)</span><br><span class="line">_, err = cli.Put(ctx, <span class="string">&quot;/logagent/ttl/&quot;</span>, <span class="string">&quot;10s&quot;</span>, clientv3.WithLease(leaseId))</span><br><span class="line">cancel()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">ctx, cancel := context.WithTimeout(context.Background(), time.Second)</span><br><span class="line">getResp, err := cli.Get(ctx, <span class="string">&quot;/logagent/ttl/&quot;</span>)</span><br><span class="line">cancel()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> getResp.Count == <span class="number">0</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;ttl expire&quot;</span>)</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, ev := <span class="keyword">range</span> getResp.Kvs &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;Get %s: %s\n&quot;</span>, ev.Key, ev.Value)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">time.Sleep(<span class="number">2</span> * time.Second)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-6-延迟租期"><a href="#3-6-延迟租期" class="headerlink" title="3.6 延迟租期"></a>3.6 延迟租期</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">extentLease</span><span class="params">(cli *clientv3.Client)</span></span> &#123;</span><br><span class="line">ctx, cancel := context.WithTimeout(context.Background(), time.Second)</span><br><span class="line">leaseGrantResp, err := cli.Grant(ctx, <span class="number">10</span>)</span><br><span class="line">cancel()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">leaseId := leaseGrantResp.ID</span><br><span class="line"></span><br><span class="line">ctx, cancel = context.WithTimeout(context.Background(), time.Second)</span><br><span class="line">_, err = cli.Put(ctx, <span class="string">&quot;/logagent/ttl/&quot;</span>, <span class="string">&quot;10s&quot;</span>, clientv3.WithLease(leaseId))</span><br><span class="line">cancel()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">time.Sleep(<span class="number">5</span> * time.Second)</span><br><span class="line"></span><br><span class="line">ctx, cancel = context.WithTimeout(context.Background(), time.Second)</span><br><span class="line">leaseKeepAliveResp, err := cli.KeepAlive(ctx, leaseId)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> keepResp := &lt;-leaseKeepAliveResp:</span><br><span class="line"><span class="keyword">if</span> keepResp == <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;Lease expire&quot;</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;Receive lease extent resp&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line">ctx, cancel = context.WithTimeout(context.Background(), time.Second)</span><br><span class="line">getResp, err := cli.Get(ctx, <span class="string">&quot;/logagent/ttl/&quot;</span>)</span><br><span class="line">cancel()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, ev := <span class="keyword">range</span> getResp.Kvs &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;Get %s: %s\n&quot;</span>, ev.Key, ev.Value)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-7-watch-功能"><a href="#3-7-watch-功能" class="headerlink" title="3.7 watch 功能"></a>3.7 watch 功能</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">watch</span><span class="params">(cli *clientv3.Client)</span></span> &#123;</span><br><span class="line">kv := clientv3.NewKV(cli)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 模拟KV变化</span></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">_, _ = kv.Put(context.TODO(), <span class="string">&quot;/language&quot;</span>, <span class="string">&quot;go&quot;</span>)</span><br><span class="line">_, _ = kv.Delete(context.TODO(), <span class="string">&quot;language&quot;</span>)</span><br><span class="line">time.Sleep(time.Second)</span><br><span class="line">&#125;</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line">getResp, err := kv.Get(context.TODO(), <span class="string">&quot;language&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, ev := <span class="keyword">range</span> getResp.Kvs &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;Get %s: %s\n&quot;</span>, ev.Key, ev.Value)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">watchStartVersion := getResp.Header.Revision + <span class="number">1</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;Start watching from version: %d\n&quot;</span>, watchStartVersion)</span><br><span class="line"></span><br><span class="line">watcher := clientv3.NewWatcher(cli)</span><br><span class="line"></span><br><span class="line">ctx, cancel := context.WithCancel(context.TODO())</span><br><span class="line">time.AfterFunc(<span class="number">5</span>*time.Second, <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">cancel()</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">watchRespChan := watcher.Watch(ctx, <span class="string">&quot;language&quot;</span>, clientv3.WithRev(watchStartVersion))</span><br><span class="line"><span class="keyword">for</span> watchResp := <span class="keyword">range</span> watchRespChan &#123;</span><br><span class="line"><span class="keyword">for</span> _, event := <span class="keyword">range</span> watchResp.Events &#123;</span><br><span class="line"><span class="keyword">switch</span> event.Type &#123;</span><br><span class="line"><span class="keyword">case</span> mvccpb.PUT:</span><br><span class="line">fmt.Printf(<span class="string">&quot;Modify: %s, %v, %v\n&quot;</span>,</span><br><span class="line">event.Kv.Value, event.Kv.CreateRevision, event.Kv.ModRevision)</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> mvccpb.DELETE:</span><br><span class="line">fmt.Printf(<span class="string">&quot;Delete: %v\n&quot;</span>, event.Kv.ModRevision)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">cli, err := clientv3.New(clientv3.Config&#123;</span><br><span class="line">Endpoints:   []<span class="keyword">string</span>&#123;<span class="string">&quot;localhost:2379&quot;</span>&#125;,</span><br><span class="line">DialTimeout: <span class="number">5</span> * time.Second,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> cli.Close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">rch := cli.Watch(context.Background(), <span class="string">&quot;/logagent/conf/&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> wresp := <span class="keyword">range</span> rch &#123;</span><br><span class="line"><span class="keyword">for</span> _, ev := <span class="keyword">range</span> wresp.Events &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;%s %q : %q\n&quot;</span>, ev.Type, ev.Kv.Key, ev.Kv.Value)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux文本处理</title>
      <link href="/2019/12/19/Linux%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86/"/>
      <url>/2019/12/19/Linux%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h2 id="1-find"><a href="#1-find" class="headerlink" title="1. find"></a>1. find</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">find PATH -option [-print] [-exec|-ok cmd] &#123;&#125; \;</span><br><span class="line">-print \n</span><br><span class="line">-print0 \0, NULL</span><br></pre></td></tr></table></figure><h3 id="1-1-time"><a href="#1-1-time" class="headerlink" title="1.1 time"></a>1.1 time</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-atime N</span><br><span class="line">-ctime N</span><br><span class="line">-mtime N</span><br><span class="line">-newer FILE</span><br><span class="line">-amin M</span><br><span class="line">-mmin M..</span><br></pre></td></tr></table></figure><p>实例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">find . -amin -10 <span class="comment"># 10分钟内访问的文件</span></span><br><span class="line">find . -mtime -2 <span class="comment"># 2天内修改的文件</span></span><br><span class="line">find . -mmin +60 <span class="comment"># 60分钟前被修改的文件</span></span><br><span class="line">find /etc -mmin -120   <span class="comment"># 两小时内被修改的文件</span></span><br><span class="line">find / -mtime 0   <span class="comment"># 将过去24 小时内有改变过内容的文件</span></span><br></pre></td></tr></table></figure><h3 id="1-2-user-amp-group"><a href="#1-2-user-amp-group" class="headerlink" title="1.2 user &amp; group"></a>1.2 user &amp; group</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-uid n</span><br><span class="line">-gid n</span><br><span class="line">-user name</span><br><span class="line">-group name</span><br><span class="line">-nouser</span><br><span class="line">-nogroup</span><br></pre></td></tr></table></figure><p>实例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">find /var -uid +1048 <span class="comment"># uid大于等于1048</span></span><br><span class="line">find /home -user <span class="built_in">test</span></span><br></pre></td></tr></table></figure><h3 id="1-3-file"><a href="#1-3-file" class="headerlink" title="1.3 file"></a>1.3 file</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">-name FILENAME</span><br><span class="line">-type TYPE （f，b，c，d，l，s，p）</span><br><span class="line"></span><br><span class="line">-size SIZE</span><br><span class="line">-empty</span><br><span class="line"></span><br><span class="line">-inum n</span><br><span class="line">-links NUM</span><br><span class="line"></span><br><span class="line">-depth sub-diectory first</span><br><span class="line">-maxdepth levelDecend at most [level] levels of directories below the command</span><br><span class="line">-mindepth levelDon&#x27;t apply tests or actions at levels less than [level]</span><br><span class="line"></span><br><span class="line">-xdev不跨越filesystem   </span><br><span class="line">-mount unix不支持</span><br><span class="line">-fstype TYPE（ext3，proc）</span><br><span class="line"></span><br><span class="line">-follow   dereference symbolic links</span><br><span class="line">-L</span><br><span class="line"></span><br><span class="line">-pruneIgnore directory or file</span><br><span class="line"></span><br><span class="line">-perm MODE   许可位正好是MODE</span><br><span class="line">-perm -MODE 许可位完全符合MODE</span><br><span class="line">-perm +MODE 许可位部分符合MODE， 老式写法/MODE</span><br></pre></td></tr></table></figure><p>实例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">find . -maxdepth 1  </span><br><span class="line">find . -maxdepth 2  </span><br><span class="line">find . -mindepth 4  </span><br><span class="line">find . -mindepth 2 -maxdepth 3</span><br><span class="line"></span><br><span class="line">find . -path ./.svn</span><br><span class="line"></span><br><span class="line">find . -path /var/<span class="built_in">log</span> -prune -o -<span class="built_in">print</span></span><br><span class="line">find . \(-path /var/<span class="built_in">log</span> -o -path /var/spool \) -prune -o -<span class="built_in">print</span> </span><br><span class="line"></span><br><span class="line">find . -size 1000  <span class="comment"># 1000 blocks, 1Block=512Bytes</span></span><br><span class="line">find . -size +70M</span><br><span class="line">find . -size 20c  <span class="comment"># 20 bytes</span></span><br><span class="line">find . -size +10M -a -size -20M</span><br><span class="line"></span><br><span class="line">find . -empty  <span class="comment"># 空文件或空目录</span></span><br><span class="line">find . -links +2  <span class="comment"># 链接数超过2</span></span><br><span class="line"></span><br><span class="line">find /mnt -name a.txt -fstype vfat</span><br><span class="line">find / ！-fstype proc <span class="string">&#x27;(&#x27;</span> -name <span class="string">&#x27;.??*&#x27;</span> -o -name <span class="string">&#x27;.[^.]&#x27;</span> <span class="string">&#x27;)&#x27;</span></span><br><span class="line"></span><br><span class="line">find / -perm 664 <span class="comment"># 权限精确等于664</span></span><br><span class="line">find / -perm -664 <span class="comment"># 权限完全满足664，但可包含额外权限，665，777</span></span><br><span class="line">find / -perm +664 <span class="comment"># 权限部分满足664，例如660和600</span></span><br><span class="line"></span><br><span class="line">find . -perm -007  <span class="comment"># others用户具有rwx权限</span></span><br><span class="line">find . -perm -100 <span class="comment"># 属主至少具有x权限</span></span><br><span class="line"></span><br><span class="line">特殊权限SGID，SUID，SBIT(---s--s--t)</span><br><span class="line">find . -perm +7000  <span class="comment"># 至少具有一个特殊权限位</span></span><br><span class="line">find . -perm -7000<span class="comment">#  具有全部特殊权位</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除7天内未被读取的core文件，只涉及/所在的文件系统(-xdev)</span></span><br><span class="line">find / -xdev -<span class="built_in">type</span> f  <span class="string">&#x27;(&#x27;</span>  -name core -o name <span class="string">&#x27;core.[0-9]*&#x27;</span>  <span class="string">&#x27;)&#x27;</span> -atime +7 -<span class="built_in">exec</span> rm -f &#123;&#125; <span class="string">&#x27;;&#x27;</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除那些用#, .#或.nfs开头，或者以~及。CKP结尾且3天内都未被访问过的文件</span></span><br><span class="line">find / -xdev -atime +3  <span class="string">&#x27;(&#x27;</span>  -name <span class="string">&#x27;#*&#x27;</span> -o -name <span class="string">&#x27;.#*&#x27;</span> -o -name <span class="string">&#x27;*.CKP&#x27;</span>, -o -name <span class="string">&#x27;*~&#x27;</span>, -o -name <span class="string">&#x27;.nfs*&#x27;</span>  <span class="string">&#x27;)&#x27;</span> -<span class="built_in">exec</span> rm -f &#123; &#125; <span class="string">&#x27;;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除/tmp下载72小时内未被修的所有子目录</span></span><br><span class="line"><span class="built_in">cd</span> /tmp; find . ! -name . ! -name lost+found -<span class="built_in">type</span> d -mtime +3 -<span class="built_in">exec</span> /bin/rm -rf &#123;&#125; \;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 嵌入时间</span></span><br><span class="line">BACKUPFILE=backup-$(date +%m-%d-%Y)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 备份一天前的文件, 缺陷：发现太多的文件或文件名包含空格，执行失败</span></span><br><span class="line">tar cvf - `find . -mtime -1 -<span class="built_in">type</span> f -<span class="built_in">print</span>` &gt; <span class="variable">$archive</span>.tar</span><br><span class="line"></span><br><span class="line"><span class="comment"># 改进型，GNU版本的find, this one is more better</span></span><br><span class="line">find . -mtime -1 -<span class="built_in">type</span> f -print0 | xargs -0 tar rvf <span class="string">&quot;<span class="variable">$archive</span>.tar&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 改进型，Unix风格的find，较慢</span></span><br><span class="line">find . -mtime -1 -<span class="built_in">type</span> f -<span class="built_in">exec</span> tar rvf <span class="string">&quot;<span class="variable">$archive</span>.tar&quot;</span> &#123;&#125; \; </span><br><span class="line"></span><br><span class="line"><span class="comment"># remove file or directory it contains special characters</span></span><br><span class="line">ls -il</span><br><span class="line">find . -inum inode_num -<span class="built_in">exec</span> rm -rf &#123;&#125; \;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="2-xargs"><a href="#2-xargs" class="headerlink" title="2. xargs"></a>2. xargs</h2><p>可读入stdin的数据，并且以空格或换行符做分割，将stdin分割成arguments</p><h3 id="1-1-选项说明"><a href="#1-1-选项说明" class="headerlink" title="1.1 选项说明"></a>1.1 选项说明</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">1) terminated  by a null character, every character is taken literally, (`, \, whitespace)</span><br><span class="line">--null</span><br><span class="line">-0 </span><br><span class="line"></span><br><span class="line">2) terminated by the specified character</span><br><span class="line">--delimiter=delim</span><br><span class="line">-d delim</span><br><span class="line"></span><br><span class="line">3) use at most max-lines nonblank input lines per command line</span><br><span class="line">--max-lines[=max-lines]</span><br><span class="line">-l[max-lines]</span><br><span class="line"></span><br><span class="line">4) use at most max-args arguments per command line.</span><br><span class="line">--max-args=max-args</span><br><span class="line">-n max-args</span><br><span class="line"></span><br><span class="line">5) replace occurrences of replace-str(&#123;&#125; by default) in the initial-arguments with names read from standard input</span><br><span class="line">-I replace-str</span><br><span class="line">--replace[=replace-str]</span><br><span class="line">-i[replace-str].</span><br><span class="line"></span><br><span class="line">6) a placeholder for output text</span><br><span class="line">&#123;&#125;</span><br><span class="line"></span><br><span class="line">7) run up to max-procs processes at a time; 1 by default; 0: run as many as possible</span><br><span class="line">--max-procs=max-procs</span><br><span class="line">-P max-procs</span><br><span class="line"></span><br><span class="line">8) set the end of file string to EOF</span><br><span class="line">--eof=[EOF]</span><br><span class="line">-e[EOF]</span><br><span class="line"></span><br><span class="line">9) prompt</span><br><span class="line">--interactive</span><br><span class="line">-p</span><br><span class="line"></span><br><span class="line">10) print the command line on the standard error output before executing it.</span><br><span class="line">--verbose</span><br><span class="line">-t</span><br></pre></td></tr></table></figure><h3 id="2-2-实例"><a href="#2-2-实例" class="headerlink" title="2.2 实例"></a>2.2 实例</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">find -print0 | xargs -0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 单行输出</span></span><br><span class="line">cat a.txt | xargs</span><br><span class="line"></span><br><span class="line"><span class="comment"># 每行3个参数</span></span><br><span class="line">cat a.txt | xargs -n3 </span><br><span class="line"></span><br><span class="line"><span class="comment"># list files in 8 column</span></span><br><span class="line">ls | xargs -n 8 <span class="built_in">echo</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 前3个用户活动情况</span></span><br><span class="line">cut -d<span class="string">&quot;:&quot;</span> -f1 /etc/passwd | head -n 3 | xargs -p finger</span><br><span class="line">cut -d<span class="string">&quot;:&quot;</span> -f1 /etc/passwd | xargs -p -e<span class="string">&quot;lp&quot;</span> finger</span><br><span class="line"></span><br><span class="line"><span class="comment"># 文件名含空格等</span></span><br><span class="line">find /home -size +1M -print0 | xargs -0 ls -l</span><br><span class="line"></span><br><span class="line"><span class="comment"># core文件列表</span></span><br><span class="line">find / -name <span class="string">&quot;core&quot;</span> -<span class="built_in">print</span> | xargs <span class="built_in">echo</span> <span class="string">&quot;&quot;</span> &gt; core.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># 清除other组的可执行权限</span></span><br><span class="line">find .  -perm -7 -<span class="built_in">print</span> | xargs chmod o-x</span><br><span class="line"></span><br><span class="line"><span class="comment"># 多文件过滤</span></span><br><span class="line">find . -name \* -<span class="built_in">type</span> f | xargs grep <span class="string">&quot;abc&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定界符</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;aXbXc&quot;</span> | xargs -dX</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拷贝整个目录</span></span><br><span class="line">ls | xargs -i -t cp ./&#123;&#125;  /tmp/eli</span><br><span class="line"></span><br><span class="line"><span class="comment"># 杀掉所有mysql进程</span></span><br><span class="line">ps ax | grep mysql | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> | xargs -i <span class="built_in">kill</span>  &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 参数-I和-i</span></span><br><span class="line">cat a.sh</span><br><span class="line"><span class="built_in">echo</span> $*</span><br><span class="line"></span><br><span class="line">cat args.txt</span><br><span class="line">aaa</span><br><span class="line">bbb</span><br><span class="line">ccc</span><br><span class="line"></span><br><span class="line">cat args.txt | xargs -I &#123;&#125; ./a.sh -p &#123;&#125; -l</span><br><span class="line">-p aaa -l</span><br><span class="line">-p bbb -l</span><br><span class="line">-p ccc -l</span><br><span class="line"></span><br><span class="line">cat args.txt | xargs -i ./a.sh -p &#123;&#125; -l</span><br><span class="line"></span><br><span class="line">cat args.txt | xargs -I % ./a.sh -p % -l</span><br><span class="line"></span><br><span class="line"><span class="comment"># 逐一拷贝图片</span></span><br><span class="line">ls *.jpg | xargs -n 1 -i cp &#123;&#125; /home/images</span><br><span class="line"></span><br><span class="line"><span class="comment"># 压缩文件，每次一个</span></span><br><span class="line">ls | xargs -p -l gzip</span><br><span class="line"></span><br><span class="line"><span class="comment"># to handle arguments containing whitespace or quotes</span></span><br><span class="line">find / -<span class="built_in">type</span> f -print0 | xargs -0 grep -liwZ GUI | xargs -0 rm -f</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启两个处理进程，每次压缩一个文件</span></span><br><span class="line">ls *.txt | xargs -t -n1 -P2 gzip</span><br><span class="line"></span><br><span class="line"><span class="comment"># grep输出的文件名以\0结尾</span></span><br><span class="line">grep  -lZ <span class="string">&#x27;abc&#x27;</span> <span class="string">&quot;*.txt&quot;</span> | xargs -0</span><br></pre></td></tr></table></figure><h2 id="3-sed"><a href="#3-sed" class="headerlink" title="3. sed"></a>3. sed</h2><p>sed, stream editor , 按顺序逐行方式工作</p><ul><li><p>i. 从输入读取一行数据存入临时缓冲区，即模式空间(pattern space)</p></li><li><p>ii. 按指定的sed编辑命令处理缓冲区中的内容</p></li><li><p>iii. 把模式空间的内容送往屏幕，并将此行内容从模式空间中删除</p></li><li><p>iv. 读取下一行，重复上述过程直至全部处理</p></li><li><p>模式空间(pattern space)</p></li><li><p>保留空间(hold space)</p></li></ul><h3 id="3-1-参数说明"><a href="#3-1-参数说明" class="headerlink" title="3.1 参数说明"></a>3.1 参数说明</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sed [OPTION] [-e] cmd1 [[-e cmd2] [-e cmd3] ... [-e cmdn]] [input-file]</span><br><span class="line">sed [OPTION] -f script-file [input-file]</span><br><span class="line"></span><br><span class="line">-n不打印模式空间</span><br><span class="line">-r      使用E-REGEX</span><br><span class="line">-i直接修改文件</span><br></pre></td></tr></table></figure><h3 id="3-2-Address"><a href="#3-2-Address" class="headerlink" title="3.2 Address"></a>3.2 Address</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">1,100</span><br><span class="line">1,+5&lt;=&gt; 1,6</span><br><span class="line">5,10!</span><br><span class="line">1~2&lt;=&gt;1,3,5</span><br><span class="line"></span><br><span class="line">/pattern/</span><br><span class="line">/pattern1/,/pattern2/</span><br></pre></td></tr></table></figure><h3 id="3-3-Command"><a href="#3-3-Command" class="headerlink" title="3.3 Command"></a>3.3 Command</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">d  从pattern space删除所有行</span><br><span class="line">D从pattern space删除第一行</span><br><span class="line"></span><br><span class="line">p  打印pattern space中所有行</span><br><span class="line">P打印pattern space中的第一行</span><br><span class="line"></span><br><span class="line">sed &#x27;3,$d&#x27; </span><br><span class="line">sed &#x27;/line/&#x27;d </span><br><span class="line">sed -n &#x27;$p&#x27;</span><br><span class="line"></span><br><span class="line"># delete spaces in front of each row</span><br><span class="line">sed &#x27;s/^[ ]*/g&#x27; </span><br><span class="line">sed &#x27;s/^ */g&#x27; </span><br><span class="line">sed &#x27;s/^[[:space:]]*//g </span><br><span class="line"></span><br><span class="line"># grep &#x27;pattern&#x27;</span><br><span class="line">sed -n &#x27;/pattern/p&#x27;</span><br><span class="line">sed &#x27;/pattern/!d&#x27;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">r file 读取文件，将文件内容追加到匹配行</span><br><span class="line">w file  将匹配行写入文件</span><br><span class="line"></span><br><span class="line">a\string 行后面追加一行文本</span><br><span class="line">i\string 行前面插入一行文本</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">s/pattern/string/  用string替换pattern</span><br><span class="line">sed &#x27;s/abc/123/g&#x27;</span><br><span class="line">sed &#x27;s#\(abc\)defg#\1#&#x27;</span><br><span class="line"></span><br><span class="line">   sed &#x27;s/2/*/8&#x27;# 第8个&quot;2&quot;替换为&quot;*&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">h  cat pattern-space &gt; hold-space</span><br><span class="line">H  cat &quot;\n&quot;pattern-space &gt;&gt; hold-space</span><br><span class="line"></span><br><span class="line">g  cat hold-space &gt; pattern-space</span><br><span class="line">G  cat &quot;\n&quot;hold-space &gt;&gt; pattern-space</span><br><span class="line"></span><br><span class="line">xexchange hold-space with pattern-space</span><br><span class="line"></span><br><span class="line">!   no actions</span><br><span class="line"></span><br><span class="line">  # tac</span><br><span class="line">  sed &#x27;1!G;h;$!d&#x27; </span><br><span class="line"></span><br><span class="line"># 新增空行</span><br><span class="line">  sed G</span><br><span class="line"></span><br><span class="line">  # 多个空行变一个</span><br><span class="line">  sed &#x27;/^$/d;G&#x27;</span><br><span class="line"></span><br><span class="line">       # add a blank line before the matching one</span><br><span class="line">  sed &#x27;/python/&#123;x;p;x&#125;&#x27;</span><br><span class="line"></span><br><span class="line">  # add a blank line after the matching one</span><br><span class="line">  sed &#x27;/python/G&#x27;</span><br><span class="line"></span><br><span class="line">  # add a blank line before and after the matching one</span><br><span class="line">  sed &#x27;/python/&#123;x;p;x;G&#125;&#x27;</span><br><span class="line"></span><br><span class="line">  # 匹配行的前一行</span><br><span class="line">  sed -n &#x27;/python/&#123;g;1!p&#125;;h&#x27;# 先h, 将ps保存至hs; 当匹配时，g使用hs替换ps, 如果不是第一行，则打印</span><br><span class="line"></span><br><span class="line">  # 匹配行的后一行</span><br><span class="line">   sed -n &#x27;/python/&#123;n;p&#125;&#x27;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">n  读取下一行至pattern space，此时pattern space有2行，后续命令，只操作n读入的行</span><br><span class="line">N读取下一行至pattern space，但将当前读入行和N命令读入的下一行看成“一行&quot;</span><br><span class="line"></span><br><span class="line">   # 匹配行的后一行，做替换操作</span><br><span class="line">   sed &#x27;/python/&#123;n;s/job/task/&#125;&#x27;</span><br><span class="line"></span><br><span class="line">   # 删除偶数行</span><br><span class="line">   sed &#x27;n;d&#x27;</span><br><span class="line">  sed -n &#x27;1~2p&#x27;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">y与tr类似，字符替换</span><br><span class="line">sed &#x27;1y/abcdef/ABCDEF/&#x27; </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">=  打印行号</span><br><span class="line">sed -n &#x27;/python/=&#x27;</span><br><span class="line">sed -n &#x27;$=&#x27;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">q退出</span><br><span class="line">  # head -2</span><br><span class="line">  sed 2q</span><br><span class="line">  </span><br><span class="line">  # tail -2</span><br><span class="line">sed &#x27;$!N;$!D&#x27;</span><br><span class="line"></span><br><span class="line">  # tail -1</span><br><span class="line">  sed -e :a -e &#x27;$q;N;2,$D;ba&#x27;</span><br><span class="line">  sed &#x27;$!d&#x27;</span><br><span class="line">sed  -n &#x27;$p&#x27;</span><br></pre></td></tr></table></figure><p>3.4 实例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># replace Unix to Unix/Linux</span></span><br><span class="line">sed -e <span class="string">&#x27;s#Unix#&amp;/Linux#g&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># squeeze continuous c to single c</span></span><br><span class="line">sed <span class="string">&#x27;s/cc*/c/g&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># delete space at head of line</span></span><br><span class="line">sed <span class="string">&#x27;s/^[ \t]*//&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># delete dot at end of line</span></span><br><span class="line">sed <span class="string">&#x27;s/\.$//g&#x27;</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># delete first character each line</span></span><br><span class="line">sed <span class="string">&#x27;s/.//g&#x27;</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># delete space at end of line</span></span><br><span class="line">sed <span class="string">&#x27;s/ *$//g&#x27;</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># insert two space before head each line</span></span><br><span class="line">sed <span class="string">&#x27;s/^/  /g&#x27;</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># remove punctuation(. , ? !)</span></span><br><span class="line">sed <span class="string">&#x27;s/\.//g&#x27;</span> -e <span class="string">&#x27;s/\,//g&#x27;</span> -e <span class="string">&#x27;s/\?//g&#x27;</span> -e <span class="string">&#x27;s/\!//g&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># more effective</span></span><br><span class="line">sed <span class="string">&#x27;s/foo/bar/g&#x27;</span> </span><br><span class="line">sed <span class="string">&#x27;/foo/ s/foo/bar/g&#x27;</span> </span><br><span class="line">sed <span class="string">&#x27;/foo/ s//bar/g&#x27;</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># only replacement once, use &#x27;q&#x27;</span></span><br><span class="line">sed <span class="string">&#x27;s/foo/ s/foo/bar/;q&#125;&#x27;</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># delete blank lines</span></span><br><span class="line">sed <span class="string">&#x27;/^$/d&#x27;</span> </span><br><span class="line">sed <span class="string">&#x27;/./!d&#x27;</span> </span><br></pre></td></tr></table></figure><h2 id="4-awk"><a href="#4-awk" class="headerlink" title="4. awk"></a>4. awk</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">awk [options] &#x27;BEGIN&#123;action&#125;pattern&#123;action&#125;...END&#123;action&#125;&#x27; file</span><br><span class="line">awk [options] -f program.awk file</span><br><span class="line"></span><br><span class="line">options:</span><br><span class="line">-F fs                     use fs for the input field separator</span><br><span class="line">-v val=val           assign the value to the variable var, before execution of the program begins.</span><br><span class="line"></span><br><span class="line">pattern:</span><br><span class="line">/regex/: extended regular expression</span><br><span class="line">relational expression: if..else..</span><br><span class="line">    pattern1, pattern2: pattern range</span><br></pre></td></tr></table></figure><h3 id="4-1-Built-in-Variables"><a href="#4-1-Built-in-Variables" class="headerlink" title="4.1 Built-in Variables:"></a>4.1 Built-in Variables:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">1. NF, NR</span><br><span class="line">NF              The number of fields</span><br><span class="line">NR              The total number of input records seen so far</span><br><span class="line"></span><br><span class="line">2. FS, RS, OFS, ORS</span><br><span class="line">FS              The input field separator, a space by default</span><br><span class="line">RS             The input record separator, by default a newline</span><br><span class="line">OFS             The output field separator, a space by default</span><br><span class="line">ORS             The output record separator, by default a newline</span><br><span class="line"></span><br><span class="line">3. IGNORECASE      Not case-sensitivity</span><br><span class="line"></span><br><span class="line">4. ENVIRON</span><br><span class="line"># awk &#x27;BEGIN&#123;for(i in ENVIRON) print i, ENVIRON[i]&#125;&#x27;</span><br><span class="line"># awk &#x27;BEGIN&#123;print ENVIRON[&quot;JAVA_HOME&quot;]&#125;&#x27;</span><br><span class="line"></span><br><span class="line">5. ARGC, ARGV, ARGIND</span><br><span class="line">ARGC: the number of arguments</span><br><span class="line">ARGIND: the index in ARGV of the current file being processed</span><br><span class="line">ARGV: Array of arguments</span><br><span class="line"></span><br><span class="line"># awk &#x27;BEGIN&#123;print &quot;ARGC=&quot;ARGC; for(i in ARGV) print i&quot;=&quot;ARGV[i]&#125;&#x27; /etc/passwd</span><br><span class="line">ARGC=2, 0=awk, 1=/etc/passwd</span><br><span class="line"> </span><br><span class="line">6. FILENAME : the name of the current input file</span><br><span class="line"># awk &#x27;BEGIN&#123;print FILENAME&#125;&#123;print FILENAME; exit&#125;&#x27;</span><br><span class="line"></span><br><span class="line">7. OFMT : number output format &quot;.6g&quot;</span><br><span class="line"># awk &#x27;BEGIN&#123;printf(&quot;%.2f %.2f\n&quot;, 1/6, 3.1415926)&#125;&#x27;</span><br><span class="line"># awk &#x27;BEGIN&#123;OFMT=&quot;%.2f&quot;; print 1/6, 3.1415926)&#125;&#x27;</span><br><span class="line"></span><br><span class="line">8. FIELDWIDTH : set fields by fixed width</span><br><span class="line"># date +&quot;%Y%m%d%H%M%S&quot; | awk &#x27;BEGIN&#123;FIELDWIDTH=&quot;4 2 2 2 2 2&quot;&#125;&#123;print $1&quot;-&quot;$2&quot;-&quot;$3, $4&quot;:&quot;$5&quot;:&quot;$6&#125;&#x27;</span><br><span class="line"></span><br><span class="line">9. RSTART, RLENGTH</span><br><span class="line">RSTART: the index of the first character matched by match(), 0</span><br><span class="line">RLENGTH: the length of the string matched by matched by match(), -1</span><br><span class="line"></span><br><span class="line"># awk &#x27;BEGIN&#123;start=match(&quot;this is match test&quot;, /m[a-z]+/); print start, RSTART, RLENGTH&#125;&#x27;</span><br><span class="line">9 9 5</span><br></pre></td></tr></table></figure><h3 id="4-2-Built-in-Functions"><a href="#4-2-Built-in-Functions" class="headerlink" title="4.2 Built-in Functions:"></a>4.2 Built-in Functions:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br></pre></td><td class="code"><pre><span class="line">1. Numeric</span><br><span class="line">int(x)</span><br><span class="line">sqrt(x)</span><br><span class="line">rand(): return a random number, [0-1)</span><br><span class="line">srand([expr]): use expr as a seed for random generator, if not provided, use system current time</span><br><span class="line"></span><br><span class="line"># awk &#x27;BEGIN&#123;print int(2.3), int(012), int(0xFF), int(3a), int(a3)&#125;&#x27;   </span><br><span class="line">2 10 255 3 0</span><br><span class="line"></span><br><span class="line"># awk &#x27;BEGIN&#123;print rand(), 10*rand()&#125;&#x27;</span><br><span class="line"></span><br><span class="line"># awk &#x27;BEGIN&#123;srand(); print rand(), 10*rand()&#125;&#x27;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2. String</span><br><span class="line">sub(regex, replacement[, target]): use the replacement to replace the regex matched in string target(by default $0)</span><br><span class="line">gsub(regex, replacement[, target]): global sub</span><br><span class="line"></span><br><span class="line">gensub(regex, replacement, how[, target]): gawk</span><br><span class="line">gensub(regex, replacement, &quot;g|G&quot; target)    =&gt; gsub</span><br><span class="line">gensub(regex, replacement, 0, target)       =&gt; gsub, but with warning</span><br><span class="line">gensub(regex, replacement, N, target)       =&gt; N is a digit from 1 to 9, index of the matched sub-expression</span><br><span class="line"></span><br><span class="line"># awk &#x27;BEGIN&#123;info=&quot;this is a test2010test!&quot;; gsub(/[0-9]+/,info); print info&#125;&#x27;</span><br><span class="line"></span><br><span class="line"># gawk &#x27;BEGIN&#123;a=&quot;abc def&quot;; b=gensub(/(.+) (.+)/, &quot;\\2 \\1&quot;, &quot;g&quot;, a); print b&#125;&#x27; </span><br><span class="line">def abc</span><br><span class="line"></span><br><span class="line"># echo &quot;a b c a b c&quot; | gawk &#x27;&#123;print gensub(/a/,&quot;AA&quot;,2)&#125;&#x27; </span><br><span class="line">a b c AA b c</span><br><span class="line"></span><br><span class="line">index(string, find): index of the find in the string, or 0 if not present</span><br><span class="line">match(string, regex[, array]): position of the regex occurring in the string</span><br><span class="line"></span><br><span class="line">length([string])</span><br><span class="line">substr(string, position[, len])</span><br><span class="line">split(string, array[, regexp]): split the string into the array on the regex</span><br><span class="line"></span><br><span class="line"># awk &#x27;BEGIN&#123;s=&quot;this is a test&quot;; print index(s, &quot;a&quot;)&#125;&#x27;</span><br><span class="line"></span><br><span class="line"># awk &#x27;BEGIN&#123;s=&quot;this is a test&quot;; print index(s, &quot;a&quot;) ? &quot;ok&quot; : :no found&quot;&#125;&#x27;</span><br><span class="line"></span><br><span class="line"># awk &#x27;BEGIN&#123;s=&quot;this is a match test&quot;; pos=match(s, /m[a-z]+/, array); print pos; for(i in array) print i, array[i]&#125;&#x27;</span><br><span class="line">11</span><br><span class="line">0start 11</span><br><span class="line">0length 5</span><br><span class="line">0 match</span><br><span class="line"></span><br><span class="line"># awk &#x27;BEGIN&#123;s=&quot;this is a test&quot;; print substr(s, 9, 1)&#125;&#x27;</span><br><span class="line">a</span><br><span class="line"></span><br><span class="line"># awk &#x27;BEGIN&#123;s=&quot;this is a test&quot;; print substr(s, 9)&#125;&#x27;</span><br><span class="line">a test</span><br><span class="line"></span><br><span class="line"># awk &#x27;BEGIN&#123;s=&quot;this is a split test&quot;; len=split(s,array); print len; for(i in array) print i, array[i]&#125;&#x27;</span><br><span class="line">5</span><br><span class="line">4 split</span><br><span class="line">5 test</span><br><span class="line">1 this</span><br><span class="line">2 is</span><br><span class="line">3 a</span><br><span class="line"></span><br><span class="line"># awk &#x27;BEGIN&#123;FS=&quot;:&quot;&#125;/^root/&#123;split($0,array); for(i in array) print i, array[i]&#125;&#x27; /etc/passwd</span><br><span class="line"># awk &#x27;/^root/&#123;split($0,array,/:/); for(i in array) print i, array[i]&#125;&#x27; /etc/passwd</span><br><span class="line">4 0</span><br><span class="line">5 root</span><br><span class="line">6 /root</span><br><span class="line">7 /bin/bash</span><br><span class="line">1 root</span><br><span class="line">2 x</span><br><span class="line">3 0</span><br><span class="line"></span><br><span class="line">Associative Arrays</span><br><span class="line">a. sorting by values</span><br><span class="line">len = asort(s)      # s: changed, the indexes are replaced with sequential integers</span><br><span class="line">len = asort(s, d)   # s: unchanged; d: a sorted duplicate array of s</span><br><span class="line"></span><br><span class="line">b. sorting by indexes</span><br><span class="line">len = asorti(s)     # s: changed, restorted by indexes</span><br><span class="line">len = asorti(s, d)  # s: unchanged; d: a new array of sorted indexes</span><br><span class="line"></span><br><span class="line"># awk &#x27;&#123;a[$1]=$2&#125;END&#123;for(i in a) print i, a[i]&#125;&#x27; abc.txt</span><br><span class="line">10 35</span><br><span class="line">12 30</span><br><span class="line">22 13</span><br><span class="line">24 20</span><br><span class="line"></span><br><span class="line"># awk &#x27;&#123;a[$1]=$2&#125;END&#123;for(i=1;i&lt;=asort(a,b);i++) print i, b[i]&#125;&#x27; abc.txt</span><br><span class="line">1 13</span><br><span class="line">2 20</span><br><span class="line">3 30</span><br><span class="line">4 40</span><br><span class="line"></span><br><span class="line"># awk &#x27;&#123;a[$1]=$2&#125;END&#123;for(i=1;i&lt;=asorti(a,b);i++) print i, b[i]&#125;&#x27; abc.txt</span><br><span class="line">1 10</span><br><span class="line">2 12</span><br><span class="line">3 22</span><br><span class="line">4 24</span><br><span class="line"></span><br><span class="line">sprintf(format, expr): return the printed expr according to the format</span><br><span class="line">tolower(string)</span><br><span class="line">toupper(string)</span><br><span class="line"></span><br><span class="line"># awk &#x27;BEGIN&#123;s=sprintf(&quot;%.2g %s %d&quot;, 3.1415926, 3.1415926, 3.1415926); print s&#125;&#x27;</span><br><span class="line">3.1 3.14159 3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3. Time</span><br><span class="line">mktime(&quot;YYYY MM DD HH MM SS[ DST]&quot;): return a time stamp</span><br><span class="line">systime(): return current time stmap</span><br><span class="line">strftime([format[, ts])</span><br><span class="line"></span><br><span class="line"># awk &#x27;BEGIN&#123;print mktime(&quot;2014 12 20 14 25 32&quot;)&#125;&#x27;</span><br><span class="line"># awk &#x27;BEGIN&#123;print systime()&#125;&#x27;</span><br><span class="line"># awk &#x27;BEGIN&#123;print strftime()&#125;&#x27;</span><br><span class="line"># awk &#x27;BEGIN&#123;print strftime(&quot;%c&quot;, systime())&#125;&#x27;   # date +%c</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">4. IO</span><br><span class="line">close(file[, how]): close file, pipe or co-process; how is either &quot;from&quot; or &quot;to&quot;</span><br><span class="line"></span><br><span class="line">getline              set $0 from next input record, set NF, NR, FNR</span><br><span class="line">getline &lt;file       set $0 from next record of file, set NF</span><br><span class="line">getline var         set var from next input record, set NR, FNR</span><br><span class="line">getline var &lt;file   set vat from next record of file</span><br><span class="line"></span><br><span class="line">command | getline [var]     run command piping the output either into $0 or var</span><br><span class="line">command | &amp; getline [var]   run command as a co-process piping the output either into $0 or var. co-processes are a gawk extension</span><br><span class="line"></span><br><span class="line">next: stop processing the current input record</span><br><span class="line"></span><br><span class="line">print [expr-list [&gt;file] ]</span><br><span class="line">printf [format, expr-list [&gt;file] ]</span><br><span class="line"></span><br><span class="line">system(&quot;cmd&quot;)   execute the command, and return the exit status</span><br><span class="line"></span><br><span class="line">fflush([file])  flush any buffers</span><br><span class="line"></span><br><span class="line">print ... | command     write on a pipe</span><br><span class="line">print ... |&amp; command    write on a co-process</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># awk &#x27;BEGIN&#123;while(&quot;cat /etc/passwd&quot; | getline) print; close(&quot;/etc/passwd&quot;)&#125;&#x27;</span><br><span class="line"># awk &#x27;BEGIN&#123;while(getline &lt;&quot;/etc/passwd&quot;) print; close(&quot;/etc/passwd&quot;)&#125;&#x27;</span><br><span class="line"></span><br><span class="line"># awk &#x27;BEGIN&#123;&quot;date&quot; | getline d; print d&#125;&#x27;</span><br><span class="line"># awk &#x27;BEGIN&#123;&quot;date&quot; | getline d; split(d,mon); print mon[2]&#125;&#x27;</span><br><span class="line"></span><br><span class="line"># awk &#x27;BEGIN&#123;while(&quot;ls&quot; | getline) print&#125;&#x27;</span><br><span class="line"></span><br><span class="line"># awk &#x27;BEGIN&#123;printf(&quot;Enter your account: &quot;); getline name; print name&#125;&#x27;</span><br><span class="line">awk &#x27;BEGIN&#123;l=system(&quot;ls -l&quot;); print l&#125;&#x27;</span><br><span class="line"></span><br><span class="line">// prompting, wait for input</span><br><span class="line"># awk &#x27;BEGIN&#123;printf &quot;What is your name? &quot;; getline name &lt;&quot;/dev/tty&quot;&#125; $1~name &#123;print &quot;Found&quot; name &quot;on line &quot;, NR&quot;.&#125; END&#123;print &quot;See you,&quot; name &quot;.&quot;&#125;&#x27; /etc/passwd</span><br><span class="line"></span><br><span class="line">// count number of file</span><br><span class="line"># awk &#x27;BEGIN&#123;while(getline &lt;&quot;/etc/passwd&quot; &gt;0) lc++; print lc&#125;</span><br><span class="line"></span><br><span class="line">// sort</span><br><span class="line"># awk &#x27;&#123;print $1, $2 | &quot;sort&quot;&#125; END&#123;close(&quot;sort)&#125;&#x27; abc.txt</span><br></pre></td></tr></table></figure><h3 id="4-3-FILE-SPACING"><a href="#4-3-FILE-SPACING" class="headerlink" title="4.3 FILE SPACING:"></a>4.3 FILE SPACING:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"># insert a blank line</span><br><span class="line">awk &#x27;1; &#123;print &quot;&quot;&#125;&#x27;</span><br><span class="line">awk &#x27;BEGIN&#123;ORS=&quot;\n\n&quot;&#125;; 1&#x27;</span><br><span class="line"></span><br><span class="line"># insert two blank lines</span><br><span class="line">awk &#x27;1;&#123;print &quot;\n&quot;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">NUMBERING AND CALCULATIONS:</span><br><span class="line"></span><br><span class="line"># using a TAB instead of space will perserve margins</span><br><span class="line">awk &#x27;&#123;print FNR &quot;\t&quot; $0&#125;&#x27;</span><br><span class="line">awk &#x27;&#123;print NR &quot;\t&quot; $0&#125;&#x27;</span><br><span class="line"></span><br><span class="line"># number each line of a file</span><br><span class="line">awk &#x27;&#123;printf(&quot;%5d : %s\n, NR, $0)&#125;&#x27;</span><br><span class="line"></span><br><span class="line"># number each line of a file, but only print numbers if line is not blank</span><br><span class="line">awk &#x27;NF&#123;$0=++a &quot;:&quot; $0&#125;;&#123;print&#125;&#x27;</span><br><span class="line">awk &#x27;&#123;print (NF ? ++a &quot;:&quot; : &quot;&quot;) $0&#125;&#x27;</span><br><span class="line"></span><br><span class="line"># wc -l</span><br><span class="line">awk &#x27;END&#123;print NR&#125;&#x27;</span><br><span class="line"></span><br><span class="line"># wc -w</span><br><span class="line">awk &#x27;&#123;total=total+NF&#125;END&#123;print total&#125;&#x27;</span><br><span class="line"></span><br><span class="line"># print the sum of the fields of every line</span><br><span class="line">awk &#x27;&#123;s=0; for(i=1;i&lt;=NF;i++) s=s+$i; print s&#125;&#x27;</span><br><span class="line"></span><br><span class="line"># add all fields in all lines and print the sum</span><br><span class="line">awk &#x27;&#123;for(i=1;i&lt;=NF;i++) s=s+$i&#125;END&#123;print s&#125;&#x27;</span><br><span class="line"></span><br><span class="line"># print absolute value of fields</span><br><span class="line">awk &#x27;&#123;for(i=1;i&lt;=NF;i++) if($i&lt;0) $i=-$i; print&#125;&#x27;</span><br><span class="line">awk &#x27;(for(i=1;i&lt;=NF;i++) $i = ($i&lt;0) ? -$i : $i; print&#125;&#x27;</span><br><span class="line"></span><br><span class="line"># print the total number of lines that contains &quot;Beth&quot;</span><br><span class="line">awk &#x27;/Beth/&#123;n++&#125;; END&#123;print n+0&#125;&#x27;</span><br><span class="line"></span><br><span class="line"># print the largest first field</span><br><span class="line">awk &#x27;$1&gt;max&#123;max=$1; maxline=$0&#125;; END&#123;print max, maxline&#125;&#x27;</span><br><span class="line"></span><br><span class="line"># print the last field</span><br><span class="line">awk &#x27;&#123;print $NF&#125;&#x27;</span><br><span class="line"></span><br><span class="line"># print the last field of the last line</span><br><span class="line">awk &#x27;&#123;field=$NF&#125;; END&#123;print feild&#125;&#x27;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">TEXT CONVERSION AND SUBSTITUTION:</span><br><span class="line"></span><br><span class="line"># dos2unix</span><br><span class="line">awk &#x27;&#123;sub(/\r$/,&quot;&quot;); print&#125;&#x27;</span><br><span class="line"></span><br><span class="line"># unix2dos</span><br><span class="line">awk &#x27;&#123;sub(/$/,&quot;\r&quot;); print&#125;&#x27;</span><br><span class="line"></span><br><span class="line"># delete leading whitespace</span><br><span class="line">awk &#x27;&#123;sub(/^[ \t]+/,&quot;&quot;); print&#125;&#x27;</span><br><span class="line"></span><br><span class="line"># delete trailing whitespace</span><br><span class="line">awk &#x27;&#123;sub(/[ \t]+$/,&quot;&quot;); print&#125;&#x27;</span><br><span class="line"></span><br><span class="line"># delete both leading and trailing whitespace</span><br><span class="line">awk &#x27;&#123;sub(/^[ \t]+|[ \t]+$/); print&#125;&#x27;</span><br><span class="line"></span><br><span class="line"># insert 5 whitespace at the beginning of line</span><br><span class="line">awk &#x27;&#123;sub/^/, &quot;     &quot;); print&#125;&#x27;</span><br><span class="line"></span><br><span class="line"># align all text flush right in a 70-column width</span><br><span class="line">awk &#x27;&#123;printf &quot;%79s\n&quot;, $0&#125;&#x27;</span><br><span class="line"></span><br><span class="line"># center all text on a 79-character width</span><br><span class="line">awk &#x27;&#123;l=length(); s=int((79-l)/2); printf &quot;%&quot;(s+l&#125;&quot;s\n&quot;,$0&#125;&#x27;</span><br><span class="line"></span><br><span class="line"># substitute</span><br><span class="line">awk &#x27;&#123;sub(/foo/,&quot;bar&quot;); print&#125;&#x27;             # 1st</span><br><span class="line">awk &#x27;&#123;$0=gensub(/foo/,&quot;bar&quot;,4); print&#125;&#x27;     # 4st</span><br><span class="line">awk &#x27;&#123;gsub(/foo/,&quot;bar&quot;); print&#125;&#x27;            # all</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line">awk &#x27;&#123;gsub(/scarlet|ruby|puce/, &quot;red&quot;); print&#125;</span><br><span class="line"></span><br><span class="line"># tac</span><br><span class="line">awk &#x27;&#123;a[i++]=$0&#125;END&#123;for(j=i-1;i&gt;=0;j--) print a[j]&#125;</span><br><span class="line"></span><br><span class="line"># append the next line, if line ends with a backslash.(fails to handle mutiple lines ending with backslash)</span><br><span class="line">awk &#x27;/\\$/&#123;sub(/\\$/,&quot;&quot;); getline t; print $0 t; next&#125;; 1&#x27;</span><br><span class="line"></span><br><span class="line"># sort</span><br><span class="line">awk -F&quot;:&quot; &#x27;&#123;print $1 | &quot;sort&quot;&#125;&#x27; /etc/passwd</span><br><span class="line"></span><br><span class="line"># delete the 2nd field</span><br><span class="line">awk &#x27;&#123;$2=&quot;&quot;; print&#125;&#x27;</span><br><span class="line"></span><br><span class="line"># print in reverse order the fields</span><br><span class="line">awk &#x27;&#123;for(i=NF;i&gt;0;i--) printf(&quot;%s &quot;,i); print &quot;&quot;&#125;&#x27;</span><br><span class="line"></span><br><span class="line"># remove duplicate, consecutive lines, uniq</span><br><span class="line">awk &#x27;a!~$0; &#123;a=$0&#125;&#x27;</span><br><span class="line"></span><br><span class="line"># remove duplicate, nonconsecutive lines</span><br><span class="line">awk &#x27;!a[$0]++&#x27;</span><br><span class="line">awk &#x27;!($0 in a)&#123;a[$0]; print&#125;&#x27;  # most efficient</span><br><span class="line"></span><br><span class="line"># concatenate every 5 lines of input, using a comma separator</span><br><span class="line">awk &#x27;ORS=%NR%5 ? &quot;,&quot; : &quot;\n&quot;&#x27;</span><br></pre></td></tr></table></figure><h3 id="4-4-SLECTIVE-PRINTING-OF-CERTAIN-LINES"><a href="#4-4-SLECTIVE-PRINTING-OF-CERTAIN-LINES" class="headerlink" title="4.4 SLECTIVE PRINTING OF CERTAIN LINES:"></a>4.4 SLECTIVE PRINTING OF CERTAIN LINES:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"># head</span><br><span class="line">awk &#x27;NR&lt;11&#x27;</span><br><span class="line"></span><br><span class="line"># head -1</span><br><span class="line">awk &#x27;NR&gt;1&#123;exit&#125;;1&#x27;</span><br><span class="line"></span><br><span class="line"># tail -2</span><br><span class="line">awk &#x27;&#123;y=x &quot;\n&quot; $0; x=$0&#125; END&#123;print y&#125;&#x27;</span><br><span class="line"></span><br><span class="line"># tail -1</span><br><span class="line">awk &#x27;END&#123;print&#125;&#x27;</span><br><span class="line"></span><br><span class="line"># grep</span><br><span class="line">awk &#x27;/regex/&#x27;</span><br><span class="line"></span><br><span class="line"># print the line immediately before a regex</span><br><span class="line">awk &#x27;/regex/&#123;print x&#125;;&#123;x=$0&#125;&#x27;   # grep &#x27;regex&#x27; -B1</span><br><span class="line"></span><br><span class="line"># print the line immediately after a regex</span><br><span class="line">awk &#x27;/regex/&#123;getline; print&#125;&#x27;   # grep &#x27;regex&#x27; -A1</span><br><span class="line"></span><br><span class="line"># grep -E &quot;AAA|BBB|CCC&quot;</span><br><span class="line">awk &#x27;/AAA/;/BBB/;/CCC/&#x27;</span><br><span class="line"></span><br><span class="line"># print only lines of 65 characters or longer</span><br><span class="line">awk &#x27;length&gt;64&#x27;</span><br><span class="line"></span><br><span class="line"># print section of file from regular expression to end of file</span><br><span class="line">awk &#x27;/regex/,0&#x27;</span><br><span class="line">awk &#x27;/regex/,EOF&#x27;</span><br><span class="line"></span><br><span class="line"># print section of file based on line numbers(lines 8-12)</span><br><span class="line">awk&#x27;NR==8,NR==12&#x27;</span><br><span class="line"></span><br><span class="line"># print line 8 &amp; 12</span><br><span class="line">awk &#x27;NR==8;NR==12&#x27;</span><br><span class="line"></span><br><span class="line"># print line number 52</span><br><span class="line">awk &#x27;NR==52&#x27;</span><br><span class="line">awk &#x27;NR==52&#123;print; exit&#125;&#x27;   # more efficient</span><br></pre></td></tr></table></figure><h3 id="4-5-SELECTIVE-DELETION-OF-CERTAIN-LINES"><a href="#4-5-SELECTIVE-DELETION-OF-CERTAIN-LINES" class="headerlink" title="4.5 SELECTIVE DELETION OF CERTAIN LINES:"></a>4.5 SELECTIVE DELETION OF CERTAIN LINES:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"># delete all blank lines</span><br><span class="line">awk NF</span><br><span class="line">awk &#x27;/./&#x27;</span><br><span class="line"></span><br><span class="line"># print x by 512 times</span><br><span class="line">awk &#x27;BEGIN&#123;while(++a&lt;512) s=s &quot;x&quot;; print s&#125;&#x27;</span><br><span class="line"></span><br><span class="line"># merge file</span><br><span class="line">awk &#x27;NR==FNR&#123;a[$0]=1; print&#125; NR&gt;FNR&#123;if(!a[$0]) print&#125;&#x27;</span><br><span class="line">awk &#x27;&#123;a[$0]&#125;END&#123;for(i in a) print i&#125;&#x27;</span><br><span class="line"></span><br><span class="line"># sort</span><br><span class="line">awk &#x27;&#123;a[j++]=$0&#125; END&#123;len=asort(a); for(i=1;i&lt;=len;i++) print a[i]&#125;&#x27;</span><br><span class="line"></span><br><span class="line">44. convert DEC to OTC</span><br><span class="line">echo 37 | awk &#x27;&#123;printf &quot;%o\n&quot;, $0&#125;&#x27;</span><br><span class="line"></span><br><span class="line">45. print single quota</span><br><span class="line">awk &#x27;BEGIN&#123;print &quot;\0472004-12-12\047&quot;&#125;&#x27;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># obtain total memory</span><br><span class="line">cat /proc/meminfo | grep -i memtotal | awk -F&#x27;:&#x27; &#x27;&#123;print $2&#125;&#x27;</span><br><span class="line">cat /proc/meminfo | grep -i memtotal | awk -F\: &#x27;&#123;print $2&#125;&#x27;</span><br><span class="line"></span><br><span class="line"># display all NICs exclude local</span><br><span class="line">ifconfig -a | grep &#x27;^\w&#x27; | awk &#x27;!/lo/&#123;print $1&#125;&#x27;</span><br><span class="line"></span><br><span class="line"># obtain IP address of NIC eth0</span><br><span class="line">ifconfig eth0 | grep &#x27;inet &#x27;</span><br><span class="line">ifconfig eth0 | grep &#x27;inet &#x27; | awk -F&#x27;:&#x27; &#x27;&#123;print $2&#125;&#x27; | awk &#x27;&#123;print $1&#125;&#x27;</span><br><span class="line">ifconfig eth0 | grep &#x27;inet &#x27; | tr &#x27;:&#x27; &#x27; &#x27; | awk &#x27;&#123;print $3&#125;&#x27;</span><br><span class="line">ifconfig eth0 | awk -F&#x27;:&#x27; &#x27;/inet / &#123;print $2&#125;&#x27; | awk &#x27;&#123;print $1&#125;&#x27;</span><br><span class="line"></span><br><span class="line"># $1 is a space, cause it begins with spaces</span><br><span class="line">ifconfig eth0 | grep &#x27;inet &#x27; | awk -F&#x27;[ :]+&#x27; &#x27;&#123;print $4&#125;&#x27;   </span><br><span class="line"></span><br><span class="line"># kill all process named foo</span><br><span class="line">kill `ps -ax | grep &#x27;foo&#x27; | grep -v &#x27;grep&#x27; | awk &#x27;&#123;print $1&#125;&#x27;`</span><br><span class="line"></span><br><span class="line"># print the result that executed command &quot;date&quot;</span><br><span class="line">awk &#x27;BEGIN&#123;&quot;date&quot; | getline d;print d&#125;&#x27;</span><br><span class="line"></span><br><span class="line"># print month</span><br><span class="line">awk &#x27;BEGIN&#123;&quot;date&quot; | getline d; split(d, mon); print mon[2]&#125;&#x27;</span><br><span class="line"></span><br><span class="line"># print the result that executed comand &quot;ls&quot;</span><br><span class="line">awk &#x27;BEGIN&#123;while(&quot;ls&quot; | getline) print&#125;&#x27;</span><br><span class="line"></span><br><span class="line"># prompting, wait for input</span><br><span class="line">awk &#x27;BEGIN&#123;printf &quot;What is your name? &quot;; getline name &lt;&quot;/dev/tty&quot; &#125; $1~name &#123;print &quot;Found &quot; name &quot; on line &quot;, NR&quot;.&quot;&#125; END&#123;print &quot;See you,&quot; name &quot;.&quot;&#125;&#x27; /etc/passwd</span><br><span class="line"></span><br><span class="line"># count number of linux users</span><br><span class="line">awk &#x27;BEGIN&#123;while(getline&lt;&quot;/etc/passwd&quot; &gt;0) lc++; print lc&#125;&#x27;   # must be contain quotations</span><br><span class="line"></span><br><span class="line">awk &#x27;&#123;print $1, $2 | &quot;sort&quot; &#125;END&#123;close(&quot;sort&quot;)&#125;&#x27; myfile</span><br><span class="line"></span><br><span class="line">awk &#x27;BEGIN&#123;system(&quot;clear&quot;)&#125;&#x27;</span><br><span class="line"></span><br><span class="line">awk &#x27;&#123;gsub(/test/, &quot;xxxx&quot;, $2); print&#125;&#x27; myfile</span><br><span class="line"></span><br><span class="line">awk &#x27;BEGIN&#123;print index(&quot;mytest&quot;, &quot;test&quot;)&#125;&#x27; # 3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 多维数组，array[index1,index2,……] ，SUBSEP是数组下标分割符，默认为 &quot;\034&quot;</span><br><span class="line">awk &#x27;BEGIN&#123;SUBSEP=&quot;:&quot;; array[&quot;a&quot;,&quot;b&quot;]=1; for(i in array) print i&#125;&#x27;</span><br><span class="line">awk &#x27;BEGIN&#123;array[&quot;a&quot;&quot;:&quot;&quot;b&quot;]=1;for(i in array) print i&#125;&#x27;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># cat file1</span><br><span class="line">g1.1 2</span><br><span class="line">g2.2 4</span><br><span class="line">g2.1 5</span><br><span class="line">g4.1 3</span><br><span class="line"># cat file2</span><br><span class="line">g1.1 2</span><br><span class="line">g1.2 3</span><br><span class="line">g4.1 4</span><br><span class="line"># cat file3</span><br><span class="line">g1.2 3</span><br><span class="line">g5.1 3</span><br><span class="line"></span><br><span class="line"># awk &#x27;&#123;a[ARGIND&quot; &quot;$1]=$2; b[$1]&#125;</span><br><span class="line">    END &#123;</span><br><span class="line">    for(i in b) &#123;</span><br><span class="line">        printf i&quot; &quot;;</span><br><span class="line">        for(j=1;j&lt;=ARGIND;j++)</span><br><span class="line">            printf &quot;%s &quot;, a[j&quot; &quot;i] ? a[j&quot; &quot;i] : &quot;-&quot;;</span><br><span class="line">        print &quot;&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;&#x27; file1 file2 file3</span><br><span class="line">g2.2 4 - -</span><br><span class="line">g5.1 - - 3</span><br><span class="line">g1.1 2 2 -</span><br><span class="line">g1.2 - 3 3</span><br><span class="line">g4.1 3 4 -</span><br><span class="line">g2.1 5 - -</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">echo &quot;37&quot; |awk &#x27;&#123;printf &quot;%o\n&quot;,$0&#125;&#x27;</span><br><span class="line"></span><br><span class="line">/home/lee#awk &#x27;BEGIN&#123;print &quot;\0472004-12-12\047&quot;&#125;&#x27;</span><br><span class="line">&#x27;2004-12-12&#x27;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="5-chatrr"><a href="#5-chatrr" class="headerlink" title="5. chatrr"></a>5. chatrr</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chattr +i /etc/passwd</span><br><span class="line">chatrr +a /etc/passwd</span><br><span class="line">lsattr /etc/passwd</span><br></pre></td></tr></table></figure><h2 id="6-grep"><a href="#6-grep" class="headerlink" title="6. grep"></a>6. grep</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 网卡信息</span></span><br><span class="line">dmesg | grep -n --color=auto eth</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示关键字前3行和后2行</span></span><br><span class="line">dmesg | grep -n -A2 -B3 --color=always eth0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 扩展表达式</span></span><br><span class="line">egrep <span class="string">&#x27;^$|^#&#x27;</span>myfile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 前面的字符出现1次以上</span></span><br><span class="line">egrep -n --color=auto <span class="string">&#x27;go+d&#x27;</span> myfile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 前面的字符出现0~1次</span></span><br><span class="line">egrep -n --color=auto <span class="string">&#x27;go?d&#x27;</span> myfile</span><br><span class="line"></span><br><span class="line"><span class="comment"># or方式匹配</span></span><br><span class="line">egrep -n --color=auto <span class="string">&#x27;gd|good|dog&#x27;</span> myfile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 组匹配</span></span><br><span class="line">egrep -n --color=auto <span class="string">&#x27;g(la|oo)d&#x27;</span> myfile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 多重复组匹配</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;AxyzxyzxyzxyzC&#x27;</span> | egrep <span class="string">&#x27;A(xyz)+C&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">man grep | col -c &gt; grep.txt</span><br></pre></td></tr></table></figure><h2 id="7-sort"><a href="#7-sort" class="headerlink" title="7. sort"></a>7. sort</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># output sorted result</span></span><br><span class="line">sort -o result.out video.txt </span><br><span class="line"></span><br><span class="line"><span class="comment"># split the fields by &#x27;:&#x27;</span></span><br><span class="line">sort -t: -r video.txt </span><br><span class="line"></span><br><span class="line"><span class="comment"># test whether it has been sorted</span></span><br><span class="line">sort -c video.txt  </span><br><span class="line"></span><br><span class="line"><span class="comment"># sort by 2nd field</span></span><br><span class="line">sort -t: +1 video.txt </span><br><span class="line"></span><br><span class="line"><span class="comment"># sort 3rd field using ascii order</span></span><br><span class="line">sort -t: +2 video.txt </span><br><span class="line">sort -t: -k3 video.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># sort 3rd field using number order </span></span><br><span class="line">sort -t: +2n video.txt</span><br><span class="line">sort -t: -k3n video.txt </span><br><span class="line"></span><br><span class="line"><span class="comment"># uniq</span></span><br><span class="line">sort -u video.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># sort 4th field, then sort 1st field</span></span><br><span class="line">sort -t: -k4 -k1 video.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># sort +field_number.characters_in</span></span><br><span class="line"><span class="comment"># sort 2nd filed, begining with 3rd character</span></span><br><span class="line">sort -t: +1.2 video.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># list all unix users</span></span><br><span class="line">cat /etc/passwd | sort -t: +0 | awk -F<span class="string">&quot;:&quot;</span> <span class="string">&#x27;&#123;print $1&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># only not duplicate. here, sort is recommendable</span></span><br><span class="line">sort video.txt | uniq -u </span><br><span class="line"></span><br><span class="line"><span class="comment"># only duplicate</span></span><br><span class="line">sort video.txt | uniq -d</span><br><span class="line"></span><br><span class="line"><span class="comment"># count dulicate times</span></span><br><span class="line">sort video.txt | uniq -c</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># sorting ignore case sensitive</span></span><br><span class="line">sort -f  </span><br></pre></td></tr></table></figure><h2 id="8-join"><a href="#8-join" class="headerlink" title="8. join"></a>8. join</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"># join, the files must have a common content; the fields must be splited by single tab or space</span><br><span class="line">join [options] input-file1 input-file2</span><br><span class="line">-an     n, the number of file. -a1, means joining files based on file 1</span><br><span class="line">-o n.m  n, the number of file; m, the number of field. -o 1.3, means display field 3 of file 1</span><br><span class="line">-jn m   n, the number of file; m, the number of field.</span><br><span class="line">-t      delimiter</span><br><span class="line"></span><br><span class="line"># join cross</span><br><span class="line">join names.txt town.txt</span><br><span class="line"></span><br><span class="line"># mismatch connections, join all</span><br><span class="line">join -a1 -a2 names.txt town.txt</span><br><span class="line"></span><br><span class="line"># base on file1, join all</span><br><span class="line">join -a1 names.txt town.txt</span><br><span class="line"></span><br><span class="line"># selective join</span><br><span class="line">join -o 1.1,2.2 names.txt town.txt</span><br><span class="line"></span><br><span class="line"># different field join</span><br><span class="line"># extract 3rd field of file 1, 2nd field of file 2, then join them together</span><br><span class="line">join -j1 3 -j2 2 file1 file2</span><br><span class="line"></span><br><span class="line">cat pers</span><br><span class="line">P.Jones Office Runner ID897</span><br><span class="line">S.Round UNIX admin ID666</span><br><span class="line">L.Clip Personl Chief ID982</span><br><span class="line"></span><br><span class="line">cat pers2</span><br><span class="line">Dept2C ID897 6 years</span><br><span class="line">Dept3S ID666 2 years</span><br><span class="line">Dept5Z ID982 1 year</span><br><span class="line"></span><br><span class="line">join -j1 4 -j2 2 pers pers2</span><br><span class="line">ID897 P.Jones Office Runner Dept2C 6 years</span><br><span class="line">ID666 S.Round UNIX admin Dept3S 2 years</span><br><span class="line">ID982 L.Clip Personl Chief Dept5Z 1 year</span><br></pre></td></tr></table></figure><h2 id="9-cut"><a href="#9-cut" class="headerlink" title="9. cut"></a>9. cut</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">cut [options] file1 file2</span><br><span class="line">-c LIST, select only these characters</span><br><span class="line">-f LIST, select only these fields</span><br><span class="line">-d, delimiter</span><br><span class="line"></span><br><span class="line">cut -d: -f4 pers</span><br><span class="line">cut -d: -f1,3 pers</span><br><span class="line">cut -d: -f1-3 pers</span><br><span class="line"></span><br><span class="line">cut -d: -f1,6 /etc/passwd</span><br><span class="line"></span><br><span class="line"># file permision</span><br><span class="line">ls -l | cut -c1-10</span><br><span class="line"></span><br><span class="line">echo $PATH | tr &quot;:&quot; &quot;\n&quot; | nl</span><br><span class="line">echo $PATH | cut -d&quot;:&quot; -f3,5</span><br></pre></td></tr></table></figure><h1 id="10-paste"><a href="#10-paste" class="headerlink" title="10. paste"></a>10. paste</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">paste -d -s - file1 file2</span><br><span class="line">-d, delimiter</span><br><span class="line">-s, paste one file at a time instead of in parallel</span><br><span class="line"></span><br><span class="line">paste -d: pas1 pas2</span><br><span class="line"></span><br><span class="line"># list file name, 3 files each row</span><br><span class="line">ls | paste -d&quot; &quot; - - -</span><br><span class="line"></span><br><span class="line"># list file name, ls -l|awk &#x27;NF&gt;3&#123;print $8&#125;&#x27;</span><br><span class="line">ls | paste -d&quot;&quot; -</span><br></pre></td></tr></table></figure><h2 id="11-split"><a href="#11-split" class="headerlink" title="11. split"></a>11. split</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">split -output_file_size input-filename output-filename</span><br><span class="line">-output_file_size, default 1000 lines</span><br><span class="line">output-filename, default x[aa]-&gt;x[zz]</span><br></pre></td></tr></table></figure><h2 id="12-dos2unix-M-ctrl-v-ctrl-enter"><a href="#12-dos2unix-M-ctrl-v-ctrl-enter" class="headerlink" title="12. dos2unix, ^M=ctrl+v ctrl ^ enter"></a>12. dos2unix, <code>^M=ctrl+v ctrl ^ enter</code></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">dos2uninx dosfile</span><br><span class="line"></span><br><span class="line">sed -e &#x27;s/^M//&#x27; dosfile</span><br><span class="line"></span><br><span class="line">tr -s &quot;\r\n&quot; &quot;\n&quot; &lt; dosfile</span><br><span class="line">tr -d &quot;\015&quot; &lt; dosfile</span><br><span class="line"></span><br><span class="line">col -bx &lt; dosfile</span><br><span class="line"></span><br><span class="line"># delete ^M in vim</span><br><span class="line">:set ff=unix</span><br><span class="line">:%s/\r//g</span><br><span class="line">:%s/^M//gc</span><br></pre></td></tr></table></figure><h2 id="13-lsof-list-open-file"><a href="#13-lsof-list-open-file" class="headerlink" title="13. lsof, list open file"></a>13. lsof, list open file</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">lsof  filename 显示打开指定文件的所有进程 </span><br><span class="line">lsof -a 表示两个参数都必须满足时才显示结果 </span><br><span class="line">lsof -c string   显示COMMAND列中包含指定字符的进程所有打开的文件 </span><br><span class="line">lsof -u username  显示所属user进程打开的文件 </span><br><span class="line">lsof -g gid 显示归属gid的进程情况 </span><br><span class="line">lsof +d /DIR/ 显示目录下被进程打开的文件 </span><br><span class="line">lsof +D /DIR/ 同上，但是会搜索目录下的所有目录，时间相对较长 </span><br><span class="line">lsof -d FD 显示指定文件描述符的进程 </span><br><span class="line">lsof -n 不将IP转换为hostname，缺省是不加上-n参数 </span><br><span class="line">lsof -i 用以显示符合条件的进程情况 </span><br><span class="line">lsof -i[46] [protocol][@hostname|hostaddr][:service|port] </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">lsof -i tcp:22</span><br><span class="line">lsof -i :22</span><br><span class="line">lsof -i @10.40.53.22</span><br><span class="line"></span><br><span class="line">lsof /etc/passwd</span><br><span class="line">lsof /etc/cdrom</span><br><span class="line"></span><br><span class="line">lsof `which httpd`</span><br><span class="line"></span><br><span class="line">lsof -c bash</span><br><span class="line"></span><br><span class="line">lsof -u apache</span><br><span class="line"></span><br><span class="line">lsof +D /tmp</span><br><span class="line"></span><br><span class="line">lsof -i  # port 80</span><br></pre></td></tr></table></figure><h2 id="14-echo"><a href="#14-echo" class="headerlink" title="14. echo"></a>14. echo</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">echo -n     取消行末换行</span><br><span class="line">echo -E     关闭反斜线控制字符转换</span><br><span class="line">echo -e     启用反斜线控制字符转换</span><br><span class="line"></span><br><span class="line">\c  取消行末换行符</span><br><span class="line">\n  newline     =&gt; \012</span><br><span class="line">\r  return</span><br><span class="line">\t  TAB         =&gt; \011</span><br><span class="line">\num    ASCII八进制编码</span><br><span class="line">\xnum   ASCII十六进制编码</span><br></pre></td></tr></table></figure><h2 id="15-删除空格"><a href="#15-删除空格" class="headerlink" title="15. 删除空格"></a>15. 删除空格</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sed &quot;/^\s*$/d&quot;</span><br><span class="line">sed &#x27;/^$/d&#x27;</span><br><span class="line">sed -i &#x27;/^$/d&#x27;</span><br><span class="line">awk &#x27;NF&gt;0&#x27;</span><br><span class="line">perl -i.backup -n -e &quot;print if /\S/&quot;</span><br><span class="line">grep -v &#x27;^$&#x27;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux系统</title>
      <link href="/2019/12/18/Linux%E7%B3%BB%E7%BB%9F/"/>
      <url>/2019/12/18/Linux%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<h2 id="1-buffer和cache"><a href="#1-buffer和cache" class="headerlink" title="1. buffer和cache"></a>1. buffer和cache</h2><p>buffer强调写，cache强调读，读写都带的时候，几乎无差别。buffer另外也有排队等待被处理的意思，cache基本没有。</p><h2 id="2-bash配置文件"><a href="#2-bash配置文件" class="headerlink" title="2. bash配置文件"></a>2. bash配置文件</h2><h3 id="2-1-全局配置"><a href="#2-1-全局配置" class="headerlink" title="2.1 全局配置"></a>2.1 全局配置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/etc/profile</span><br><span class="line">/etc/profile.d/*.sh</span><br><span class="line">/etc/bashrc</span><br></pre></td></tr></table></figure><h3 id="2-2-用户配置"><a href="#2-2-用户配置" class="headerlink" title="2.2 用户配置"></a>2.2 用户配置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">~/.bash_profile, ~/.bash_login, ~/.profile(同时存在时，依次读取)</span><br><span class="line">~/.bashrc</span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="2-3-profile和bashrc"><a href="#2-3-profile和bashrc" class="headerlink" title="2.3 profile和bashrc"></a>2.3 profile和bashrc</h3><p>1) profile文件：</p><ul><li>设定环境变量</li><li>运行命令和脚本</li></ul><p>2) bashrc文件：</p><ul><li>设定本地变量</li><li>定义别名</li></ul><h3 id="2-4-登录shell和非登录shell"><a href="#2-4-登录shell和非登录shell" class="headerlink" title="2.4 登录shell和非登录shell"></a>2.4 登录shell和非登录shell</h3><p>1) Login Shell: 通过终端登录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">su - USERNAME</span><br><span class="line">su -l USERNAME</span><br><span class="line">/etc/profile --&gt; /etc/profile.d/*.sh --&gt; ~/.bash_profile --&gt; ~/.bashrc --&gt; /etc/bashrc</span><br></pre></td></tr></table></figure><p>2) Non-Login Shell:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">su USERNAME</span><br><span class="line">GUI终端下打开Console</span><br><span class="line">自动执行的shell脚本</span><br><span class="line">~/.bashrc --&gt; /etc/bashrc --&gt; /etc/profile.d/*.sh</span><br></pre></td></tr></table></figure><h2 id="3-随机数"><a href="#3-随机数" class="headerlink" title="3. 随机数"></a>3. 随机数</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># date</span></span><br><span class="line">date | md5sum</span><br><span class="line">date +%s | sha256sum | base64 | head -c 32; <span class="built_in">echo</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># openssl</span></span><br><span class="line">openssl rand -base64 32</span><br><span class="line"></span><br><span class="line"><span class="comment">#  /dev/urandom</span></span><br><span class="line">cat /dev/urandom | tr -dc <span class="string">&#x27;a-zA-Z0-9&#x27;</span> | fold -w 32 | head -1</span><br><span class="line">strings /dev/urandom | grep -o <span class="string">&#x27;[a-zA-Z0-9]&#x27;</span> | head -32 | tr -d <span class="string">&#x27;\n&#x27;</span>; <span class="built_in">echo</span></span><br></pre></td></tr></table></figure><h2 id="4-脚本中修改用户密码"><a href="#4-脚本中修改用户密码" class="headerlink" title="4. 脚本中修改用户密码"></a>4. 脚本中修改用户密码</h2><h3 id="4-1-使用代码组"><a href="#4-1-使用代码组" class="headerlink" title="4.1 使用代码组"></a>4.1 使用代码组</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&#x27;pass&#x27;</span></span><br><span class="line">    sleep 1</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&#x27;pass&#x27;</span></span><br><span class="line">    sleep 1</span><br><span class="line">&#125; | passwd abc</span><br></pre></td></tr></table></figure><h3 id="4-2-stdin"><a href="#4-2-stdin" class="headerlink" title="4.2 --stdin"></a>4.2 <code>--stdin</code></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;pass&#x27;</span> | passwd --stdin abc</span><br></pre></td></tr></table></figure><h3 id="4-3-查看是否已设置密码"><a href="#4-3-查看是否已设置密码" class="headerlink" title="4.3 查看是否已设置密码"></a>4.3 查看是否已设置密码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 已设置密码，PS或P</span></span><br><span class="line">passwd -S abc | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="5-使用stdin来屏蔽敏感信息"><a href="#5-使用stdin来屏蔽敏感信息" class="headerlink" title="5. 使用stdin来屏蔽敏感信息"></a>5. 使用stdin来屏蔽敏感信息</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ cat shield_sensitive_info.sh </span><br><span class="line"><span class="comment">#!/bin/sh</span></span><br><span class="line">name=<span class="variable">$1</span></span><br><span class="line"><span class="built_in">read</span> pass</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;username=<span class="variable">$name</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;password=<span class="variable">$pass</span>&quot;</span></span><br><span class="line"></span><br><span class="line">$ <span class="built_in">echo</span> 123 | ./shield_sensitive_info.sh abc</span><br><span class="line"></span><br><span class="line">$ ./shield_sensitive_info.sh abc &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">123</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><h2 id="6-释放内存"><a href="#6-释放内存" class="headerlink" title="6. 释放内存"></a>6. 释放内存</h2><p>查看系统内存使用情况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">free -m</span><br><span class="line">cat /proc/meminfo</span><br></pre></td></tr></table></figure><p>释放内存</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># to free pagecache</span></span><br><span class="line"><span class="built_in">echo</span> 1 &gt; /proc/sys/vm/drop_caches</span><br><span class="line"></span><br><span class="line"><span class="comment"># to free dentries and inodes</span></span><br><span class="line"><span class="built_in">echo</span> 2 &gt; /proc/sys/vm/drop_caches</span><br><span class="line"></span><br><span class="line"><span class="comment"># to free pagecache, dentries and inodes, use </span></span><br><span class="line"><span class="built_in">echo</span> 3 &gt;/proc/sys/vm/drop_caches</span><br></pre></td></tr></table></figure><h2 id="7-磁盘管理"><a href="#7-磁盘管理" class="headerlink" title="7. 磁盘管理"></a>7. 磁盘管理</h2><h3 id="7-1-创建分区（fdisk-sfdisk-part）"><a href="#7-1-创建分区（fdisk-sfdisk-part）" class="headerlink" title="7.1 创建分区（fdisk, sfdisk, part）"></a>7.1 创建分区（fdisk, sfdisk, part）</h3><p>1) 分区操作</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">fdisk /dev/sdb</span><br><span class="line">n   add a new partition</span><br><span class="line">p   print the partition table</span><br><span class="line">w   write table to disk and exit</span><br><span class="line">l    list known partition types</span><br><span class="line">t    82: swap, 83: linux, 8e: lvm, fd: raid</span><br></pre></td></tr></table></figure><p>2) 查看分区信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fdisk -l /dev/sdb</span><br></pre></td></tr></table></figure><p>3) 查看内核识别的分区</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cat /proc/partions</span><br><span class="line">partprobe [/dev/sda]  </span><br><span class="line">partx -a /dev/sda<span class="comment"># RHEL6</span></span><br></pre></td></tr></table></figure><p>4) 大磁盘分区，2TB以上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">parted /dev/sdb</span><br><span class="line">parted /dev/sdc <span class="built_in">print</span></span><br><span class="line">parted /dev/sdc mkpart logical ext3 19.2GB 19.7GB</span><br><span class="line">parted /dev/sdc rm 8 </span><br></pre></td></tr></table></figure><h3 id="7-2-创建文件系统"><a href="#7-2-创建文件系统" class="headerlink" title="7.2 创建文件系统"></a>7.2 创建文件系统</h3><p>默认支持的文件系统：mkfs.xx</p><p>VFS: Virtual Filesystem</p><ul><li>ext[2-4], xfs</li><li>iso9660</li><li>nfs, cifs</li><li>jfs, resiserfs, vfat</li><li>gfs, sfs2, ocfs</li></ul><p>1) mkfs</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkfs -t ext3 /dev/sdb1</span><br><span class="line">mkfs.ext3 /dev/sdb2</span><br><span class="line">mkfs.ext3 -b 1024 /dev/sdb3<span class="comment"># 设置block大小 1024, 2048, 4096</span></span><br></pre></td></tr></table></figure><p>2) mke2fs (/etc/mke2fs.conf)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-b [1024|2048|4096]</span><br><span class="line">-i bytes-per-inode# 多少个字节预留一个inode，默认8192 (每8K一个inode)</span><br><span class="line">-N numbers-of-inode</span><br><span class="line">-L label</span><br><span class="line">-j# ext3</span><br><span class="line">-m ratio# 预留给超级用户的磁盘百分比，默认%5</span><br><span class="line">-r blocks# 预留的blocks数量</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mke2fs -j -L <span class="string">&quot;ora_logical&quot;</span> -b 2048 -i 8192 /dev/sdb1</span><br><span class="line"></span><br><span class="line">mke2fs -j /dev/sdb1</span><br><span class="line"></span><br><span class="line">mke2fs -t ext4 -m 2 /dev/sdb1<span class="comment"># 预留2%磁盘块</span></span><br><span class="line">tune2fs -l /dev/sdb1 | grep <span class="string">&quot;Reserved&quot;</span></span><br></pre></td></tr></table></figure><p>3) tune2fs 调整文件系统属性</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-j# ext2-&gt;ext3</span><br><span class="line">-L label</span><br><span class="line">-m N# 调整预留百分比</span><br><span class="line">-c N# 指定挂载次数达到N次，进行自检，0或-1关闭自检</span><br><span class="line">-i N# 每挂载使用多少天自检，默认180，0或-1关闭自检</span><br><span class="line">-l# 显示超级块中的信息， dumpe2fs </span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tune2fs -j /dev/sda5<span class="comment"># ext3</span></span><br><span class="line">tune2fs -l /dev/sda5 | grep <span class="string">&#x27;Block size&#x27;</span></span><br></pre></td></tr></table></figure><p>4) e2label 查看或定义卷标</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">e2label /dev/sda5</span><br><span class="line">e2label /dev/sda5 mydisk</span><br></pre></td></tr></table></figure><p>5) blkid 查看设备的相关属性属性(UUID, FSTYPE, LABEL)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">blkid /dev/sda5</span><br></pre></td></tr></table></figure><p>6) dumpe2fs 分区系统，BLOCK-GROUPs</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dumpe2fs -h /dev/sdb1<span class="comment"># super-block信息</span></span><br></pre></td></tr></table></figure><h3 id="7-3-检查文件系统"><a href="#7-3-检查文件系统" class="headerlink" title="7.3 检查文件系统"></a>7.3 检查文件系统</h3><p>1) fsck </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-t FSTYPE </span><br><span class="line">-a# 自动修复，不询问</span><br><span class="line">-f# 强制价差</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fsck -C -f -t ext3 /dev/sdb1</span><br><span class="line">fsck -f /dev/sdb1</span><br></pre></td></tr></table></figure><p>2) e2fsck 专用修复ext2,ext3</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-f# 强制价差</span><br><span class="line">-p# 自动修复，不询问</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检测修复文件系统(单用户模式执行)</span></span><br><span class="line">fsck -y /dev/sda1</span><br><span class="line">e2fsck -p /dev/sdb1</span><br><span class="line"></span><br><span class="line">mke2fs -c /dev/sdb1</span><br></pre></td></tr></table></figure><h3 id="7-4-挂载"><a href="#7-4-挂载" class="headerlink" title="7.4 挂载"></a>7.4 挂载</h3><p>1) mount [options] DEVICE MOUNT_POINT</p><ul><li><p>DEVICE:</p><ul><li>DEV</li><li>LABEL=”mysql-data”</li><li>UUID=”uuid”</li></ul></li><li><p>options:</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">-t fstype</span><br><span class="line">-a挂载/etc/fstab中全部auto的分区</span><br><span class="line">-rreadonly</span><br><span class="line">-n, --no-mtab不更新/etc/mtab</span><br><span class="line">-o</span><br><span class="line">defaultsrw,suid,dev,exec,auto,nousers,async,realtime</span><br><span class="line">roreadonly</span><br><span class="line">noatime访问不更新atime</span><br><span class="line">noautomount -a不挂载</span><br><span class="line">sync同步写入</span><br><span class="line">nodev不读文件系统上的字符或块设备</span><br><span class="line">remount重新挂载</span><br><span class="line">loop本地回环设备</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mount -o remount,ro  /dev/sdb1</span><br><span class="line"></span><br><span class="line">mount -o ro /dev/cdrom /media</span><br><span class="line">mount -o loop,ro /root/RHEL6.iso/media</span><br></pre></td></tr></table></figure><p>2) umount [DEVICE|MOUNT_POINT]</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">umount /mnt</span><br><span class="line">umount: /mnt: device is busy.</span><br><span class="line"></span><br><span class="line">fuser -km /mnt</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>MongoDB</title>
      <link href="/2019/11/07/MongoDB/"/>
      <url>/2019/11/07/MongoDB/</url>
      
        <content type="html"><![CDATA[<h2 id="1-基本概念"><a href="#1-基本概念" class="headerlink" title="1. 基本概念"></a>1. 基本概念</h2><ul><li><p>面向集合(Collection-Oriented):<br>数据存储在集合中，每个集合在数据库中都有唯一的标识名，可以包含无限数量的文档</p></li><li><p>模式自由(Schema-Free):<br>集合类似RMDB中的Table，但无Schema</p></li><li><p>文档型(Document File):<br>存储数据是键值对的集合”JSON”，键是字符串，值可以是任意类型。存储数据类型称为BSON(Binary Serialized Document Notation)</p></li></ul><h3 id="1-1-数据逻辑结构"><a href="#1-1-数据逻辑结构" class="headerlink" title="1.1 数据逻辑结构"></a>1.1 数据逻辑结构</h3><ul><li>文档(document): RMDB中的行</li><li>集合(collection): RMDB中的表，由多个文档构成</li><li>数据库(database): 与RMDB一致</li></ul><span id="more"></span><h2 id="2-相关命令"><a href="#2-相关命令" class="headerlink" title="2. 相关命令"></a>2. 相关命令</h2><h3 id="2-1-查看帮助"><a href="#2-1-查看帮助" class="headerlink" title="2.1 查看帮助"></a>2.1 查看帮助</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">help</span></span><br><span class="line">db.help()</span><br><span class="line">db.account.help()</span><br></pre></td></tr></table></figure><h3 id="2-2-数据库管理"><a href="#2-2-数据库管理" class="headerlink" title="2.2 数据库管理"></a>2.2 数据库管理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">show dbs</span><br><span class="line">use mydb</span><br><span class="line"></span><br><span class="line">db.copyDatabase(<span class="string">&#x27;mydb&#x27;</span>, <span class="string">&#x27;temp&#x27;</span>, <span class="string">&#x27;127.0.0.1&#x27;</span>)</span><br><span class="line">db.cloneDatabase(<span class="string">&#x27;10.137.5.44&#x27;</span>)</span><br><span class="line"></span><br><span class="line">use temp</span><br><span class="line">db.dropDatabase()<span class="comment"># 删当前数据库</span></span><br><span class="line"></span><br><span class="line">db.repairDatabase()</span><br><span class="line"></span><br><span class="line">db.getName()<span class="comment"># 当前数据库名</span></span><br><span class="line"></span><br><span class="line">db.getMongo()<span class="comment"># 服务器地址</span></span><br><span class="line"></span><br><span class="line">db.stats()</span><br><span class="line">db.version()</span><br><span class="line"></span><br><span class="line">use admin</span><br><span class="line">db.shutdownServer()</span><br></pre></td></tr></table></figure><h3 id="2-3-集合操作"><a href="#2-3-集合操作" class="headerlink" title="2.3 集合操作"></a>2.3 集合操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">db.createCollection(<span class="string">&#x27;account&#x27;</span>, &#123;size:20, capped:5, max:100&#125;)</span><br><span class="line">db.getCollection(<span class="string">&#x27;account&#x27;</span>)</span><br><span class="line">db.getCollectionNames()</span><br><span class="line"></span><br><span class="line">db.account.help()</span><br><span class="line">db.account.count()</span><br><span class="line">db.account.dataSize()</span><br><span class="line">db.account.totalSize()</span><br><span class="line">db.account.getDB()</span><br><span class="line">db.account.renameCollection(<span class="string">&#x27;accounts&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="2-4-用户管理"><a href="#2-4-用户管理" class="headerlink" title="2.4 用户管理"></a>2.4 用户管理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">show roles</span><br><span class="line">db.createUser(</span><br><span class="line">&#123;</span><br><span class="line">user: <span class="string">&#x27;eli&#x27;</span>,</span><br><span class="line"><span class="built_in">pwd</span>: <span class="string">&#x27;123&#x27;</span>,</span><br><span class="line">roles: [&#123;role: <span class="string">&#x27;userAdmin&#x27;</span>, db: <span class="string">&#x27;mydb&#x27;</span>&#125;]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">db.auth(<span class="string">&#x27;eli&#x27;</span>, <span class="string">&#x27;123&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="2-5-增删改查"><a href="#2-5-增删改查" class="headerlink" title="2.5 增删改查"></a>2.5 增删改查</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">db.account.save(&#123;name: <span class="string">&#x27;mongo&#x27;</span>&#125;)</span><br><span class="line">db.account.insert(&#123;x:1&#125;)</span><br><span class="line">db.account.find(&#123;name: <span class="string">&#x27;mongo&#x27;</span>&#125;)</span><br><span class="line">db.account.update(&#123;name: <span class="string">&#x27;mongo&#x27;</span>&#125;, &#123;<span class="variable">$set</span>, &#123;name: <span class="string">&#x27;new_mongo&#x27;</span>&#125;&#125;)</span><br><span class="line">db.account.remove(&#123;name: <span class="string">&#x27;new_mongo&#x27;</span>&#125;)</span><br></pre></td></tr></table></figure><ul><li>update语法：</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">db.collection.update(  </span><br><span class="line">  &lt;query&gt;,  </span><br><span class="line">  &lt;update&gt;,  </span><br><span class="line">   upsert:&lt;boolean&gt;,  </span><br><span class="line">   multi:&lt;boolean&gt;   <span class="comment">// 默认只修改一条数据</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>更新操作：</p><p>———｜————–｜<br>名称    ｜描述｜<br>———｜————–｜<br>$inc    ｜根据要添加的值递增该字段的值。｜<br>$mul    ｜将该字段的值乘以指定的值｜<br>$rename    ｜重命名字段｜<br>$setOnInsert    ｜操作时,操作给相应的字段赋值｜<br>$set    ｜用来指定一个键的值，如果不存在则创建它｜<br>$unset    ｜用来指定一个键的值，如果不存在不创建创建它｜<br>$min    ｜只有当指定的值小于现有字段值时才更新该字段。｜<br>$max    ｜只有当指定的值大于现有字段值时才更新该字段。｜<br>$currentDate    ｜设置当前日期字段的值，或者作为一个日期或时间戳。｜</p><h2 id="3-查询操作"><a href="#3-查询操作" class="headerlink" title="3. 查询操作"></a>3. 查询操作</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">db.test.insert(&#123;name:<span class="string">&#x27;jack&#x27;</span>, age:29, gender:<span class="string">&#x27;male&#x27;</span>, email:<span class="string">&#x27;jack@outlook.com&#x27;</span>&#125;)</span><br><span class="line">db.test.insert(&#123;name:<span class="string">&#x27;lucy&#x27;</span>, age:21, gender:<span class="string">&#x27;female&#x27;</span>, email:<span class="string">&#x27;lucy@gmail.com&#x27;</span>&#125;)</span><br><span class="line">db.test.insert(&#123;name:<span class="string">&#x27;tom&#x27;</span>, age:30, gender:<span class="string">&#x27;male&#x27;</span>, email:<span class="string">&#x27;tom@abc.com&#x27;</span>&#125;)</span><br><span class="line">db.test.insert(&#123;name:<span class="string">&#x27;bonnie&#x27;</span>, age:29, gender:<span class="string">&#x27;female&#x27;</span>, email:<span class="string">&#x27;bonnie@abc.com&#x27;</span>&#125;)</span><br><span class="line">db.test.insert(&#123;name:<span class="string">&#x27;jack&#x27;</span>, age:25, gender:<span class="string">&#x27;male&#x27;</span>, email:<span class="string">&#x27;jack@hotmail.com&#x27;</span>&#125;)</span><br></pre></td></tr></table></figure><h3 id="3-1-基本查询"><a href="#3-1-基本查询" class="headerlink" title="3.1 基本查询"></a>3.1 基本查询</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">db.test.find()             <span class="comment"># all</span></span><br><span class="line">db.test.findOne().       <span class="comment"># just one</span></span><br><span class="line">db.test.find(&#123;name:<span class="string">&#x27;jack&#x27;</span>&#125;)</span><br><span class="line">db.test.find(&#123;name:<span class="string">&#x27;jack&#x27;</span>, age:29&#125;)</span><br><span class="line"></span><br><span class="line">db.test.find(&#123;&#125;, &#123;name:1, gender:1&#125;)     <span class="comment"># 只返回name, gender字段</span></span><br><span class="line">db.test.find(&#123;&#125;, &#123;email:0&#125;)                  <span class="comment"># 不返回email字段</span></span><br></pre></td></tr></table></figure><h3 id="3-2-条件查询-gt-lt-gte-lte-ne-or-in-nin"><a href="#3-2-条件查询-gt-lt-gte-lte-ne-or-in-nin" class="headerlink" title="3.2 条件查询($gt, $lt, $gte, $lte, $ne, $or, $in, $nin)"></a>3.2 条件查询(<code>$gt</code>, <code>$lt</code>, <code>$gte</code>, <code>$lte</code>, <code>$ne</code>, <code>$or</code>, <code>$in</code>, <code>$nin</code>)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">db.test.find(&#123;age: &#123;<span class="variable">$gt</span>: 25, <span class="variable">$lt</span>: 30&#125;&#125;)</span><br><span class="line">db.test.find(&#123;gender: &#123;<span class="variable">$ne</span>: <span class="string">&#x27;male&#x27;</span>&#125;&#125;)</span><br><span class="line">db.test.find(&#123;age: &#123;<span class="variable">$in</span>: [21, 30]&#125;&#125;)</span><br><span class="line">db.test.find(&#123;age: &#123;<span class="variable">$nin</span>: [21, 30]&#125;&#125;)</span><br><span class="line">db.test.find(&#123;name: &#123;<span class="variable">$not</span>: &#123;<span class="variable">$in</span>: [<span class="string">&#x27;jack&#x27;</span>, <span class="string">&#x27;lily&#x27;</span>]&#125;&#125;&#125;)</span><br><span class="line">db.test.find(&#123;age: &#123;<span class="variable">$mod</span>: [10,1]&#125;&#125;)</span><br><span class="line">db.test.find(&#123;name: &#123;<span class="variable">$exists</span>: <span class="literal">true</span>&#125;&#125;)</span><br><span class="line"></span><br><span class="line">db.test.find(&#123;<span class="variable">$or</span>: [&#123;name:<span class="string">&#x27;jack&#x27;</span>&#125;, &#123;name:<span class="string">&#x27;tom&#x27;</span>&#125;])</span><br></pre></td></tr></table></figure><h3 id="3-3-null类型查询"><a href="#3-3-null类型查询" class="headerlink" title="3.3 null类型查询"></a>3.3 null类型查询</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">db.test.update(&#123;name:<span class="string">&#x27;jack&#x27;</span>&#125;, &#123;<span class="variable">$set</span>: &#123;addr: null&#125;&#125;)</span><br><span class="line">db.test.update(&#123;name:<span class="string">&#x27;tom&#x27;</span>&#125;, &#123;<span class="variable">$set</span>: &#123;addr: &#123;city:<span class="string">&#x27;NJ&#x27;</span>, prov:<span class="string">&#x27;JS&#x27;</span>&#125;&#125;&#125;)</span><br><span class="line"></span><br><span class="line">db.test.find(&#123;addr: null&#125;)</span><br><span class="line">db.test.find(&#123;addr: &#123;<span class="variable">$in</span>: [null], <span class="variable">$exists</span>: <span class="literal">true</span>&#125;&#125;)</span><br></pre></td></tr></table></figure><h3 id="3-4-正则表达式"><a href="#3-4-正则表达式" class="headerlink" title="3.4 正则表达式"></a>3.4 正则表达式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">db.test.find(&#123;name:/Jack?/i&#125;)</span><br><span class="line">db.test.find(&#123;name: &#123;<span class="variable">$not</span>: /^b.*/&#125;&#125;) <span class="comment"># not like &#x27;b%&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="3-5-js和-where查询"><a href="#3-5-js和-where查询" class="headerlink" title="3.5 js和$where查询"></a>3.5 js和<code>$where</code>查询</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">db.test.find(&#123;age: &#123;<span class="variable">$lt</span>: 30&#125;&#125;)</span><br><span class="line">db.test.find(&#123;<span class="variable">$where</span>: <span class="string">&quot;this.age &gt; 30&quot;</span>&#125;)</span><br><span class="line">db.test.find(<span class="string">&quot;this.age &gt; 30&quot;</span>)</span><br><span class="line"></span><br><span class="line">f = <span class="function"><span class="title">function</span></span>() &#123;<span class="built_in">return</span> this.age&gt;30;&#125;</span><br><span class="line">db.test.find(f)</span><br></pre></td></tr></table></figure><h3 id="3-6-count-limit-skip-sort"><a href="#3-6-count-limit-skip-sort" class="headerlink" title="3.6 count, limit, skip, sort"></a>3.6 count, limit, skip, sort</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">db.test.find().count()</span><br><span class="line">db.test.find().<span class="built_in">limit</span>(5)</span><br><span class="line">db.test.find().skip(3).<span class="built_in">limit</span>(5)</span><br><span class="line">db.test.find().sort(&#123;age:-1&#125;)</span><br></pre></td></tr></table></figure><h3 id="3-7-数组"><a href="#3-7-数组" class="headerlink" title="3.7 数组"></a>3.7 数组</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">db.fruits.insert(&#123;fruit: [<span class="string">&#x27;apple&#x27;</span>, <span class="string">&#x27;orange&#x27;</span>, <span class="string">&#x27;peach&#x27;</span>]&#125;)</span><br><span class="line">db.fruits.insert(&#123;fruit: [<span class="string">&#x27;apple&#x27;</span>, <span class="string">&#x27;kuaquat&#x27;</span>, <span class="string">&#x27;blueberry&#x27;</span>]&#125;)</span><br><span class="line">db.fruits.insert(&#123;fruit: [<span class="string">&#x27;pear&#x27;</span>, <span class="string">&#x27;strawberry&#x27;</span>, <span class="string">&#x27;banana&#x27;</span>]&#125;)</span><br><span class="line"></span><br><span class="line">db.fruits.find(&#123;fruit: <span class="string">&#x27;apple&#x27;</span>&#125;)</span><br><span class="line">db.fruits.find(&#123;fruit: &#123;<span class="variable">$in</span>: [<span class="string">&#x27;apple&#x27;</span>]&#125;&#125;)   <span class="comment"># same as above</span></span><br><span class="line"></span><br><span class="line">db.fruits.find(&#123;fruit: &#123;<span class="variable">$all</span>: [<span class="string">&#x27;apple&#x27;</span>, <span class="string">&#x27;orange&#x27;</span>]&#125;&#125;)</span><br><span class="line"></span><br><span class="line">db.fruits.find(&#123;fruit: [<span class="string">&#x27;apple&#x27;</span>, <span class="string">&#x27;orange&#x27;</span>, <span class="string">&#x27;peach&#x27;</span>]&#125;)</span><br><span class="line"></span><br><span class="line">db.fruits.find(&#123;<span class="string">&#x27;fruit.2&#x27;</span>: <span class="string">&#x27;peach&#x27;</span>&#125;)</span><br><span class="line"></span><br><span class="line">db.fruits.find(&#123;fruit: &#123;<span class="variable">$size</span>: 3&#125;&#125;)</span><br><span class="line"></span><br><span class="line">db.fruits.update(&#123;&#125;, &#123;<span class="variable">$set</span>: &#123;size:3&#125;&#125;, <span class="literal">false</span>, <span class="literal">true</span>)</span><br><span class="line">db.fruits.find()</span><br><span class="line"></span><br><span class="line">db.fruits.update(&#123;&#125;, &#123;<span class="variable">$push</span>: &#123;fruit:<span class="string">&#x27;grape&#x27;</span>&#125;, <span class="variable">$inc</span>: &#123;size:1&#125;&#125;)</span><br><span class="line"></span><br><span class="line">db.fruits.find(&#123;&#125;, &#123;fruit: &#123;<span class="variable">$slice</span>:2&#125;, size: 0&#125;)</span><br><span class="line">db.fruits.find(&#123;&#125;, &#123;fruit: &#123;<span class="variable">$slice</span>:-2&#125;, size: 0&#125;)</span><br><span class="line">db.fruits.find(&#123;&#125;, &#123;fruit: &#123;<span class="variable">$slice</span>:[2,1]&#125;, size: 0&#125;)</span><br></pre></td></tr></table></figure><h3 id="3-8-查询组合条件"><a href="#3-8-查询组合条件" class="headerlink" title="3.8 查询组合条件"></a>3.8 查询组合条件</h3><h4 id="3-8-1-in"><a href="#3-8-1-in" class="headerlink" title="3.8.1 $in"></a>3.8.1 <code>$in</code></h4><p>满足列表中任意一个值</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.funds.find(&#123;<span class="string">&#x27;Fee&#x27;</span>: &#123;<span class="string">&#x27;$in&#x27;</span>: [<span class="number">15</span>, <span class="number">21</span>]&#125;&#125;)</span><br></pre></td></tr></table></figure><h4 id="3-8-2-all"><a href="#3-8-2-all" class="headerlink" title="3.8.2 $all"></a>3.8.2 <code>$all</code></h4><p>满足列表中全部值</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.funds.find(&#123;<span class="string">&#x27;Fee&#x27;</span>: &#123;<span class="string">&#x27;$all&#x27;</span>: [<span class="number">15</span>, <span class="number">21</span>]&#125;&#125;)</span><br></pre></td></tr></table></figure><h4 id="3-8-3-or"><a href="#3-8-3-or" class="headerlink" title="3.8.3 $or"></a>3.8.3 <code>$or</code></h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.funds.find(&#123;<span class="string">&#x27;$or&#x27;</span>: [&#123;<span class="string">&#x27;Fee&#x27;</span>: <span class="number">15</span>&#125;, &#123;<span class="string">&#x27;Fee&#x27;</span>: <span class="number">21</span>&#125;]&#125;)</span><br></pre></td></tr></table></figure><h4 id="3-8-4-and"><a href="#3-8-4-and" class="headerlink" title="3.8.4 $and"></a>3.8.4 <code>$and</code></h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.funds.find(&#123;<span class="string">&#x27;$and&#x27;</span>: [&#123;<span class="string">&#x27;Fee&#x27;</span>: <span class="number">15</span>&#125;, &#123;<span class="string">&#x27;Fee&#x27;</span>: <span class="number">21</span>&#125;]&#125;)</span><br></pre></td></tr></table></figure><h4 id="3-8-5-exist"><a href="#3-8-5-exist" class="headerlink" title="3.8.5 $exist"></a>3.8.5 <code>$exist</code></h4><p>节点存在，不关心值是否为null</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.test.find(&#123;<span class="string">&quot;Fee&quot;</span>: &#123;<span class="string">&#x27;$exists&#x27;</span>: <span class="literal">true</span>&#125;&#125;)</span><br></pre></td></tr></table></figure><p>节点不存在或者节点存在但值为null</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.test.find(&#123;<span class="string">&quot;Fee&quot;</span>: <span class="literal">null</span>&#125;)</span><br></pre></td></tr></table></figure><h4 id="3-8-6-ne"><a href="#3-8-6-ne" class="headerlink" title="3.8.6 $ne"></a>3.8.6 <code>$ne</code></h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.test.find(&#123;<span class="string">&quot;Fee&quot;</span>: &#123;<span class="string">&#x27;$ne&#x27;</span>: <span class="number">21</span>&#125;&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">&#x27;$and&#x27;</span>: [<span class="string">&quot;BasicInfo.offshoreFund&quot;</span>: &#123;<span class="string">&#x27;$in&#x27;</span>: [<span class="string">&quot;0&quot;</span>, <span class="string">&quot;1&quot;</span>, <span class="string">&quot;2&quot;</span>, <span class="string">&quot;3&quot;</span>]&#125;, <span class="string">&quot;BasicInfo.cayman&quot;</span>: &#123;<span class="string">&#x27;$in&#x27;</span>: [<span class="string">&quot;0&quot;</span>, <span class="string">&quot;1&quot;</span>, <span class="string">&quot;2&quot;</span>, <span class="string">&quot;3&quot;</span>]&#125;, <span class="string">&quot;BasicInfo.America&quot;</span>: &#123;<span class="string">&#x27;$in&#x27;</span>: [<span class="string">&quot;0&quot;</span>, <span class="string">&quot;1&quot;</span>, <span class="string">&quot;2&quot;</span>]&#125;, <span class="string">&quot;BasicInfo.BVI&quot;</span>: &#123;<span class="string">&#x27;$in&#x27;</span>: [<span class="string">&quot;0&quot;</span>, <span class="string">&quot;1&quot;</span>, <span class="string">&quot;2&quot;</span>, <span class="string">&quot;3&quot;</span>]&#125;]&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">db.funds.find(&#123; </span><br><span class="line">    &#x27;$and&#x27;: [</span><br><span class="line">        &quot;BasicInfo.America&quot;: &#123;&#x27;$in&#x27;: [&quot;0&quot;, &quot;1&quot;, &quot;2&quot;]&#125;, </span><br><span class="line">        &quot;BasicInfo.BVI&quot;: &#123;&#x27;$in&#x27;: [&quot;0&quot;, &quot;1&quot;, &quot;2&quot;, &quot;3&quot;]&#125;</span><br><span class="line">    ] </span><br><span class="line">&#125;).count()</span><br></pre></td></tr></table></figure><h3 id="3-9-聚合查询"><a href="#3-9-聚合查询" class="headerlink" title="3.9 聚合查询"></a>3.9 聚合查询</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123; <span class="attr">&quot;_id&quot;</span> : <span class="number">1</span>, <span class="attr">&quot;domainName&quot;</span> : <span class="string">&quot;test1.com&quot;</span>, <span class="attr">&quot;hosting&quot;</span> : <span class="string">&quot;hostgator.com&quot;</span> &#125;</span><br><span class="line">&#123; <span class="attr">&quot;_id&quot;</span> : <span class="number">2</span>, <span class="attr">&quot;domainName&quot;</span> : <span class="string">&quot;test2.com&quot;</span>, <span class="attr">&quot;hosting&quot;</span> : <span class="string">&quot;aws.amazon.com&quot;</span>&#125;</span><br><span class="line">&#123; <span class="attr">&quot;_id&quot;</span> : <span class="number">3</span>, <span class="attr">&quot;domainName&quot;</span> : <span class="string">&quot;test3.com&quot;</span>, <span class="attr">&quot;hosting&quot;</span> : <span class="string">&quot;aws.amazon.com&quot;</span> &#125;</span><br><span class="line">&#123; <span class="attr">&quot;_id&quot;</span> : <span class="number">4</span>, <span class="attr">&quot;domainName&quot;</span> : <span class="string">&quot;test4.com&quot;</span>, <span class="attr">&quot;hosting&quot;</span> : <span class="string">&quot;hostgator.com&quot;</span> &#125;</span><br><span class="line">&#123; <span class="attr">&quot;_id&quot;</span> : <span class="number">5</span>, <span class="attr">&quot;domainName&quot;</span> : <span class="string">&quot;test5.com&quot;</span>, <span class="attr">&quot;hosting&quot;</span> : <span class="string">&quot;aws.amazon.com&quot;</span> &#125;</span><br><span class="line">&#123; <span class="attr">&quot;_id&quot;</span> : <span class="number">6</span>, <span class="attr">&quot;domainName&quot;</span> : <span class="string">&quot;test6.com&quot;</span>, <span class="attr">&quot;hosting&quot;</span> : <span class="string">&quot;cloud.google.com&quot;</span> &#125;</span><br><span class="line">&#123; <span class="attr">&quot;_id&quot;</span> : <span class="number">7</span>, <span class="attr">&quot;domainName&quot;</span> : <span class="string">&quot;test7.com&quot;</span>, <span class="attr">&quot;hosting&quot;</span> : <span class="string">&quot;aws.amazon.com&quot;</span> &#125;</span><br><span class="line">&#123; <span class="attr">&quot;_id&quot;</span> : <span class="number">8</span>, <span class="attr">&quot;domainName&quot;</span> : <span class="string">&quot;test8.com&quot;</span>, <span class="attr">&quot;hosting&quot;</span> : <span class="string">&quot;hostgator.com&quot;</span> &#125;</span><br><span class="line">&#123; <span class="attr">&quot;_id&quot;</span> : <span class="number">9</span>, <span class="attr">&quot;domainName&quot;</span> : <span class="string">&quot;test9.com&quot;</span>, <span class="attr">&quot;hosting&quot;</span> : <span class="string">&quot;cloud.google.com&quot;</span> &#125;</span><br><span class="line">&#123; <span class="attr">&quot;_id&quot;</span> : <span class="number">10</span>, <span class="attr">&quot;domainName&quot;</span> : <span class="string">&quot;test10.com&quot;</span>, <span class="attr">&quot;hosting&quot;</span> : <span class="string">&quot;godaddy.com&quot;</span> &#125;</span><br></pre></td></tr></table></figure><p>导入数据：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongoimport -d testdb -c website --file website.json --upsert</span><br></pre></td></tr></table></figure><h4 id="3-9-1-group-amp-sort"><a href="#3-9-1-group-amp-sort" class="headerlink" title="3.9.1 group &amp; sort"></a>3.9.1 group &amp; sort</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// group by</span></span><br><span class="line">db.website.aggregate([</span><br><span class="line">    &#123; <span class="attr">$group</span>: &#123; <span class="attr">_id</span>: <span class="string">&quot;$hosting&quot;</span>, <span class="attr">total</span>: &#123; <span class="attr">$sum</span>: <span class="number">1</span> &#125; &#125; &#125;</span><br><span class="line">]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// sort</span></span><br><span class="line">db.website.aggregate([</span><br><span class="line">    &#123; <span class="attr">$group</span>: &#123; <span class="attr">_id</span>: <span class="string">&quot;$hosting&quot;</span>, <span class="attr">total</span>: &#123; <span class="attr">$sum</span>: <span class="number">1</span> &#125; &#125; &#125;,</span><br><span class="line">    &#123; <span class="attr">$sort</span>: &#123; <span class="attr">total</span>: -<span class="number">1</span> &#125; &#125;</span><br><span class="line">]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// match</span></span><br><span class="line">db.website.aggregate([</span><br><span class="line">    &#123; <span class="attr">$match</span>: &#123; <span class="attr">hosting</span>: <span class="string">&quot;aws.amazon.com&quot;</span> &#125; &#125;,</span><br><span class="line">    &#123; <span class="attr">$group</span>: &#123; <span class="attr">_id</span>: <span class="string">&quot;$hosting&quot;</span>, <span class="attr">total</span>: &#123; <span class="attr">$sum</span>: <span class="number">1</span> &#125; &#125; &#125;,</span><br><span class="line">    &#123; <span class="attr">$sort</span>: &#123; <span class="attr">total</span>: -<span class="number">1</span> &#125; &#125;</span><br><span class="line">]);</span><br></pre></td></tr></table></figure><h4 id="3-9-2-export-result"><a href="#3-9-2-export-result" class="headerlink" title="3.9.2 export result"></a>3.9.2 export result</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> group_data = db.website.aggregate([</span><br><span class="line">    &#123; <span class="attr">$group</span>: &#123; <span class="attr">_id</span>: <span class="string">&quot;$hosting&quot;</span>, <span class="attr">total</span>: &#123; <span class="attr">$sum</span>: <span class="number">1</span> &#125; &#125; &#125;,</span><br><span class="line">    &#123; <span class="attr">$sort</span>: &#123; <span class="attr">total</span>: -<span class="number">1</span> &#125; &#125;</span><br><span class="line">]);</span><br><span class="line">    </span><br><span class="line">print(group_data.toArray())</span><br><span class="line">    </span><br><span class="line">db.websitegroup.insert(group_data.toArray())</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mongoexport -d testdb -c websitegroup -o websitegroup.json</span><br><span class="line"></span><br><span class="line">mongoexport -d testdb -c websitegroup -f _id,total -o websitegroup.csv --type=csv</span><br></pre></td></tr></table></figure><h4 id="3-9-3-Large-sort-operation-sort-in-memory-100M"><a href="#3-9-3-Large-sort-operation-sort-in-memory-100M" class="headerlink" title="3.9.3 Large sort operation: (sort in memory 100M)"></a>3.9.3 Large sort operation: (sort in memory 100M)</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">db.website.aggregate([</span><br><span class="line">    &#123; <span class="attr">$group</span>: &#123; <span class="attr">_id</span>: <span class="string">&quot;$hosting&quot;</span>, <span class="attr">total</span>: &#123; <span class="attr">$sum</span>: <span class="number">1</span> &#125; &#125; &#125;,</span><br><span class="line">    &#123; <span class="attr">$sort</span>: &#123; <span class="attr">total</span>: -<span class="number">1</span> &#125; &#125;</span><br><span class="line">],</span><br><span class="line">    &#123; <span class="attr">allowDiskUse</span>: <span class="literal">true</span> &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="3-10-查询Embeded数据"><a href="#3-10-查询Embeded数据" class="headerlink" title="3.10 查询Embeded数据"></a>3.10 查询Embeded数据</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;_id&quot;</span>: <span class="string">&quot;alpha&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;Storage Alpha&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;items&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;category&quot;</span>: <span class="string">&quot;food&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;apple&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;category&quot;</span>: <span class="string">&quot;food&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;banana&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;category&quot;</span>: <span class="string">&quot;tool&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;hammer&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;category&quot;</span>: <span class="string">&quot;furniture&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;couch&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-10-1-查询整个文档"><a href="#3-10-1-查询整个文档" class="headerlink" title="3.10.1 查询整个文档:"></a>3.10.1 查询整个文档:</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">db.storage.find(&#123;</span><br><span class="line">    <span class="string">&#x27;items.category&#x27;</span>: &#123;</span><br><span class="line">        <span class="attr">$eq</span>: <span class="string">&#x27;food&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// result</span></span><br></pre></td></tr></table></figure><h4 id="3-10-2-映射操作符（Projection-Operator）"><a href="#3-10-2-映射操作符（Projection-Operator）" class="headerlink" title="3.10.2 映射操作符（Projection Operator）"></a>3.10.2 映射操作符（Projection Operator）</h4><p>1) <code>$</code> 操作符会限制 <code>array</code> 类型数据的返回结果，使其仅返回第一个满足条件的元素。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">db.storage.find(</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&#x27;items.category&#x27;</span>: &#123;</span><br><span class="line">        <span class="attr">$eq</span>: <span class="string">&#x27;food&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&#x27;items.$&#x27;</span>: <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">// result</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;_id&quot;</span> : <span class="string">&quot;alpha&quot;</span>,</span><br><span class="line">    <span class="string">&quot;items&quot;</span> : [ </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;category&quot;</span> : <span class="string">&quot;food&quot;</span>,</span><br><span class="line">            <span class="string">&quot;name&quot;</span> : <span class="string">&quot;apple&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2) <code>$elemMatch</code> 和 <code>$</code> 的区别在于，<code>$</code> 使用的是数据查询条件作为来映射（或者说过滤）array 中的数据，而 <code>$elemMatch</code> 需要指定单独的条件（可以指定多个条件）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">db.storage.find(</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&#x27;_id&#x27;</span>: <span class="string">&#x27;alpha&#x27;</span></span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&#x27;items&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;$elemMatch&#x27;</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;category&#x27;</span>: <span class="string">&#x27;food&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// result</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;_id&quot;</span> : <span class="string">&quot;alpha&quot;</span>,</span><br><span class="line">    <span class="string">&quot;items&quot;</span> : [ </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;category&quot;</span> : <span class="string">&quot;food&quot;</span>,</span><br><span class="line">            <span class="string">&quot;name&quot;</span> : <span class="string">&quot;apple&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-10-3-聚合"><a href="#3-10-3-聚合" class="headerlink" title="3.10.3 聚合"></a>3.10.3 聚合</h4><p>1) <code>$filter</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">db.storage.aggregate([</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">$project</span>: &#123;</span><br><span class="line">        <span class="string">&quot;items&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">$filter</span>: &#123;</span><br><span class="line">                <span class="attr">input</span>: <span class="string">&quot;$items&quot;</span>,</span><br><span class="line">                <span class="attr">as</span>: <span class="string">&quot;item&quot;</span>,</span><br><span class="line">                <span class="attr">cond</span>: &#123;</span><br><span class="line">                    <span class="attr">$eq</span>: [ <span class="string">&#x27;$$item.category&#x27;</span>, <span class="string">&#x27;food&#x27;</span> ]</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">])</span><br><span class="line"></span><br><span class="line"><span class="comment">// result</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;_id&quot;</span> : <span class="string">&quot;alpha&quot;</span>,</span><br><span class="line">    <span class="string">&quot;items&quot;</span> : [ </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;category&quot;</span> : <span class="string">&quot;food&quot;</span>,</span><br><span class="line">            <span class="string">&quot;name&quot;</span> : <span class="string">&quot;apple&quot;</span></span><br><span class="line">        &#125;, </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;category&quot;</span> : <span class="string">&quot;food&quot;</span>,</span><br><span class="line">            <span class="string">&quot;name&quot;</span> : <span class="string">&quot;banana&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2) <code>$unwind</code></p><p>如果文档中包含 array 类型字段、并且其中包含多个元素，使用 <code>$unwind</code> 操作符会根据元素数量输出多个文档，每个文档的 array 字段中仅包含 array 中的单个元素。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">db.storage.aggregate([</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">$match</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;items.category&#x27;</span>: <span class="string">&#x27;food&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">$unwind</span>: <span class="string">&#x27;$items&#x27;</span></span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">$match</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;items.category&#x27;</span>: <span class="string">&#x27;food&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">])</span><br><span class="line"></span><br><span class="line"><span class="comment">// result</span></span><br><span class="line"><span class="comment">/* 1 */</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;_id&quot;</span> : <span class="string">&quot;alpha&quot;</span>,</span><br><span class="line">    <span class="string">&quot;name&quot;</span> : <span class="string">&quot;Storage Alpha&quot;</span>,</span><br><span class="line">    <span class="string">&quot;items&quot;</span> : &#123;</span><br><span class="line">        <span class="string">&quot;category&quot;</span> : <span class="string">&quot;food&quot;</span>,</span><br><span class="line">        <span class="string">&quot;name&quot;</span> : <span class="string">&quot;apple&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 2 */</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;_id&quot;</span> : <span class="string">&quot;alpha&quot;</span>,</span><br><span class="line">    <span class="string">&quot;name&quot;</span> : <span class="string">&quot;Storage Alpha&quot;</span>,</span><br><span class="line">    <span class="string">&quot;items&quot;</span> : &#123;</span><br><span class="line">        <span class="string">&quot;category&quot;</span> : <span class="string">&quot;food&quot;</span>,</span><br><span class="line">        <span class="string">&quot;name&quot;</span> : <span class="string">&quot;banana&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-索引"><a href="#4-索引" class="headerlink" title="4. 索引"></a>4. 索引</h2><h3 id="4-1-基础索引"><a href="#4-1-基础索引" class="headerlink" title="4.1 基础索引"></a>4.1 基础索引</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">db.test.ensureIndex(&#123;<span class="attr">age</span>:<span class="number">1</span>&#125;)</span><br><span class="line">db.test.ensureIndex(&#123;<span class="attr">age</span>:<span class="number">1</span>&#125;, &#123;<span class="attr">background</span>:<span class="literal">true</span>&#125;)</span><br><span class="line"></span><br><span class="line">db.test.getIndexes()</span><br></pre></td></tr></table></figure><h3 id="4-2-文档索引"><a href="#4-2-文档索引" class="headerlink" title="4.2 文档索引"></a>4.2 文档索引</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">db.test.update(&#123;<span class="attr">addr</span>:<span class="literal">null</span>&#125;, &#123;<span class="attr">$set</span>: &#123;<span class="attr">addr</span>: &#123;<span class="attr">city</span>:<span class="string">&#x27;BJ&#x27;</span>, <span class="attr">prov</span>:<span class="string">&#x27;BJ&#x27;</span>&#125;&#125;&#125;)</span><br><span class="line">db.test.ensureIndex(&#123;<span class="attr">addr</span>:<span class="number">1</span>&#125;)</span><br><span class="line">db.test.find(&#123;<span class="attr">addr</span>: &#123;<span class="attr">city</span>:<span class="string">&#x27;BJ&#x27;</span>, <span class="attr">prov</span>:<span class="string">&#x27;BJ&#x27;</span>&#125;&#125;)# 使用索引</span><br><span class="line">db.test.find(&#123;<span class="attr">addr</span>: &#123;<span class="attr">prov</span>:<span class="string">&#x27;BJ&#x27;</span>, <span class="attr">city</span>:<span class="string">&#x27;BJ&#x27;</span>&#125;&#125;)# 不使用索引</span><br></pre></td></tr></table></figure><h3 id="4-3-组合索引"><a href="#4-3-组合索引" class="headerlink" title="4.3 组合索引"></a>4.3 组合索引</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.test.ensureIndex(&#123;<span class="attr">name</span>:<span class="number">1</span>, <span class="attr">age</span>:<span class="number">1</span>&#125;)</span><br></pre></td></tr></table></figure><h3 id="4-4-唯一索引"><a href="#4-4-唯一索引" class="headerlink" title="4.4 唯一索引"></a>4.4 唯一索引</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.test.ensureIndex(&#123;<span class="attr">name</span>:<span class="number">1</span>&#125;, &#123;<span class="attr">unique</span>:<span class="literal">true</span>&#125;)</span><br></pre></td></tr></table></figure><h3 id="4-5-强制使用索引-hint"><a href="#4-5-强制使用索引-hint" class="headerlink" title="4.5 强制使用索引 (hint)"></a>4.5 强制使用索引 (hint)</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">db.test.ensureIndex(&#123;<span class="attr">name</span>:<span class="number">1</span>, <span class="attr">age</span>:<span class="number">1</span>&#125;)</span><br><span class="line">db.test.find(&#123;<span class="attr">age</span>: &#123;<span class="attr">$gt</span>:<span class="number">25</span>&#125;&#125;).hint(&#123;<span class="attr">name</span>:<span class="number">1</span>, <span class="attr">age</span>:<span class="number">1</span>&#125;).explain()</span><br></pre></td></tr></table></figure><h3 id="4-6-删除索引"><a href="#4-6-删除索引" class="headerlink" title="4.6 删除索引"></a>4.6 删除索引</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">db.test.dropIndex(&#123;<span class="attr">name</span>:<span class="number">1</span>&#125;)</span><br><span class="line">db.test.dropIndexes()</span><br></pre></td></tr></table></figure><h2 id="5-存储过程"><a href="#5-存储过程" class="headerlink" title="5. 存储过程"></a>5. 存储过程</h2><h3 id="5-1-定义函数"><a href="#5-1-定义函数" class="headerlink" title="5.1 定义函数"></a>5.1 定义函数</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">addNumbers</span>(<span class="params">x, y</span>) </span>&#123;<span class="keyword">return</span> x+y;&#125;</span><br></pre></td></tr></table></figure><h3 id="5-2-放入js表中"><a href="#5-2-放入js表中" class="headerlink" title="5.2 放入js表中"></a>5.2 放入js表中</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">db.system.js.save(&#123;<span class="attr">_id</span>:<span class="string">&#x27;addNumbers&#x27;</span>, <span class="attr">value</span>:addNumbers&#125;)</span><br><span class="line">db.system.js.save(&#123;<span class="attr">_id</span>:<span class="string">&#x27;addNumbers&#x27;</span>, <span class="attr">value</span>:<span class="function"><span class="keyword">function</span>(<span class="params">x, y</span>) </span>&#123;<span class="keyword">return</span> x+y;&#125;&#125;)</span><br></pre></td></tr></table></figure><h3 id="5-3-执行存储过程"><a href="#5-3-执行存储过程" class="headerlink" title="5.3 执行存储过程"></a>5.3 执行存储过程</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.eval(<span class="string">&#x27;addNumbers(1,2)&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="6-工具和命令"><a href="#6-工具和命令" class="headerlink" title="6. 工具和命令"></a>6. 工具和命令</h2><h3 id="6-1-常用命令"><a href="#6-1-常用命令" class="headerlink" title="6.1 常用命令"></a>6.1 常用命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">bsondumpbson格式文件转换为json</span><br><span class="line">mongo客户端, js解释器</span><br><span class="line">mongod服务器，每个实例启动一个进程</span><br><span class="line">mongodump/mongorestore</span><br><span class="line">mongoexport/mongoimport</span><br><span class="line">mongofileGridFS管理器，实现二进制文件存取</span><br><span class="line">mongos分片路由，使用sharding功能时，应用程序连接mongos，而不是mongod</span><br><span class="line">mongosnifftcpdump，监控mongodb相关包请求，并已指定可读形式输出</span><br><span class="line">mongostat实时监控工具</span><br></pre></td></tr></table></figure><h3 id="6-2-数据导出"><a href="#6-2-数据导出" class="headerlink" title="6.2 数据导出"></a>6.2 数据导出</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mongoexport</span><br><span class="line">-d, --db</span><br><span class="line">-c, --collection</span><br><span class="line">-o, --out</span><br><span class="line">-f, --fields</span><br><span class="line">--host/--port</span><br><span class="line">-csv, --type=csv</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mongoexport -d mydb -c <span class="built_in">test</span> -o test.json</span><br><span class="line">mongoexport -d mydb -c <span class="built_in">test</span> -f name,addr --<span class="built_in">type</span>=csv -o test.csv</span><br></pre></td></tr></table></figure><h3 id="6-3-数据导入"><a href="#6-3-数据导入" class="headerlink" title="6.3 数据导入"></a>6.3 数据导入</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mongoimport</span><br><span class="line">-d, --db</span><br><span class="line">-c, --collection</span><br><span class="line">-f, --fields</span><br><span class="line">--host/--port</span><br><span class="line">-csv, --type=csv</span><br><span class="line">--drop=&gt; drop collecion first if exists</span><br><span class="line">--stopOnError</span><br><span class="line">--file</span><br><span class="line">--headerline# 忽略第一行</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongoimport -d mydb -c <span class="built_in">test</span> --headerline --<span class="built_in">type</span>=csv --drop --file test.csv</span><br></pre></td></tr></table></figure><h3 id="6-4-数据库备份恢复"><a href="#6-4-数据库备份恢复" class="headerlink" title="6.4 数据库备份恢复"></a>6.4 数据库备份恢复</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">1) mongodump</span><br><span class="line">-d, --db</span><br><span class="line">-c, --collection</span><br><span class="line">-o, --out</span><br><span class="line">-q, --query</span><br><span class="line"></span><br><span class="line">mongodump -d mydb# 生成dump目录，该目录下保存数据文件</span><br><span class="line"></span><br><span class="line">2) mongorestore</span><br><span class="line">-d, --db</span><br><span class="line">-c, --collection</span><br><span class="line">--objcheck</span><br><span class="line">--filter</span><br><span class="line">--drop</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> NoSQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mongodb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RabbitMQ</title>
      <link href="/2019/10/14/RabbitMQ/"/>
      <url>/2019/10/14/RabbitMQ/</url>
      
        <content type="html"><![CDATA[<h1 id="1-简介"><a href="#1-简介" class="headerlink" title="1. 简介"></a>1. 简介</h1><p>面向消息的中间件，用于组件之间的解藕，主要体现在消息的发送者和消费者之间无强依赖关系</p><p><strong>消息中间件</strong>：在消息传输过程中保存消息的容器。其中作用：</p><ul><li>解藕</li><li>削峰</li><li>异步处理</li><li>缓存存储</li><li>消息通知</li><li>提供系统的拓展性</li></ul><p><strong>消息中间传递模型</strong>：</p><ul><li><p>点对点 (PTP)</p></li><li><p>发布订阅 (Pub/Sub)</p></li></ul><p><strong>AMQP</strong>: Advanced Message Queue Protocol</p><span id="more"></span><h1 id="2-安装"><a href="#2-安装" class="headerlink" title="2. 安装"></a>2. 安装</h1><p>RabbitMQ 3.7.19:   Upgrading to Erlang 21.x or Later Versions</p><h2 id="2-1-Linux"><a href="#2-1-Linux" class="headerlink" title="2.1 Linux"></a>2.1 Linux</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">yum repolist </span><br><span class="line">yum clean all</span><br><span class="line">yum makecache </span><br><span class="line">yum list erlang</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /etc/yum.repos.d/</span><br><span class="line"></span><br><span class="line"><span class="comment"># erlang</span></span><br><span class="line">curl -s https://packagecloud.io/install/repositories/rabbitmq/erlang/script.rpm.sh | sudo bash</span><br><span class="line"></span><br><span class="line">yum install  erlang</span><br><span class="line"></span><br><span class="line"><span class="comment"># rabbitmq</span></span><br><span class="line">curl -s https://packagecloud.io/install/repositories/rabbitmq/rabbitmq-server/script.rpm.sh | sudo bash</span><br><span class="line"></span><br><span class="line">yum install rabbitmq-server-3.7.19-1.el7</span><br></pre></td></tr></table></figure><h2 id="2-2-配置文件"><a href="#2-2-配置文件" class="headerlink" title="2.2 配置文件"></a>2.2 配置文件</h2><p>1) <code>/etc/rabbitmq/rabbitmq-env.conf</code></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">RABBITMQ_NODE_IP_ADDRESS: 127.0.0.1</span><br><span class="line">RABBITMQ_NODE_PORT: 5672</span><br><span class="line">RABBITMQ_NODE_CONFIG_FILE: *.config</span><br><span class="line">RABBITMQ_NODE_LOG_BASE: </span><br></pre></td></tr></table></figure><p>2) <code>/etc/rabbitmq/rabbitmq.config</code></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tcp_listeners             5672</span><br><span class="line">disk_free_limit</span><br><span class="line">vm_memory_high_watermark  0.4</span><br></pre></td></tr></table></figure><h2 id="2-3-启动"><a href="#2-3-启动" class="headerlink" title="2.3 启动"></a>2.3 启动</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> rabbitmq-server</span><br><span class="line"></span><br><span class="line">systemctl start rabbitmq-server</span><br></pre></td></tr></table></figure><h2 id="2-4-Mac"><a href="#2-4-Mac" class="headerlink" title="2.4 Mac"></a>2.4 Mac</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">brew install rabbitmq</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置环境变量</span></span><br><span class="line"><span class="built_in">export</span> RABBIT_HOME=/usr/<span class="built_in">local</span>/Cellar/rabbitmq/3.8.0</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$RABBIT_HOME</span>/sbin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动服务</span></span><br><span class="line">sudo rabbitmq-server</span><br><span class="line">sudo rabbitmq-server -detached  <span class="comment"># 后台运行</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止服务</span></span><br><span class="line">rabbitmqctl stop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置文件位置</span></span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/etc/rabbitmq</span><br></pre></td></tr></table></figure><h2 id="2-5-Docker"><a href="#2-5-Docker" class="headerlink" title="2.5 Docker"></a>2.5 Docker</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /data/rabbitmq</span><br><span class="line"></span><br><span class="line">docker run -d --hostname rabbit-server --name rabbit-sever -p 5672:5672 -p 15672:15672 -p 25672:25672 -v /data/rabbitmq:/var/lib/rabbitmq rabbitmq:management</span><br><span class="line"></span><br><span class="line">5672: API</span><br><span class="line">15672: GUI </span><br><span class="line">25672: 集群通信</span><br></pre></td></tr></table></figure><h1 id="3-控制命令"><a href="#3-控制命令" class="headerlink" title="3. 控制命令"></a>3. 控制命令</h1><h2 id="3-1-插件命令"><a href="#3-1-插件命令" class="headerlink" title="3.1 插件命令"></a>3.1 插件命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 插件列表</span></span><br><span class="line">rabbitmq-plugins list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启管理工具 （支持http://localhost:15672/）</span></span><br><span class="line">rabbitmq-plugins <span class="built_in">enable</span> rabbitmq_management</span><br></pre></td></tr></table></figure><h2 id="3-2-操作命令"><a href="#3-2-操作命令" class="headerlink" title="3.2 操作命令"></a>3.2 操作命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 虚拟主机</span></span><br><span class="line">rabbitmqctl add_vhost ut_vhost</span><br><span class="line">rabbitmqctl list_vhosts</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新增账号</span></span><br><span class="line">rabbitmqctl add_user utime welovetime</span><br><span class="line">rabbitmqctl list_users</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改密码</span></span><br><span class="line">rabbitmqctl change_password utime utime@celery123</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置tag</span></span><br><span class="line">sudo rabbitmqctl set_user_tags utime administrator</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置权限</span></span><br><span class="line">rabbitmqctl set_permissions -p ut_vhost utime <span class="string">&quot;.*&quot;</span> <span class="string">&quot;.*&quot;</span> <span class="string">&quot;.*&quot;</span></span><br><span class="line">rabbitmqctl list_permissions</span><br><span class="line"></span><br><span class="line"><span class="comment"># 队列状态</span></span><br><span class="line">rabbitmqctl list_queues </span><br><span class="line">rabbitmqctl list_queues name messages messages_ready messages_unacknowledged </span><br><span class="line">rabbitmqctl list_queues name consumers</span><br><span class="line">rabbitmqctl list_queues name memory</span><br></pre></td></tr></table></figure><h1 id="4-相关术语"><a href="#4-相关术语" class="headerlink" title="4. 相关术语"></a>4. 相关术语</h1><ul><li><p>Server(broker): 接受客户端连接，实现AMQP消息队列和路由功能的进程</p></li><li><p>VirtualHost：虚拟消息服务器，每个 VirtualHost 相当于一个相对独立的 RabbitMQ 服务器，每个 VirtualHost 之间是相互隔离的。</p></li><li><p>Connections：被监听的链接</p></li><li><p>Exchange：消息交换机，决定消息按什么规则，路由到哪个队列</p></li><li><p>Queue：队列，用于存储生产者的消息；接收到交换机发来的消息，未被消费暂存队列中</p></li><li><p>Binding：绑定，把exchange和queue按照路由规则绑定起来</p></li><li><p>Routing Key：路由关键字，exchange根据这个关键字来投递消息</p></li><li><p>Channel：消息通道，客户端的每个连接建立多个channel</p></li><li><p>Producer/Publisher: 消息生产者，用于投递消息的程序</p></li><li><p>Consumer：消息消费者，用于接收消息的程序</p></li><li><p>ConnectionFactory：连接管理器，应用程序与 Rabbit 之间建立连接的管理器，程序代码中使用；</p></li></ul><h2 id="4-1-Exchange"><a href="#4-1-Exchange" class="headerlink" title="4.1 Exchange"></a>4.1 Exchange</h2><ul><li>Fanout: 类似广播，转发到所有绑定交换机的Queue上</li><li>Direct：类似单播，RoutingKey和BindingKey完全匹配</li><li>Topic：类似组播，转发到符合通配符的Queue上</li><li>Headers：请求头与消息头匹配，才能接收消息</li></ul><p>Fanout工作模式：</p><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/rabbitmq/Exchange_Fanout.PNG" alt="fanout"></p><p>Direct工作模式：</p><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/rabbitmq/Exchange_Direct.PNG" alt="direct"></p><p>Topic工作模式：</p><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/rabbitmq/Exchange_Topic.PNG" alt="topic"></p><p><strong>核心概念</strong>：</p><ul><li></li><li></li><li>Exchange：交互机，用于接受、分配消息；生成者产生的消息，送入交互机中，根据交换机规则绑定 key， 通过交换机把消息发到对应得 key 上。<ul><li>Direct Exchange：直接交互式路由键。需要将一个队列绑定到交换机上，要求该消息一一个特定的路由<strong>完全匹配</strong>。例如一个队列绑定到该交换机上要求路由键为”dog”，只有被标记为”dog”的消息能够被转发。</li><li>Fanout Exchange: 广播式路由键。一个发送到交换机的消息都会被转发到与该交换机绑定的所有队列上。</li><li>Topic Exchange：主题式交换器。通过消息的路由关键字和绑定的关键字的<strong>模糊匹配</strong>，将消息路由到被绑定的队列中。支持通配符：<code>*</code>匹配一个词组，<code>#</code>零个或多个词组。<code>*.stock.#</code>匹配路由关键字<code>usd.stock</code>和<code>eur.stock.db</code>，但不匹配<code>stock.nasdaq</code></li></ul></li><li></li><li></li><li></li><li></li></ul><h1 id="5-工作模式"><a href="#5-工作模式" class="headerlink" title="5. 工作模式"></a>5. 工作模式</h1><h2 id="5-1-Simple"><a href="#5-1-Simple" class="headerlink" title="5.1 Simple"></a>5.1 Simple</h2><p>生产者 ——&gt; 队列 ——&gt; 消费者</p><p>最简单常用的模式</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewRabbitMQ</span><span class="params">(queueName, exchange, key <span class="keyword">string</span>)</span> *<span class="title">RabbitMQ</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> &amp;RabbitMQ&#123;</span><br><span class="line">QueueName: queueName,</span><br><span class="line">Exchange:  exchange,</span><br><span class="line">Key:       key,</span><br><span class="line">Mqurl:     MQURL,</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置queueName</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewRabbitMQPubSub</span><span class="params">(queueName <span class="keyword">string</span>)</span> *<span class="title">RabbitMQ</span></span> &#123;</span><br><span class="line">rabbitmq := NewRabbitMQ(queueName, <span class="string">&quot;&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> err error</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建连接</span></span><br><span class="line">rabbitmq.conn, err = amqp.Dial(rabbitmq.Mqurl)</span><br><span class="line">rabbitmq.failOnErr(err, <span class="string">&quot;创建连接失败&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建channel</span></span><br><span class="line">rabbitmq.channel, err = rabbitmq.conn.Channel()</span><br><span class="line">rabbitmq.failOnErr(err, <span class="string">&quot;获取channel失败&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> rabbitmq</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-2-Work"><a href="#5-2-Work" class="headerlink" title="5.2 Work"></a>5.2 Work</h2><p>生产者  ——&gt; 队列 ——&gt;  多个消费者，争抢</p><p>一个消息只能被一个消费者获取。与Simple模式的区别，只在于开启了多个消费者端，负载均衡。</p><h2 id="5-3-Publish-Subscribe"><a href="#5-3-Publish-Subscribe" class="headerlink" title="5.3 Publish / Subscribe"></a>5.3 Publish / Subscribe</h2><p>消息被路由投递给多个队列，一个消息被多个消费者获取</p><p>生产者   ——&gt;  交换机 ——&gt; 队列 ——&gt;  消费者</p><p>​                                |</p><p>​                                  — ——&gt; 队列 ——&gt;  消费者</p><p>邮件群发，群聊天，广播 (广告)</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewRabbitMQ</span><span class="params">(queueName, exchange, key <span class="keyword">string</span>)</span> *<span class="title">RabbitMQ</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> &amp;RabbitMQ&#123;</span><br><span class="line">QueueName: queueName,</span><br><span class="line">Exchange:  exchange,</span><br><span class="line">Key:       key,</span><br><span class="line">Mqurl:     MQURL,</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置exchangeName</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewRabbitMQPubSub</span><span class="params">(exchangeName <span class="keyword">string</span>)</span> *<span class="title">RabbitMQ</span></span> &#123;</span><br><span class="line">rabbitmq := NewRabbitMQ(<span class="string">&quot;&quot;</span>, exchangeName, <span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> err error</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建连接</span></span><br><span class="line">rabbitmq.conn, err = amqp.Dial(rabbitmq.Mqurl)</span><br><span class="line">rabbitmq.failOnErr(err, <span class="string">&quot;创建连接失败&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建channel</span></span><br><span class="line">rabbitmq.channel, err = rabbitmq.conn.Channel()</span><br><span class="line">rabbitmq.failOnErr(err, <span class="string">&quot;获取channel失败&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> rabbitmq</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-4-Routing"><a href="#5-4-Routing" class="headerlink" title="5.4 Routing"></a>5.4 Routing</h2><p>从生产端就可以指定队列消息的消费者是谁, 一个消息被多个消费者获取，并且消息的目标队列可被生产者指定</p><h2 id="5-5-Topic"><a href="#5-5-Topic" class="headerlink" title="5.5 Topic"></a>5.5 Topic</h2><p>交换机根据 key 的规则模糊匹配到对应的队列，由队列的监听消费者接收消息消费</p><h1 id="6-Golang"><a href="#6-Golang" class="headerlink" title="6. Golang"></a>6. Golang</h1><h2 id="6-1-支撑包"><a href="#6-1-支撑包" class="headerlink" title="6.1 支撑包"></a>6.1 支撑包</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go get github.com/streadway/amqp</span><br></pre></td></tr></table></figure><h2 id="6-2-基础队列"><a href="#6-2-基础队列" class="headerlink" title="6.2 基础队列"></a>6.2 基础队列</h2><h3 id="6-2-1-连接-RabbitMQ"><a href="#6-2-1-连接-RabbitMQ" class="headerlink" title="6.2.1 连接 RabbitMQ"></a>6.2.1 连接 RabbitMQ</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetRabbitMQConn</span><span class="params">()</span> <span class="params">(*amqp.Connection, error)</span></span> &#123;</span><br><span class="line">username := <span class="string">&quot;guest&quot;</span></span><br><span class="line">password := <span class="string">&quot;guest&quot;</span></span><br><span class="line">host := <span class="string">&quot;127.0.0.1&quot;</span></span><br><span class="line">port := <span class="number">5672</span></span><br><span class="line"></span><br><span class="line">url := fmt.Sprintf(<span class="string">&quot;amqp://%s:%s@%s:%d&quot;</span>, username, password, host, port)</span><br><span class="line"><span class="keyword">return</span> amqp.Dial(url)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-2-2-生产者"><a href="#6-2-2-生产者" class="headerlink" title="6.2.2 生产者"></a>6.2.2 生产者</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> demo <span class="keyword">struct</span> &#123;</span><br><span class="line">Name <span class="keyword">string</span> <span class="string">`json:&quot;name&quot;`</span></span><br><span class="line">Addr <span class="keyword">string</span> <span class="string">`json:&quot;addr&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">conn, err := GetRabbitMQConn()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;Failed to connect to RabbitMQ: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> conn.Close()</span><br><span class="line"></span><br><span class="line">ch, err := conn.Channel()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;Failed to open a channel: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> ch.Close()</span><br><span class="line"></span><br><span class="line">data := demo&#123;</span><br><span class="line">Name: <span class="string">&quot;Jack&quot;</span>,</span><br><span class="line">Addr: <span class="string">&quot;Montreal&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line">bs, _ := json.Marshal(data)</span><br><span class="line"></span><br><span class="line">err = ch.Publish(</span><br><span class="line"><span class="string">&quot;&quot;</span>,             <span class="comment">// exchange</span></span><br><span class="line"><span class="string">&quot;simple:queue&quot;</span>, <span class="comment">// key, RoutingKey, same as Queue.Name when the exchange mode is direct.</span></span><br><span class="line"><span class="literal">false</span>,          <span class="comment">// mandatory</span></span><br><span class="line"><span class="literal">false</span>,          <span class="comment">// immediate</span></span><br><span class="line">amqp.Publishing&#123;</span><br><span class="line">ContentType: <span class="string">&quot;text/plain&quot;</span>,</span><br><span class="line">Body:        bs,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;Failed to publish a message: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">log.Printf(<span class="string">&quot;[*] sent %s&quot;</span>, bs)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-2-3-消费者"><a href="#6-2-3-消费者" class="headerlink" title="6.2.3 消费者"></a>6.2.3 消费者</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">conn, err := GetRabbitMQConn()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;Failed to connect to RabbitMQ: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> conn.Close()</span><br><span class="line"></span><br><span class="line">ch, err := conn.Channel()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;Failed to open a channel: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> ch.Close()</span><br><span class="line"></span><br><span class="line">q, err := ch.QueueDeclare(</span><br><span class="line"><span class="string">&quot;simple:queue&quot;</span>, <span class="comment">// name</span></span><br><span class="line"><span class="literal">false</span>,          <span class="comment">// durable</span></span><br><span class="line"><span class="literal">false</span>,          <span class="comment">// autoDelete</span></span><br><span class="line"><span class="literal">false</span>,          <span class="comment">// exclusive</span></span><br><span class="line"><span class="literal">false</span>,          <span class="comment">// noWait</span></span><br><span class="line"><span class="literal">nil</span>,            <span class="comment">// args</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;Failed to declare a queue: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义一个消费者</span></span><br><span class="line">msgs, err := ch.Consume(</span><br><span class="line">q.Name, <span class="comment">// queue (string)</span></span><br><span class="line"><span class="string">&quot;&quot;</span>,     <span class="comment">// consumer</span></span><br><span class="line"><span class="literal">true</span>,   <span class="comment">// autoAck</span></span><br><span class="line"><span class="literal">false</span>,  <span class="comment">// exclusive</span></span><br><span class="line"><span class="literal">false</span>,  <span class="comment">// noLocal</span></span><br><span class="line"><span class="literal">false</span>,  <span class="comment">// noWait</span></span><br><span class="line"><span class="literal">nil</span>,    <span class="comment">// args</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;Failed to register a consume: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> msg := <span class="keyword">range</span> msgs &#123;</span><br><span class="line">log.Printf(<span class="string">&quot;Received a message: %s\n&quot;</span>, msg.Body)</span><br><span class="line">&#125;</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line">log.Println(<span class="string">&quot;[*] Waiting for messages. To exit press CTRL+C&quot;</span>)</span><br><span class="line"><span class="keyword">select</span> &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-3-任务队列"><a href="#6-3-任务队列" class="headerlink" title="6.3 任务队列"></a>6.3 任务队列</h2><p>为了避免等待执行一些耗时的任务, 而是将需要执行的任务封装为消息发送给工作队列, 后台运行的工作进程将任务消息取出来并执行相关任务。多个后台工作进程同时间进行, 那么任务在他们之间共享.</p><h3 id="6-3-1-发布任务-task-py"><a href="#6-3-1-发布任务-task-py" class="headerlink" title="6.3.1 发布任务 (task.py)"></a>6.3.1 发布任务 (task.py)</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">bodyForm</span><span class="params">(args []<span class="keyword">string</span>)</span> <span class="title">string</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> s <span class="keyword">string</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">len</span>(args) &lt; <span class="number">2</span>) || os.Args[<span class="number">1</span>] == <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">s = <span class="string">&quot;no task&quot;</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">s = strings.Join(args[<span class="number">1</span>:], <span class="string">&quot; &quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> s</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">conn, err := GetRabbitMQConn()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;Failed to connect to RabbitMQ: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> conn.Close()</span><br><span class="line"></span><br><span class="line">ch, err := conn.Channel()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;Failed to open a channel: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> ch.Close()</span><br><span class="line"></span><br><span class="line">body := bodyForm(os.Args)</span><br><span class="line"></span><br><span class="line">err = ch.Publish(</span><br><span class="line"><span class="string">&quot;&quot;</span>,</span><br><span class="line"><span class="string">&quot;task:queue&quot;</span>,</span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line">amqp.Publishing&#123;</span><br><span class="line">ContentType:  <span class="string">&quot;text/plain&quot;</span>,</span><br><span class="line">DeliveryMode: amqp.Persistent,</span><br><span class="line">Body:         []<span class="keyword">byte</span>(body),</span><br><span class="line">&#125;,</span><br><span class="line">)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;Failed to publish a message&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">log.Printf(<span class="string">&quot;sent %s\n&quot;</span>, body)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-3-2-执行任务-worker-py"><a href="#6-3-2-执行任务-worker-py" class="headerlink" title="6.3.2 执行任务 (worker.py)"></a>6.3.2 执行任务 (worker.py)</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">conn, err := GetRabbitMQConn()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;Failed to connect to RabbitMQ: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> conn.Close()</span><br><span class="line"></span><br><span class="line">ch, err := conn.Channel()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;Failed to open a channel: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> ch.Close()</span><br><span class="line"></span><br><span class="line">q, err := ch.QueueDeclare(</span><br><span class="line"><span class="string">&quot;task:queue&quot;</span>,</span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line"><span class="literal">nil</span>,</span><br><span class="line">)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;Failed to declare a queue: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 计数器</span></span><br><span class="line">err = ch.Qos(</span><br><span class="line"><span class="number">1</span>,     <span class="comment">// prefetch count</span></span><br><span class="line"><span class="number">0</span>,     <span class="comment">// prefetch size</span></span><br><span class="line"><span class="literal">false</span>, <span class="comment">// global</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;Failed to set Qos: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">msgs, err := ch.Consume(</span><br><span class="line">q.Name,</span><br><span class="line"><span class="string">&quot;&quot;</span>,</span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line"><span class="literal">nil</span>,</span><br><span class="line">)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;Failed to register a consumer: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">done := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">bool</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> msg := <span class="keyword">range</span> msgs &#123;</span><br><span class="line">log.Printf(<span class="string">&quot;Received a message: %s\n&quot;</span>, msg.Body)</span><br><span class="line">msg.Ack(<span class="literal">false</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line">log.Printf(<span class="string">&quot; [*] Waiting for messages. To exit press CTRL+C&quot;</span>)</span><br><span class="line">&lt;-done</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> RabbitMQ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> rabbitmq </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo</title>
      <link href="/2019/09/24/Hexo/"/>
      <url>/2019/09/24/Hexo/</url>
      
        <content type="html"><![CDATA[<h2 id="1-安装hexo"><a href="#1-安装hexo" class="headerlink" title="1. 安装hexo"></a>1. 安装hexo</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g </span><br><span class="line"></span><br><span class="line">hexo init blog</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">npm install</span><br><span class="line"></span><br><span class="line">hexo serv</span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="2-安装主题"><a href="#2-安装主题" class="headerlink" title="2. 安装主题"></a>2. 安装主题</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/xaoxuu/hexo-theme-material-x themes/material-x</span><br><span class="line"></span><br><span class="line">npm i -S hexo-generator-search hexo-generator-json-content hexo-renderer-less</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx安装配置</title>
      <link href="/2019/09/19/Nginx%E5%AE%89%E8%A3%85/"/>
      <url>/2019/09/19/Nginx%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h2 id="1-添加nginx用户"><a href="#1-添加nginx用户" class="headerlink" title="1. 添加nginx用户"></a>1. 添加nginx用户</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">groupadd nginx  </span><br><span class="line"></span><br><span class="line">useradd -g nginx -s /sbin/nologin -M nginx </span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="2-安装"><a href="#2-安装" class="headerlink" title="2. 安装"></a>2. 安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">wget http://openresty.org/download/openresty-1.15.8.2.tar.gz</span><br><span class="line"></span><br><span class="line">tar zxvf openresty-1.15.8.2.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> openresty-1.15.8.2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解决openssl支撑包问题, 删除.openssl</span></span><br><span class="line">vi bundle/nginx-1.15.8/auto/lib/openssl/conf</span><br><span class="line"></span><br><span class="line">CORE_INCS=<span class="string">&quot;<span class="variable">$CORE_INCS</span> <span class="variable">$OPENSSL</span>/.openssl/include&quot;</span></span><br><span class="line">CORE_DEPS=<span class="string">&quot;<span class="variable">$CORE_DEPS</span> <span class="variable">$OPENSSL</span>/.openssl/include/openssl/ssl.h&quot;</span></span><br><span class="line">CORE_LIBS=<span class="string">&quot;<span class="variable">$CORE_LIBS</span> <span class="variable">$OPENSSL</span>/.openssl/lib/libssl.a&quot;</span></span><br><span class="line">CORE_LIBS=<span class="string">&quot;<span class="variable">$CORE_LIBS</span> <span class="variable">$OPENSSL</span>/.openssl/lib/libcrypto.a&quot;</span></span><br><span class="line"></span><br><span class="line">./configure -j2 --prefix=/usr/<span class="built_in">local</span>/openresty --with-openssl=/usr/<span class="built_in">local</span>/openssl</span><br><span class="line"></span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"></span><br><span class="line">vi ~/.bash_profile</span><br><span class="line"><span class="built_in">export</span> PATH=/usr/<span class="built_in">local</span>/openresty/nginx/sbin:/usr/<span class="built_in">local</span>/openresty/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><h2 id="3-开机启动"><a href="#3-开机启动" class="headerlink" title="3. 开机启动"></a>3. 开机启动</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/lib/systemd/system/nginx.service</span><br><span class="line"></span><br><span class="line">Description=nginx - high performance web server  </span><br><span class="line">Documentation=http://nginx.org/en/docs/  </span><br><span class="line">After=network.target remote-fs.target nss-lookup.target  </span><br><span class="line">  </span><br><span class="line">[Service]  </span><br><span class="line">Type=forking  </span><br><span class="line">PIDFile=/usr/<span class="built_in">local</span>/openresty/nginx/logs/nginx.pid  </span><br><span class="line">ExecStartPre=/usr/<span class="built_in">local</span>/openresty/nginx/sbin/nginx -t -c /usr/<span class="built_in">local</span>/openresty/nginx/conf/nginx.conf  </span><br><span class="line">ExecStart=/usr/<span class="built_in">local</span>/openresty/nginx/sbin/nginx -c /usr/<span class="built_in">local</span>/openresty/nginx/conf/nginx.conf  </span><br><span class="line">ExecReload=/bin/<span class="built_in">kill</span> -s HUP <span class="variable">$MAINPID</span>  </span><br><span class="line">ExecStop=/bin/<span class="built_in">kill</span> -s QUIT <span class="variable">$MAINPID</span>  </span><br><span class="line">PrivateTmp=<span class="literal">true</span>  </span><br><span class="line">  </span><br><span class="line">[Install]  </span><br><span class="line">WantedBy=multi-user.target </span><br></pre></td></tr></table></figure><h2 id="4-管理ngnix"><a href="#4-管理ngnix" class="headerlink" title="4. 管理ngnix"></a>4. 管理ngnix</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> nginx.service</span><br><span class="line"></span><br><span class="line">systemctl start nginx</span><br></pre></td></tr></table></figure><h2 id="5-配置"><a href="#5-配置" class="headerlink" title="5. 配置"></a>5. 配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /usr/<span class="built_in">local</span>/openresty/nginx/conf.d</span><br><span class="line"></span><br><span class="line">vi /usr/<span class="built_in">local</span>/openresty/nginx/conf/nginx.conf</span><br><span class="line">http &#123;</span><br><span class="line">    <span class="comment"># 去除注释</span></span><br><span class="line">    log_format  main  <span class="string">&#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span></span><br><span class="line">                      <span class="string">&#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span></span><br><span class="line">                      <span class="string">&#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot; &#x27;</span></span><br><span class="line">                      <span class="string">&#x27;$request_time $upstream_response_time&#x27;</span>;</span><br><span class="line">    </span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 节点末尾添加</span></span><br><span class="line">    include /usr/<span class="built_in">local</span>/openresty/nginx/conf.d/*.conf;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vi /usr/<span class="built_in">local</span>/openresty/nginx/conf.d/test.conf</span><br><span class="line">server &#123;</span><br><span class="line">    listen  80;</span><br><span class="line">    server_name 192.168.1.21;</span><br><span class="line">    access_log /var/<span class="built_in">log</span>/nginx/embo.access.log main;</span><br><span class="line">    error_log /var/<span class="built_in">log</span>/nginx/embo.error.log;</span><br><span class="line">    error_page 404 = /404;</span><br><span class="line">    error_page 403 = /403;</span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_set_header Host <span class="variable">$http_host</span>;</span><br><span class="line">        proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">        proxy_set_header X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">        <span class="comment">#include proxy_params;</span></span><br><span class="line">        proxy_pass http://127.0.0.1:20002/;</span><br><span class="line">        proxy_redirect off;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    location = / &#123;</span><br><span class="line">        root /data/www/lp-web/;</span><br><span class="line">        index index.html;</span><br><span class="line">    &#125;</span><br><span class="line">    location ~* \.(html|ico)$ &#123;  </span><br><span class="line">        root /data/www/lp-web/;  </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-nginx相关命令"><a href="#6-nginx相关命令" class="headerlink" title="6. nginx相关命令"></a>6. nginx相关命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">nginx</span><br><span class="line"></span><br><span class="line">nginx -t</span><br><span class="line"></span><br><span class="line">nginx -s stop</span><br><span class="line"></span><br><span class="line">nginx -s reload</span><br></pre></td></tr></table></figure><h2 id="7-安装问题"><a href="#7-安装问题" class="headerlink" title="7. 安装问题"></a>7. 安装问题</h2><h3 id="7-1-PCRE未安装"><a href="#7-1-PCRE未安装" class="headerlink" title="7.1 PCRE未安装"></a>7.1 PCRE未安装</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">checking for SA_RESTART ... found</span><br><span class="line"> + ngx_stream_lua_module was configured</span><br><span class="line">checking for PCRE library ... not found</span><br><span class="line">checking for PCRE library in /usr/local/ ... not found</span><br><span class="line">checking for PCRE library in /usr/include/pcre/ ... not found</span><br><span class="line">checking for PCRE library in /usr/pkg/ ... not found</span><br><span class="line">checking for PCRE library in /opt/local/ ... not found</span><br><span class="line"></span><br><span class="line">./configure: error: the HTTP rewrite module requires the PCRE library.</span><br><span class="line">You can either disable the module by using --without-http_rewrite_module</span><br><span class="line">option, or install the PCRE library into the system, or build the PCRE library</span><br><span class="line">statically from the source with nginx by using --with-pcre=&lt;path&gt; option.</span><br><span class="line"></span><br><span class="line">ERROR: failed to run command: sh ./configure --prefix=/usr/local/openresty/nginx \...</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install pcre-devel</span><br></pre></td></tr></table></figure><h2 id="8-systemctl启动服务，日志异常"><a href="#8-systemctl启动服务，日志异常" class="headerlink" title="8. systemctl启动服务，日志异常"></a>8. systemctl启动服务，日志异常</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Dec 09 10:19:11 ip-172-31-12-17.cn-northwest-1.compute.internal systemd[1]: Starting nginx.service...</span><br><span class="line">Dec 09 10:19:11 ip-172-31-12-17.cn-northwest-1.compute.internal nginx[26980]: nginx: the configuration file /usr/local/openresty/nginx/conf/nginx.conf syntax is ok</span><br><span class="line">Dec 09 10:19:11 ip-172-31-12-17.cn-northwest-1.compute.internal nginx[26980]: nginx: configuration file /usr/local/openresty/nginx/conf/nginx.conf test is successful</span><br><span class="line">Dec 09 10:19:11 ip-172-31-12-17.cn-northwest-1.compute.internal systemd[1]: Failed to read PID from file /usr/local/openresty/nginx/logs/nginx.pid: Invalid argument</span><br><span class="line">Dec 09 10:19:11 ip-172-31-12-17.cn-northwest-1.compute.internal systemd[1]: Started nginx.service.</span><br></pre></td></tr></table></figure><p>原因：启动成功瞬间，暂未找到<code>nginx.pid</code>文件</p><p>解决：增加睡眠时间</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/lib/systemd/system/nginx.service</span><br><span class="line"></span><br><span class="line">Description=nginx - high performance web server  </span><br><span class="line">Documentation=http://nginx.org/en/docs/  </span><br><span class="line">After=network.target remote-fs.target nss-lookup.target  </span><br><span class="line">  </span><br><span class="line">[Service]  </span><br><span class="line">Type=forking  </span><br><span class="line">PIDFile=/usr/<span class="built_in">local</span>/openresty/nginx/logs/nginx.pid  </span><br><span class="line">ExecStartPre=/usr/<span class="built_in">local</span>/openresty/nginx/sbin/nginx -t -c /usr/<span class="built_in">local</span>/openresty/nginx/conf/nginx.conf  </span><br><span class="line">ExecStart=/usr/<span class="built_in">local</span>/openresty/nginx/sbin/nginx -c /usr/<span class="built_in">local</span>/openresty/nginx/conf/nginx.conf  </span><br><span class="line">ExecStartPost=/bin/sleep 0.1     <span class="comment"># 新增项</span></span><br><span class="line">ExecReload=/bin/<span class="built_in">kill</span> -s HUP <span class="variable">$MAINPID</span>  </span><br><span class="line">ExecStop=/bin/<span class="built_in">kill</span> -s QUIT <span class="variable">$MAINPID</span>  </span><br><span class="line">PrivateTmp=<span class="literal">true</span>  </span><br><span class="line">  </span><br><span class="line">[Install]  </span><br><span class="line">WantedBy=multi-user.target </span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line"></span><br><span class="line">systemctl restart nginx.service</span><br><span class="line"></span><br><span class="line">systemctl status nginx</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Supervisor</title>
      <link href="/2019/09/16/Supervisor/"/>
      <url>/2019/09/16/Supervisor/</url>
      
        <content type="html"><![CDATA[<h2 id="1-安装"><a href="#1-安装" class="headerlink" title="1. 安装"></a>1. 安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">su - root</span><br><span class="line">pip3 install supervisor</span><br><span class="line"></span><br><span class="line">/usr/<span class="built_in">local</span>/python37/bin/echo_supervisord_conf &gt; /etc/supervisord.conf</span><br><span class="line"></span><br><span class="line"><span class="comment">#supervisord -c /etc/supervisord.conf</span></span><br><span class="line"></span><br><span class="line">ln -s /usr/<span class="built_in">local</span>/python37/bin/supervisord /usr/bin/supervisord</span><br><span class="line"></span><br><span class="line">ln -s /usr/<span class="built_in">local</span>/python37/bin/supervisorctl /usr/bin/supervisorctl</span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="2-修改配置"><a href="#2-修改配置" class="headerlink" title="2. 修改配置"></a>2. 修改配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /etc/supervisord.conf.d</span><br><span class="line"></span><br><span class="line">vi /etc/supervisord.conf</span><br><span class="line"></span><br><span class="line">[unix_http_server]</span><br><span class="line">;file=/tmp/supervisor.sock   ; the path to the socket file</span><br><span class="line">file=/var/run/supervisor.sock   ;</span><br><span class="line"></span><br><span class="line">[supervisord]</span><br><span class="line">;logfile=/tmp/supervisord.log ; main <span class="built_in">log</span> file; default <span class="variable">$CWD</span>/supervisord.log</span><br><span class="line">logfile=/var/<span class="built_in">log</span>/supervisord.log ;</span><br><span class="line"></span><br><span class="line">;pidfile=/tmp/supervisord.pid ; supervisord pidfile; default supervisord.pid</span><br><span class="line">pidfile=/var/run/supervisord.pid ;</span><br><span class="line"></span><br><span class="line">[supervisorctl]</span><br><span class="line">;serverurl=unix:///tmp/supervisor.sock ; use a unix:// URL  <span class="keyword">for</span> a unix socket</span><br><span class="line">serverurl=unix:///var/run/supervisor.sock ;</span><br><span class="line"></span><br><span class="line">[include]</span><br><span class="line">files = /etc/supervisord.conf.d/*.conf</span><br></pre></td></tr></table></figure><h2 id="3-开机启动"><a href="#3-开机启动" class="headerlink" title="3. 开机启动"></a>3. 开机启动</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/lib/systemd/system/supervisord.service</span><br><span class="line"></span><br><span class="line">[Unit] </span><br><span class="line">Description=Supervisor daemon</span><br><span class="line"></span><br><span class="line">[Service] </span><br><span class="line">Type=forking </span><br><span class="line">ExecStart=/usr/bin/supervisord -c /etc/supervisord.conf </span><br><span class="line">ExecStop=/usr/bin/supervisorctl shutdown </span><br><span class="line">ExecReload=/usr/bin/supervisorctl reload </span><br><span class="line">KillMode=process </span><br><span class="line">Restart=on-failure </span><br><span class="line">RestartSec=42s</span><br><span class="line"></span><br><span class="line">[Install] </span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><h2 id="4-系统管理"><a href="#4-系统管理" class="headerlink" title="4. 系统管理"></a>4. 系统管理</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> supervisord</span><br><span class="line"></span><br><span class="line">systemctl start supervisord</span><br><span class="line"></span><br><span class="line">ps -ef | grep supervisor</span><br></pre></td></tr></table></figure><h2 id="5-新增配置"><a href="#5-新增配置" class="headerlink" title="5. 新增配置"></a>5. 新增配置</h2><h3 id="5-1-webhhok"><a href="#5-1-webhhok" class="headerlink" title="5.1 webhhok"></a>5.1 webhhok</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/supervisord.conf.d/webhook.conf </span><br><span class="line"></span><br><span class="line">[program:webhook]</span><br><span class="line">user=utime</span><br><span class="line">directory=/tmp/</span><br><span class="line">command=webhookit -c /etc/webhook/config.py -p 18340</span><br><span class="line">autostart=true</span><br><span class="line">autorestart=true</span><br><span class="line">startretries=10</span><br><span class="line">exitcodes=0</span><br><span class="line">stopsignal=KILL</span><br><span class="line">stopwaitsecs=10</span><br><span class="line">redirect_stderr=true</span><br><span class="line">stdout_logfile=/var/log/webhook-out.log</span><br><span class="line">stdout_logfile_maxbytes=100MB</span><br><span class="line">stdout_logfile_backups=5</span><br><span class="line">stderr_logfile=/var/log/webhook-error.log</span><br><span class="line">stderr_logfile_maxbytes=100MB</span><br><span class="line">stderr_logfile_backups=5</span><br></pre></td></tr></table></figure><h3 id="5-2-业务"><a href="#5-2-业务" class="headerlink" title="5.2 业务"></a>5.2 业务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/supervisord.conf.d/lp-service.conf</span><br><span class="line"></span><br><span class="line">[program:lp-service]</span><br><span class="line"><span class="built_in">command</span>=/home/utime/.venv/py3/bin/gunicorn -b 127.0.0.1:20002 --worker-class eventlet  -w 4 manage:app --access-logfile /tmp/lp-service-gunicorn.log</span><br><span class="line">autostart=<span class="literal">true</span></span><br><span class="line">autorestart=<span class="literal">true</span></span><br><span class="line">directory=/home/utime/lp-service/</span><br><span class="line">user=utime</span><br><span class="line">stdout_logfile=/var/<span class="built_in">log</span>/lp-service-stdout.log</span><br><span class="line">stdout_logfile_maxbytes=100MB</span><br><span class="line">stdout_logfile_backups=5</span><br><span class="line">stderr_logfile=/var/<span class="built_in">log</span>/lp-service-stderr.log</span><br><span class="line">stderr_logfile_maxbytes=100MB</span><br><span class="line">stderr_logfile_backups=5</span><br><span class="line">environment=LP_ENV=<span class="string">&quot;development&quot;</span></span><br></pre></td></tr></table></figure><h2 id="6-启动"><a href="#6-启动" class="headerlink" title="6. 启动"></a>6. 启动</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">supervisorctl update</span><br><span class="line"></span><br><span class="line">supervisorctl status</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CentOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> supervisor </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go gRPC Gateway</title>
      <link href="/2019/07/20/Go%20gRPC%20Gateway/"/>
      <url>/2019/07/20/Go%20gRPC%20Gateway/</url>
      
        <content type="html"><![CDATA[<h1 id="1-gRPC-回顾总结"><a href="#1-gRPC-回顾总结" class="headerlink" title="1. gRPC 回顾总结"></a>1. gRPC 回顾总结</h1><h2 id="1-1-gRPC"><a href="#1-1-gRPC" class="headerlink" title="1.1 gRPC"></a>1.1 gRPC</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go get -u google.golang.org/grpc</span><br></pre></td></tr></table></figure><ul><li>强大的 IDL，使用 Protocol Buffers 作为数据交换格式</li><li>跨语言、跨平台</li><li>支持HTTP2，双向传输、多路复用、认证等</li></ul><p>grpc下常用包：</p><ul><li>metadata: 提供方法对 grpc 元数据结构MD 进行获取和处理</li><li>credentials: 封装了客户端对服务端进行身份验证所需的所有状态，并做出各种断言</li><li>codes: grpc 标准错误码</li></ul><span id="more"></span><h2 id="1-2-Protoc-Plugin"><a href="#1-2-Protoc-Plugin" class="headerlink" title="1.2 Protoc Plugin"></a>1.2 Protoc Plugin</h2><p>编译插件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go get -u github.com/golang/protobuf/protoc-gen-go</span><br></pre></td></tr></table></figure><h2 id="1-3-Protocol-Buffers-v3"><a href="#1-3-Protocol-Buffers-v3" class="headerlink" title="1.3 Protocol Buffers v3"></a>1.3 Protocol Buffers v3</h2><p>Google 推出的一种数据描述语言，支持多语言、跨平台，二进制格式。</p><h2 id="1-4-protoc"><a href="#1-4-protoc" class="headerlink" title="1.4 protoc"></a>1.4 protoc</h2><p>Protocol Buffers 运用程序</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/google/protobuf/releases/download/v3.5.1/protobuf-all-3.5.1.zip</span><br><span class="line">unzip protobuf-all-3.5.1.zip</span><br><span class="line"><span class="built_in">cd</span> protobuf-3.5.1/</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>生成 golang 源文件：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">protoc --go_out=plugins=grpc,import_path=mypkg:. *.proto</span><br></pre></td></tr></table></figure><h1 id="2-gRPC-Gateway"><a href="#2-gRPC-Gateway" class="headerlink" title="2. gRPC-Gateway"></a>2. gRPC-Gateway</h1><p>grpc-gateway 是proto的一个插件，它读取gRPC服务定义，并生成一个反向代理服务器，将RESTful JSON API转换为gRPC.</p><h2 id="2-1-安装"><a href="#2-1-安装" class="headerlink" title="2.1 安装"></a>2.1 安装</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> get -u github.com/grpc-ecosystem/grpc-gateway/protoc-gen-grpc-gateway</span><br></pre></td></tr></table></figure><h2 id="2-2-proto文件"><a href="#2-2-proto文件" class="headerlink" title="2.2 proto文件"></a>2.2 proto文件</h2><h3 id="2-2-1-google-api"><a href="#2-2-1-google-api" class="headerlink" title="2.2.1 google.api"></a>2.2.1 google.api</h3><p>google 官方提供的 api 描述文件，主要针对 grpc-gateway 的 http 转换支持，定义了 Protocol Buffer 所扩展的 HTTP Option</p><p>1) <code>annotations.proto</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">// Copyright (c) 2015, Google Inc.</span><br><span class="line">//</span><br><span class="line">// Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span><br><span class="line">// you may not use this file except in compliance with the License.</span><br><span class="line">// You may obtain a copy of the License at</span><br><span class="line">//</span><br><span class="line">//     http://www.apache.org/licenses/LICENSE-2.0</span><br><span class="line">//</span><br><span class="line">// Unless required by applicable law or agreed to in writing, software</span><br><span class="line">// distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span><br><span class="line">// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span><br><span class="line">// See the License for the specific language governing permissions and</span><br><span class="line">// limitations under the License.</span><br><span class="line"></span><br><span class="line">syntax = &quot;proto3&quot;;</span><br><span class="line"></span><br><span class="line">package google.api;</span><br><span class="line"></span><br><span class="line">import &quot;google/api/http.proto&quot;;</span><br><span class="line">import &quot;google/protobuf/descriptor.proto&quot;;</span><br><span class="line"></span><br><span class="line">option java_multiple_files = true;</span><br><span class="line">option java_outer_classname = &quot;AnnotationsProto&quot;;</span><br><span class="line">option java_package = &quot;com.google.api&quot;;</span><br><span class="line"></span><br><span class="line">extend google.protobuf.MethodOptions &#123;</span><br><span class="line">  // See `HttpRule`.</span><br><span class="line">  HttpRule http = 72295728;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2) <code>http.proto</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br></pre></td><td class="code"><pre><span class="line">// Copyright 2016 Google Inc.</span><br><span class="line">//</span><br><span class="line">// Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span><br><span class="line">// you may not use this file except in compliance with the License.</span><br><span class="line">// You may obtain a copy of the License at</span><br><span class="line">//</span><br><span class="line">//     http://www.apache.org/licenses/LICENSE-2.0</span><br><span class="line">//</span><br><span class="line">// Unless required by applicable law or agreed to in writing, software</span><br><span class="line">// distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span><br><span class="line">// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span><br><span class="line">// See the License for the specific language governing permissions and</span><br><span class="line">// limitations under the License.</span><br><span class="line"></span><br><span class="line">syntax = &quot;proto3&quot;;</span><br><span class="line"></span><br><span class="line">package google.api;</span><br><span class="line"></span><br><span class="line">option cc_enable_arenas = true;</span><br><span class="line">option java_multiple_files = true;</span><br><span class="line">option java_outer_classname = &quot;HttpProto&quot;;</span><br><span class="line">option java_package = &quot;com.google.api&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// Defines the HTTP configuration for a service. It contains a list of</span><br><span class="line">// [HttpRule][google.api.HttpRule], each specifying the mapping of an RPC method</span><br><span class="line">// to one or more HTTP REST API methods.</span><br><span class="line">message Http &#123;</span><br><span class="line">  // A list of HTTP rules for configuring the HTTP REST API methods.</span><br><span class="line">  repeated HttpRule rules = 1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// `HttpRule` defines the mapping of an RPC method to one or more HTTP</span><br><span class="line">// REST APIs.  The mapping determines what portions of the request</span><br><span class="line">// message are populated from the path, query parameters, or body of</span><br><span class="line">// the HTTP request.  The mapping is typically specified as an</span><br><span class="line">// `google.api.http` annotation, see &quot;google/api/annotations.proto&quot;</span><br><span class="line">// for details.</span><br><span class="line">//</span><br><span class="line">// The mapping consists of a field specifying the path template and</span><br><span class="line">// method kind.  The path template can refer to fields in the request</span><br><span class="line">// message, as in the example below which describes a REST GET</span><br><span class="line">// operation on a resource collection of messages:</span><br><span class="line">//</span><br><span class="line">// ```proto</span><br><span class="line">// service Messaging &#123;</span><br><span class="line">//   rpc GetMessage(GetMessageRequest) returns (Message) &#123;</span><br><span class="line">//     option (google.api.http).get = &quot;/v1/messages/&#123;message_id&#125;/&#123;sub.subfield&#125;&quot;;</span><br><span class="line">//   &#125;</span><br><span class="line">// &#125;</span><br><span class="line">// message GetMessageRequest &#123;</span><br><span class="line">//   message SubMessage &#123;</span><br><span class="line">//     string subfield = 1;</span><br><span class="line">//   &#125;</span><br><span class="line">//   string message_id = 1; // mapped to the URL</span><br><span class="line">//   SubMessage sub = 2;    // `sub.subfield` is url-mapped</span><br><span class="line">// &#125;</span><br><span class="line">// message Message &#123;</span><br><span class="line">//   string text = 1; // content of the resource</span><br><span class="line">// &#125;</span><br><span class="line">// ```</span><br><span class="line">//</span><br><span class="line">// This definition enables an automatic, bidrectional mapping of HTTP</span><br><span class="line">// JSON to RPC. Example:</span><br><span class="line">//</span><br><span class="line">// HTTP | RPC</span><br><span class="line">// -----|-----</span><br><span class="line">// `GET /v1/messages/123456/foo`  | `GetMessage(message_id: &quot;123456&quot; sub: SubMessage(subfield: &quot;foo&quot;))`</span><br><span class="line">//</span><br><span class="line">// In general, not only fields but also field paths can be referenced</span><br><span class="line">// from a path pattern. Fields mapped to the path pattern cannot be</span><br><span class="line">// repeated and must have a primitive (non-message) type.</span><br><span class="line">//</span><br><span class="line">// Any fields in the request message which are not bound by the path</span><br><span class="line">// pattern automatically become (optional) HTTP query</span><br><span class="line">// parameters. Assume the following definition of the request message:</span><br><span class="line">//</span><br><span class="line">// ```proto</span><br><span class="line">// message GetMessageRequest &#123;</span><br><span class="line">//   message SubMessage &#123;</span><br><span class="line">//     string subfield = 1;</span><br><span class="line">//   &#125;</span><br><span class="line">//   string message_id = 1; // mapped to the URL</span><br><span class="line">//   int64 revision = 2;    // becomes a parameter</span><br><span class="line">//   SubMessage sub = 3;    // `sub.subfield` becomes a parameter</span><br><span class="line">// &#125;</span><br><span class="line">// ```</span><br><span class="line">//</span><br><span class="line">// This enables a HTTP JSON to RPC mapping as below:</span><br><span class="line">//</span><br><span class="line">// HTTP | RPC</span><br><span class="line">// -----|-----</span><br><span class="line">// `GET /v1/messages/123456?revision=2&amp;sub.subfield=foo` | `GetMessage(message_id: &quot;123456&quot; revision: 2 sub: SubMessage(subfield: &quot;foo&quot;))`</span><br><span class="line">//</span><br><span class="line">// Note that fields which are mapped to HTTP parameters must have a</span><br><span class="line">// primitive type or a repeated primitive type. Message types are not</span><br><span class="line">// allowed. In the case of a repeated type, the parameter can be</span><br><span class="line">// repeated in the URL, as in `...?param=A&amp;param=B`.</span><br><span class="line">//</span><br><span class="line">// For HTTP method kinds which allow a request body, the `body` field</span><br><span class="line">// specifies the mapping. Consider a REST update method on the</span><br><span class="line">// message resource collection:</span><br><span class="line">//</span><br><span class="line">// ```proto</span><br><span class="line">// service Messaging &#123;</span><br><span class="line">//   rpc UpdateMessage(UpdateMessageRequest) returns (Message) &#123;</span><br><span class="line">//     option (google.api.http) = &#123;</span><br><span class="line">//       put: &quot;/v1/messages/&#123;message_id&#125;&quot;</span><br><span class="line">//       body: &quot;message&quot;</span><br><span class="line">//     &#125;;</span><br><span class="line">//   &#125;</span><br><span class="line">// &#125;</span><br><span class="line">// message UpdateMessageRequest &#123;</span><br><span class="line">//   string message_id = 1; // mapped to the URL</span><br><span class="line">//   Message message = 2;   // mapped to the body</span><br><span class="line">// &#125;</span><br><span class="line">// ```</span><br><span class="line">//</span><br><span class="line">// The following HTTP JSON to RPC mapping is enabled, where the</span><br><span class="line">// representation of the JSON in the request body is determined by</span><br><span class="line">// protos JSON encoding:</span><br><span class="line">//</span><br><span class="line">// HTTP | RPC</span><br><span class="line">// -----|-----</span><br><span class="line">// `PUT /v1/messages/123456 &#123; &quot;text&quot;: &quot;Hi!&quot; &#125;` | `UpdateMessage(message_id: &quot;123456&quot; message &#123; text: &quot;Hi!&quot; &#125;)`</span><br><span class="line">//</span><br><span class="line">// The special name `*` can be used in the body mapping to define that</span><br><span class="line">// every field not bound by the path template should be mapped to the</span><br><span class="line">// request body.  This enables the following alternative definition of</span><br><span class="line">// the update method:</span><br><span class="line">//</span><br><span class="line">// ```proto</span><br><span class="line">// service Messaging &#123;</span><br><span class="line">//   rpc UpdateMessage(Message) returns (Message) &#123;</span><br><span class="line">//     option (google.api.http) = &#123;</span><br><span class="line">//       put: &quot;/v1/messages/&#123;message_id&#125;&quot;</span><br><span class="line">//       body: &quot;*&quot;</span><br><span class="line">//     &#125;;</span><br><span class="line">//   &#125;</span><br><span class="line">// &#125;</span><br><span class="line">// message Message &#123;</span><br><span class="line">//   string message_id = 1;</span><br><span class="line">//   string text = 2;</span><br><span class="line">// &#125;</span><br><span class="line">// ```</span><br><span class="line">//</span><br><span class="line">// The following HTTP JSON to RPC mapping is enabled:</span><br><span class="line">//</span><br><span class="line">// HTTP | RPC</span><br><span class="line">// -----|-----</span><br><span class="line">// `PUT /v1/messages/123456 &#123; &quot;text&quot;: &quot;Hi!&quot; &#125;` | `UpdateMessage(message_id: &quot;123456&quot; text: &quot;Hi!&quot;)`</span><br><span class="line">//</span><br><span class="line">// Note that when using `*` in the body mapping, it is not possible to</span><br><span class="line">// have HTTP parameters, as all fields not bound by the path end in</span><br><span class="line">// the body. This makes this option more rarely used in practice of</span><br><span class="line">// defining REST APIs. The common usage of `*` is in custom methods</span><br><span class="line">// which don&#x27;t use the URL at all for transferring data.</span><br><span class="line">//</span><br><span class="line">// It is possible to define multiple HTTP methods for one RPC by using</span><br><span class="line">// the `additional_bindings` option. Example:</span><br><span class="line">//</span><br><span class="line">// ```proto</span><br><span class="line">// service Messaging &#123;</span><br><span class="line">//   rpc GetMessage(GetMessageRequest) returns (Message) &#123;</span><br><span class="line">//     option (google.api.http) = &#123;</span><br><span class="line">//       get: &quot;/v1/messages/&#123;message_id&#125;&quot;</span><br><span class="line">//       additional_bindings &#123;</span><br><span class="line">//         get: &quot;/v1/users/&#123;user_id&#125;/messages/&#123;message_id&#125;&quot;</span><br><span class="line">//       &#125;</span><br><span class="line">//     &#125;;</span><br><span class="line">//   &#125;</span><br><span class="line">// &#125;</span><br><span class="line">// message GetMessageRequest &#123;</span><br><span class="line">//   string message_id = 1;</span><br><span class="line">//   string user_id = 2;</span><br><span class="line">// &#125;</span><br><span class="line">// ```</span><br><span class="line">//</span><br><span class="line">// This enables the following two alternative HTTP JSON to RPC</span><br><span class="line">// mappings:</span><br><span class="line">//</span><br><span class="line">// HTTP | RPC</span><br><span class="line">// -----|-----</span><br><span class="line">// `GET /v1/messages/123456` | `GetMessage(message_id: &quot;123456&quot;)`</span><br><span class="line">// `GET /v1/users/me/messages/123456` | `GetMessage(user_id: &quot;me&quot; message_id: &quot;123456&quot;)`</span><br><span class="line">//</span><br><span class="line">// # Rules for HTTP mapping</span><br><span class="line">//</span><br><span class="line">// The rules for mapping HTTP path, query parameters, and body fields</span><br><span class="line">// to the request message are as follows:</span><br><span class="line">//</span><br><span class="line">// 1. The `body` field specifies either `*` or a field path, or is</span><br><span class="line">//    omitted. If omitted, it assumes there is no HTTP body.</span><br><span class="line">// 2. Leaf fields (recursive expansion of nested messages in the</span><br><span class="line">//    request) can be classified into three types:</span><br><span class="line">//     (a) Matched in the URL template.</span><br><span class="line">//     (b) Covered by body (if body is `*`, everything except (a) fields;</span><br><span class="line">//         else everything under the body field)</span><br><span class="line">//     (c) All other fields.</span><br><span class="line">// 3. URL query parameters found in the HTTP request are mapped to (c) fields.</span><br><span class="line">// 4. Any body sent with an HTTP request can contain only (b) fields.</span><br><span class="line">//</span><br><span class="line">// The syntax of the path template is as follows:</span><br><span class="line">//</span><br><span class="line">//     Template = &quot;/&quot; Segments [ Verb ] ;</span><br><span class="line">//     Segments = Segment &#123; &quot;/&quot; Segment &#125; ;</span><br><span class="line">//     Segment  = &quot;*&quot; | &quot;**&quot; | LITERAL | Variable ;</span><br><span class="line">//     Variable = &quot;&#123;&quot; FieldPath [ &quot;=&quot; Segments ] &quot;&#125;&quot; ;</span><br><span class="line">//     FieldPath = IDENT &#123; &quot;.&quot; IDENT &#125; ;</span><br><span class="line">//     Verb     = &quot;:&quot; LITERAL ;</span><br><span class="line">//</span><br><span class="line">// The syntax `*` matches a single path segment. It follows the semantics of</span><br><span class="line">// [RFC 6570](https://tools.ietf.org/html/rfc6570) Section 3.2.2 Simple String</span><br><span class="line">// Expansion.</span><br><span class="line">//</span><br><span class="line">// The syntax `**` matches zero or more path segments. It follows the semantics</span><br><span class="line">// of [RFC 6570](https://tools.ietf.org/html/rfc6570) Section 3.2.3 Reserved</span><br><span class="line">// Expansion.</span><br><span class="line">//</span><br><span class="line">// The syntax `LITERAL` matches literal text in the URL path.</span><br><span class="line">//</span><br><span class="line">// The syntax `Variable` matches the entire path as specified by its template;</span><br><span class="line">// this nested template must not contain further variables. If a variable</span><br><span class="line">// matches a single path segment, its template may be omitted, e.g. `&#123;var&#125;`</span><br><span class="line">// is equivalent to `&#123;var=*&#125;`.</span><br><span class="line">//</span><br><span class="line">// NOTE: the field paths in variables and in the `body` must not refer to</span><br><span class="line">// repeated fields or map fields.</span><br><span class="line">//</span><br><span class="line">// Use CustomHttpPattern to specify any HTTP method that is not included in the</span><br><span class="line">// `pattern` field, such as HEAD, or &quot;*&quot; to leave the HTTP method unspecified for</span><br><span class="line">// a given URL path rule. The wild-card rule is useful for services that provide</span><br><span class="line">// content to Web (HTML) clients.</span><br><span class="line">message HttpRule &#123;</span><br><span class="line">  // Selects methods to which this rule applies.</span><br><span class="line">  //</span><br><span class="line">  // Refer to [selector][google.api.DocumentationRule.selector] for syntax details.</span><br><span class="line">  string selector = 1;</span><br><span class="line"></span><br><span class="line">  // Determines the URL pattern is matched by this rules. This pattern can be</span><br><span class="line">  // used with any of the &#123;get|put|post|delete|patch&#125; methods. A custom method</span><br><span class="line">  // can be defined using the &#x27;custom&#x27; field.</span><br><span class="line">  oneof pattern &#123;</span><br><span class="line">    // Used for listing and getting information about resources.</span><br><span class="line">    string get = 2;</span><br><span class="line"></span><br><span class="line">    // Used for updating a resource.</span><br><span class="line">    string put = 3;</span><br><span class="line"></span><br><span class="line">    // Used for creating a resource.</span><br><span class="line">    string post = 4;</span><br><span class="line"></span><br><span class="line">    // Used for deleting a resource.</span><br><span class="line">    string delete = 5;</span><br><span class="line"></span><br><span class="line">    // Used for updating a resource.</span><br><span class="line">    string patch = 6;</span><br><span class="line"></span><br><span class="line">    // Custom pattern is used for defining custom verbs.</span><br><span class="line">    CustomHttpPattern custom = 8;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  // The name of the request field whose value is mapped to the HTTP body, or</span><br><span class="line">  // `*` for mapping all fields not captured by the path pattern to the HTTP</span><br><span class="line">  // body. NOTE: the referred field must not be a repeated field.</span><br><span class="line">  string body = 7;</span><br><span class="line"></span><br><span class="line">  // Additional HTTP bindings for the selector. Nested bindings must</span><br><span class="line">  // not contain an `additional_bindings` field themselves (that is,</span><br><span class="line">  // the nesting may only be one level deep).</span><br><span class="line">  repeated HttpRule additional_bindings = 11;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// A custom pattern is used for defining custom HTTP verb.</span><br><span class="line">message CustomHttpPattern &#123;</span><br><span class="line">  // The name of this custom HTTP verb.</span><br><span class="line">  string kind = 1;</span><br><span class="line"></span><br><span class="line">  // The path matched by this custom verb.</span><br><span class="line">  string path = 2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-2-2-hello-proto"><a href="#2-2-2-hello-proto" class="headerlink" title="2.2.2 hello.proto"></a>2.2.2 <code>hello.proto</code></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">syntax = &quot;proto3&quot;;</span><br><span class="line"></span><br><span class="line">package proto;</span><br><span class="line"></span><br><span class="line">import &quot;google/api/annotations.proto&quot;;</span><br><span class="line"></span><br><span class="line">service HelloWorld &#123;</span><br><span class="line">    rpc SayHelloWorld(HelloWorldRequest) returns (HelloWorldResponse) &#123;</span><br><span class="line">        option (google.api.http) = &#123;</span><br><span class="line">            post: &quot;/hello_world&quot;</span><br><span class="line">            body: &quot;*&quot;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">message HelloWorldRequest &#123;</span><br><span class="line">    string referer = 1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">message HelloWorldResponse &#123;</span><br><span class="line">    string message = 1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-3-编译-proto"><a href="#2-3-编译-proto" class="headerlink" title="2.3 编译 proto"></a>2.3 编译 proto</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编译google.api</span></span><br><span class="line">protoc -I . --go_out=plugins=grpc,Mgoogle/protobuf/descriptor.proto=github.com/golang/protobuf/protoc-gen-go/descriptor:. google/api/*.proto</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译hello_http.proto为hello_http.pb.proto</span></span><br><span class="line">protoc -I . --go_out=plugins=grpc,Mgoogle/api/annotations.proto=go-grpc-example/proto/google/api:. ./hello.proto</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译hello_http.proto为hello_http.pb.gw.proto</span></span><br><span class="line">protoc --grpc-gateway_out=logtostderr=<span class="literal">true</span>:. ./hello.proto</span><br></pre></td></tr></table></figure><h1 id="3-命令行模块"><a href="#3-命令行模块" class="headerlink" title="3. 命令行模块"></a>3. 命令行模块</h1><h2 id="3-1-安装Cobra命令行工具"><a href="#3-1-安装Cobra命令行工具" class="headerlink" title="3.1 安装Cobra命令行工具"></a>3.1 安装Cobra命令行工具</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go get -u github.com/spf13/cobra</span><br></pre></td></tr></table></figure><p>1) root.go</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> rootCmd = &amp;cobra.Command&#123;</span><br><span class="line">Use:   <span class="string">&quot;grpc&quot;</span>,</span><br><span class="line">Short: <span class="string">&quot;Run the gRPC hello-world server&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Execute</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> err := rootCmd.Execute(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;rootCmd.Execute err: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2) server.go</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> serverCmd = &amp;cobra.Command&#123;</span><br><span class="line">Use:   <span class="string">&quot;server&quot;</span>,</span><br><span class="line">Short: <span class="string">&quot;Run the gRPC hello-world server&quot;</span>,</span><br><span class="line">Run: <span class="function"><span class="keyword">func</span><span class="params">(cmd *cobra.Command, args []<span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> err := <span class="built_in">recover</span>(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Println(<span class="string">&quot;Recover error: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line">server.Serve()</span><br><span class="line">&#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line">serverCmd.Flags().StringVarP(&amp;server.ServerPort, <span class="string">&quot;port&quot;</span>, <span class="string">&quot;p&quot;</span>, <span class="string">&quot;9005&quot;</span>, <span class="string">&quot;server port&quot;</span>)</span><br><span class="line">serverCmd.Flags().StringVarP(&amp;server.CertPath, <span class="string">&quot;cert&quot;</span>, <span class="string">&quot;c&quot;</span>, <span class="string">&quot;../../certs/server.pem&quot;</span>, <span class="string">&quot;cert path&quot;</span>)</span><br><span class="line">serverCmd.Flags().StringVarP(&amp;server.KeyPath, <span class="string">&quot;key&quot;</span>, <span class="string">&quot;k&quot;</span>, <span class="string">&quot;../../certs/server.key&quot;</span>, <span class="string">&quot;key path&quot;</span>)</span><br><span class="line">serverCmd.Flags().StringVarP(&amp;server.CertName, <span class="string">&quot;name&quot;</span>, <span class="string">&quot;n&quot;</span>, <span class="string">&quot;go-grpc-example&quot;</span>, <span class="string">&quot;server hostname&quot;</span>)</span><br><span class="line"></span><br><span class="line">rootCmd.AddCommand(serverCmd)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> rpc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go gRPC</title>
      <link href="/2019/07/18/Go%20gRPC/"/>
      <url>/2019/07/18/Go%20gRPC/</url>
      
        <content type="html"><![CDATA[<h1 id="1-RPC"><a href="#1-RPC" class="headerlink" title="1. RPC"></a>1. RPC</h1><h2 id="1-1-什么是RPC"><a href="#1-1-什么是RPC" class="headerlink" title="1.1 什么是RPC"></a>1.1 什么是RPC</h2><p>RPC: Remote Procedure Call，远程过程调用。调用过程包括传输协议和对象编码（序列化）。</p><h2 id="1-2-RPC框架"><a href="#1-2-RPC框架" class="headerlink" title="1.2 RPC框架"></a>1.2 RPC框架</h2><ul><li>负载均衡</li><li>服务注册和发现</li><li>服务治理</li></ul><h2 id="1-3-为什么使用RPC"><a href="#1-3-为什么使用RPC" class="headerlink" title="1.3 为什么使用RPC"></a>1.3 为什么使用RPC</h2><p>简单、通用、安全、效率</p><span id="more"></span><h1 id="2-Protobuf"><a href="#2-Protobuf" class="headerlink" title="2. Protobuf"></a>2. Protobuf</h1><p>Protocol Buffers 是一种与语言、平台无关，可扩展的序列化结构化数据的方法，常用于通信协议、数据存储等。相较于JSON、XML，它更小、更快、更简单。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">syntax = &quot;proto3&quot;;</span><br><span class="line"></span><br><span class="line">service SearchService &#123;</span><br><span class="line">rpc Search (SearchRequest) returns (SearchResponse);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">message SearchRequest &#123;</span><br><span class="line">string query = 1;</span><br><span class="line">int32 page_number = 2;</span><br><span class="line">int32 result_per_page = 3;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">message SearchResponse &#123;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="3-gRPC"><a href="#3-gRPC" class="headerlink" title="3. gRPC"></a>3. gRPC</h1><p>gRPC 是一个高性能、开源和通用的RPC框架，面向移动和 HTTP/2 设计</p><p>特点：</p><ul><li>HTTP/2</li><li>Protobuf</li><li>客户端、服务端基于同一份IDL</li><li>移动网络支持良好</li><li>支持多语言</li></ul><h2 id="3-1-安装"><a href="#3-1-安装" class="headerlink" title="3.1 安装"></a>3.1 安装</h2><p>gRPC:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go get -u google.golang.org/grpc</span><br></pre></td></tr></table></figure><p>Protocol Buffers v3:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew search protobuf</span><br><span class="line">brew install protobuf@3.6</span><br></pre></td></tr></table></figure><p>Protoc Plugin:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 会自动编译安装protoc-gen-go可执行插件文件</span></span><br><span class="line">go get -u github.com/golang/protobuf/protoc-gen-go</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译安装 (不要做这个操作，应该使用上面一个protoc-gen-go)</span></span><br><span class="line"><span class="comment">#go install google.golang.org/protobuf/cmd/protoc-gen-go</span></span><br></pre></td></tr></table></figure><h2 id="3-2-入门"><a href="#3-2-入门" class="headerlink" title="3.2 入门"></a>3.2 入门</h2><h3 id="3-2-1-编写-IDL"><a href="#3-2-1-编写-IDL" class="headerlink" title="3.2.1 编写 IDL"></a>3.2.1 编写 IDL</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">syntax = &quot;proto3&quot;;</span><br><span class="line"></span><br><span class="line">option go_package = &quot;.;proto&quot;; // 重要</span><br><span class="line"></span><br><span class="line">package proto;</span><br><span class="line"></span><br><span class="line">service SearchService &#123;</span><br><span class="line">    rpc Search(SearchRequest) returns (SearchResponse) &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">message SearchRequest &#123;</span><br><span class="line">    string request = 1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">message SearchResponse &#123;</span><br><span class="line">    string response = 1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-2-2-生成-pb-go文件"><a href="#3-2-2-生成-pb-go文件" class="headerlink" title="3.2.2 生成 pb.go文件"></a>3.2.2 生成 pb.go文件</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">protoc --go_out=. *.proto</span><br><span class="line"></span><br><span class="line"><span class="comment"># 比前一个多了注册函数等</span></span><br><span class="line">protoc --go_out=plugins=grpc:. *.proto</span><br></pre></td></tr></table></figure><h3 id="3-2-3-服务端"><a href="#3-2-3-服务端" class="headerlink" title="3.2.3 服务端"></a>3.2.3 服务端</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> SearchService <span class="keyword">struct</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *SearchService)</span> <span class="title">Search</span><span class="params">(ctx context.Context, r *pb.SearchRequest)</span> <span class="params">(*pb.SearchResponse, error)</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> &amp;pb.SearchResponse&#123;Response: r.GetRequest() + <span class="string">&quot; Server&quot;</span>&#125;, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> HOST = <span class="string">&quot;:9001&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">server := grpc.NewServer()</span><br><span class="line">pb.RegisterSearchServiceServer(server, &amp;SearchService&#123;&#125;)</span><br><span class="line"></span><br><span class="line">ln, err := net.Listen(<span class="string">&quot;tcp&quot;</span>, HOST)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;net.Listen err: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server.Serve(ln)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-2-4-客户端"><a href="#3-2-4-客户端" class="headerlink" title="3.2.4 客户端"></a>3.2.4 客户端</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">conn, err := grpc.Dial(HOST, grpc.WithInsecure())</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;grpc.Dail err: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> conn.Close()</span><br><span class="line"></span><br><span class="line">client := pb.NewSearchServiceClient(conn)</span><br><span class="line">resp, err := client.Search(context.Background(), &amp;pb.SearchRequest&#123;</span><br><span class="line">Request: <span class="string">&quot;gRPC&quot;</span>,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;client.Search err: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">log.Printf(<span class="string">&quot;resp: %s&quot;</span>, resp.GetResponse())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="4-gRPC-流"><a href="#4-gRPC-流" class="headerlink" title="4. gRPC 流"></a>4. gRPC 流</h1><p>gRPC 的流式，有三种类型：</p><ul><li>Server-side Streaming</li><li>Client-side Streaming</li><li>Bidirectional Streaming</li></ul><p>适合用 Streaming RPC 的场景：</p><ul><li>大规模数据包</li><li>实时场景</li></ul><h1 id="4-1-IDL-和-基础模板"><a href="#4-1-IDL-和-基础模板" class="headerlink" title="4.1 IDL 和 基础模板"></a>4.1 IDL 和 基础模板</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">syntax = &quot;proto3&quot;;</span><br><span class="line"></span><br><span class="line">option go_package = &quot;.;proto&quot;;</span><br><span class="line"></span><br><span class="line">package proto;</span><br><span class="line"></span><br><span class="line">service StreamService &#123;</span><br><span class="line">    rpc List(StreamRequest) returns (stream StreamResponse) &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    rpc Record(stream StreamRequest) returns (stream StreamResponse) &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    rpc Route(stream StreamRequest) returns (stream StreamResponse) &#123;&#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">message StreamPoint &#123;</span><br><span class="line">    string name = 1;</span><br><span class="line">    int32 value = 2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">message StreamRequest &#123;</span><br><span class="line">    StreamPoint pt = 1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">message StreamResponse &#123;</span><br><span class="line">    StreamPoint pt = 1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>服务器：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">server := grpc.NewServer()</span><br><span class="line">pb.RegisterStreamServiceServer(server, &amp;StreamService&#123;&#125;)</span><br><span class="line"></span><br><span class="line">ln, err := net.Listen(<span class="string">&quot;tcp&quot;</span>, <span class="string">&quot;:9002&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;net.Listen err: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server.Serve(ln)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *StreamService)</span> <span class="title">List</span><span class="params">(r *pb.StreamRequest, stream pb.StreamService_ListServer)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *StreamService)</span> <span class="title">Record</span><span class="params">(stream pb.StreamService_RecordServer)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *StreamService)</span> <span class="title">Route</span><span class="params">(stream pb.StreamService_RouteServer)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>客户端：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">conn, err := grpc.Dial(<span class="string">&quot;:9002&quot;</span>, grpc.WithInsecure())</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;grpc.Dial err: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> conn.Close()</span><br><span class="line"></span><br><span class="line">client := pb.NewStreamServiceClient(conn)</span><br><span class="line"></span><br><span class="line">err = printList(client, &amp;pb.StreamRequest&#123;</span><br><span class="line">Pt: &amp;pb.StreamPoint&#123;</span><br><span class="line">Name:  <span class="string">&quot;gRPC Stream Client: List&quot;</span>,</span><br><span class="line">Value: <span class="number">2020</span>,</span><br><span class="line">&#125;,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;printList.err: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">err = printRecord(client, &amp;pb.StreamRequest&#123;</span><br><span class="line">Pt: &amp;pb.StreamPoint&#123;</span><br><span class="line">Name:  <span class="string">&quot;gRPC Stream Client: Record&quot;</span>,</span><br><span class="line">Value: <span class="number">2020</span>,</span><br><span class="line">&#125;,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;printRecord.err: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">err = printRoute(client, &amp;pb.StreamRequest&#123;</span><br><span class="line">Pt: &amp;pb.StreamPoint&#123;</span><br><span class="line">Name:  <span class="string">&quot;gRPC Stream Client: Route&quot;</span>,</span><br><span class="line">Value: <span class="number">2020</span>,</span><br><span class="line">&#125;,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;printRoute.err: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">printList</span><span class="params">(client pb.StreamServiceClient, r *pb.StreamRequest)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">printRecord</span><span class="params">(client pb.StreamServiceClient, r *pb.StreamRequest)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">printRoute</span><span class="params">(client pb.StreamServiceClient, r *pb.StreamRequest)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="4-2-服务器端流式-RPC"><a href="#4-2-服务器端流式-RPC" class="headerlink" title="4.2 服务器端流式 RPC"></a>4.2 服务器端流式 RPC</h1><ul><li>单向流</li><li>Server 为 Stream，多次向客户端发送数据</li><li>Client 为普通 RPC 请求</li></ul><h3 id="4-2-1-服务端"><a href="#4-2-1-服务端" class="headerlink" title="4.2.1 服务端"></a>4.2.1 服务端</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *StreamService)</span> <span class="title">List</span><span class="params">(r *pb.StreamRequest, stream pb.StreamService_ListServer)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> n := <span class="number">0</span>; n &lt;= <span class="number">6</span>; n++ &#123;</span><br><span class="line">err := stream.Send(&amp;pb.StreamResponse&#123;</span><br><span class="line">Pt: &amp;pb.StreamPoint&#123;</span><br><span class="line">Name:  r.Pt.Name,</span><br><span class="line">Value: r.Pt.Value + <span class="keyword">int32</span>(n),</span><br><span class="line">&#125;,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>stream.Send()</code> 方法：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> StreamService_ListServer <span class="keyword">interface</span> &#123;</span><br><span class="line">Send(*StreamResponse) error</span><br><span class="line">grpc.ServerStream</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(x *streamServiceListServer)</span> <span class="title">Send</span><span class="params">(m *StreamResponse)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> x.ServerStream.SendMsg(m)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>SendMsg()</code> 方法：</p><ul><li>消息体（对象）序列化</li><li>压缩序列化后的消息体</li><li>对正在传输的消息体增加5个字节的header</li><li>判断消息体总长度是否大于预设的maxSendMessageSize (默认math.MaxInt32)，超过则报错</li><li>写入给流的数据集</li></ul><h3 id="4-2-2-客户端"><a href="#4-2-2-客户端" class="headerlink" title="4.2.2 客户端"></a>4.2.2 客户端</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">printList</span><span class="params">(client pb.StreamServiceClient, r *pb.StreamRequest)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">stream, err := client.List(context.Background(), r)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">resp, err := stream.Recv()</span><br><span class="line"><span class="keyword">if</span> err == io.EOF &#123;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">log.Printf(<span class="string">&quot;resp: pt.name: %s, pt.value: %d\n&quot;</span>,</span><br><span class="line">resp.Pt.Name, resp.Pt.Value)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>stream.Recv()</code>方法：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> StreamService_ListClient <span class="keyword">interface</span> &#123;</span><br><span class="line">Recv() (*StreamResponse, error)</span><br><span class="line">grpc.ClientStream</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(x *streamServiceListClient)</span> <span class="title">Recv</span><span class="params">()</span> <span class="params">(*StreamResponse, error)</span></span>&#123;</span><br><span class="line">m := <span class="built_in">new</span>(StreamResponse)</span><br><span class="line"><span class="keyword">if</span> err := x.ClientStream.RecvMsg(m); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> m, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>RecvMsg()</code>方法：</p><ul><li>阻塞等待</li><li>流结束 (Close)时，返回 io.EOF</li><li>可能的错误<ul><li>io.EOF</li><li>io.ErrUnexpectedEOF</li><li>transport.ConnectionError</li><li>google.golang.org/grpc/codes</li></ul></li></ul><h2 id="4-3-客户端流式RPC"><a href="#4-3-客户端流式RPC" class="headerlink" title="4.3 客户端流式RPC"></a>4.3 客户端流式RPC</h2><ul><li>单向流</li><li>客户端多次RPC请求服务端</li><li>服务端发起一次响应给客户端</li></ul><h3 id="4-3-1-服务端"><a href="#4-3-1-服务端" class="headerlink" title="4.3.1 服务端"></a>4.3.1 服务端</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *StreamService)</span> <span class="title">Record</span><span class="params">(stream pb.StreamService_RecordServer)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">r, err := stream.Recv()</span><br><span class="line"><span class="keyword">if</span> err == io.EOF &#123;</span><br><span class="line"><span class="keyword">return</span> stream.Send(&amp;pb.StreamResponse&#123;</span><br><span class="line">Pt: &amp;pb.StreamPoint&#123;</span><br><span class="line">Name:  <span class="string">&quot;gRPC Stream Server: Record&quot;</span>,</span><br><span class="line">Value: <span class="number">1</span>,</span><br><span class="line">&#125;,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">log.Printf(<span class="string">&quot;stream.Recv pt.name: %s, pt.value: %d&quot;</span>, r.Pt.Name, r.Pt.Value)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-3-2-客户端"><a href="#4-3-2-客户端" class="headerlink" title="4.3.2 客户端"></a>4.3.2 客户端</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">printRecord</span><span class="params">(client pb.StreamServiceClient, r *pb.StreamRequest)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">stream, err := client.Record(context.Background())</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> n := <span class="number">0</span>; n &lt; <span class="number">6</span>; n++ &#123;</span><br><span class="line">err := stream.Send(r)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 主动关闭send</span></span><br><span class="line">err = stream.CloseSend()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">resp, err := stream.Recv()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">log.Printf(<span class="string">&quot;resp: pt.name: %s, pt.value: %d&quot;</span>, resp.Pt.Name, resp.Pt.Value)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-4-双向流RPC"><a href="#4-4-双向流RPC" class="headerlink" title="4.4 双向流RPC"></a>4.4 双向流RPC</h2><h3 id="4-4-1-服务端"><a href="#4-4-1-服务端" class="headerlink" title="4.4.1 服务端"></a>4.4.1 服务端</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *StreamService)</span> <span class="title">Route</span><span class="params">(stream pb.StreamService_RouteServer)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">n := <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">err := stream.Send(&amp;pb.StreamResponse&#123;</span><br><span class="line">Pt: &amp;pb.StreamPoint&#123;</span><br><span class="line">Name:  <span class="string">&quot;gPRC Stream Client: Route&quot;</span>,</span><br><span class="line">Value: <span class="keyword">int32</span>(n),</span><br><span class="line">&#125;,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">r, err := stream.Recv()</span><br><span class="line"><span class="keyword">if</span> err == io.EOF &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">n++</span><br><span class="line"></span><br><span class="line">log.Printf(<span class="string">&quot;stream.Recv pt.name: %s, pt.value: %d&quot;</span>,</span><br><span class="line">r.Pt.Name, r.Pt.Value)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-4-2-客户端"><a href="#4-4-2-客户端" class="headerlink" title="4.4.2 客户端"></a>4.4.2 客户端</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">printRoute</span><span class="params">(client pb.StreamServiceClient, r *pb.StreamRequest)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">stream, err := client.Route(context.Background())</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> n := <span class="number">0</span>; n &lt; <span class="number">6</span>; n++ &#123;</span><br><span class="line">err = stream.Send(r)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">resp, err := stream.Recv()</span><br><span class="line"><span class="keyword">if</span> err == io.EOF &#123;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">log.Printf(<span class="string">&quot;resp: pt.name: %s, pt.value %d&quot;</span>,</span><br><span class="line">resp.Pt.Name, resp.Pt.Value)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">stream.CloseSend()</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="5-TLS-证书认证"><a href="#5-TLS-证书认证" class="headerlink" title="5. TLS 证书认证"></a>5. TLS 证书认证</h1><h2 id="5-1-生成证书"><a href="#5-1-生成证书" class="headerlink" title="5.1 生成证书"></a>5.1 生成证书</h2><h3 id="5-1-1-私钥"><a href="#5-1-1-私钥" class="headerlink" title="5.1.1 私钥"></a>5.1.1 私钥</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl ecparam -genkey -name secp384r1 -out server.key</span><br></pre></td></tr></table></figure><h3 id="5-1-2-自签公钥"><a href="#5-1-2-自签公钥" class="headerlink" title="5.1.2 自签公钥"></a>5.1.2 自签公钥</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl req -new -x509 -sha256 -key server.key -out server.pem -days 3650</span><br></pre></td></tr></table></figure><h2 id="5-2-服务端"><a href="#5-2-服务端" class="headerlink" title="5.2 服务端"></a>5.2 服务端</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> SearchService <span class="keyword">struct</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *SearchService)</span> <span class="title">Search</span><span class="params">(ctx context.Context, r *pb.SearchRequest)</span> <span class="params">(*pb.SearchResponse, error)</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> &amp;pb.SearchResponse&#123;Response: r.GetRequest() + <span class="string">&quot; Server&quot;</span>&#125;, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> HOST = <span class="string">&quot;:9001&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// 1. 支持TLS</span></span><br><span class="line">creds, err := credentials.NewServerTLSFromFile(<span class="string">&quot;../certs/server.pem&quot;</span>, <span class="string">&quot;../certs/server.key&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;credentials.NewServerTLSFromFile err: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 加入认证</span></span><br><span class="line">server := grpc.NewServer(grpc.Creds(creds))</span><br><span class="line"></span><br><span class="line">pb.RegisterSearchServiceServer(server, &amp;SearchService&#123;&#125;)</span><br><span class="line"></span><br><span class="line">ln, err := net.Listen(<span class="string">&quot;tcp&quot;</span>, HOST)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;net.Listen err: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server.Serve(ln)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-3-客户端"><a href="#5-3-客户端" class="headerlink" title="5.3 客户端"></a>5.3 客户端</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> HOST = <span class="string">&quot;:9001&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// 1. 支持TLS</span></span><br><span class="line">creds, err := credentials.NewClientTLSFromFile(<span class="string">&quot;../certs/server.pem&quot;</span>, <span class="string">&quot;go-grpc-example&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;credentials.NewClientTLSFromFile err: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 传输认证</span></span><br><span class="line">conn, err := grpc.Dial(HOST, grpc.WithTransportCredentials(creds))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;grpc.Dail err: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> conn.Close()</span><br><span class="line"></span><br><span class="line">client := pb.NewSearchServiceClient(conn)</span><br><span class="line">resp, err := client.Search(context.Background(), &amp;pb.SearchRequest&#123;</span><br><span class="line">Request: <span class="string">&quot;gRPC&quot;</span>,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;client.Search err: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">log.Printf(<span class="string">&quot;resp: %s&quot;</span>, resp.GetResponse())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="6-基于-CA-的-TLS-证书认证"><a href="#6-基于-CA-的-TLS-证书认证" class="headerlink" title="6. 基于 CA 的 TLS 证书认证"></a>6. 基于 CA 的 TLS 证书认证</h1><h2 id="6-1-CA"><a href="#6-1-CA" class="headerlink" title="6.1 CA"></a>6.1 CA</h2><h3 id="6-1-1-生成CA证书"><a href="#6-1-1-生成CA证书" class="headerlink" title="6.1.1 生成CA证书"></a>6.1.1 生成CA证书</h3><p>根证书(root certificate)是属于根证书颁发机构（CA）的公钥证书。可以通过验证CA的签名从而信任CA，任何人都可以得到CA的证书（含公钥），用以验证它所签发的证书。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生成Key</span></span><br><span class="line">openssl genrsa -out ca.key 2048</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成密钥</span></span><br><span class="line">openssl req -new -x509 -days 7200 -key ca.key -out ca.pem</span><br></pre></td></tr></table></figure><h3 id="6-1-2-服务端证书"><a href="#6-1-2-服务端证书" class="headerlink" title="6.1.2 服务端证书"></a>6.1.2 服务端证书</h3><p>CSR: Cerificate Signing Request，证书请求文件。主要作用是 CA 会利用 CSR 文件进行签名使得攻击者无法伪装或篡改原有证书。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生成CSR</span></span><br><span class="line">openssl req -new -key server.key -out server.csr</span><br><span class="line"></span><br><span class="line"><span class="comment"># 基于CA签发</span></span><br><span class="line">openssl x509 -req -sha256 -CA ca.pem -CAkey ca.key -CAcreateserial -days 3650 -<span class="keyword">in</span> server.csr -out server.pem</span><br></pre></td></tr></table></figure><h3 id="6-1-3-客户端证书"><a href="#6-1-3-客户端证书" class="headerlink" title="6.1.3 客户端证书"></a>6.1.3 客户端证书</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生成Key</span></span><br><span class="line">openssl ecparam -genkey -name secp384r1 -out client.key</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成CSR</span></span><br><span class="line">openssl req -new -key client.key -out client.csr</span><br><span class="line"></span><br><span class="line"><span class="comment"># 基于CA签发</span></span><br><span class="line">openssl x509 -req -sha256 -CA ca.pem -CAkey ca.key -CAcreateserial -days 3650 -<span class="keyword">in</span> client.csr -out client.pem</span><br></pre></td></tr></table></figure><h2 id="6-2-TLS认证代码"><a href="#6-2-TLS认证代码" class="headerlink" title="6.2 TLS认证代码"></a>6.2 TLS认证代码</h2><h3 id="6-2-1-服务端认证"><a href="#6-2-1-服务端认证" class="headerlink" title="6.2.1 服务端认证"></a>6.2.1 服务端认证</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Server <span class="keyword">struct</span> &#123;</span><br><span class="line">CaFile   <span class="keyword">string</span></span><br><span class="line">CertFile <span class="keyword">string</span></span><br><span class="line">KeyFile  <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(t *Server)</span> <span class="title">GetCredentialsByCA</span><span class="params">()</span> <span class="params">(credentials.TransportCredentials, error)</span></span> &#123;</span><br><span class="line">cert, err := tls.LoadX509KeyPair(t.CertFile, t.KeyFile)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ca, err := ioutil.ReadFile(t.CaFile)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">certPool := x509.NewCertPool()</span><br><span class="line"><span class="keyword">if</span> ok := certPool.AppendCertsFromPEM(ca); !ok &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, errors.New(<span class="string">&quot;certPool.AppendCertsFromPEM err&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">c := credentials.NewTLS(&amp;tls.Config&#123;</span><br><span class="line">Certificates: []tls.Certificate&#123;cert&#125;,</span><br><span class="line">ClientAuth:   tls.RequireAndVerifyClientCert,</span><br><span class="line">ClientCAs:    certPool,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> c, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(t *Server)</span> <span class="title">GetTLSCredentials</span><span class="params">()</span> <span class="params">(credentials.TransportCredentials, error)</span></span> &#123;</span><br><span class="line">c, err := credentials.NewServerTLSFromFile(t.CertFile, t.KeyFile)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> c, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-2-2-客户端认证"><a href="#6-2-2-客户端认证" class="headerlink" title="6.2.2 客户端认证"></a>6.2.2 客户端认证</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Client <span class="keyword">struct</span> &#123;</span><br><span class="line">ServerName <span class="keyword">string</span></span><br><span class="line">CaFile     <span class="keyword">string</span></span><br><span class="line">CertFile   <span class="keyword">string</span></span><br><span class="line">KeyFile    <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(t *Client)</span> <span class="title">GetCredentialsByCA</span><span class="params">()</span> <span class="params">(credentials.TransportCredentials, error)</span></span> &#123;</span><br><span class="line">cert, err := tls.LoadX509KeyPair(t.CertFile, t.KeyFile)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ca, err := ioutil.ReadFile(t.CaFile)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">certPool := x509.NewCertPool()</span><br><span class="line"><span class="keyword">if</span> ok := certPool.AppendCertsFromPEM(ca); !ok &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, errors.New(<span class="string">&quot;certPool.AppendCertsFromPEM err&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">c := credentials.NewTLS(&amp;tls.Config&#123;</span><br><span class="line">Certificates: []tls.Certificate&#123;cert&#125;,</span><br><span class="line">ServerName:   t.ServerName,</span><br><span class="line">RootCAs:      certPool,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> c, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(t *Client)</span> <span class="title">GetTLSCredentials</span><span class="params">()</span> <span class="params">(credentials.TransportCredentials, error)</span></span> &#123;</span><br><span class="line">c, err := credentials.NewClientTLSFromFile(t.CertFile, t.ServerName)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> c, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-3-实现代码"><a href="#6-3-实现代码" class="headerlink" title="6.3 实现代码"></a>6.3 实现代码</h2><h3 id="6-3-1-服务端"><a href="#6-3-1-服务端" class="headerlink" title="6.3.1 服务端"></a>6.3.1 服务端</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> SearchService <span class="keyword">struct</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *SearchService)</span> <span class="title">Search</span><span class="params">(ctx context.Context, r *pb.SearchRequest)</span> <span class="params">(*pb.SearchResponse, error)</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> &amp;pb.SearchResponse&#123;Response: r.GetRequest() + <span class="string">&quot; Server&quot;</span>&#125;, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">tlsServer := gtls.Server&#123;</span><br><span class="line">CaFile:   <span class="string">&quot;../../certs/ca.pem&quot;</span>,</span><br><span class="line">CertFile: <span class="string">&quot;../../certs/server.pem&quot;</span>,</span><br><span class="line">KeyFile:  <span class="string">&quot;../../certs/server.key&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">c, err := tlsServer.GetCredentialsByCA()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;tlsServer.GetCredentialsByCA err: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server := grpc.NewServer(grpc.Creds(c))</span><br><span class="line"></span><br><span class="line">pb.RegisterSearchServiceServer(server, &amp;SearchService&#123;&#125;)</span><br><span class="line"></span><br><span class="line">ln, err := net.Listen(<span class="string">&quot;tcp&quot;</span>, <span class="string">&quot;:9001&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;net.Listen err: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server.Serve(ln)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-3-2-客户端"><a href="#6-3-2-客户端" class="headerlink" title="6.3.2 客户端"></a>6.3.2 客户端</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">tlsClient := gtls.Client&#123;</span><br><span class="line">ServerName: <span class="string">&quot;go-grpc-example&quot;</span>,</span><br><span class="line">CaFile:     <span class="string">&quot;../../certs/ca.pem&quot;</span>,</span><br><span class="line">CertFile:   <span class="string">&quot;../../certs/client.pem&quot;</span>,</span><br><span class="line">KeyFile:    <span class="string">&quot;../../certs/client.key&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">c, err := tlsClient.GetCredentialsByCA()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;tlsClient.GetCredentialsByCA err: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">conn, err := grpc.Dial(<span class="string">&quot;:9001&quot;</span>, grpc.WithTransportCredentials(c))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;grpc.Dail err: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> conn.Close()</span><br><span class="line"></span><br><span class="line">client := pb.NewSearchServiceClient(conn)</span><br><span class="line">resp, err := client.Search(context.Background(), &amp;pb.SearchRequest&#123;</span><br><span class="line">Request: <span class="string">&quot;gRPC&quot;</span>,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;client.Search err: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">log.Printf(<span class="string">&quot;resp: %s&quot;</span>, resp.GetResponse())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>大致流程：</p><ul><li>Client 通过请求得到 Server 端的证书</li><li>使用 CA 认证的根证书对 Server 端证书进行可靠性、有效性等校验</li><li>校验 ServerName 是否有效</li><li>同样，在设置了 <code>tls.RequireAndVerifyClientCert</code> 模式下，Server 也会使用 CA 认证的根证书对Client的证书进行可靠性、有效性校验。</li></ul><h2 id="6-4-补充知识点：ssl-tls-单向认证双向认证"><a href="#6-4-补充知识点：ssl-tls-单向认证双向认证" class="headerlink" title="6.4 补充知识点：ssl/tls 单向认证双向认证"></a>6.4 补充知识点：ssl/tls 单向认证双向认证</h2><ul><li>单向认证：只有一个对象校验对端的证书合法性。通常client来校验服务器的合法性。那么client需要一个ca.crt,服务器需要server.crt,server.key。</li><li>双向认证：相互校验，服务器需要校验每个client,client也需要校验服务器。server 需要 server.key、server.crt、ca.crt，client 需要 client.key、client.crt、ca.crt。</li></ul><h1 id="7-拦截器"><a href="#7-拦截器" class="headerlink" title="7. 拦截器"></a>7. 拦截器</h1><h2 id="7-1-Unary-and-Stream-interceptor"><a href="#7-1-Unary-and-Stream-interceptor" class="headerlink" title="7.1 Unary and Stream interceptor"></a>7.1 Unary and Stream interceptor</h2><ul><li>普通方法：一元拦截器 <code>grpc.UnaryInterceptor</code></li><li>流方法：流拦截器 <code>grpc.StreamInterceptor</code></li></ul><h3 id="7-1-1-grpc-UnaryInterceptor"><a href="#7-1-1-grpc-UnaryInterceptor" class="headerlink" title="7.1.1 grpc.UnaryInterceptor"></a>7.1.1 <code>grpc.UnaryInterceptor</code></h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">UnaryInterceptor</span><span class="params">(i UnaryServerInterceptor)</span> <span class="title">ServerOption</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="function"><span class="keyword">func</span><span class="params">(o *options)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> o.unaryInt != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(<span class="string">&quot;The unary server interceptor was already set and may not be reset.&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">o.unaryInt = i</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> UnaryServerInterceptor <span class="function"><span class="keyword">func</span><span class="params">(ctx context.Context, req <span class="keyword">interface</span>&#123;&#125;, info *UnaryServerInfo, handler UnaryHandler)</span> <span class="params">(resp <span class="keyword">interface</span>&#123;&#125;, err error)</span></span></span><br></pre></td></tr></table></figure><h3 id="7-1-2-grpc-StreamInterceptor"><a href="#7-1-2-grpc-StreamInterceptor" class="headerlink" title="7.1.2 grpc.StreamInterceptor"></a>7.1.2 <code>grpc.StreamInterceptor</code></h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">StreamInterceptor</span><span class="params">(i StreamServerInterceptor)</span> <span class="title">ServerOptions</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> StreamServerInterceptor <span class="function"><span class="keyword">func</span><span class="params">(srv <span class="keyword">interface</span>&#123;&#125;, ss ServerStream, info *StreamServerInfo, handler StreamHandler)</span> <span class="title">error</span></span></span><br></pre></td></tr></table></figure><h2 id="7-2-实现多个拦截器"><a href="#7-2-实现多个拦截器" class="headerlink" title="7.2 实现多个拦截器"></a>7.2 实现多个拦截器</h2><p>gRPC本身只能设置一个拦截器，但可以采用<code>go-grpc-middleware</code>项目来解决问题</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&quot;github.com/grpc-ecosystem/go-grpc-middleware&quot;</span></span><br><span class="line"></span><br><span class="line">myServer := grpc.NewServer(</span><br><span class="line">grpc.StreamInterceptor(grpc_middleware.ChainStreamServer(</span><br><span class="line">...</span><br><span class="line">)),</span><br><span class="line">grpc.UnaryInterceptor(grpc_middleware.ChainUnaryServer(</span><br><span class="line">...</span><br><span class="line">)),</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="7-3-实现-logging-和-recover-拦截器"><a href="#7-3-实现-logging-和-recover-拦截器" class="headerlink" title="7.3 实现 logging 和 recover 拦截器"></a>7.3 实现 logging 和 recover 拦截器</h2><h3 id="7-3-1-logging"><a href="#7-3-1-logging" class="headerlink" title="7.3.1 logging"></a>7.3.1 logging</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">LoggingInterceptor</span><span class="params">(ctx context.Context, req <span class="keyword">interface</span>&#123;&#125;, info *grpc.UnaryServerInfo, handler grpc.UnaryHandler)</span> <span class="params">(<span class="keyword">interface</span>&#123;&#125;, error)</span></span> &#123;</span><br><span class="line">log.Printf(<span class="string">&quot;gRPC method: %s, %v&quot;</span>, info.FullMethod, req)</span><br><span class="line">resp, err := handler(ctx, req)</span><br><span class="line">log.Printf(<span class="string">&quot;gRPC method: %s, %v&quot;</span>, info.FullMethod, resp)</span><br><span class="line"><span class="keyword">return</span> resp, err</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-3-2-recover"><a href="#7-3-2-recover" class="headerlink" title="7.3.2 recover"></a>7.3.2 recover</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">RecoveryInterceptor</span><span class="params">(ctx context.Context, req <span class="keyword">interface</span>&#123;&#125;, info *grpc.UnaryServerInfo, handler grpc.UnaryHandler)</span> <span class="params">(<span class="keyword">interface</span>&#123;&#125;, error)</span></span> &#123;</span><br><span class="line"><span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> e := <span class="built_in">recover</span>(); e != <span class="literal">nil</span> &#123;</span><br><span class="line">debug.PrintStack()</span><br><span class="line">err = status.Errorf(codes.Internal, <span class="string">&quot;Panic err: %v&quot;</span>, e)</span><br><span class="line">&#125;</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> handler(ctx, req)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-3-3-完整代码"><a href="#7-3-3-完整代码" class="headerlink" title="7.3.3 完整代码"></a>7.3.3 完整代码</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> SearchService <span class="keyword">struct</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *SearchService)</span> <span class="title">Search</span><span class="params">(ctx context.Context, r *pb.SearchRequest)</span> <span class="params">(*pb.SearchResponse, error)</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> &amp;pb.SearchResponse&#123;Response: r.GetRequest() + <span class="string">&quot; Server&quot;</span>&#125;, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">tlsServer := gtls.Server&#123;</span><br><span class="line">CaFile:   <span class="string">&quot;../../certs/ca.pem&quot;</span>,</span><br><span class="line">CertFile: <span class="string">&quot;../../certs/server.pem&quot;</span>,</span><br><span class="line">KeyFile:  <span class="string">&quot;../../certs/server.key&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">c, err := tlsServer.GetCredentialsByCA()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;tlsServer.GetCredentialsByCA err: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 服务选项</span></span><br><span class="line">opts := []grpc.ServerOption&#123;</span><br><span class="line">grpc.Creds(c),</span><br><span class="line">grpc_middleware.WithUnaryServerChain(</span><br><span class="line">RecoveryInterceptor,</span><br><span class="line">LoggingInterceptor,</span><br><span class="line">),</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server := grpc.NewServer(opts...)</span><br><span class="line"></span><br><span class="line">pb.RegisterSearchServiceServer(server, &amp;SearchService&#123;&#125;)</span><br><span class="line"></span><br><span class="line">ln, err := net.Listen(<span class="string">&quot;tcp&quot;</span>, <span class="string">&quot;:9001&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;net.Listen err: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server.Serve(ln)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">LoggingInterceptor</span><span class="params">(ctx context.Context, req <span class="keyword">interface</span>&#123;&#125;, info *grpc.UnaryServerInfo, handler grpc.UnaryHandler)</span> <span class="params">(<span class="keyword">interface</span>&#123;&#125;, error)</span></span> &#123;</span><br><span class="line">log.Printf(<span class="string">&quot;gRPC method: %s, %v&quot;</span>, info.FullMethod, req)</span><br><span class="line">resp, err := handler(ctx, req)</span><br><span class="line">log.Printf(<span class="string">&quot;gRPC method: %s, %v&quot;</span>, info.FullMethod, resp)</span><br><span class="line"><span class="keyword">return</span> resp, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">RecoveryInterceptor</span><span class="params">(ctx context.Context, req <span class="keyword">interface</span>&#123;&#125;, info *grpc.UnaryServerInfo, handler grpc.UnaryHandler)</span> <span class="params">(resp <span class="keyword">interface</span>&#123;&#125;, err error)</span></span> &#123;</span><br><span class="line"><span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> e := <span class="built_in">recover</span>(); e != <span class="literal">nil</span> &#123;</span><br><span class="line">debug.PrintStack()</span><br><span class="line">err = status.Errorf(codes.Internal, <span class="string">&quot;Panic err: %v&quot;</span>, e)</span><br><span class="line">&#125;</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> handler(ctx, req)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="8-同时提供-HTTP-服务"><a href="#8-同时提供-HTTP-服务" class="headerlink" title="8. 同时提供 HTTP 服务"></a>8. 同时提供 HTTP 服务</h1><h2 id="8-1-服务端"><a href="#8-1-服务端" class="headerlink" title="8.1 服务端"></a>8.1 服务端</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> SearchService <span class="keyword">struct</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *SearchService)</span> <span class="title">Search</span><span class="params">(ctx context.Context, r *pb.SearchRequest)</span> <span class="params">(*pb.SearchResponse, error)</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> &amp;pb.SearchResponse&#123;Response: r.GetRequest() + <span class="string">&quot; Server&quot;</span>&#125;, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">http.ListenAndServeTLS(</span><br><span class="line"><span class="string">&quot;:9003&quot;</span>,</span><br><span class="line"><span class="string">&quot;../../certs/server.pem&quot;</span>,</span><br><span class="line"><span class="string">&quot;../../certs/server.key&quot;</span>,</span><br><span class="line">http.HandlerFunc(<span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> r.ProtoMajor == <span class="number">2</span> &amp;&amp; strings.Contains(r.Header.Get(<span class="string">&quot;Content-Type&quot;</span>), <span class="string">&quot;application/grpc&quot;</span>) &#123;</span><br><span class="line">GetHTTPServeGrpc().ServeHTTP(w, r)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">GetHTTPServeMux().ServeHTTP(w, r)</span><br><span class="line">&#125;</span><br><span class="line">&#125;),</span><br><span class="line">)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetHTTPServeGrpc</span><span class="params">()</span> *<span class="title">grpc</span>.<span class="title">Server</span></span> &#123;</span><br><span class="line">tlsServer := gtls.Server&#123;</span><br><span class="line">CertFile: <span class="string">&quot;../../certs/server.pem&quot;</span>,</span><br><span class="line">KeyFile:  <span class="string">&quot;../../certs/server.key&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">c, err := tlsServer.GetTLSCredentials()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;tlsServer.GetTLSCredentials err: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">server := grpc.NewServer(grpc.Creds(c))</span><br><span class="line">pb.RegisterSearchServiceServer(server, &amp;SearchService&#123;&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> server</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetHTTPServeMux</span><span class="params">()</span> *<span class="title">http</span>.<span class="title">ServeMux</span></span> &#123;</span><br><span class="line">mux := http.NewServeMux()</span><br><span class="line">mux.HandleFunc(<span class="string">&quot;/&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">w.Write([]<span class="keyword">byte</span>(<span class="string">&quot;result: go-grpc-example&quot;</span>))</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> mux</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="8-2-gRPC-客户端"><a href="#8-2-gRPC-客户端" class="headerlink" title="8.2 gRPC 客户端"></a>8.2 gRPC 客户端</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">tlsClient := gtls.Client&#123;</span><br><span class="line">ServerName: <span class="string">&quot;go-grpc-example&quot;</span>,</span><br><span class="line">CertFile:   <span class="string">&quot;../../certs/server.pem&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">c, err := tlsClient.GetTLSCredentials()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;tlsClient.GetTLSCredentials err: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">conn, err := grpc.Dial(<span class="string">&quot;:9003&quot;</span>, grpc.WithTransportCredentials(c))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;grpc.Dail err: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> conn.Close()</span><br><span class="line"></span><br><span class="line">client := pb.NewSearchServiceClient(conn)</span><br><span class="line">resp, err := client.Search(context.Background(), &amp;pb.SearchRequest&#123;</span><br><span class="line">Request: <span class="string">&quot;gRPC&quot;</span>,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;client.Search err: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">log.Printf(<span class="string">&quot;resp: %s&quot;</span>, resp.GetResponse())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="8-3-http-1-1-直接访问"><a href="#8-3-http-1-1-直接访问" class="headerlink" title="8.3 http/1.1 直接访问"></a>8.3 http/1.1 直接访问</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl -k --cert client.pem --key client.key https://127.0.0.1:9003</span><br><span class="line"></span><br><span class="line">curl -k --cacert ca.pem  https://127.0.0.1:9003</span><br></pre></td></tr></table></figure><h1 id="9-自定义认证"><a href="#9-自定义认证" class="headerlink" title="9. 自定义认证"></a>9. 自定义认证</h1><h2 id="9-1-自定义认证接口"><a href="#9-1-自定义认证接口" class="headerlink" title="9.1 自定义认证接口"></a>9.1 自定义认证接口</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> PerRPCCredentials <span class="keyword">interface</span> &#123;</span><br><span class="line"><span class="comment">// 获取当前请求认证所需的元数据 (metadata)</span></span><br><span class="line">GetRequestMetadata(ctx context.Context, uri ...<span class="keyword">string</span>) (<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span>, error)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 是否需要基于TLS认证安全传输</span></span><br><span class="line">RequireTransportSecurity() <span class="keyword">bool</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="9-2-服务端"><a href="#9-2-服务端" class="headerlink" title="9.2 服务端"></a>9.2 服务端</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> SearchService <span class="keyword">struct</span> &#123;</span><br><span class="line">auth *Auth</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *SearchService)</span> <span class="title">Search</span><span class="params">(ctx context.Context, r *pb.SearchRequest)</span> <span class="params">(*pb.SearchResponse, error)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> err := s.auth.Check(ctx); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> &amp;pb.SearchResponse&#123;Response: r.GetRequest() + <span class="string">&quot; Server&quot;</span>&#125;, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">tlsServer := gtls.Server&#123;</span><br><span class="line">CertFile: <span class="string">&quot;../../certs/server.pem&quot;</span>,</span><br><span class="line">KeyFile:  <span class="string">&quot;../../certs/server.key&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">c, err := tlsServer.GetTLSCredentials()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;tlsServer.GetTLSCredentials err: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server := grpc.NewServer(grpc.Creds(c))</span><br><span class="line"></span><br><span class="line">pb.RegisterSearchServiceServer(server, &amp;SearchService&#123;&#125;)</span><br><span class="line"></span><br><span class="line">ln, err := net.Listen(<span class="string">&quot;tcp&quot;</span>, <span class="string">&quot;:9004&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;net.Listen err: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server.Serve(ln)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Auth <span class="keyword">struct</span> &#123;</span><br><span class="line">appKey    <span class="keyword">string</span></span><br><span class="line">appSecret <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(a *Auth)</span> <span class="title">Check</span><span class="params">(ctx context.Context)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">md, ok := metadata.FromIncomingContext(ctx)</span><br><span class="line"><span class="keyword">if</span> !ok &#123;</span><br><span class="line"><span class="keyword">return</span> status.Errorf(codes.Unauthenticated, <span class="string">&quot;metadata.FromIncomingContext err&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">appKey    <span class="keyword">string</span></span><br><span class="line">appSecret <span class="keyword">string</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> value, ok := md[<span class="string">&quot;app_key&quot;</span>]; ok &#123;</span><br><span class="line">appKey = value[<span class="number">0</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> value, ok := md[<span class="string">&quot;app_secret&quot;</span>]; ok &#123;</span><br><span class="line">appSecret = value[<span class="number">0</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> appKey != a.GetAppKey() || appSecret != a.GetAppSecret() &#123;</span><br><span class="line"><span class="keyword">return</span> status.Errorf(codes.Unauthenticated, <span class="string">&quot;invalid token&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(a *Auth)</span> <span class="title">GetAppKey</span><span class="params">()</span> <span class="title">string</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;wx20200719163021&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(a *Auth)</span> <span class="title">GetAppSecret</span><span class="params">()</span> <span class="title">string</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;7d13b90ae8e40c0160209c4a985b3bdf01321b15&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="9-3-客户端"><a href="#9-3-客户端" class="headerlink" title="9.3 客户端"></a>9.3 客户端</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Auth <span class="keyword">struct</span> &#123;</span><br><span class="line">AppKey    <span class="keyword">string</span></span><br><span class="line">AppSecret <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(a *Auth)</span> <span class="title">GetRequestMetadata</span><span class="params">(ctx context.Context, uri ...<span class="keyword">string</span>)</span> <span class="params">(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span>, error)</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span>&#123;</span><br><span class="line"><span class="string">&quot;app_key&quot;</span>:    a.AppKey,</span><br><span class="line"><span class="string">&quot;app_secret&quot;</span>: a.AppSecret,</span><br><span class="line">&#125;, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(a *Auth)</span> <span class="title">RequireTransportSecurity</span><span class="params">()</span> <span class="title">bool</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">tlsClient := gtls.Client&#123;</span><br><span class="line">ServerName: <span class="string">&quot;go-grpc-example&quot;</span>,</span><br><span class="line">CertFile:   <span class="string">&quot;../../certs/server.pem&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">c, err := tlsClient.GetTLSCredentials()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;tlsClient.GetTLSCredentials err: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">auth := Auth&#123;</span><br><span class="line">AppKey:    <span class="string">&quot;wx20200719163021&quot;</span>,</span><br><span class="line">AppSecret: <span class="string">&quot;7d13b90ae8e40c0160209c4a985b3bdf01321b15&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">conn, err := grpc.Dial(<span class="string">&quot;:9004&quot;</span>, grpc.WithTransportCredentials(c),</span><br><span class="line">grpc.WithPerRPCCredentials(&amp;auth))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;grpc.Dail err: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> conn.Close()</span><br><span class="line"></span><br><span class="line">client := pb.NewSearchServiceClient(conn)</span><br><span class="line">resp, err := client.Search(context.Background(), &amp;pb.SearchRequest&#123;</span><br><span class="line">Request: <span class="string">&quot;gRPC&quot;</span>,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;client.Search err: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">log.Printf(<span class="string">&quot;resp: %s&quot;</span>, resp.GetResponse())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="10-gRPC-Deadline"><a href="#10-gRPC-Deadline" class="headerlink" title="10. gRPC Deadline"></a>10. gRPC Deadline</h1><h2 id="10-1-为什么要设置Deadline"><a href="#10-1-为什么要设置Deadline" class="headerlink" title="10.1 为什么要设置Deadline?"></a>10.1 为什么要设置Deadline?</h2><ul><li>未设置 Deadlines 时，将采用默认的 DEADLINE_EXCEEDED（该时间非常大）</li><li>产生阻塞等待时，会造成大量正在进行的请求被保留，直到这些请求都达到最大超时</li><li>会导致资源耗尽的风险，也会增加服务的延迟，最坏时可能导致整个进出崩溃</li></ul><h2 id="10-2-服务端"><a href="#10-2-服务端" class="headerlink" title="10.2 服务端"></a>10.2 服务端</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> SearchService <span class="keyword">struct</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *SearchService)</span> <span class="title">Search</span><span class="params">(ctx context.Context, r *pb.SearchRequest)</span> <span class="params">(*pb.SearchResponse, error)</span></span> &#123;</span><br><span class="line"><span class="comment">// Deadline</span></span><br><span class="line"><span class="keyword">if</span> ctx.Err() == context.Canceled &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, status.Errorf(codes.Canceled, <span class="string">&quot;SearchService.Search canceled&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> &amp;pb.SearchResponse&#123;Response: r.GetRequest() + <span class="string">&quot; Server&quot;</span>&#125;, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">tlsServer := gtls.Server&#123;</span><br><span class="line">CaFile:   <span class="string">&quot;../../certs/ca.pem&quot;</span>,</span><br><span class="line">CertFile: <span class="string">&quot;../../certs/server.pem&quot;</span>,</span><br><span class="line">KeyFile:  <span class="string">&quot;../../certs/server.key&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">c, err := tlsServer.GetCredentialsByCA()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;tlsServer.GetCredentialsByCA err: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 服务选项</span></span><br><span class="line">opts := []grpc.ServerOption&#123;</span><br><span class="line">grpc.Creds(c),</span><br><span class="line">grpc_middleware.WithUnaryServerChain(</span><br><span class="line">RecoveryInterceptor,</span><br><span class="line">LoggingInterceptor,</span><br><span class="line">),</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server := grpc.NewServer(opts...)</span><br><span class="line"></span><br><span class="line">pb.RegisterSearchServiceServer(server, &amp;SearchService&#123;&#125;)</span><br><span class="line"></span><br><span class="line">ln, err := net.Listen(<span class="string">&quot;tcp&quot;</span>, <span class="string">&quot;:9001&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;net.Listen err: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server.Serve(ln)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">LoggingInterceptor</span><span class="params">(ctx context.Context, req <span class="keyword">interface</span>&#123;&#125;, info *grpc.UnaryServerInfo, handler grpc.UnaryHandler)</span> <span class="params">(<span class="keyword">interface</span>&#123;&#125;, error)</span></span> &#123;</span><br><span class="line">log.Printf(<span class="string">&quot;gRPC method: %s, %v&quot;</span>, info.FullMethod, req)</span><br><span class="line">resp, err := handler(ctx, req)</span><br><span class="line">log.Printf(<span class="string">&quot;gRPC method: %s, %v&quot;</span>, info.FullMethod, resp)</span><br><span class="line"><span class="keyword">return</span> resp, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">RecoveryInterceptor</span><span class="params">(ctx context.Context, req <span class="keyword">interface</span>&#123;&#125;, info *grpc.UnaryServerInfo, handler grpc.UnaryHandler)</span> <span class="params">(resp <span class="keyword">interface</span>&#123;&#125;, err error)</span></span> &#123;</span><br><span class="line"><span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> e := <span class="built_in">recover</span>(); e != <span class="literal">nil</span> &#123;</span><br><span class="line">debug.PrintStack()</span><br><span class="line">err = status.Errorf(codes.Internal, <span class="string">&quot;Panic err: %v&quot;</span>, e)</span><br><span class="line">&#125;</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> handler(ctx, req)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="10-3-客户端"><a href="#10-3-客户端" class="headerlink" title="10.3 客户端"></a>10.3 客户端</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">tlsClient := gtls.Client&#123;</span><br><span class="line">ServerName: <span class="string">&quot;go-grpc-example&quot;</span>,</span><br><span class="line">CaFile:     <span class="string">&quot;../../certs/ca.pem&quot;</span>,</span><br><span class="line">CertFile:   <span class="string">&quot;../../certs/client.pem&quot;</span>,</span><br><span class="line">KeyFile:    <span class="string">&quot;../../certs/client.key&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">c, err := tlsClient.GetCredentialsByCA()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;tlsClient.GetCredentialsByCA err: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">conn, err := grpc.Dial(<span class="string">&quot;:9001&quot;</span>, grpc.WithTransportCredentials(c))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;grpc.Dail err: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> conn.Close()</span><br><span class="line"></span><br><span class="line"><span class="comment">// Deadlines</span></span><br><span class="line">ctx, cancel := context.WithDeadline(context.Background(), time.Now().Add(time.Duration(<span class="number">5</span>*time.Second)))</span><br><span class="line"><span class="keyword">defer</span> cancel()</span><br><span class="line"></span><br><span class="line">client := pb.NewSearchServiceClient(conn)</span><br><span class="line">resp, err := client.Search(ctx, &amp;pb.SearchRequest&#123;</span><br><span class="line">Request: <span class="string">&quot;gRPC&quot;</span>,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">statusErr, ok := status.FromError(err)</span><br><span class="line"><span class="keyword">if</span> ok &#123;</span><br><span class="line"><span class="keyword">if</span> statusErr.Code() == codes.DeadlineExceeded &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;client.Search err: deadline&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">log.Fatalf(<span class="string">&quot;client.Search err: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">log.Printf(<span class="string">&quot;resp: %s&quot;</span>, resp.GetResponse())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> rpc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go 加密签名</title>
      <link href="/2019/07/07/Go%20%E5%8A%A0%E5%AF%86%E7%AD%BE%E5%90%8D/"/>
      <url>/2019/07/07/Go%20%E5%8A%A0%E5%AF%86%E7%AD%BE%E5%90%8D/</url>
      
        <content type="html"><![CDATA[<h1 id="1-加密字符串格式"><a href="#1-加密字符串格式" class="headerlink" title="1. 加密字符串格式"></a>1. 加密字符串格式</h1><p>密钥、密文、签名的加密字符串格式</p><h2 id="1-1-hex"><a href="#1-1-hex" class="headerlink" title="1.1 hex"></a>1.1 hex</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hex.DecodeString(s <span class="keyword">string</span>)</span><br><span class="line"></span><br><span class="line">hex.EncodeToString(src []<span class="keyword">byte</span>) <span class="keyword">string</span></span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="1-2-base64"><a href="#1-2-base64" class="headerlink" title="1.2 base64"></a>1.2 base64</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">base64.StdEncoding.DecodeString(s <span class="keyword">string</span>) ([]<span class="keyword">byte</span>, error)</span><br><span class="line"></span><br><span class="line">base64.StdEncoding.EncodeToString(src []<span class="keyword">byte</span>) <span class="keyword">string</span></span><br></pre></td></tr></table></figure><h1 id="2-私钥格式"><a href="#2-私钥格式" class="headerlink" title="2. 私钥格式"></a>2. 私钥格式</h1><h2 id="2-1-PKCS1"><a href="#2-1-PKCS1" class="headerlink" title="2.1 PKCS1"></a>2.1 PKCS1</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x509.ParsePKCS1PrivateKey(der []<span class="keyword">byte</span>) (key <span class="keyword">interface</span>&#123;&#125;, err error)</span><br></pre></td></tr></table></figure><h2 id="2-2-PKCS8"><a href="#2-2-PKCS8" class="headerlink" title="2.2 PKCS8"></a>2.2 PKCS8</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x509.ParsePCKS8PrivateKey(der []<span class="keyword">byte</span>) (key <span class="keyword">interface</span>&#123;&#125;, err error)</span><br></pre></td></tr></table></figure><h1 id="3-SHA算法"><a href="#3-SHA算法" class="headerlink" title="3. SHA算法"></a>3. SHA算法</h1><h2 id="3-1-SHA1"><a href="#3-1-SHA1" class="headerlink" title="3.1 SHA1"></a>3.1 SHA1</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hash := sha1.New()</span><br><span class="line">hash.Write([]<span class="keyword">byte</span>(plainText))</span><br><span class="line">cipherText, err := rsa.SignPKCS1v15(rand.Reader, prvKey, crypto.SHA1, hash.Sum(<span class="literal">nil</span>))</span><br></pre></td></tr></table></figure><h2 id="3-2-SHA256"><a href="#3-2-SHA256" class="headerlink" title="3.2 SHA256"></a>3.2 SHA256</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hash := sha256.New()</span><br><span class="line">hash.Write([]<span class="keyword">byte</span>(plainText))</span><br><span class="line">cipherText, err := rsa.SignPKCS1v15(rand.Reader, prvKey, crypto.SHA256, hash.Sum(<span class="literal">nil</span>))</span><br></pre></td></tr></table></figure><h1 id="4-RSA"><a href="#4-RSA" class="headerlink" title="4. RSA"></a>4. RSA</h1><h2 id="4-1-加密"><a href="#4-1-加密" class="headerlink" title="4.1 加密"></a>4.1 加密</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsa.EncryptPKCS1v15(rand io.Reader, pub *PublicKey, plaintext []<span class="keyword">byte</span>) ([]<span class="keyword">byte</span>, error)</span><br></pre></td></tr></table></figure><h2 id="4-2-解密"><a href="#4-2-解密" class="headerlink" title="4.2 解密"></a>4.2 解密</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsa.DecryptPKCS1v15(rand io.Reader, priv *PrivateKey, ciphertext []<span class="keyword">byte</span>) ([]<span class="keyword">byte</span>, error)</span><br></pre></td></tr></table></figure><h2 id="4-3-签名"><a href="#4-3-签名" class="headerlink" title="4.3 签名"></a>4.3 签名</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsa.SignPKCS1v15(rand io.Reader, priv *PrivateKey, hash crypto.Hash, hashed []<span class="keyword">byte</span>) ([]<span class="keyword">byte</span>, error)</span><br></pre></td></tr></table></figure><h2 id="4-4-验签"><a href="#4-4-验签" class="headerlink" title="4.4 验签"></a>4.4 验签</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsa.VerifyPKCS1v15(pub *PublicKey, hash crypto.Hash, hashed []<span class="keyword">byte</span>, sig []<span class="keyword">byte</span>) error</span><br></pre></td></tr></table></figure><h1 id="5-应用示例"><a href="#5-应用示例" class="headerlink" title="5. 应用示例"></a>5. 应用示例</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;crypto&quot;</span></span><br><span class="line"><span class="string">&quot;crypto/rand&quot;</span></span><br><span class="line"><span class="string">&quot;crypto/rsa&quot;</span></span><br><span class="line"><span class="string">&quot;crypto/sha1&quot;</span></span><br><span class="line"><span class="string">&quot;crypto/x509&quot;</span></span><br><span class="line"><span class="string">&quot;encoding/base64&quot;</span></span><br><span class="line"><span class="string">&quot;encoding/hex&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">RsaEncryptWithSha1Base64</span><span class="params">(plaintext, publicKey <span class="keyword">string</span>)</span> <span class="params">(<span class="keyword">string</span>, error)</span></span> &#123;</span><br><span class="line">key, _ := base64.StdEncoding.DecodeString(publicKey)</span><br><span class="line">pubKey, _ := x509.ParsePKIXPublicKey(key)</span><br><span class="line"></span><br><span class="line">ciphertext, err := rsa.EncryptPKCS1v15(rand.Reader, pubKey.(*rsa.PublicKey), []<span class="keyword">byte</span>(plaintext))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;&quot;</span>, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> base64.StdEncoding.EncodeToString(ciphertext), <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">RsaDecryptWithSha1Base64</span><span class="params">(ciphertext, privateKey <span class="keyword">string</span>)</span> <span class="params">(<span class="keyword">string</span>, error)</span></span> &#123;</span><br><span class="line">ciphertextBytes, err := base64.StdEncoding.DecodeString(ciphertext)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;&quot;</span>, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">key, _ := base64.StdEncoding.DecodeString(privateKey)</span><br><span class="line">prvKey, _ := x509.ParsePKCS1PrivateKey(key)</span><br><span class="line">plaintext, err := rsa.DecryptPKCS1v15(rand.Reader, prvKey, ciphertextBytes)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">string</span>(plaintext), err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">RsaSignWithSha1Hex</span><span class="params">(data, privateKey <span class="keyword">string</span>)</span> <span class="params">(<span class="keyword">string</span>, error)</span></span> &#123;</span><br><span class="line">key, err := hex.DecodeString(privateKey)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;&quot;</span>, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">prvKey, err := x509.ParsePKCS8PrivateKey(key)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;&quot;</span>, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">hash := sha1.New()</span><br><span class="line">hash.Write([]<span class="keyword">byte</span>(data))</span><br><span class="line"></span><br><span class="line">signature, err := rsa.SignPKCS1v15(rand.Reader, prvKey.(*rsa.PrivateKey), crypto.SHA1, hash.Sum(<span class="literal">nil</span>))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;&quot;</span>, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> hex.EncodeToString(signature), <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">RsaVerifySignWithSha1Base64</span><span class="params">(data, signature, publicKey <span class="keyword">string</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">sign, err := base64.StdEncoding.DecodeString(signature)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">key, _ := base64.StdEncoding.DecodeString(publicKey)</span><br><span class="line">pubKey, err := x509.ParsePKIXPublicKey(key)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">hash := sha1.New()</span><br><span class="line">hash.Write([]<span class="keyword">byte</span>(data))</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> rsa.VerifyPKCS1v15(pubKey.(*rsa.PublicKey), crypto.SHA1, hash.Sum(<span class="literal">nil</span>), sign)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Go 包管理</title>
      <link href="/2019/07/01/Go%20%E5%8C%85%E7%AE%A1%E7%90%86/"/>
      <url>/2019/07/01/Go%20%E5%8C%85%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="1-Go-Modules"><a href="#1-Go-Modules" class="headerlink" title="1. Go Modules"></a>1. Go Modules</h1><h2 id="1-1-简介"><a href="#1-1-简介" class="headerlink" title="1.1 简介"></a>1.1 简介</h2><p>Go Modules 是官方最新的包管理方式，它解决了如下问题：</p><ul><li>所有的依赖包必须在 GOPATH 下，但同一个库只能保存一个版本</li><li>工作目录必须在 GOPATH/src 目录下</li></ul><p>使用 Go Modules 之后，可在 GOPATH/src 之外创建目录和管理包</p><p>设置 go mod 和 go proxy:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">go env -w GOBIN=/Users/eli/go/bin</span><br><span class="line">go env -w GO111MODULE=on</span><br><span class="line">go env -w GOPROXY=https://goproxy.cn,direct</span><br><span class="line"></span><br><span class="line">go env</span><br></pre></td></tr></table></figure><p>GO111MODULE:</p><ul><li>on: 强制使用modules, 不再去GOPATH下查找</li><li>off: 不使用modules，去GOPATH和vendor下查找</li><li>auto: 默认值，如果当前目录下有go.mod文件，则使用modules</li></ul><span id="more"></span><h2 id="1-2-基础命令"><a href="#1-2-基础命令" class="headerlink" title="1.2 基础命令"></a>1.2 基础命令</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">go <span class="built_in">help</span> mod</span><br><span class="line"></span><br><span class="line">go mod &lt;<span class="built_in">command</span>&gt; [arguments]</span><br><span class="line"></span><br><span class="line">download    download modules to <span class="built_in">local</span> cache</span><br><span class="line">edit        edit go.mod from tools or scripts</span><br><span class="line">graph       <span class="built_in">print</span> module requirement graph</span><br><span class="line">init        initialize new module <span class="keyword">in</span> current directory</span><br><span class="line">tidy        add missing and remove unused modules</span><br><span class="line">vendor      make vendored copy of dependencies</span><br><span class="line">verify      verify dependencies have expected content</span><br><span class="line">why         explain why packages or modules are needed</span><br></pre></td></tr></table></figure><h2 id="1-3-基本使用"><a href="#1-3-基本使用" class="headerlink" title="1.3 基本使用"></a>1.3 基本使用</h2><h3 id="1-3-1-初始化"><a href="#1-3-1-初始化" class="headerlink" title="1.3.1 初始化"></a>1.3.1 初始化</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">go mod init github.com/elihe2011/gomod</span><br><span class="line"></span><br><span class="line">go get -u github.com/gin-gonic/gin</span><br></pre></td></tr></table></figure><p>生成的文件：</p><ul><li><code>go.mod</code>: 模块管理文件<ul><li>module语句: 指定包的名字（路径）</li><li>require语句: 指定的依赖项模块</li><li>replace语句: 可以替换依赖项模块</li><li>exclude语句: 可以忽略依赖项模块</li></ul></li><li><code>go.sum</code>: 记录依赖看的版本和哈希值</li></ul><p>解决获取包时的代理错误：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ go get -u github.com/gin-gonic/gin</span><br><span class="line"></span><br><span class="line">go get github.com/gin-gonic/gin: module github.com/gin-gonic/gin: Get <span class="string">&quot;https://proxy.golang.org/github.com/gin-gonic/gin/@v/list&quot;</span>: dial tcp 34.64.4.113:443: i/o timeout</span><br><span class="line"></span><br><span class="line"><span class="comment"># go包管理,默认使用的是proxy.golang.org，在国内无法访问，换为</span></span><br><span class="line">go env -w GOPROXY=https://goproxy.cn,direct   <span class="comment"># 七牛云</span></span><br><span class="line"></span><br><span class="line">go env -w GOPROXY=https://mirrors.aliyun.com/goproxy/,direct </span><br></pre></td></tr></table></figure><h3 id="1-3-2-下载指定版本的依赖库"><a href="#1-3-2-下载指定版本的依赖库" class="headerlink" title="1.3.2 下载指定版本的依赖库"></a>1.3.2 下载指定版本的依赖库</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 当前模块和支撑包</span></span><br><span class="line">go list -m all</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可用版本</span></span><br><span class="line">go list -m -versions github.com/gin-gonic/gin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除无效的modules</span></span><br><span class="line">go mod tidy</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取指定版本</span></span><br><span class="line">go get github.com/gin-gonic/gin@</span><br></pre></td></tr></table></figure><h2 id="1-4-编译打包"><a href="#1-4-编译打包" class="headerlink" title="1.4 编译打包"></a>1.4 编译打包</h2><h3 id="1-4-1-使用GOPATH模式进行打包"><a href="#1-4-1-使用GOPATH模式进行打包" class="headerlink" title="1.4.1 使用GOPATH模式进行打包"></a>1.4.1 使用GOPATH模式进行打包</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> GO111MODULE=off</span><br><span class="line"><span class="built_in">export</span> CGO_ENABLED=0</span><br><span class="line">go build  -a -v -o app main.go</span><br></pre></td></tr></table></figure><h3 id="1-4-2-使用vendor目录下包来进行打包"><a href="#1-4-2-使用vendor目录下包来进行打包" class="headerlink" title="1.4.2 使用vendor目录下包来进行打包"></a>1.4.2 使用vendor目录下包来进行打包</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> GO111MODULE=on</span><br><span class="line"><span class="built_in">export</span> CGO_ENABLED=0</span><br><span class="line">go build -mod=vendor -a -v -o app main.go</span><br></pre></td></tr></table></figure><h2 id="1-5-go-modules包管理特点"><a href="#1-5-go-modules包管理特点" class="headerlink" title="1.5 go modules包管理特点"></a>1.5 go modules包管理特点</h2><ul><li>第三方包存储路径：<code>$GOPATH/pkg/mod</code></li><li><code>$GOPATH/pkg/mod</code> 下可以保存相同包的不同版本</li><li>当项目放在 <code>$GOPATH/src</code> 时，<code>GO111MODULE=auto</code> 自动模式</li><li>依赖包中的地址失效了怎么办？比如 golang.org/x/… 下的包都无法下载怎么办？<ul><li>在go.mod文件里用 replace 替换包，例如<br>replace golang.org/x/text =&gt; github.com/golang/text latest<br>这样，go会用 github.com/golang/text 替代golang.org/x/text，原理就是下载github.com/golang/text 的最新版本到 $GOPATH/pkg/mod/golang.org/x/text下</li></ul></li></ul><h1 id="2-govendor"><a href="#2-govendor" class="headerlink" title="2. govendor"></a>2. govendor</h1><p>govendor只是用来管理项目的依赖包，如果GOPATH中本身没有项目的依赖包，则需要通过go get先下载到GOPATH中，再通过govendor add +external拷贝到vendor目录中。Go 1.6以上版本默认开启GO15VENDOREXPERIMENT环境变量。</p><h2 id="2-1-安装"><a href="#2-1-安装" class="headerlink" title="2.1 安装"></a>2.1 安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go get -u -v github.com/kardianos/govendor</span><br></pre></td></tr></table></figure><h2 id="2-2-常用命令"><a href="#2-2-常用命令" class="headerlink" title="2.2 常用命令"></a>2.2 常用命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 初始化, 生成vender目录等</span></span><br><span class="line">govendor init</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加包</span></span><br><span class="line">govendor add github.com/fvbock/endless</span><br><span class="line">govendor add +external</span><br><span class="line"></span><br><span class="line"><span class="comment"># 移除包</span></span><br><span class="line">govendor remove github.com/fvbock/endless</span><br><span class="line">govendor remove +unused</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看包</span></span><br><span class="line">govendor list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出所有缺失、过期和修改过的包</span></span><br><span class="line">govendor status</span><br><span class="line"></span><br><span class="line"><span class="comment"># 本地存在 vendor.json 时候拉去依赖包，匹配所记录的版本</span></span><br><span class="line">govendor sync</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取包</span></span><br><span class="line">govendor get github.com/gorilla/websocket</span><br><span class="line">govendor fetch github.com/gorilla/websocket</span><br></pre></td></tr></table></figure><h2 id="2-3-包状态"><a href="#2-3-包状态" class="headerlink" title="2.3 包状态"></a>2.3 包状态</h2><table><thead><tr><th>状态</th><th>缩写状态</th><th>含义</th></tr></thead><tbody><tr><td>+local</td><td>l</td><td>本地包，即项目自身的包组织</td></tr><tr><td>+external</td><td>e</td><td>外部包，即被 $GOPATH 管理，但不在 vendor 目录下</td></tr><tr><td>+vendor</td><td>v</td><td>已被 govendor 管理，即在 vendor 目录下</td></tr><tr><td>+std</td><td>s</td><td>标准库中的包</td></tr><tr><td>+unused</td><td>u</td><td>未使用的包，即包在 vendor 目录下，但项目并没有用到</td></tr><tr><td>+missing</td><td>m</td><td>代码引用了依赖包，但该包并没有找到</td></tr><tr><td>+program</td><td>p</td><td>主程序包，意味着可以编译为执行文件</td></tr><tr><td>+outside</td><td>o</td><td>外部包和缺失的包</td></tr><tr><td>+all</td><td>a</td><td>所有的包</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Go Redis</title>
      <link href="/2019/05/20/Go%20Redis/"/>
      <url>/2019/05/20/Go%20Redis/</url>
      
        <content type="html"><![CDATA[<h1 id="1-入门"><a href="#1-入门" class="headerlink" title="1. 入门"></a>1. 入门</h1><h2 id="1-1-安装"><a href="#1-1-安装" class="headerlink" title="1.1 安装"></a>1.1 安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go get -u github.com/go-redis/redis</span><br></pre></td></tr></table></figure><h2 id="1-2-初始化连接"><a href="#1-2-初始化连接" class="headerlink" title="1.2 初始化连接"></a>1.2 初始化连接</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> (</span><br><span class="line">REDIS_IP   = <span class="string">&quot;127.0.0.1&quot;</span></span><br><span class="line">REDIS_PORT = <span class="string">&quot;6379&quot;</span></span><br><span class="line">REDIS_PWD  = <span class="string">&quot;&quot;</span></span><br><span class="line">REDIS_DB   = <span class="number">0</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">ctx = context.Background()</span><br><span class="line">rdb *redis.Client</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line">rdb = redis.NewClient(&amp;redis.Options&#123;</span><br><span class="line">Addr:     REDIS_IP + <span class="string">&quot;:&quot;</span> + REDIS_PORT,</span><br><span class="line">Password: REDIS_PWD,</span><br><span class="line">DB:       REDIS_DB,</span><br><span class="line">PoolSize: <span class="number">20</span>,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><span id="more"></span><h1 id="2-操作"><a href="#2-操作" class="headerlink" title="2. 操作"></a>2. 操作</h1><h2 id="2-1-基本操作"><a href="#2-1-基本操作" class="headerlink" title="2.1 基本操作"></a>2.1 基本操作</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Basic</span><span class="params">()</span></span> &#123;</span><br><span class="line">keys := rdb.Keys(ctx, <span class="string">&quot;*&quot;</span>).Val()</span><br><span class="line">fmt.Println(keys)</span><br><span class="line"></span><br><span class="line">size := rdb.DBSize(ctx).Val()</span><br><span class="line">fmt.Println(size)</span><br><span class="line"></span><br><span class="line">exist := rdb.Exists(ctx, <span class="string">&quot;name&quot;</span>, <span class="string">&quot;age&quot;</span>)</span><br><span class="line">fmt.Println(exist)</span><br><span class="line"></span><br><span class="line">del := rdb.Del(ctx, <span class="string">&quot;abc&quot;</span>).Val()</span><br><span class="line">fmt.Println(del)</span><br><span class="line"></span><br><span class="line">ttl := rdb.TTL(ctx, <span class="string">&quot;age&quot;</span>).Val()</span><br><span class="line">fmt.Println(ttl)</span><br><span class="line"></span><br><span class="line">expire := rdb.Expire(ctx, <span class="string">&quot;age&quot;</span>, time.Second*<span class="number">60</span>).Val()</span><br><span class="line">fmt.Println(expire)</span><br><span class="line"></span><br><span class="line">_type := rdb.Type(ctx, <span class="string">&quot;name&quot;</span>).Val()</span><br><span class="line">fmt.Println(_type)</span><br><span class="line"></span><br><span class="line">key := rdb.RandomKey(ctx).Val()</span><br><span class="line">fmt.Println(key)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-2-String"><a href="#2-2-String" class="headerlink" title="2.2 String"></a>2.2 String</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">String</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> ret <span class="keyword">interface</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">ret = rdb.Set(ctx, <span class="string">&quot;name&quot;</span>, <span class="string">&quot;eli&quot;</span>, time.Hour*<span class="number">24</span>).Val()</span><br><span class="line">fmt.Println(ret)</span><br><span class="line"></span><br><span class="line"><span class="comment">// set if not exist</span></span><br><span class="line">ret = rdb.SetNX(ctx, <span class="string">&quot;name&quot;</span>, <span class="string">&quot;eli&quot;</span>, time.Hour).Val()</span><br><span class="line">fmt.Println(ret)</span><br><span class="line"></span><br><span class="line"><span class="comment">// set if exist</span></span><br><span class="line">ret = rdb.SetXX(ctx, <span class="string">&quot;name&quot;</span>, <span class="string">&quot;eli&quot;</span>, time.Hour*<span class="number">12</span>).Val()</span><br><span class="line">fmt.Println(ret)</span><br><span class="line"></span><br><span class="line">ret = rdb.Get(ctx, <span class="string">&quot;name&quot;</span>)</span><br><span class="line">fmt.Println(ret)</span><br><span class="line"></span><br><span class="line">ret = rdb.MGet(ctx, <span class="string">&quot;name&quot;</span>, <span class="string">&quot;age&quot;</span>)</span><br><span class="line">fmt.Println(ret)</span><br><span class="line"></span><br><span class="line">ret = rdb.Incr(ctx, <span class="string">&quot;age&quot;</span>).Val()</span><br><span class="line">fmt.Println(ret)</span><br><span class="line"></span><br><span class="line">ret = rdb.Decr(ctx, <span class="string">&quot;age&quot;</span>).Val()</span><br><span class="line">fmt.Println(ret)</span><br><span class="line"></span><br><span class="line">ret = rdb.Append(ctx, <span class="string">&quot;name&quot;</span>, <span class="string">&quot;he&quot;</span>)</span><br><span class="line">fmt.Println(ret)</span><br><span class="line"></span><br><span class="line">ret = rdb.StrLen(ctx, <span class="string">&quot;name&quot;</span>)</span><br><span class="line">fmt.Println(ret)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-3-Hashmap"><a href="#2-3-Hashmap" class="headerlink" title="2.3 Hashmap"></a>2.3 Hashmap</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Hashmap</span><span class="params">()</span></span> &#123;</span><br><span class="line">key := <span class="string">&quot;account&quot;</span></span><br><span class="line">field := <span class="string">&quot;name&quot;</span></span><br><span class="line">fields := <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;&#123;</span><br><span class="line"><span class="string">&quot;city&quot;</span>:   <span class="string">&quot;beijing&quot;</span>,</span><br><span class="line"><span class="string">&quot;age&quot;</span>:    <span class="number">27</span>,</span><br><span class="line"><span class="string">&quot;skills&quot;</span>: <span class="string">&quot;golang&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rdb.HSet(ctx, key, field, <span class="string">&quot;jack&quot;</span>)</span><br><span class="line">rdb.HMSet(ctx, key, fields)</span><br><span class="line"></span><br><span class="line">name := rdb.HGet(ctx, key, <span class="string">&quot;name&quot;</span>)</span><br><span class="line">fmt.Println(name)</span><br><span class="line"></span><br><span class="line">items := rdb.HKeys(ctx, key).Val()</span><br><span class="line">fmt.Println(items)</span><br><span class="line"></span><br><span class="line">vals := rdb.HVals(ctx, key).Val()</span><br><span class="line">fmt.Println(vals)</span><br><span class="line"></span><br><span class="line">exist := rdb.HExists(ctx, key, <span class="string">&quot;city&quot;</span>)</span><br><span class="line">fmt.Println(exist)</span><br><span class="line"></span><br><span class="line">rdb.HIncrBy(ctx, key, <span class="string">&quot;age&quot;</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">values := rdb.HMGet(ctx, key, <span class="string">&quot;name&quot;</span>, <span class="string">&quot;age&quot;</span>).Val()</span><br><span class="line">fmt.Println(values)</span><br><span class="line"></span><br><span class="line">valuesAll := rdb.HGetAll(ctx, key).Val()</span><br><span class="line">fmt.Println(valuesAll)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-4-List"><a href="#2-4-List" class="headerlink" title="2.4 List"></a>2.4 List</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">List</span><span class="params">()</span></span> &#123;</span><br><span class="line">key := <span class="string">&quot;list&quot;</span></span><br><span class="line">rdb.Del(ctx, key)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">5</span>; i++ &#123;</span><br><span class="line">rdb.RPush(ctx, key, strconv.Itoa(i))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">5</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line">rdb.LPush(ctx, key, strconv.Itoa(i))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">length := rdb.LLen(ctx, key).Val()</span><br><span class="line">fmt.Println(length)</span><br><span class="line"></span><br><span class="line">value := rdb.LIndex(ctx, key, <span class="number">1</span>).Val()</span><br><span class="line">fmt.Println(value)</span><br><span class="line"></span><br><span class="line">rdb.LSet(ctx, key, <span class="number">1</span>, <span class="string">&quot;golang&quot;</span>)</span><br><span class="line"></span><br><span class="line">value = rdb.LPop(ctx, key).Val()</span><br><span class="line">fmt.Println(value)</span><br><span class="line"></span><br><span class="line">n := rdb.LRem(ctx, key, <span class="number">0</span>, <span class="string">&quot;5&quot;</span>).Val()</span><br><span class="line">fmt.Println(n)</span><br><span class="line"></span><br><span class="line">l := rdb.LRange(ctx, key, <span class="number">0</span>, <span class="number">-1</span>).Val()</span><br><span class="line">fmt.Println(l)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-5-Set"><a href="#2-5-Set" class="headerlink" title="2.5 Set"></a>2.5 Set</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Set</span><span class="params">()</span></span> &#123;</span><br><span class="line">key1 := <span class="string">&quot;set1&quot;</span></span><br><span class="line">key2 := <span class="string">&quot;set2&quot;</span></span><br><span class="line">rdb.Del(ctx, key1, key2)</span><br><span class="line"></span><br><span class="line">rand.Seed(time.Now().UnixNano())</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">5</span>; i++ &#123;</span><br><span class="line">rdb.SAdd(ctx, key1, rand.Intn(<span class="number">10</span>))</span><br><span class="line">rdb.SAdd(ctx, key2, rand.Intn(<span class="number">10</span>))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">n1 := rdb.SCard(ctx, key1).Val()</span><br><span class="line">fmt.Println(n1)</span><br><span class="line"></span><br><span class="line">e1 := rdb.SIsMember(ctx, key1, <span class="number">3</span>).Val()</span><br><span class="line">fmt.Println(e1)</span><br><span class="line"></span><br><span class="line">v1 := rdb.SRandMember(ctx, key1).Val()</span><br><span class="line">fmt.Println(v1)</span><br><span class="line"></span><br><span class="line">v2 := rdb.SRandMemberN(ctx, key1, <span class="number">3</span>).Val()</span><br><span class="line">fmt.Println(v2)</span><br><span class="line"></span><br><span class="line">v3 := rdb.SPop(ctx, key1).Val()</span><br><span class="line">fmt.Println(v3)</span><br><span class="line"></span><br><span class="line">n2 := rdb.SRem(ctx, key1, <span class="number">2</span>).Val()</span><br><span class="line">fmt.Println(n2)</span><br><span class="line"></span><br><span class="line">v4 := rdb.SMembers(ctx, key1)</span><br><span class="line">fmt.Println(v4)</span><br><span class="line"></span><br><span class="line">v5 := rdb.SMembers(ctx, key2)</span><br><span class="line">fmt.Println(v5)</span><br><span class="line"></span><br><span class="line">v6 := rdb.SInter(ctx, key1, key2).Val()</span><br><span class="line">fmt.Println(v6)</span><br><span class="line"></span><br><span class="line">v7 := rdb.SUnion(ctx, key1, key2).Val()</span><br><span class="line">fmt.Println(v7)</span><br><span class="line"></span><br><span class="line">v8 := rdb.SDiff(ctx, key1, key2).Val()</span><br><span class="line">fmt.Println(v8)</span><br><span class="line"></span><br><span class="line">rdb.SInterStore(ctx, <span class="string">&quot;set3&quot;</span>, key1, key2)</span><br><span class="line">rdb.SUnionStore(ctx, <span class="string">&quot;set4&quot;</span>, key1, key2)</span><br><span class="line">rdb.SDiffStore(ctx, <span class="string">&quot;set5&quot;</span>, key1, key2)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-6-SortedSet"><a href="#2-6-SortedSet" class="headerlink" title="2.6 SortedSet"></a>2.6 SortedSet</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">SortedSet</span><span class="params">()</span></span> &#123;</span><br><span class="line">key1, key2 := <span class="string">&quot;zset1&quot;</span>, <span class="string">&quot;zset2&quot;</span></span><br><span class="line">rdb.Del(ctx, key1, key2)</span><br><span class="line"></span><br><span class="line">rand.Seed(time.Now().UnixNano())</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line">score := <span class="keyword">float64</span>(rand.Intn(<span class="number">100</span>))</span><br><span class="line">member := <span class="string">&quot;golang-&quot;</span> + strconv.Itoa(i)</span><br><span class="line">data := &amp;redis.Z&#123;</span><br><span class="line">score,</span><br><span class="line">member,</span><br><span class="line">&#125;</span><br><span class="line">rdb.ZAdd(ctx, key1, data)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line">score := <span class="keyword">float64</span>(rand.Intn(<span class="number">100</span>))</span><br><span class="line">member := <span class="string">&quot;golang-&quot;</span> + strconv.Itoa(i)</span><br><span class="line">data := &amp;redis.Z&#123;</span><br><span class="line">score,</span><br><span class="line">member,</span><br><span class="line">&#125;</span><br><span class="line">rdb.ZAdd(ctx, key2, data)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">n1 := rdb.ZCard(ctx, key1)</span><br><span class="line">fmt.Println(n1)</span><br><span class="line"></span><br><span class="line">s1 := rdb.ZScore(ctx, key1, <span class="string">&quot;golang-3&quot;</span>).Val()</span><br><span class="line">fmt.Println(s1)</span><br><span class="line"></span><br><span class="line">v1 := rdb.ZIncrBy(ctx, key1, <span class="number">50</span>, <span class="string">&quot;golang-3&quot;</span>).Val()</span><br><span class="line">fmt.Println(v1)</span><br><span class="line"></span><br><span class="line">s2 := rdb.ZRank(ctx, key1, <span class="string">&quot;golang-3&quot;</span>).Val()</span><br><span class="line">fmt.Println(s2)</span><br><span class="line"></span><br><span class="line">s3 := rdb.ZRevRank(ctx, key1, <span class="string">&quot;golang-3&quot;</span>).Val()</span><br><span class="line">fmt.Println(s3)</span><br><span class="line"></span><br><span class="line">s4 := rdb.ZRange(ctx, key1, <span class="number">0</span>, <span class="number">-1</span>).Val()</span><br><span class="line">fmt.Println(s4)</span><br><span class="line"></span><br><span class="line">s5 := rdb.ZRevRange(ctx, key2, <span class="number">0</span>, <span class="number">-1</span>).Val()</span><br><span class="line">fmt.Println(s5)</span><br><span class="line"></span><br><span class="line">v2 := rdb.ZRem(ctx, key2, <span class="string">&quot;golang-3&quot;</span>).Val()</span><br><span class="line">fmt.Println(v2)</span><br><span class="line"></span><br><span class="line">key3, key4 := <span class="string">&quot;zset3&quot;</span>, <span class="string">&quot;zset4&quot;</span></span><br><span class="line">kslice := []<span class="keyword">string</span>&#123;key1, key2&#125;</span><br><span class="line">wslice := []<span class="keyword">float64</span>&#123;<span class="number">1.00</span>, <span class="number">1.00</span>&#125;</span><br><span class="line">z := &amp;redis.ZStore&#123;</span><br><span class="line">kslice,</span><br><span class="line">wslice,</span><br><span class="line"><span class="string">&quot;SUM&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">r1 := rdb.ZInterStore(ctx, key3, z).Val()</span><br><span class="line">fmt.Println(r1)</span><br><span class="line"></span><br><span class="line">r2 := rdb.ZUnionStore(ctx, key4, z).Val()</span><br><span class="line">fmt.Println(r2)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-7-订阅和发布"><a href="#2-7-订阅和发布" class="headerlink" title="2.7 订阅和发布"></a>2.7 订阅和发布</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Subscription</span><span class="params">()</span></span> &#123;</span><br><span class="line">channels := []<span class="keyword">string</span>&#123;<span class="string">&quot;news&quot;</span>, <span class="string">&quot;it&quot;</span>, <span class="string">&quot;sports&quot;</span>, <span class="string">&quot;shopping&quot;</span>&#125;</span><br><span class="line">sub := rdb.PSubscribe(ctx, channels...)</span><br><span class="line">_, err := sub.Receive(ctx)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ch := sub.Channel()</span><br><span class="line"><span class="keyword">for</span> msg := <span class="keyword">range</span> ch &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;%v: %v\n&quot;</span>, msg.Channel, msg.Payload)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Publish</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> msg <span class="keyword">string</span></span><br><span class="line">channels := []<span class="keyword">string</span>&#123;<span class="string">&quot;news&quot;</span>, <span class="string">&quot;it&quot;</span>, <span class="string">&quot;sports&quot;</span>, <span class="string">&quot;shopping&quot;</span>&#125;</span><br><span class="line">rand.Seed(time.Now().UnixNano())</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;please input some message: &quot;</span>)</span><br><span class="line">fmt.Scanln(&amp;msg)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> msg == <span class="string">&quot;quit&quot;</span> &#123;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">channel := channels[rand.Intn(<span class="number">4</span>)]</span><br><span class="line"></span><br><span class="line">result := rdb.Publish(ctx, channel, msg).Val()</span><br><span class="line"><span class="keyword">if</span> result == <span class="number">1</span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;send info to [%v] success\n&quot;</span>, channel)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Go GORM</title>
      <link href="/2019/05/18/Go%20GORM/"/>
      <url>/2019/05/18/Go%20GORM/</url>
      
        <content type="html"><![CDATA[<h1 id="1-入门"><a href="#1-入门" class="headerlink" title="1. 入门"></a>1. 入门</h1><h2 id="1-1-安装"><a href="#1-1-安装" class="headerlink" title="1.1 安装"></a>1.1 安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go get -u github.com/jinzhu/gorm</span><br></pre></td></tr></table></figure><h2 id="1-2-驱动"><a href="#1-2-驱动" class="headerlink" title="1.2 驱动"></a>1.2 驱动</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> _ <span class="string">&quot;github.com/jinzhu/gorm/dialects/mysql&quot;</span></span><br><span class="line"><span class="keyword">import</span> _ <span class="string">&quot;github.com/jinzhu/gorm/dialects/postgres&quot;</span></span><br><span class="line"><span class="keyword">import</span> _ <span class="string">&quot;github.com/jinzhu/gorm/dialects/sqlite&quot;</span></span><br><span class="line"><span class="keyword">import</span> _ <span class="string">&quot;github.com/jinzhu/gorm/dialects/mssql&quot;</span></span><br></pre></td></tr></table></figure><span id="more"></span><h1 id="2-操作"><a href="#2-操作" class="headerlink" title="2. 操作"></a>2. 操作</h1><h2 id="2-1-表结构定义"><a href="#2-1-表结构定义" class="headerlink" title="2.1 表结构定义"></a>2.1 表结构定义</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Admin <span class="keyword">struct</span> &#123;</span><br><span class="line">ID       <span class="keyword">int64</span></span><br><span class="line">Username <span class="keyword">string</span> <span class="string">`gorm:&quot;size:50;not null&quot;`</span></span><br><span class="line">Password <span class="keyword">string</span> <span class="string">`gorm:&quot;size:128&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Account <span class="keyword">struct</span> &#123;</span><br><span class="line">gorm.Model <span class="comment">// ID, CreatedAt, UpdatedAt, DeletedAt</span></span><br><span class="line"></span><br><span class="line">Appkey  <span class="keyword">string</span> <span class="string">`gorm:&quot;type:varchar(15);index:idx_appkey;not null&quot;`</span></span><br><span class="line">Company <span class="keyword">string</span> <span class="string">`gorm:&quot;column:company_name;size:30&quot;`</span></span><br><span class="line">Status  <span class="keyword">int8</span>   <span class="string">`gorm:&quot;default:1&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(Admin)</span> <span class="title">TableName</span><span class="params">()</span> <span class="title">string</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;tbl_admin&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(Account)</span> <span class="title">TableName</span><span class="params">()</span> <span class="title">string</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;tbl_account&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-2-连接数据库"><a href="#2-2-连接数据库" class="headerlink" title="2.2 连接数据库"></a>2.2 连接数据库</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> (</span><br><span class="line">DBUSER = <span class="string">&quot;root&quot;</span></span><br><span class="line">DBPASS = <span class="string">&quot;&quot;</span></span><br><span class="line">HOST   = <span class="string">&quot;127.0.0.1&quot;</span></span><br><span class="line">PORT   = <span class="string">&quot;3306&quot;</span></span><br><span class="line">DBNAME = <span class="string">&quot;blog&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetConn</span><span class="params">()</span> *<span class="title">gorm</span>.<span class="title">DB</span></span> &#123;</span><br><span class="line">connStr := fmt.Sprintf(<span class="string">&quot;%s:%s@tcp(%s:%s)/%s?charset=utf8&amp;parseTime=True&amp;loc=Local&amp;timeout=10ms&quot;</span>,</span><br><span class="line">DBUSER, DBPASS, HOST, PORT, DBNAME)</span><br><span class="line">fmt.Println(connStr)</span><br><span class="line"></span><br><span class="line">db, err := gorm.Open(<span class="string">&quot;mysql&quot;</span>, connStr)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;mysql connect error: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">db.DB().SetMaxIdleConns(<span class="number">10</span>)</span><br><span class="line">db.DB().SetMaxOpenConns(<span class="number">100</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 自动创建和更新表结构</span></span><br><span class="line"><span class="keyword">if</span> !db.HasTable(<span class="string">&quot;tbl_admin&quot;</span>) &#123;</span><br><span class="line">db.Set(<span class="string">&quot;gorm:table_options&quot;</span>, <span class="string">&quot;ENGINE=InnoDB&quot;</span>).AutoMigrate(&amp;Admin&#123;&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> !db.HasTable(<span class="string">&quot;tbl_account&quot;</span>) &#123;</span><br><span class="line">db.Set(<span class="string">&quot;gorm:table_options&quot;</span>, <span class="string">&quot;ENGINE=InnoDB&quot;</span>).AutoMigrate(&amp;Account&#123;&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> db</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-3-新增数据"><a href="#2-3-新增数据" class="headerlink" title="2.3 新增数据"></a>2.3 新增数据</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Insert</span><span class="params">(db *gorm.DB)</span></span> &#123;</span><br><span class="line">c := <span class="built_in">make</span>(<span class="keyword">chan</span> Admin)</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> generateData(c)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> v := <span class="keyword">range</span> c &#123;</span><br><span class="line">db.NewRecord(v) <span class="comment">// 检查主键是否存在</span></span><br><span class="line">db.Create(&amp;v)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">generateRandomString</span><span class="params">(n <span class="keyword">int</span>)</span> <span class="title">string</span></span> &#123;</span><br><span class="line">s := <span class="string">&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890_&quot;</span></span><br><span class="line">bs := <span class="built_in">make</span>([]<span class="keyword">byte</span>, n)</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ &#123;</span><br><span class="line">bs[i] = s[rand.Intn(<span class="built_in">len</span>(s))]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">string</span>(bs)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">md5Encrypt</span><span class="params">(s <span class="keyword">string</span>)</span> <span class="title">string</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> fmt.Sprintf(<span class="string">&quot;%x&quot;</span>, md5.Sum([]<span class="keyword">byte</span>(s)))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">generateData</span><span class="params">(c <span class="keyword">chan</span> Admin)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">20</span>; i++ &#123;</span><br><span class="line">name := generateRandomString(<span class="number">6</span>)</span><br><span class="line">pass := md5Encrypt(name + <span class="string">&quot;_123456&quot;</span>)</span><br><span class="line">c &lt;- Admin&#123;Username: name, Password: pass&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">close</span>(c)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-4-查询数据"><a href="#2-4-查询数据" class="headerlink" title="2.4 查询数据"></a>2.4 查询数据</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Select</span><span class="params">(db *gorm.DB)</span></span> &#123;</span><br><span class="line">a := Admin&#123;&#125;</span><br><span class="line">db.Select([]<span class="keyword">string</span>&#123;<span class="string">&quot;id&quot;</span>, <span class="string">&quot;username&quot;</span>, <span class="string">&quot;password&quot;</span>&#125;).Where(<span class="string">&quot;id = ?&quot;</span>, <span class="number">1</span>).First(&amp;a)</span><br><span class="line">fmt.Println(a)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">SelectMany</span><span class="params">(db *gorm.DB)</span></span> &#123;</span><br><span class="line">as := []Admin&#123;&#125;</span><br><span class="line">db.Where(<span class="string">&quot;username like &#x27;%4%&#x27;&quot;</span>).Find(&amp;as)</span><br><span class="line"><span class="keyword">for</span> _, a := <span class="keyword">range</span> as &#123;</span><br><span class="line">fmt.Println(a)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-5-更新数据"><a href="#2-5-更新数据" class="headerlink" title="2.5 更新数据"></a>2.5 更新数据</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Update</span><span class="params">(db *gorm.DB)</span></span> &#123;</span><br><span class="line">a := Admin&#123;&#125;</span><br><span class="line">db.Where(<span class="string">&quot;id = ?&quot;</span>, <span class="number">1</span>).First(&amp;a)</span><br><span class="line">a.Username = <span class="string">&quot;elihe123&quot;</span></span><br><span class="line">a.Password = md5Encrypt(<span class="string">&quot;123456&quot;</span>)</span><br><span class="line">db.Save(a) <span class="comment">// 数据必须有变化，否则无法保存</span></span><br><span class="line"></span><br><span class="line">b := Admin&#123;</span><br><span class="line">ID:       <span class="number">30</span>,</span><br><span class="line">Username: <span class="string">&quot;rania123&quot;</span>,</span><br><span class="line">Password: md5Encrypt(<span class="string">&quot;654321&quot;</span>),</span><br><span class="line">&#125;</span><br><span class="line">db.Save(b) <span class="comment">// id不存在时，自动创建</span></span><br><span class="line"></span><br><span class="line">c := Admin&#123;ID: <span class="number">10</span>&#125;</span><br><span class="line">db.Model(&amp;c).Update(<span class="string">&quot;username&quot;</span>, <span class="string">&quot;eli&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-6-删除数据"><a href="#2-6-删除数据" class="headerlink" title="2.6 删除数据"></a>2.6 删除数据</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Delete</span><span class="params">(db *gorm.DB)</span></span> &#123;</span><br><span class="line">a := Admin&#123;ID: <span class="number">30</span>&#125;</span><br><span class="line">db.Delete(&amp;a)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="3-钩子函数-callbacks"><a href="#3-钩子函数-callbacks" class="headerlink" title="3. 钩子函数(callbacks)"></a>3. 钩子函数(callbacks)</h1><ul><li>创建: BeforeSave, BeforeCreate, AfterCreate, AfterSave</li><li>更新: BeforeSave, BeforeUpdate, AfterUpdate, AfterSave</li><li>删除: BeforeDelete, AfterDelete</li><li>查询: AfterFind</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(Account)</span> <span class="title">BeforeCreate</span><span class="params">(scope *gorm.Scope)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">scope.SetColumn(<span class="string">&quot;CreatedAt&quot;</span>, time.Now().Unix())</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(Account)</span> <span class="title">BeforeUpdate</span><span class="params">(scope *gorm.Scope)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">scope.SetColumn(<span class="string">&quot;UpdatedAt&quot;</span>, time.Now().Unix())</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Go Gin框架</title>
      <link href="/2019/05/17/Go%20Gin%E6%A1%86%E6%9E%B6/"/>
      <url>/2019/05/17/Go%20Gin%E6%A1%86%E6%9E%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="1-Gin简介"><a href="#1-Gin简介" class="headerlink" title="1. Gin简介"></a>1. Gin简介</h1><h2 id="1-1-核心术语"><a href="#1-1-核心术语" class="headerlink" title="1.1 核心术语"></a>1.1 核心术语</h2><ul><li>Engine: 实现 ServeHTTP 接口的 Handler</li><li>MethodTree： 根据http请求方法分别维护的路由树</li><li>RouterGroup：路由表分组，方便中间件统一处理</li><li>Context：上下文，在 Handler 之间传递参数</li></ul><h2 id="1-2-HttpRouter"><a href="#1-2-HttpRouter" class="headerlink" title="1.2 HttpRouter"></a>1.2 HttpRouter</h2><p>gin 使用路由框架 httprouter，它使用动态压缩前缀树 (compact prefix trie) 或称基数树 (radix tree) ，具有共同前缀的节点拥有相同的父节点，内存开销极小，没有反射。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// router.go</span></span><br><span class="line"><span class="keyword">type</span> Router <span class="keyword">struct</span> &#123;</span><br><span class="line">    trees <span class="keyword">map</span>[<span class="keyword">string</span>]*node       <span class="comment">// 每种请求方法，单独管理一棵树</span></span><br><span class="line">    RedirectTrailingSlash <span class="keyword">bool</span>   <span class="comment">// 自动处理URL尾部的 “/”</span></span><br><span class="line">    RedirectFixedPath <span class="keyword">bool</span>       <span class="comment">// 路径矫正，如../和//</span></span><br><span class="line">    HandleMethodNotAllowed <span class="keyword">bool</span></span><br><span class="line">HandleOPTIONS <span class="keyword">bool</span>           <span class="comment">// 开启OPTIONS自动匹配, 手动匹配优先级更高</span></span><br><span class="line">NotFound http.Handler</span><br><span class="line">MethodNotAllowed http.Handler</span><br><span class="line">PanicHandler <span class="function"><span class="keyword">func</span><span class="params">(http.ResponseWriter, *http.Request, <span class="keyword">interface</span>&#123;&#125;)</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// tree.go</span></span><br><span class="line"><span class="keyword">type</span> node <span class="keyword">struct</span> &#123;</span><br><span class="line">path      <span class="keyword">string</span></span><br><span class="line">indices   <span class="keyword">string</span>   <span class="comment">// 分支的首字母：indices = eu，下面的 s [earch, upport]</span></span><br><span class="line">wildChild <span class="keyword">bool</span>     <span class="comment">// 是否为参数节点，参数节点用:name表示</span></span><br><span class="line">nType     nodeType <span class="comment">// static：没有handler，root: 第一个插入的节点，catchAll: 有*匹配的节点，param: 参数节点如:post</span></span><br><span class="line">priority  <span class="keyword">uint32</span>   <span class="comment">// 子节点越多，或说绑定handle方法越多的节点，priority优先级越高</span></span><br><span class="line">children  []*node</span><br><span class="line">handle    Handle</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><span id="more"></span><p>路由的保存：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Priority   Path             Handle</span><br><span class="line">9          \                *&lt;1&gt;</span><br><span class="line">3          ├s               nil</span><br><span class="line">2          |├earch\         *&lt;2&gt;</span><br><span class="line">1          |└upport\        *&lt;3&gt;</span><br><span class="line">2          ├blog\           *&lt;4&gt;</span><br><span class="line">1          |    └:post      nil</span><br><span class="line">1          |         └\     *&lt;5&gt;</span><br><span class="line">2          ├about-us\       *&lt;6&gt;</span><br><span class="line">1          |        └team\  *&lt;7&gt;</span><br><span class="line">1          └contact\        *&lt;8&gt;</span><br><span class="line"></span><br><span class="line">GET(&quot;/search/&quot;, h1)</span><br><span class="line">GET(&quot;/support/&quot;, h2)</span><br><span class="line">GET(&quot;/blog/:post/&quot;, h3)</span><br><span class="line">GET(&quot;/about-us/&quot;, h4)</span><br><span class="line">GET(&quot;/about-us/team/&quot;, h5)</span><br><span class="line">GET(&quot;/contact/&quot;, h6)</span><br></pre></td></tr></table></figure><p>r.Handle：<code>r.Get</code>, <code>r.Post</code>等方法的具体实现</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(r *Router)</span> <span class="title">Handle</span><span class="params">(method, path <span class="keyword">string</span>, handle Handle)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> path[<span class="number">0</span>] != <span class="string">&#x27;/&#x27;</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(<span class="string">&quot;path must begin with &#x27;/&#x27; in path &#x27;&quot;</span> + path + <span class="string">&quot;&#x27;&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> r.trees == <span class="literal">nil</span> &#123;</span><br><span class="line">r.trees = <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]*node)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 按方法创建路由树</span></span><br><span class="line">root := r.trees[method]</span><br><span class="line"><span class="keyword">if</span> root == <span class="literal">nil</span> &#123;</span><br><span class="line">root = <span class="built_in">new</span>(node)</span><br><span class="line">r.trees[method] = root</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">root.addRoute(path, handle)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="2-使用"><a href="#2-使用" class="headerlink" title="2. 使用"></a>2. 使用</h1><h2 id="2-1-安装"><a href="#2-1-安装" class="headerlink" title="2.1 安装"></a>2.1 安装</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go get -u github.com/gin-gonic/gin</span><br></pre></td></tr></table></figure><h2 id="2-2-入门"><a href="#2-2-入门" class="headerlink" title="2.2 入门"></a>2.2 入门</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *Context)</span> <span class="title">JSON</span><span class="params">(code <span class="keyword">int</span>, obj <span class="keyword">interface</span>&#123;&#125;)</span></span></span><br><span class="line"><span class="keyword">type</span> H <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">// 路由</span></span><br><span class="line">    r := gin.Default()</span><br><span class="line"></span><br><span class="line">    r.GET(<span class="string">&quot;/&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">        c.JSON(<span class="number">200</span>, gin.H &#123;</span><br><span class="line">            <span class="string">&quot;id&quot;</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="string">&quot;content&quot;</span>: <span class="string">&quot;hello world!&quot;</span>,</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    r.Run(<span class="string">&quot;:8080&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-3-请求参数"><a href="#2-3-请求参数" class="headerlink" title="2.3 请求参数"></a>2.3 请求参数</h2><h3 id="2-3-1-路由参数"><a href="#2-3-1-路由参数" class="headerlink" title="2.3.1 路由参数"></a>2.3.1 路由参数</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *Context)</span> <span class="title">Param</span><span class="params">(key <span class="keyword">string</span>)</span> <span class="title">string</span></span></span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">r := gin.Default()</span><br><span class="line"></span><br><span class="line">r.GET(<span class="string">&quot;/user/:name&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">name := c.Param(<span class="string">&quot;name&quot;</span>)</span><br><span class="line">c.String(http.StatusOK, <span class="string">&quot;hello %s&quot;</span>, name)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将匹配 /user/john/ 和 /user/john/send</span></span><br><span class="line">    <span class="comment">// 如果没有其他路由匹配 /user/john，它将重定向到 /user/john/</span></span><br><span class="line">r.GET(<span class="string">&quot;/user/:name/*action&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">name := c.Param(<span class="string">&quot;name&quot;</span>)</span><br><span class="line">action := c.Param(<span class="string">&quot;action&quot;</span>)</span><br><span class="line"></span><br><span class="line">msg := name + <span class="string">&quot; is doing &quot;</span> + action</span><br><span class="line">c.String(http.StatusOK, msg)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">r.Run()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-3-2-Query参数"><a href="#2-3-2-Query参数" class="headerlink" title="2.3.2 Query参数"></a>2.3.2 Query参数</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *Context)</span> <span class="title">Query</span><span class="params">(key <span class="keyword">string</span>)</span> <span class="title">string</span></span> </span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *Context)</span> <span class="title">GetQuery</span><span class="params">(key <span class="keyword">string</span>)</span> <span class="params">(<span class="keyword">string</span>, <span class="keyword">bool</span>)</span></span> </span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *Context)</span> <span class="title">DefaultQuery</span><span class="params">(key, defaultValue <span class="keyword">string</span>)</span> <span class="title">string</span></span></span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">r := gin.Default()</span><br><span class="line"></span><br><span class="line">r.GET(<span class="string">&quot;/user&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">        filters := c.Query(<span class="string">&quot;filters&quot;</span>)</span><br><span class="line">pageIndex := c.DefaultQuery(<span class="string">&quot;page_index&quot;</span>, <span class="string">&quot;1&quot;</span>)</span><br><span class="line">pageSize := c.DefaultQuery(<span class="string">&quot;page_size&quot;</span>, <span class="string">&quot;10&quot;</span>)</span><br><span class="line"></span><br><span class="line">c.JSON(http.StatusOK, gin.H&#123;<span class="string">&quot;filters&quot;</span>: filters, <span class="string">&quot;page_index&quot;</span>: pageIndex, <span class="string">&quot;page_size&quot;</span>: pageSize&#125;)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">r.Run()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-3-3-Form参数"><a href="#2-3-3-Form参数" class="headerlink" title="2.3.3 Form参数"></a>2.3.3 Form参数</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *Context)</span> <span class="title">PostForm</span><span class="params">(key <span class="keyword">string</span>)</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *Context)</span> <span class="title">DefaultPostForm</span><span class="params">(key, defaultValue <span class="keyword">string</span>)</span> <span class="title">string</span></span></span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">r := gin.Default()</span><br><span class="line"></span><br><span class="line">r.POST(<span class="string">&quot;/login&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">username := c.PostForm(<span class="string">&quot;username&quot;</span>)</span><br><span class="line">password := c.DefaultPostForm(<span class="string">&quot;password&quot;</span>, <span class="string">&quot;123456&quot;</span>)</span><br><span class="line"></span><br><span class="line">c.JSON(http.StatusOK, gin.H&#123;</span><br><span class="line"><span class="string">&quot;username&quot;</span>: username,</span><br><span class="line"><span class="string">&quot;password&quot;</span>: password,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">r.Run()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// curl -d &#x27;username=tom&amp;password=abc123&#x27; -X POST http://127.0.0.1:8080/login</span></span><br></pre></td></tr></table></figure><h3 id="2-3-4-参数相关方法"><a href="#2-3-4-参数相关方法" class="headerlink" title="2.3.4 参数相关方法"></a>2.3.4 参数相关方法</h3><table><thead><tr><th align="left">查询参数</th><th align="left">Form表单</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">Query</td><td align="left">PostForm</td><td align="left">获取key对应的值，不存在为空字符串</td></tr><tr><td align="left">GetQuery</td><td align="left">GetPostForm</td><td align="left">多返回一个key是否存在的结果</td></tr><tr><td align="left">QueryArray</td><td align="left">PostFormArray</td><td align="left">获取key对应的数组，不存在返回一个空数组</td></tr><tr><td align="left">GetQueryArray</td><td align="left">GetPostFormArray</td><td align="left">多返回一个key是否存在的结果</td></tr><tr><td align="left">QueryMap</td><td align="left">PostFormMap</td><td align="left">获取key对应的map，不存在返回空map</td></tr><tr><td align="left">GetQueryMap</td><td align="left">GetPostFormMap</td><td align="left">多返回一个key是否存在的结果</td></tr><tr><td align="left">DefaultQuery</td><td align="left">DefaultPostForm</td><td align="left">key不存在的话，可以指定返回的默认值</td></tr></tbody></table><h2 id="2-4-文件操作"><a href="#2-4-文件操作" class="headerlink" title="2.4 文件操作"></a>2.4 文件操作</h2><p>调整文件上传表单大小：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 给表单限制上传大小，默认 32MiB</span></span><br><span class="line">r.MaxMultipartMemory = <span class="number">128</span> &lt;&lt; <span class="number">20</span>  <span class="comment">// 128MB</span></span><br></pre></td></tr></table></figure><h3 id="2-4-1-单文件上传"><a href="#2-4-1-单文件上传" class="headerlink" title="2.4.1 单文件上传"></a>2.4.1 单文件上传</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">upload</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">    <span class="comment">// 限制文件大小</span></span><br><span class="line">err := c.Request.ParseMultipartForm(<span class="number">4</span> &lt;&lt; <span class="number">20</span>) <span class="comment">// 4Mb</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">c.String(http.StatusBadRequest, <span class="string">&quot;file is too large&quot;</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// header, err := c.FormFile(&quot;file&quot;)</span></span><br><span class="line">file, header, err := c.Request.FormFile(<span class="string">&quot;file&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">c.String(http.StatusBadRequest, err.Error())</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> file.Close()</span><br><span class="line"></span><br><span class="line">fmt.Printf(<span class="string">&quot;filename: %s, size: %d&quot;</span>, header.Filename, header.Size)</span><br><span class="line">err = saveFile(header.Filename, file)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">c.String(http.StatusBadRequest, err.Error())</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">c.String(http.StatusOK, <span class="string">&quot;uploaded!&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">saveFile</span><span class="params">(name <span class="keyword">string</span>, input multipart.File)</span> <span class="params">(err error)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> output *os.File</span><br><span class="line">output, err = os.OpenFile(name, os.O_CREATE|os.O_RDWR, <span class="number">0644</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> output.Close()</span><br><span class="line"></span><br><span class="line">_, err = io.Copy(output, input)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">curl -X POST http:<span class="comment">//192.168.80.1:8080/upload \</span></span><br><span class="line">  -F <span class="string">&quot;file=@/home/ubuntu/ryu-socket_20210527.tar&quot;</span> \</span><br><span class="line">  -H <span class="string">&quot;Content-Type: multipart/form-data&quot;</span></span><br></pre></td></tr></table></figure><h3 id="2-4-2-多文件上传"><a href="#2-4-2-多文件上传" class="headerlink" title="2.4.2 多文件上传"></a>2.4.2 多文件上传</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">uploadFiles</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">form, err := c.MultipartForm()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">c.String(http.StatusBadRequest, err.Error())</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">files := form.File[<span class="string">&quot;upload[]&quot;</span>]</span><br><span class="line">fmt.Printf(<span class="string">&quot;file numbers: %d\n&quot;</span>, <span class="built_in">len</span>(files))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i, _ := <span class="keyword">range</span> files &#123;</span><br><span class="line">file, err := files[i].Open()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">c.String(http.StatusBadRequest, err.Error())</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Printf(<span class="string">&quot;filename: %s, size: %d\n&quot;</span>, files[i].Filename, files[i].Size)</span><br><span class="line"></span><br><span class="line">err = saveFile(files[i].Filename, file)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">c.String(http.StatusBadRequest, err.Error())</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">c.String(http.StatusOK, <span class="string">&quot;uploaded&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">curl -X POST http:<span class="comment">//192.168.80.1:8080/uploadFiles \</span></span><br><span class="line">  -F <span class="string">&quot;upload[]=@/home/ubuntu/clean_ryu_imgs.sh&quot;</span> \</span><br><span class="line">  -F <span class="string">&quot;upload[]=@/home/ubuntu/.profile&quot;</span> \</span><br><span class="line">  -F <span class="string">&quot;upload[]=@/home/ubuntu/vegeta_12.8.4_linux_amd64.tar.gz&quot;</span> \</span><br><span class="line">  -H <span class="string">&quot;Content-Type: multipart/form-data&quot;</span></span><br></pre></td></tr></table></figure><h3 id="2-4-3-文件下载"><a href="#2-4-3-文件下载" class="headerlink" title="2.4.3 文件下载"></a>2.4.3 文件下载</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">download</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">txt := c.Query(<span class="string">&quot;content&quot;</span>)</span><br><span class="line">content := <span class="string">&quot;hello, 我是文件, &quot;</span> + txt</span><br><span class="line"></span><br><span class="line">c.Writer.WriteHeader(http.StatusOK)</span><br><span class="line">c.Header(<span class="string">&quot;Content-Disposition&quot;</span>, <span class="string">&quot;attachment; filename=hello.txt&quot;</span>)</span><br><span class="line">c.Header(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/text/plain&quot;</span>)</span><br><span class="line">c.Header(<span class="string">&quot;Accept-Length&quot;</span>, fmt.Sprintf(<span class="string">&quot;%d&quot;</span>, <span class="built_in">len</span>(content)))</span><br><span class="line">c.Writer.Write([]<span class="keyword">byte</span>(content))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">curl http:<span class="comment">//192.168.80.1:8080/download?content=abc</span></span><br></pre></td></tr></table></figure><h1 id="4-高级功能"><a href="#4-高级功能" class="headerlink" title="4. 高级功能"></a>4. 高级功能</h1><h2 id="4-1-路由分组"><a href="#4-1-路由分组" class="headerlink" title="4.1 路由分组"></a>4.1 路由分组</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">r := gin.Default()</span><br><span class="line"></span><br><span class="line">v1 := r.Group(<span class="string">&quot;/v1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">v1.POST(<span class="string">&quot;/login&quot;</span>, LoginHandler)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">v2 := r.Group(<span class="string">&quot;/v2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">v2.POST(<span class="string">&quot;/login&quot;</span>, LoginV2Handler)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-2-中间件"><a href="#4-2-中间件" class="headerlink" title="4.2 中间件"></a>4.2 中间件</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(group *RouterGroup)</span> <span class="title">Use</span><span class="params">(middleware ...HandlerFunc)</span> <span class="title">IRoutes</span></span></span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">// 不使用默认中间件： Logger 和 Recovery </span></span><br><span class="line">r := gin.New()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 全局中间件</span></span><br><span class="line">r.Use(gin.Logger())</span><br><span class="line">r.Use(gin.Recovery())</span><br><span class="line"></span><br><span class="line"><span class="comment">// 路由中间件</span></span><br><span class="line">r.GET(<span class="string">&quot;/location&quot;</span>, LocationLogger(), LocationHandler)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 分组中间件</span></span><br><span class="line">auth := r.Group(<span class="string">&quot;/auth&quot;</span>)</span><br><span class="line">auth.Use(AuthRequired())</span><br><span class="line">&#123;</span><br><span class="line">auth.POST(<span class="string">&quot;/user&quot;</span>, UserHandler)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">r.Run()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-2-1-自定义中间件"><a href="#4-2-1-自定义中间件" class="headerlink" title="4.2.1 自定义中间件"></a>4.2.1 自定义中间件</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">r := gin.New()</span><br><span class="line">r.Use(Logger())</span><br><span class="line"></span><br><span class="line">r.GET(<span class="string">&quot;/test&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">time.Sleep(time.Second * <span class="number">5</span>)</span><br><span class="line">c.JSON(http.StatusOK, gin.H&#123;</span><br><span class="line"><span class="string">&quot;msg&quot;</span>: c.MustGet(<span class="string">&quot;foo&quot;</span>),</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">r.Run()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Logger</span><span class="params">()</span> <span class="title">gin</span>.<span class="title">HandlerFunc</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line"><span class="comment">// before request</span></span><br><span class="line">t := time.Now()</span><br><span class="line"></span><br><span class="line"><span class="comment">// set a variable</span></span><br><span class="line">c.Set(<span class="string">&quot;foo&quot;</span>, <span class="string">&quot;bar&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// DO request</span></span><br><span class="line">c.Next()</span><br><span class="line"></span><br><span class="line"><span class="comment">// after request</span></span><br><span class="line">latency := time.Since(t)</span><br><span class="line">log.Println(latency)</span><br><span class="line"></span><br><span class="line"><span class="comment">// access the result status</span></span><br><span class="line">status := c.Writer.Status()</span><br><span class="line">log.Println(status)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-2-2-BasicAuth中间件"><a href="#4-2-2-BasicAuth中间件" class="headerlink" title="4.2.2 BasicAuth中间件"></a>4.2.2 BasicAuth中间件</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// simulate private data</span></span><br><span class="line"><span class="keyword">var</span> secrets = gin.H&#123;</span><br><span class="line"><span class="string">&quot;foo&quot;</span>:  gin.H&#123;<span class="string">&quot;email&quot;</span>: <span class="string">&quot;foo@abc.com&quot;</span>, <span class="string">&quot;phone&quot;</span>: <span class="string">&quot;13302254321&quot;</span>&#125;,</span><br><span class="line"><span class="string">&quot;jack&quot;</span>: gin.H&#123;<span class="string">&quot;email&quot;</span>: <span class="string">&quot;jack@abc.com&quot;</span>, <span class="string">&quot;phone&quot;</span>: <span class="string">&quot;18952098765&quot;</span>&#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">r := gin.Default()</span><br><span class="line"></span><br><span class="line">authorized := r.Group(<span class="string">&quot;/admin&quot;</span>, gin.BasicAuth(gin.Accounts&#123;</span><br><span class="line"><span class="string">&quot;foo&quot;</span>:  <span class="string">&quot;bar&quot;</span>,</span><br><span class="line"><span class="string">&quot;jack&quot;</span>: <span class="string">&quot;1234&quot;</span>,</span><br><span class="line">&#125;))</span><br><span class="line"></span><br><span class="line">authorized.GET(<span class="string">&quot;/secrets&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">user := c.MustGet(gin.AuthUserKey).(<span class="keyword">string</span>)</span><br><span class="line"><span class="keyword">if</span> secret, ok := secrets[user]; ok &#123;</span><br><span class="line">c.JSON(http.StatusOK, gin.H&#123;</span><br><span class="line"><span class="string">&quot;user&quot;</span>:   user,</span><br><span class="line"><span class="string">&quot;secret&quot;</span>: secret,</span><br><span class="line">&#125;)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">c.JSON(http.StatusUnauthorized, gin.H&#123;</span><br><span class="line"><span class="string">&quot;user&quot;</span>:   user,</span><br><span class="line"><span class="string">&quot;secret&quot;</span>: <span class="string">&quot;NO SECRET&quot;</span>,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">r.Run()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-3-记录日志"><a href="#4-3-记录日志" class="headerlink" title="4.3 记录日志"></a>4.3 记录日志</h2><h3 id="4-3-1-日志文件"><a href="#4-3-1-日志文件" class="headerlink" title="4.3.1 日志文件"></a>4.3.1 日志文件</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> (</span><br><span class="line">LogSavePath    = <span class="string">&quot;logs/&quot;</span></span><br><span class="line">LogSaveName    = <span class="string">&quot;gin&quot;</span></span><br><span class="line">LogSaveFileExt = <span class="string">&quot;log&quot;</span></span><br><span class="line">TimeFormat     = <span class="string">&quot;20060102&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Level <span class="keyword">int</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">F *os.File</span><br><span class="line"></span><br><span class="line">DefaultPrefix      = <span class="string">&quot;&quot;</span></span><br><span class="line">DefaultCallerDepth = <span class="number">2</span></span><br><span class="line"></span><br><span class="line">logger     *log.Logger</span><br><span class="line">logPrefix  = <span class="string">&quot;&quot;</span></span><br><span class="line">levelFlags = []<span class="keyword">string</span>&#123;<span class="string">&quot;DEBUG&quot;</span>, <span class="string">&quot;INFO&quot;</span>, <span class="string">&quot;WRAN&quot;</span>, <span class="string">&quot;ERROR&quot;</span>, <span class="string">&quot;FATAL&quot;</span>&#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">DEBUG Level = <span class="literal">iota</span></span><br><span class="line">INFO</span><br><span class="line">WARNING</span><br><span class="line">ERROR</span><br><span class="line">FATAL</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line">filePath := getLogFileFullPath()</span><br><span class="line">F = openLogFile(filePath)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 新建日志处理</span></span><br><span class="line">logger = log.New(F, DefaultPrefix, log.LstdFlags)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">getLogFilePath</span><span class="params">()</span> <span class="title">string</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> fmt.Sprintf(<span class="string">&quot;%s&quot;</span>, LogSavePath)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">getLogFileFullPath</span><span class="params">()</span> <span class="title">string</span></span> &#123;</span><br><span class="line">prefixPath := getLogFilePath()</span><br><span class="line">suffixPath := fmt.Sprintf(<span class="string">&quot;%s%s.%s&quot;</span>, LogSaveName, time.Now().Format(TimeFormat), LogSaveFileExt)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> fmt.Sprintf(<span class="string">&quot;%s%s&quot;</span>, prefixPath, suffixPath)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">openLogFile</span><span class="params">(filePath <span class="keyword">string</span>)</span> *<span class="title">os</span>.<span class="title">File</span></span> &#123;</span><br><span class="line">_, err := os.Stat(filePath)</span><br><span class="line"><span class="keyword">switch</span> &#123;</span><br><span class="line"><span class="keyword">case</span> os.IsNotExist(err):</span><br><span class="line">makeDir()</span><br><span class="line"><span class="keyword">case</span> os.IsPermission(err):</span><br><span class="line">log.Fatalf(<span class="string">&quot;Permission: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">handle, err := os.OpenFile(filePath, os.O_APPEND|os.O_CREATE|os.O_WRONLY, <span class="number">0644</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;Failed to OpenFile: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> handle</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">makeDir</span><span class="params">()</span></span> &#123;</span><br><span class="line">pwd, _ := os.Getwd()</span><br><span class="line">err := os.MkdirAll(pwd+<span class="string">&quot;/&quot;</span>+getLogFilePath(), os.ModePerm)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Debug</span><span class="params">(v ...<span class="keyword">interface</span>&#123;&#125;)</span></span> &#123;</span><br><span class="line">setPrefix(DEBUG)</span><br><span class="line">logger.Println(v)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Info</span><span class="params">(v ...<span class="keyword">interface</span>&#123;&#125;)</span></span> &#123;</span><br><span class="line">setPrefix(INFO)</span><br><span class="line">logger.Println(v)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Warn</span><span class="params">(v ...<span class="keyword">interface</span>&#123;&#125;)</span></span> &#123;</span><br><span class="line">setPrefix(WARNING)</span><br><span class="line">logger.Println(v)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Error</span><span class="params">(v ...<span class="keyword">interface</span>&#123;&#125;)</span></span> &#123;</span><br><span class="line">setPrefix(ERROR)</span><br><span class="line">logger.Println(v)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Fatal</span><span class="params">(v ...<span class="keyword">interface</span>&#123;&#125;)</span></span> &#123;</span><br><span class="line">setPrefix(FATAL)</span><br><span class="line">logger.Println(v)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">setPrefix</span><span class="params">(level Level)</span></span> &#123;</span><br><span class="line">_, file, line, ok := runtime.Caller(DefaultCallerDepth)</span><br><span class="line"><span class="keyword">if</span> ok &#123;</span><br><span class="line">logPrefix = fmt.Sprintf(<span class="string">&quot;[%s][%s:%d]&quot;</span>, levelFlags[level], filepath.Base(file), line)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">logPrefix = fmt.Sprintf(<span class="string">&quot;[%s]&quot;</span>, levelFlags[level])</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">logger.SetPrefix(logPrefix)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-3-2-日志格式"><a href="#4-3-2-日志格式" class="headerlink" title="4.3.2 日志格式"></a>4.3.2 日志格式</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">router := gin.New()</span><br><span class="line"></span><br><span class="line"><span class="comment">// LoggerWithFormatter 中间件会将日志写入 gin.DefaultWriter</span></span><br><span class="line"><span class="comment">// By default gin.DefaultWriter = os.Stdout</span></span><br><span class="line">router.Use(gin.LoggerWithFormatter(<span class="function"><span class="keyword">func</span><span class="params">(param gin.LogFormatterParams)</span> <span class="title">string</span></span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 你的自定义格式</span></span><br><span class="line"><span class="keyword">return</span> fmt.Sprintf(<span class="string">&quot;%s - [%s] \&quot;%s %s %s %d %s \&quot;%s\&quot; %s\&quot;\n&quot;</span>,</span><br><span class="line">param.ClientIP,</span><br><span class="line">param.TimeStamp.Format(time.RFC1123),</span><br><span class="line">param.Method,</span><br><span class="line">param.Path,</span><br><span class="line">param.Request.Proto,</span><br><span class="line">param.StatusCode,</span><br><span class="line">param.Latency,</span><br><span class="line">param.Request.UserAgent(),</span><br><span class="line">param.ErrorMessage,</span><br><span class="line">)</span><br><span class="line">&#125;))</span><br><span class="line">router.Use(gin.Recovery())</span><br><span class="line"></span><br><span class="line">router.GET(<span class="string">&quot;/ping&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">c.String(<span class="number">200</span>, <span class="string">&quot;pong&quot;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">router.Run(<span class="string">&quot;:8080&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-4-模型绑定和验证"><a href="#4-4-模型绑定和验证" class="headerlink" title="4.4 模型绑定和验证"></a>4.4 模型绑定和验证</h2><p>Gin使用 go-playground/validator.v10 验证参数。</p><p>将请求主体绑定到结构体中，目前支持JSON、XML、YAML和标准表单值(foo=bar&amp;boo=baz)的绑定。</p><p>绑定方法：</p><ul><li><p>Must bind:</p><ul><li>Methods: Bind, BindJSON, BindXML, BindQuery, BindYAML</li><li>Behavior: 底层使用MustBindWith，如果存在绑定错误，请求将被以下指令中止 <code>c.AbortWithError(400, err).SetType(ErrorTypeBind)</code></li></ul></li><li><p>Should bind:</p><ul><li>Methods: ShouldBind, ShouldBindJSON, ShouldBindXML, ShouldBindQuery, ShouldBindYAML</li><li>Behavior: 底层使用ShouldBindWith，如果存在绑定错误，则返回错误，开发人员可正确处理请求和错误</li></ul></li></ul><h3 id="4-4-1-请求参数绑定"><a href="#4-4-1-请求参数绑定" class="headerlink" title="4.4.1 请求参数绑定"></a>4.4.1 请求参数绑定</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> User <span class="keyword">struct</span> &#123;</span><br><span class="line">Username <span class="keyword">string</span> <span class="string">`form:&quot;username&quot; json:&quot;username&quot; xml:&quot;username&quot; binding:&quot;required&quot;`</span></span><br><span class="line">Password <span class="keyword">string</span> <span class="string">`form:&quot;password&quot; json:&quot;password&quot; xml:&quot;password&quot; binding:&quot;required&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">r := gin.Default()</span><br><span class="line"></span><br><span class="line">r.POST(<span class="string">&quot;/login&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> user User</span><br><span class="line"><span class="comment">//if err := c.ShouldBind(&amp;user); err != nil &#123;</span></span><br><span class="line"><span class="keyword">if</span> err := c.ShouldBindJSON(&amp;user); err != <span class="literal">nil</span> &#123;</span><br><span class="line">c.JSON(http.StatusBadRequest, gin.H&#123;</span><br><span class="line"><span class="string">&quot;code&quot;</span>: <span class="number">-1</span>,</span><br><span class="line"><span class="string">&quot;msg&quot;</span>:  err.Error(),</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> user.Username != <span class="string">&quot;admin&quot;</span> || user.Password != <span class="string">&quot;123&quot;</span> &#123;</span><br><span class="line">c.JSON(http.StatusUnauthorized, gin.H&#123;</span><br><span class="line"><span class="string">&quot;code&quot;</span>: <span class="number">-1</span>,</span><br><span class="line"><span class="string">&quot;msg&quot;</span>:  <span class="string">&quot;unauthorized&quot;</span>,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">c.JSON(http.StatusOK, gin.H&#123;</span><br><span class="line"><span class="string">&quot;code&quot;</span>: <span class="number">0</span>,</span><br><span class="line"><span class="string">&quot;msg&quot;</span>:  <span class="string">&quot;ok&quot;</span>,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">r.Run()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-4-2-自定义校验器"><a href="#4-4-2-自定义校验器" class="headerlink" title="4.4.2 自定义校验器"></a>4.4.2 自定义校验器</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;net/http&quot;</span></span><br><span class="line"><span class="string">&quot;time&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;github.com/gin-gonic/gin/binding&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;gopkg.in/go-playground/validator.v10&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Booking <span class="keyword">struct</span> &#123;</span><br><span class="line">    <span class="comment">// v8</span></span><br><span class="line">    <span class="comment">// CheckIn  time.Time `form:&quot;check_in&quot; binding:&quot;required,bookabledate&quot; time_format:&quot;2006-01-02&quot;`</span></span><br><span class="line">    CheckIn  time.Time <span class="string">`form:&quot;check_in&quot; binding:&quot;required&quot; validate:&quot;bookabledate&quot; time_format:&quot;2006-01-02&quot;`</span></span><br><span class="line">CheckOut time.Time <span class="string">`form:&quot;check_out&quot; binding:&quot;required,gtfield=CheckIn&quot; time_format:&quot;2006-01-02&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">bookableDate</span><span class="params">(fl validator.FieldLevel)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> date, ok := fl.Field().Interface().(time.Time); ok &#123;</span><br><span class="line">today := time.Now()</span><br><span class="line"><span class="keyword">if</span> today.Before(date) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">r := gin.Default()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// v10</span></span><br><span class="line">validate := validator.New()</span><br><span class="line">validate.RegisterValidation(<span class="string">&quot;bookabledate&quot;</span>, bookableDate)</span><br><span class="line"></span><br><span class="line">r.GET(<span class="string">&quot;/book&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> book Booking</span><br><span class="line"><span class="keyword">if</span> err := c.ShouldBindWith(&amp;book, binding.Query); err != <span class="literal">nil</span> &#123;</span><br><span class="line">c.JSON(http.StatusBadRequest, gin.H&#123;</span><br><span class="line"><span class="string">&quot;code&quot;</span>: <span class="number">-1</span>,</span><br><span class="line"><span class="string">&quot;msg&quot;</span>:  err.Error(),</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// v10: 绑定和校验分离</span></span><br><span class="line">err := validate.Struct(book)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">c.JSON(http.StatusBadRequest, gin.H&#123;</span><br><span class="line"><span class="string">&quot;code&quot;</span>: <span class="number">-1</span>,</span><br><span class="line"><span class="string">&quot;msg&quot;</span>:  err.Error(),</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">c.JSON(http.StatusOK, gin.H&#123;</span><br><span class="line"><span class="string">&quot;code&quot;</span>: <span class="number">0</span>,</span><br><span class="line"><span class="string">&quot;msg&quot;</span>:  <span class="string">&quot;ok&quot;</span>,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">r.Run()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-4-3-绑定uri"><a href="#4-4-3-绑定uri" class="headerlink" title="4.4.3 绑定uri"></a>4.4.3 绑定uri</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Person <span class="keyword">struct</span> &#123;</span><br><span class="line">ID   <span class="keyword">string</span> <span class="string">`uri:&quot;id&quot; binding:&quot;required,uuid&quot;`</span></span><br><span class="line">Name <span class="keyword">string</span> <span class="string">`uri:&quot;name&quot; binding:&quot;required&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">r := gin.Default()</span><br><span class="line"></span><br><span class="line">r.GET(<span class="string">&quot;/:name/:id&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> person Person</span><br><span class="line"><span class="keyword">if</span> err := c.ShouldBindUri(&amp;person); err != <span class="literal">nil</span> &#123;</span><br><span class="line">c.JSON(http.StatusBadRequest, gin.H&#123;</span><br><span class="line"><span class="string">&quot;code&quot;</span>: <span class="number">-1</span>,</span><br><span class="line"><span class="string">&quot;msg&quot;</span>:  err.Error(),</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">c.JSON(http.StatusOK, gin.H&#123;</span><br><span class="line"><span class="string">&quot;code&quot;</span>: <span class="number">0</span>,</span><br><span class="line"><span class="string">&quot;msg&quot;</span>:  <span class="string">&quot;ok&quot;</span>,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">r.Run()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-4-4-错误翻译器"><a href="#4-4-4-错误翻译器" class="headerlink" title="4.4.4 错误翻译器"></a>4.4.4 错误翻译器</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 定义翻译器 translator.go</span></span><br><span class="line"><span class="keyword">package</span> translator</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;strings&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;github.com/gin-gonic/gin/binding&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/go-playground/locales/zh&quot;</span></span><br><span class="line">ut <span class="string">&quot;github.com/go-playground/universal-translator&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/go-playground/validator/v10&quot;</span></span><br><span class="line">zhTrans <span class="string">&quot;github.com/go-playground/validator/v10/translations/zh&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">uni      *ut.UniversalTranslator</span><br><span class="line">validate *validator.Validate</span><br><span class="line">trans    ut.Translator</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">InitTrans</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// 翻译器</span></span><br><span class="line">zh := zh.New()</span><br><span class="line">uni = ut.New(zh, zh)</span><br><span class="line"></span><br><span class="line">trans, _ = uni.GetTranslator(<span class="string">&quot;zh&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取gin的校验器</span></span><br><span class="line">validate = binding.Validator.Engine().(*validator.Validate)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 注册翻译器</span></span><br><span class="line">zhTrans.RegisterDefaultTranslations(validate, trans)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Translate</span><span class="params">(err error)</span> <span class="title">string</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> result []<span class="keyword">string</span></span><br><span class="line"></span><br><span class="line">errors := err.(validator.ValidationErrors)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, err := <span class="keyword">range</span> errors &#123;</span><br><span class="line">result = <span class="built_in">append</span>(result, err.Translate(trans))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> strings.Join(result, <span class="string">&quot;; &quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 初始化</span></span><br><span class="line">translator.InitTrans()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. 使用实例</span></span><br><span class="line"><span class="keyword">type</span> addUserRequest <span class="keyword">struct</span> &#123;</span><br><span class="line">Username <span class="keyword">string</span> <span class="string">`json:&quot;username&quot; binding:&quot;required,min=3,max=20&quot;`</span></span><br><span class="line">Password <span class="keyword">string</span> <span class="string">`json:&quot;password&quot; binding:&quot;required,min=6,max=8&quot;`</span></span><br><span class="line">Email    <span class="keyword">string</span> <span class="string">`json:&quot;email&quot; binding:&quot;omitempty,email&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">AddUserHandler</span><span class="params">(c *gin.Context)</span> <span class="params">(<span class="keyword">interface</span>&#123;&#125;, error)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> req addUserRequest</span><br><span class="line"></span><br><span class="line">err := c.ShouldBindJSON(&amp;req)</span><br><span class="line">fmt.Println(err)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, e.ParameterError(translator.Translate(err))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 新增用户</span></span><br><span class="line">srv := &amp;service.AddUserService&#123;&#125;</span><br><span class="line">err = srv.AddUser(req.Username, req.Password, req.Email)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> srv, err</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-5-响应渲染"><a href="#4-5-响应渲染" class="headerlink" title="4.5 响应渲染"></a>4.5 响应渲染</h2><h3 id="4-5-1-常见格式"><a href="#4-5-1-常见格式" class="headerlink" title="4.5.1 常见格式"></a>4.5.1 常见格式</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c.JSON(http.StatusOK, gin.H&#123;<span class="string">&quot;code&quot;</span>: <span class="number">0</span>, <span class="string">&quot;msg&quot;</span>: <span class="string">&quot;ok&quot;</span>&#125;)</span><br><span class="line">c.XML(http.StatusOK, gin.H&#123;<span class="string">&quot;code&quot;</span>: <span class="number">0</span>, <span class="string">&quot;msg&quot;</span>: <span class="string">&quot;ok&quot;</span>&#125;)</span><br><span class="line">c.YAML(http.StatusOK, gin.H&#123;<span class="string">&quot;code&quot;</span>: <span class="number">0</span>, <span class="string">&quot;msg&quot;</span>: <span class="string">&quot;ok&quot;</span>&#125;)</span><br></pre></td></tr></table></figure><h3 id="4-5-2-ProtoBuf"><a href="#4-5-2-ProtoBuf" class="headerlink" title="4.5.2 ProtoBuf"></a>4.5.2 ProtoBuf</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">r := gin.Default()</span><br><span class="line"></span><br><span class="line">r.GET(<span class="string">&quot;/protobuf&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">reps := []<span class="keyword">int64</span>&#123;<span class="keyword">int64</span>(<span class="number">1</span>), <span class="keyword">int64</span>(<span class="number">2</span>)&#125;</span><br><span class="line"></span><br><span class="line">label := <span class="string">&quot;test&quot;</span></span><br><span class="line">data := &amp;protoexample.Test&#123;</span><br><span class="line">Label: &amp;label,</span><br><span class="line">Reps:  reps,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">c.ProtoBuf(http.StatusOK, data)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">r.Run()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-5-3-SecureJSON"><a href="#4-5-3-SecureJSON" class="headerlink" title="4.5.3 SecureJSON"></a>4.5.3 SecureJSON</h3><p>SecureJSON可以防止json劫持，如果返回的数据是数组，则会默认在返回值前加上”while(1)”</p><p>JSON劫持，其实就是恶意网站，通过<code>&lt;script&gt;</code>标签获取你的JSON数据，因为JSON数组默认为是可执行的JS，所以通过这种方式，可以获得你的敏感数据。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">r := gin.Default()</span><br><span class="line"></span><br><span class="line"><span class="comment">// facebook</span></span><br><span class="line">r.SecureJsonPrefix(<span class="string">&quot;for(;;);&quot;</span>)</span><br><span class="line"></span><br><span class="line">r.GET(<span class="string">&quot;/test&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">nums := []<span class="keyword">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;</span><br><span class="line"></span><br><span class="line">c.SecureJSON(http.StatusOK, nums) <span class="comment">// while(1);[1,2,3,4,5]  默认Google</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">r.Run()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-5-4-JSONP"><a href="#4-5-4-JSONP" class="headerlink" title="4.5.4 JSONP"></a>4.5.4 JSONP</h3><p>JSONP可以跨域传输，如果参数中存在回调参数，那么返回的参数将是回调函数的形式</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">r := gin.Default()</span><br><span class="line"></span><br><span class="line">data := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;)</span><br><span class="line">data[<span class="string">&quot;bar&quot;</span>] = <span class="string">&quot;foo&quot;</span></span><br><span class="line"></span><br><span class="line">r.GET(<span class="string">&quot;/test&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">c.JSONP(http.StatusOK, data)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// http://localhost:8080/test?callback=sayHello</span></span><br><span class="line"><span class="comment">// sayHello(&#123;&quot;bar&quot;:&quot;foo&quot;&#125;);</span></span><br><span class="line"></span><br><span class="line">r.Run()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">sayHello</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">        alert(<span class="built_in">JSON</span>.stringify(data))</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;http://localhost:8080/jsonp?callback=sayHello&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="4-5-5-AsciiJSON"><a href="#4-5-5-AsciiJSON" class="headerlink" title="4.5.5 AsciiJSON"></a>4.5.5 AsciiJSON</h3><p>编码中文、标签等特殊字符</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">r := gin.Default()</span><br><span class="line"></span><br><span class="line">data := <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;&#123;</span><br><span class="line"><span class="string">&quot;lang&quot;</span>: <span class="string">&quot;中文&quot;</span>,</span><br><span class="line"><span class="string">&quot;tag&quot;</span>:  <span class="string">&quot;&lt;xml&gt;&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">r.GET(<span class="string">&quot;/test&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">c.AsciiJSON(http.StatusOK, data)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// &#123;&quot;lang&quot;:&quot;\u4e2d\u6587&quot;,&quot;tag&quot;:&quot;\u003cxml\u003e&quot;&#125;</span></span><br><span class="line"></span><br><span class="line">r.Run()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-5-6-PureJSON"><a href="#4-5-6-PureJSON" class="headerlink" title="4.5.6 PureJSON"></a>4.5.6 PureJSON</h3><p>JSON会将特殊的HTML字符替换为对应的unicode字符, 但PureJSON保留原有格式</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">r := gin.Default()</span><br><span class="line"></span><br><span class="line">r.GET(<span class="string">&quot;/test&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">c.PureJSON(http.StatusOK, gin.H&#123;</span><br><span class="line"><span class="string">&quot;html&quot;</span>: <span class="string">&quot;&lt;h1&gt;Hello World&lt;/h1&gt;&quot;</span>,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// &#123;&quot;html&quot;:&quot;&lt;h1&gt;Hello World&lt;/h1&gt;&quot;&#125;</span></span><br><span class="line"></span><br><span class="line">r.Run()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-5-7-jsoniter"><a href="#4-5-7-jsoniter" class="headerlink" title="4.5.7 jsoniter"></a>4.5.7 jsoniter</h3><p>高性能json工具</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import jsoniter &quot;github.com/json-iterator/go&quot;</span><br><span class="line"></span><br><span class="line">var json = jsoniter.ConfigCompatibleWithStandardLibrary</span><br><span class="line">json.Marshal(&amp;data)</span><br><span class="line">json.Unmarshal(input, &amp;data)</span><br></pre></td></tr></table></figure><p>Gin 默认使用 <code>encoding/json</code>，可以在编译中使用标签将其修改为 <a href="https://github.com/json-iterator/go">jsoniter</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go build -tags=jsoniter .</span><br></pre></td></tr></table></figure><h2 id="4-6-静态文件"><a href="#4-6-静态文件" class="headerlink" title="4.6 静态文件"></a>4.6 静态文件</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">r := gin.Default()</span><br><span class="line"></span><br><span class="line">r.GET(<span class="string">&quot;/&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">c.String(http.StatusOK, <span class="string">&quot;hello world&quot;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">r.Static(<span class="string">&quot;/assets&quot;</span>, <span class="string">&quot;./assets&quot;</span>)</span><br><span class="line">r.StaticFS(<span class="string">&quot;/disk&quot;</span>, http.Dir(<span class="string">`E:\Download`</span>))</span><br><span class="line">r.StaticFile(<span class="string">&quot;favicon.ico&quot;</span>, <span class="string">&quot;./assets/favicon.ico&quot;</span>)</span><br><span class="line"></span><br><span class="line">r.Run(<span class="string">&quot;:8080&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-7-代理下载文件"><a href="#4-7-代理下载文件" class="headerlink" title="4.7 代理下载文件"></a>4.7 代理下载文件</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">downloadFromUrl</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">url := c.Query(<span class="string">&quot;url&quot;</span>)</span><br><span class="line">resp, err := http.Get(url)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> || resp.StatusCode != http.StatusOK &#123;</span><br><span class="line">c.Status(http.StatusServiceUnavailable)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">arr := strings.Split(url, <span class="string">&quot;/&quot;</span>)</span><br><span class="line">filename := arr[<span class="built_in">len</span>(arr)<span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line">reader := resp.Body</span><br><span class="line">contentLength := resp.ContentLength</span><br><span class="line">contentType := resp.Header.Get(<span class="string">&quot;Content-Type&quot;</span>)</span><br><span class="line"></span><br><span class="line">extraHeaders := <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span>&#123;</span><br><span class="line"><span class="string">&quot;Content-Disposition&quot;</span>: fmt.Sprintf(<span class="string">&quot;attachment; filename=%s&quot;</span>, filename),</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">c.DataFromReader(http.StatusOK, contentLength, contentType, reader, extraHeaders)</span><br></pre></td></tr></table></figure><h2 id="4-8-HTML渲染"><a href="#4-8-HTML渲染" class="headerlink" title="4.8 HTML渲染"></a>4.8 HTML渲染</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">r := gin.Default()</span><br><span class="line"></span><br><span class="line"><span class="comment">//r.LoadHTMLFiles(&quot;templates/index.tmpl&quot;, &quot;templates/login.tmpl&quot;)</span></span><br><span class="line">r.LoadHTMLGlob(<span class="string">&quot;templates/*&quot;</span>)</span><br><span class="line"></span><br><span class="line">r.GET(<span class="string">&quot;/test&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">c.HTML(http.StatusOK, <span class="string">&quot;index.tmpl&quot;</span>, gin.H&#123;</span><br><span class="line"><span class="string">&quot;title&quot;</span>: <span class="string">&quot;Home Page&quot;</span>,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">r.Run()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">        &#123;&#123; .title &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4-9-重定向"><a href="#4-9-重定向" class="headerlink" title="4.9 重定向"></a>4.9 重定向</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">r := gin.Default()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 外部重定向</span></span><br><span class="line">r.GET(<span class="string">&quot;/test1&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">c.Redirect(http.StatusMovedPermanently, <span class="string">&quot;https://google.com&quot;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 路由重定向 HandleContext</span></span><br><span class="line">r.GET(<span class="string">&quot;/test2&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">c.Request.URL.Path = <span class="string">&quot;/test3&quot;</span></span><br><span class="line">r.HandleContext(c)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">r.GET(<span class="string">&quot;/test3&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">c.String(http.StatusOK, <span class="string">&quot;hello world!&quot;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">r.Run(<span class="string">&quot;:8080&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id=""><a href="#" class="headerlink" title=""></a></h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">r := gin.Default()</span><br><span class="line"></span><br><span class="line">r.GET(<span class="string">&quot;/test&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">c.Request.URL.Path = <span class="string">&quot;/test2&quot;</span></span><br><span class="line">r.HandleContext(c)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">r.GET(<span class="string">&quot;/test2&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">c.JSON(http.StatusOK, gin.H&#123;</span><br><span class="line"><span class="string">&quot;msg&quot;</span>: <span class="string">&quot;hello world!&quot;</span>,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">r.Run()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-10-支持https"><a href="#4-10-支持https" class="headerlink" title="4.10 支持https"></a>4.10 支持https</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;log&quot;</span></span><br><span class="line"><span class="string">&quot;net/http&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;golang.org/x/crypto/acme/autocert&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/gin-gonic/autotls&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">r := gin.Default()</span><br><span class="line"></span><br><span class="line">r.GET(<span class="string">&quot;/ping&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">c.String(http.StatusOK, <span class="string">&quot;pong&quot;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">m := autocert.Manager&#123;</span><br><span class="line">Prompt:     autocert.AcceptTOS,</span><br><span class="line">HostPolicy: autocert.HostWhitelist(<span class="string">&quot;localhost:8080&quot;</span>, <span class="string">&quot;example1.com&quot;</span>, <span class="string">&quot;example2.com&quot;</span>),</span><br><span class="line">Cache:      autocert.DirCache(<span class="string">&quot;/var/www/.cache&quot;</span>),</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">log.Fatal(autotls.RunWithManager(r, &amp;m))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-11-使用cookie"><a href="#4-11-使用cookie" class="headerlink" title="4.11 使用cookie"></a>4.11 使用cookie</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">r := gin.Default()</span><br><span class="line"></span><br><span class="line">r.GET(<span class="string">&quot;/test&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">cookie, err := c.Cookie(<span class="string">&quot;gin_cookie&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">cookie = <span class="string">&quot;NO_SET&quot;</span></span><br><span class="line">c.SetCookie(<span class="string">&quot;gin_cookie&quot;</span>, <span class="string">&quot;test&quot;</span>, <span class="number">3600</span>, <span class="string">&quot;/&quot;</span>, <span class="string">&quot;localhost&quot;</span>, <span class="literal">false</span>, <span class="literal">true</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">c.String(http.StatusOK, <span class="string">&quot;cookie=%s&quot;</span>, cookie)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">r.Run()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-13-服务配置"><a href="#4-13-服务配置" class="headerlink" title="4.13 服务配置"></a>4.13 服务配置</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Server <span class="keyword">struct</span> &#123;</span><br><span class="line">Addr           <span class="keyword">string</span></span><br><span class="line">Handler        http.Handler</span><br><span class="line">TLSConfig      *tls.Config</span><br><span class="line">ReadTimeout    time.Duration</span><br><span class="line">ReadHeaderTime time.Duration</span><br><span class="line">WriteTimeout   time.Duration</span><br><span class="line">IdleTimeout    time.Duration</span><br><span class="line">MaxHeaderBytes <span class="keyword">int</span></span><br><span class="line">ConnState      <span class="function"><span class="keyword">func</span><span class="params">(net.Conn, http.ConnState)</span></span></span><br><span class="line">ErrorLog       *log.Logger</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    router := gin.Default()</span><br><span class="line"></span><br><span class="line">    s := &amp;http.Server&#123;</span><br><span class="line">        Addr:           <span class="string">&quot;:8080&quot;</span>,</span><br><span class="line">        Handler:        router,</span><br><span class="line">        ReadTimeout:    <span class="number">10</span> * time.Second,</span><br><span class="line">        WriteTimeout:   <span class="number">10</span> * time.Second,</span><br><span class="line">        MaxHeaderBytes: <span class="number">1</span> &lt;&lt; <span class="number">20</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    s.ListenAndServe()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-14-使用-goroutine"><a href="#4-14-使用-goroutine" class="headerlink" title="4.14 使用 goroutine"></a>4.14 使用 goroutine</h2><p>在中间件或处理程序中启动 Goroutine 时，需要使用只读副本 <code>c.Copy()</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">r := gin.Default()</span><br><span class="line">r.GET(<span class="string">&quot;/sync&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">start := time.Now()</span><br><span class="line">time.Sleep(<span class="number">5</span> * time.Second)</span><br><span class="line">log.Println(c.Request.URL)</span><br><span class="line">latency := time.Now().Sub(start)</span><br><span class="line">c.String(http.StatusOK, latency.String())</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">r.GET(<span class="string">&quot;/async&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">start := time.Now()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 协程中使用，必须先复制</span></span><br><span class="line">cc := c.Copy()</span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">time.Sleep(<span class="number">5</span> * time.Second)</span><br><span class="line">log.Println(cc.Request.URL)</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line">latency := time.Now().Sub(start)</span><br><span class="line">c.String(http.StatusOK, latency.String())</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="5-运行多个服务"><a href="#5-运行多个服务" class="headerlink" title="5. 运行多个服务"></a>5. 运行多个服务</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;log&quot;</span></span><br><span class="line"><span class="string">&quot;net/http&quot;</span></span><br><span class="line"><span class="string">&quot;time&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line"><span class="string">&quot;golang.org/x/sync/errgroup&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">g errgroup.Group</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">router01</span><span class="params">()</span> <span class="title">http</span>.<span class="title">Handler</span></span> &#123;</span><br><span class="line">r := gin.New()</span><br><span class="line">r.Use(gin.Recovery())</span><br><span class="line">r.GET(<span class="string">&quot;/&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">c.JSON(http.StatusOK, gin.H&#123;<span class="string">&quot;msg&quot;</span>: <span class="string">&quot;welcome to server 01&quot;</span>&#125;)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">return</span> r</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">router02</span><span class="params">()</span> <span class="title">http</span>.<span class="title">Handler</span></span> &#123;</span><br><span class="line">r := gin.New()</span><br><span class="line">r.Use(gin.Recovery())</span><br><span class="line">r.GET(<span class="string">&quot;/&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">c.JSON(http.StatusOK, gin.H&#123;<span class="string">&quot;msg&quot;</span>: <span class="string">&quot;welcome to server 02&quot;</span>&#125;)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">return</span> r</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">server01 := &amp;http.Server&#123;</span><br><span class="line">Addr:         <span class="string">&quot;:8080&quot;</span>,</span><br><span class="line">Handler:      router01(),</span><br><span class="line">ReadTimeout:  <span class="number">5</span> * time.Second,</span><br><span class="line">WriteTimeout: <span class="number">10</span> * time.Second,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server02 := &amp;http.Server&#123;</span><br><span class="line">Addr:         <span class="string">&quot;:8081&quot;</span>,</span><br><span class="line">Handler:      router02(),</span><br><span class="line">ReadTimeout:  <span class="number">5</span> * time.Second,</span><br><span class="line">WriteTimeout: <span class="number">10</span> * time.Second,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">g.Go(<span class="function"><span class="keyword">func</span><span class="params">()</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> server01.ListenAndServe()</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">g.Go(<span class="function"><span class="keyword">func</span><span class="params">()</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> server02.ListenAndServe()</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err := g.Wait(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="6-集成JWT"><a href="#6-集成JWT" class="headerlink" title="6. 集成JWT"></a>6. 集成JWT</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go get github.com/dgrijalva/jwt-go</span><br></pre></td></tr></table></figure><p>涉及方法：</p><ul><li><code>NewWithClaims(method SigningMethod, claims Claims)</code>, method对应着<code>SigningMethodHMAC struct&#123;&#125;</code>，其包含<code>SigningMethodHS256</code>, <code>SigningMethodHS384</code>, <code>SigningMethodHS512</code>三种crypt.Hash</li><li><code>func (t *Token) SignedString(key interface&#123;&#125;)</code> 内部生成签名字符串，再用于获取完整、已签名的token</li><li><code>func (p *Parser) ParseWithClaims</code>解析鉴权声明，方法内部主要是具体的解码和校验过程，最终返回*Token</li><li><code>func (m MapClaims) Valid()</code> 验证基于时间的声明exp, iat, nbf</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;gin-blog/pkg/setting&quot;</span></span><br><span class="line"><span class="string">&quot;time&quot;</span></span><br><span class="line"></span><br><span class="line">jwt <span class="string">&quot;github.com/dgrijalva/jwt-go&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> jwtSecret = []<span class="keyword">byte</span>(setting.JwtSecret)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Claims <span class="keyword">struct</span> &#123;</span><br><span class="line">Username <span class="keyword">string</span> <span class="string">`json:&quot;username&quot;`</span></span><br><span class="line">Password <span class="keyword">string</span> <span class="string">`json:&quot;password&quot;`</span></span><br><span class="line">jwt.StandardClaims</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GenerateToken</span><span class="params">(username, password <span class="keyword">string</span>)</span> <span class="params">(<span class="keyword">string</span>, error)</span></span> &#123;</span><br><span class="line">nowTime := time.Now()</span><br><span class="line">expireTime := nowTime.Add(<span class="number">3</span> * time.Hour)</span><br><span class="line"></span><br><span class="line">claims := Claims&#123;</span><br><span class="line">username,</span><br><span class="line">password,</span><br><span class="line">jwt.StandardClaims&#123;</span><br><span class="line">ExpiresAt: expireTime.Unix(),</span><br><span class="line">Issuer:    <span class="string">&quot;gin-blog&quot;</span>,</span><br><span class="line">&#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">tokenClaims := jwt.NewWithClaims(jwt.SigningMethodHS256, claims)</span><br><span class="line">token, err := tokenClaims.SignedString(jwtSecret)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> token, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">ParseToken</span><span class="params">(token <span class="keyword">string</span>)</span> <span class="params">(*Claims, error)</span></span> &#123;</span><br><span class="line">tokenClaims, err := jwt.ParseWithClaims(token, &amp;Claims&#123;&#125;,</span><br><span class="line"><span class="function"><span class="keyword">func</span><span class="params">(token *jwt.Token)</span> <span class="params">(<span class="keyword">interface</span>&#123;&#125;, error)</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> jwtSecret, <span class="literal">nil</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> tokenClaims != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">if</span> claims, ok := tokenClaims.Claims.(*Claims); ok &amp;&amp; tokenClaims.Valid &#123;</span><br><span class="line"><span class="keyword">return</span> claims, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="7-重启服务器"><a href="#7-重启服务器" class="headerlink" title="7. 重启服务器"></a>7. 重启服务器</h1><p>要求：</p><ul><li>不关闭现有连接 （正在运行中的程序）</li><li>新的进程启动并替代旧进程</li><li>新的进程结构新的连接</li><li>连接要随时响应用户的请求，当用户仍在请求旧进程时，要保持连接，新用户应请求新进程，不可出现拒绝请求的情况</li></ul><h2 id="7-1-endless"><a href="#7-1-endless" class="headerlink" title="7.1 endless"></a>7.1 endless</h2><p>endless: Zero downtime restarts for golfing HTTP and HTTPS servers</p><p>每次更新发布、修改配置文件等，只要给该进行发送SIGTERM信号(kill )，而不需要强制结束应用</p><p>监听信号：</p><ul><li><code>syscall.SIGHUP</code>: 触发fork子进程和重新启动</li><li><code>syscall.SIGUSR1/syscall.SIGTSTP</code>: 被监听，但不触发任何动作</li><li><code>syscall.SIGUSR2</code>: 触发hammerTime</li><li><code>syscall.SIGINT/syscall.SIGTERM</code>: 触发服务器关闭（会完成正在运行的请求）</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;gin-blog/pkg/setting&quot;</span></span><br><span class="line"><span class="string">&quot;gin-blog/routers&quot;</span></span><br><span class="line"><span class="string">&quot;log&quot;</span></span><br><span class="line"><span class="string">&quot;syscall&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;github.com/fvbock/endless&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">//router := routers.InitRouter()</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//server := &amp;http.Server&#123;</span></span><br><span class="line"><span class="comment">//Addr:           fmt.Sprintf(&quot;:%d&quot;, setting.HTTPPort),</span></span><br><span class="line"><span class="comment">//Handler:        router,</span></span><br><span class="line"><span class="comment">//ReadTimeout:    setting.ReadTimeout,</span></span><br><span class="line"><span class="comment">//WriteTimeout:   setting.WriteTimeout,</span></span><br><span class="line"><span class="comment">//MaxHeaderBytes: 1 &lt;&lt; 20,</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line">endless.DefaultReadTimeOut = setting.ReadTimeout</span><br><span class="line">endless.DefaultWriteTimeOut = setting.WriteTimeout</span><br><span class="line">endless.DefaultMaxHeaderBytes = <span class="number">1</span> &lt;&lt; <span class="number">20</span></span><br><span class="line">endPoint := fmt.Sprintf(<span class="string">&quot;:%d&quot;</span>, setting.HTTPPort)</span><br><span class="line"></span><br><span class="line">server := endless.NewServer(endPoint, routers.InitRouter())</span><br><span class="line">server.BeforeBegin = <span class="function"><span class="keyword">func</span><span class="params">(add <span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line">log.Printf(<span class="string">&quot;Actual pid is %d&quot;</span>, syscall.Getpid())</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">err := server.ListenAndServe()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Printf(<span class="string">&quot;Server error: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-2-Shutdown"><a href="#7-2-Shutdown" class="headerlink" title="7.2 Shutdown"></a>7.2 Shutdown</h2><p>使用 http.Server 内置的 <code>Shutdown()</code>方法优雅地关闭服务，它不会中断任何活动的连接，直到所有连接处理完毕</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">router := initRouter()</span><br><span class="line"></span><br><span class="line">server := &amp;http.Server&#123;</span><br><span class="line">Addr:           fmt.Sprintf(<span class="string">&quot;:%d&quot;</span>, setting.HTTPPort),</span><br><span class="line">Handler:        router,</span><br><span class="line">ReadTimeout:    setting.ReadTimeout,</span><br><span class="line">WriteTimeout:   setting.WriteTimeout,</span><br><span class="line">MaxHeaderBytes: <span class="number">1</span> &lt;&lt; <span class="number">20</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> err := server.ListenAndServe(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Printf(<span class="string">&quot;Listen: %v\n&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line">quit := <span class="built_in">make</span>(<span class="keyword">chan</span> os.Signal)</span><br><span class="line">signal.Notify(quit, os.Interrupt)</span><br><span class="line">&lt;-quit</span><br><span class="line"></span><br><span class="line">log.Printf(<span class="string">&quot;Shutdown Server ...&quot;</span>)</span><br><span class="line"></span><br><span class="line">ctx, cancel := context.WithTimeout(context.Background(), <span class="number">5</span>*time.Second)</span><br><span class="line"><span class="keyword">defer</span> cancel()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err := server.Shutdown(ctx); err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(<span class="string">&quot;Server Shutdown:&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">log.Println(<span class="string">&quot;Server exiting&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="8-Swagger-API"><a href="#8-Swagger-API" class="headerlink" title="8. Swagger API"></a>8. Swagger API</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">go get -u github.com/swaggo/swag/cmd/swag</span><br><span class="line">go get -u github.com/swaggo/gin-swagger</span><br><span class="line">go get -u github.com/swaggo/gin-swagger/swaggerFiles</span><br></pre></td></tr></table></figure><h2 id="8-1-API-接口注释"><a href="#8-1-API-接口注释" class="headerlink" title="8.1 API 接口注释"></a>8.1 API 接口注释</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// LoginHandler godoc</span></span><br><span class="line"><span class="comment">// @Summary 登录系统</span></span><br><span class="line"><span class="comment">// @Tags 用户相关接口</span></span><br><span class="line"><span class="comment">// @Accept  json</span></span><br><span class="line"><span class="comment">// @Produce  json</span></span><br><span class="line"><span class="comment">// @Param object body loginRequest true &quot;请求参数&quot;</span></span><br><span class="line"><span class="comment">// @Success 200 &#123;object&#125; router.Response</span></span><br><span class="line"><span class="comment">// @Failure 400 &#123;object&#125; e.ApiError</span></span><br><span class="line"><span class="comment">// @Router /api/v1/login [post]</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">LoginHandler</span><span class="params">(c *gin.Context)</span> <span class="params">(<span class="keyword">interface</span>&#123;&#125;, error)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> req loginRequest</span><br><span class="line"></span><br><span class="line">err := c.ShouldBindJSON(&amp;req)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, e.ParameterError(translator.Translate(err))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 登录</span></span><br><span class="line">srv := &amp;service.LoginService&#123;&#125;</span><br><span class="line">err = srv.Login(req.Username, req.Password)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, e.ParameterError(translator.Translate(err))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> srv, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="8-2-生成配置"><a href="#8-2-生成配置" class="headerlink" title="8.2 生成配置"></a>8.2 生成配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">swag init</span><br></pre></td></tr></table></figure><h2 id="8-3-引入配置"><a href="#8-3-引入配置" class="headerlink" title="8.3 引入配置"></a>8.3 引入配置</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// main.go</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">// swagger 相关信息</span></span><br><span class="line">docs.SwaggerInfo.Title = <span class="string">&quot;XXX 项目接口文档&quot;</span></span><br><span class="line">docs.SwaggerInfo.Description = <span class="string">&quot;just a test&quot;</span></span><br><span class="line">docs.SwaggerInfo.Version = <span class="string">&quot;1.0&quot;</span></span><br><span class="line">docs.SwaggerInfo.Host = addr</span><br><span class="line">docs.SwaggerInfo.BasePath = <span class="string">&quot;/&quot;</span></span><br><span class="line">docs.SwaggerInfo.Schemes = []<span class="keyword">string</span>&#123;<span class="string">&quot;http&quot;</span>, <span class="string">&quot;https&quot;</span>&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="8-4-禁用Swagger"><a href="#8-4-禁用Swagger" class="headerlink" title="8.4 禁用Swagger"></a>8.4 禁用Swagger</h2><p><code>gin-swagger</code>还提供了<code>DisablingWrapHandler</code>函数，方便我们通过设置某些环境变量来。例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">r.GET(&quot;/swagger/*any&quot;, gs.DisablingWrapHandler(swaggerFiles.Handler, &quot;NAME_OF_ENV_VARIABLE&quot;))</span><br></pre></td></tr></table></figure><p>此时如果将环境变量<code>NAME_OF_ENV_VARIABLE</code>设置为任意值，则<code>/swagger/*any</code>将返回404响应，就像未指定路由时一样。</p><h1 id="9-接口测试"><a href="#9-接口测试" class="headerlink" title="9. 接口测试"></a>9. 接口测试</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">import (</span><br><span class="line"><span class="string">&quot;net/http&quot;</span></span><br><span class="line"><span class="string">&quot;net/http/httptest&quot;</span></span><br><span class="line"><span class="string">&quot;testing&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;github.com/stretchr/testify/assert&quot;</span></span><br><span class="line">    <span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">func setRouter() *gin.Engine &#123;</span><br><span class="line">r := gin.Default()</span><br><span class="line">r.GET(<span class="string">&quot;/ping&quot;</span>, func(c *gin.Context) &#123;</span><br><span class="line">c.String(http.StatusOK, <span class="string">&quot;pong&quot;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">return</span> r</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func TestPingRoute(t *testing.T) &#123;</span><br><span class="line">router := setRouter()</span><br><span class="line"></span><br><span class="line">w := httptest.NewRecorder()</span><br><span class="line">req, _ := http.NewRequest(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;/ping&quot;</span>, nil)</span><br><span class="line">router.ServeHTTP(w, req)</span><br><span class="line"></span><br><span class="line">assert.Equal(t, http.StatusOK, w.Code)</span><br><span class="line">assert.Equal(t, <span class="string">&quot;pong&quot;</span>, w.Body.String())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="10-源码解析"><a href="#10-源码解析" class="headerlink" title="10. 源码解析"></a>10. 源码解析</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取一个gin框架实例</span></span><br><span class="line">gin.Default()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 具体的Default方法</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Default</span><span class="params">()</span> *<span class="title">Engine</span></span> &#123;</span><br><span class="line">    <span class="comment">// 调试模式日志输出 </span></span><br><span class="line">debugPrintWARNINGDefault()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建一个gin框架实例</span></span><br><span class="line">    engine := New()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 注册中间件的方式一致</span></span><br><span class="line">engine.Use(Logger(), Recovery())</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> engine</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建一个gin框架实例 具体方法</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">New</span><span class="params">()</span> *<span class="title">Engine</span></span> &#123;</span><br><span class="line">    <span class="comment">// 调试模式日志输出 </span></span><br><span class="line">debugPrintWARNINGNew()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化一个Engine实例</span></span><br><span class="line">    engine := &amp;Engine&#123;</span><br><span class="line">        <span class="comment">// 给框架实例绑定上一个路由组</span></span><br><span class="line">        RouterGroup: RouterGroup&#123;</span><br><span class="line">            Handlers: <span class="literal">nil</span>,   <span class="comment">// engine.Use 注册的中间方法到这里</span></span><br><span class="line">            basePath: <span class="string">&quot;/&quot;</span>,  </span><br><span class="line">            root:     <span class="literal">true</span>,   <span class="comment">// 是否是路由根节点</span></span><br><span class="line">        &#125;,</span><br><span class="line">        FuncMap:                template.FuncMap&#123;&#125;,</span><br><span class="line">        RedirectTrailingSlash:  <span class="literal">true</span>,</span><br><span class="line">        RedirectFixedPath:      <span class="literal">false</span>,</span><br><span class="line">        HandleMethodNotAllowed: <span class="literal">false</span>,</span><br><span class="line">        ForwardedByClientIP:    <span class="literal">true</span>,</span><br><span class="line">        AppEngine:              defaultAppEngine,</span><br><span class="line">        UseRawPath:             <span class="literal">false</span>,</span><br><span class="line">        UnescapePathValues:     <span class="literal">true</span>,</span><br><span class="line">        MaxMultipartMemory:     defaultMultipartMemory,</span><br><span class="line">        trees:                  <span class="built_in">make</span>(methodTrees, <span class="number">0</span>, <span class="number">9</span>),   <span class="comment">// 路由树</span></span><br><span class="line">        delims:                 render.Delims&#123;Left: <span class="string">&quot;&#123;&#123;&quot;</span>, Right: <span class="string">&quot;&#125;&#125;&quot;</span>&#125;,</span><br><span class="line">        secureJsonPrefix:       <span class="string">&quot;while(1);&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// RouterGroup绑定engine自身的实例</span></span><br><span class="line">engine.RouterGroup.engine = engine</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 绑定从实例池获取上下文的闭包方法</span></span><br><span class="line">    engine.pool.New = <span class="function"><span class="keyword">func</span><span class="params">()</span> <span class="title">interface</span></span>&#123;&#125; &#123;</span><br><span class="line">        <span class="comment">// 获取一个Context实例</span></span><br><span class="line">        <span class="keyword">return</span> engine.allocateContext()</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 返回框架实例</span></span><br><span class="line">    <span class="keyword">return</span> engine</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 注册日志&amp;goroutin panic捕获中间件</span></span><br><span class="line">engine.Use(Logger(), Recovery())</span><br><span class="line"></span><br><span class="line"><span class="comment">// 具体的注册中间件的方法</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(engine *Engine)</span> <span class="title">Use</span><span class="params">(middleware ...HandlerFunc)</span> <span class="title">IRoutes</span></span> &#123;</span><br><span class="line">    engine.RouterGroup.Use(middleware...)</span><br><span class="line">    engine.rebuild404Handlers()</span><br><span class="line">    engine.rebuild405Handlers()</span><br><span class="line">    <span class="keyword">return</span> engine</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">///////////////////////////////////////////</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 注册GET请求路由</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(group *RouterGroup)</span> <span class="title">GET</span><span class="params">(relativePath <span class="keyword">string</span>, handlers ...HandlerFunc)</span> <span class="title">IRoutes</span></span> &#123;</span><br><span class="line">    <span class="comment">// 往路由组内 注册GET请求路由</span></span><br><span class="line">    <span class="keyword">return</span> group.handle(<span class="string">&quot;GET&quot;</span>, relativePath, handlers)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(group *RouterGroup)</span> <span class="title">handle</span><span class="params">(httpMethod, relativePath <span class="keyword">string</span>, handlers HandlersChain)</span> <span class="title">IRoutes</span></span> &#123;</span><br><span class="line">absolutePath := group.calculateAbsolutePath(relativePath)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 把中间件的handle和该路由的handle合并</span></span><br><span class="line">handlers = group.combineHandlers(handlers)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 注册一个GET集合的路由</span></span><br><span class="line">    group.engine.addRoute(httpMethod, absolutePath, handlers)</span><br><span class="line">    <span class="keyword">return</span> group.returnObj()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(engine *Engine)</span> <span class="title">addRoute</span><span class="params">(method, path <span class="keyword">string</span>, handlers HandlersChain)</span></span> &#123;</span><br><span class="line">    assert1(path[<span class="number">0</span>] == <span class="string">&#x27;/&#x27;</span>, <span class="string">&quot;path must begin with &#x27;/&#x27;&quot;</span>)</span><br><span class="line">    assert1(method != <span class="string">&quot;&quot;</span>, <span class="string">&quot;HTTP method can not be empty&quot;</span>)</span><br><span class="line">    assert1(<span class="built_in">len</span>(handlers) &gt; <span class="number">0</span>, <span class="string">&quot;there must be at least one handler&quot;</span>)</span><br><span class="line"></span><br><span class="line">debugPrintRoute(method, path, handlers)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 检查有没有对应method集合的路由</span></span><br><span class="line">    root := engine.trees.get(method)</span><br><span class="line">    <span class="keyword">if</span> root == <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="comment">// 没有 创建一个新的路由节点</span></span><br><span class="line">root = <span class="built_in">new</span>(node)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 添加该method的路由tree到当前的路由到路由树里</span></span><br><span class="line">        engine.trees = <span class="built_in">append</span>(engine.trees, methodTree&#123;method: method, root: root&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 添加路由</span></span><br><span class="line">    root.addRoute(path, handlers)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 路由树节点</span></span><br><span class="line"><span class="keyword">type</span> node <span class="keyword">struct</span> &#123;</span><br><span class="line">    path      <span class="keyword">string</span></span><br><span class="line">    indices   <span class="keyword">string</span></span><br><span class="line">    children  []*node</span><br><span class="line">    handlers  HandlersChain   <span class="comment">// 所有的handle 构成一个链</span></span><br><span class="line">    priority  <span class="keyword">uint32</span></span><br><span class="line">    nType     nodeType</span><br><span class="line">    maxParams <span class="keyword">uint8</span></span><br><span class="line">    wildChild <span class="keyword">bool</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 启动http server</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(engine *Engine)</span> <span class="title">Run</span><span class="params">(addr ...<span class="keyword">string</span>)</span> <span class="params">(err error)</span></span> &#123;</span><br><span class="line">    <span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123; debugPrintError(err) &#125;()</span><br><span class="line"></span><br><span class="line">    address := resolveAddress(addr)</span><br><span class="line">debugPrint(<span class="string">&quot;Listening and serving HTTP on %s\n&quot;</span>, address)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 执行http包的ListenAndServe方法 启动路由</span></span><br><span class="line">    err = http.ListenAndServe(address, engine)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// engine自身就实现了Handler接口</span></span><br><span class="line"><span class="keyword">type</span> Handler <span class="keyword">interface</span> &#123;</span><br><span class="line">    ServeHTTP(ResponseWriter, *Request)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 监听IP+端口</span></span><br><span class="line">ln, err := net.Listen(<span class="string">&quot;tcp&quot;</span>, addr)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 接着就是Serve</span></span><br><span class="line">srv.Serve(tcpKeepAliveListener&#123;ln.(*net.TCPListener)&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Accept请求</span></span><br><span class="line">rw, e := l.Accept()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用goroutine去处理一个请求，最终就执行的是engine的ServeHTTP方法</span></span><br><span class="line"><span class="keyword">go</span> c.serve(ctx)</span><br><span class="line"></span><br><span class="line"><span class="comment">// engine实现http.Handler接口ServeHTTP的具体方法</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(engine *Engine)</span> <span class="title">ServeHTTP</span><span class="params">(w http.ResponseWriter, req *http.Request)</span></span> &#123;</span><br><span class="line">    <span class="comment">// 获取一个上下文实例，从实例池获取 性能高</span></span><br><span class="line">c := engine.pool.Get().(*Context)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 重置获取到的上下文实例的http.ResponseWriter</span></span><br><span class="line">c.writermem.reset(w)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 重置获取到的上下文实例*http.Request</span></span><br><span class="line">c.Request = req</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 重置获取到的上下文实例的其他属性</span></span><br><span class="line">    c.reset()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 实际处理请求的地方，传递当前的上下文</span></span><br><span class="line">    engine.handleHTTPRequest(c)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//归还上下文实例</span></span><br><span class="line">    engine.pool.Put(c)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 具体执行路由的方法</span></span><br><span class="line">engine.handleHTTPRequest(c)</span><br><span class="line"></span><br><span class="line">t := engine.trees</span><br><span class="line"><span class="keyword">for</span> i, tl := <span class="number">0</span>, <span class="built_in">len</span>(t); i &lt; tl; i++ &#123;</span><br><span class="line">    <span class="comment">// 遍历路由树，查找当前请求method</span></span><br><span class="line">    <span class="keyword">if</span> t[i].method != httpMethod &#123;</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 找到节点</span></span><br><span class="line">root := t[i].root</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 寻找当前请求的路由</span></span><br><span class="line">    handlers, params, tsr := root.getValue(path, c.Params, unescape)</span><br><span class="line">    <span class="keyword">if</span> handlers != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="comment">// 把找到的handles赋值给上下文</span></span><br><span class="line">        c.handlers = handlers</span><br><span class="line">        <span class="comment">// 把找到的入参赋值给上下文</span></span><br><span class="line">        c.Params = params</span><br><span class="line">        <span class="comment">// 执行handle</span></span><br><span class="line">        c.Next()</span><br><span class="line">        <span class="comment">// 处理响应内容</span></span><br><span class="line">        c.writermem.WriteHeaderNow()</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 方法树结构体</span></span><br><span class="line"><span class="keyword">type</span> methodTree <span class="keyword">struct</span> &#123;</span><br><span class="line">    <span class="comment">// HTTP Method</span></span><br><span class="line">    method <span class="keyword">string</span></span><br><span class="line">    <span class="comment">// 当前HTTP Method的路由节点</span></span><br><span class="line">    root   *node</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 方法树集合</span></span><br><span class="line"><span class="keyword">type</span> methodTrees []methodTree</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行handle</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *Context)</span> <span class="title">Next</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">// 上下文处理之后c.index被执为-1</span></span><br><span class="line">    c.index++</span><br><span class="line">    <span class="keyword">for</span> s := <span class="keyword">int8</span>(<span class="built_in">len</span>(c.handlers)); c.index &lt; s; c.index++ &#123;</span><br><span class="line">        <span class="comment">// 遍历执行所有handle(其实就是中间件+路由handle)</span></span><br><span class="line">        c.handlers[c.index](c)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Context的重置方法</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *Context)</span> <span class="title">reset</span><span class="params">()</span></span> &#123;</span><br><span class="line">    c.Writer = &amp;c.writermem</span><br><span class="line">    c.Params = c.Params[<span class="number">0</span>:<span class="number">0</span>]</span><br><span class="line">    c.handlers = <span class="literal">nil</span></span><br><span class="line">    <span class="comment">// 很关键 注意这里是-1哦</span></span><br><span class="line">    c.index = <span class="number">-1</span></span><br><span class="line">    c.Keys = <span class="literal">nil</span></span><br><span class="line">    c.Errors = c.Errors[<span class="number">0</span>:<span class="number">0</span>]</span><br><span class="line">    c.Accepted = <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/platform/gin-architecture.png" alt="img"> </p>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Go OS性能数据</title>
      <link href="/2019/05/16/Go%20OS%E6%80%A7%E8%83%BD%E6%95%B0%E6%8D%AE/"/>
      <url>/2019/05/16/Go%20OS%E6%80%A7%E8%83%BD%E6%95%B0%E6%8D%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="1-系统性能"><a href="#1-系统性能" class="headerlink" title="1. 系统性能"></a>1. 系统性能</h1><p>psutil是一个跨平台进程和系统监控的Python库，gopsutil是其Go语言版本的实现。适合做一些诸如采集系统信息和监控的服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go get github.com/shirou/gopsutil/cpu</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">getCpuInfo</span><span class="params">()</span></span> &#123;</span><br><span class="line">cpuInfos, _ := cpu.Info()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, ci := <span class="keyword">range</span> cpuInfos &#123;</span><br><span class="line">fmt.Println(ci)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// CPU 使用率</span></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">percent, _ := cpu.Percent(time.Second, <span class="literal">false</span>)</span><br><span class="line">fmt.Printf(<span class="string">&quot;cpu percent: %v\n&quot;</span>, percent)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">getMemInfo</span><span class="params">()</span></span> &#123;</span><br><span class="line">memInfo, _ := mem.VirtualMemory()</span><br><span class="line">fmt.Printf(<span class="string">&quot;mem info: %v\n&quot;</span>, memInfo)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">getHostInfo</span><span class="params">()</span></span> &#123;</span><br><span class="line">hostInfo, _ := host.Info()</span><br><span class="line">fmt.Printf(<span class="string">&quot;host info: %v\n&quot;</span>, hostInfo)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">getDiskInfo</span><span class="params">()</span></span> &#123;</span><br><span class="line">parts, _ := disk.Partitions(<span class="literal">true</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, part := <span class="keyword">range</span> parts &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;part: %v\n&quot;</span>, part.String())</span><br><span class="line">diskInfo, _ := disk.Usage(part.Mountpoint)</span><br><span class="line">fmt.Printf(<span class="string">&quot;disk info: used=%v, free=%v\n&quot;</span>, diskInfo.Used, diskInfo.Free)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ioStat, _ := disk.IOCounters()</span><br><span class="line"><span class="keyword">for</span> k, v := <span class="keyword">range</span> ioStat &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;%v: %v\n&quot;</span>, k, v)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">getNetInfo</span><span class="params">()</span></span> &#123;</span><br><span class="line">infos, _ := net.IOCounters(<span class="literal">true</span>)</span><br><span class="line"><span class="keyword">for</span> i, v := <span class="keyword">range</span> infos &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;%v: %v, send: %v, recv: %v\n&quot;</span>, i, v, v.BytesSent, v.BytesRecv)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><span id="more"></span><h1 id="2-获取IP地址"><a href="#2-获取IP地址" class="headerlink" title="2. 获取IP地址"></a>2. 获取IP地址</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">getLocalIP</span><span class="params">()</span></span> &#123;</span><br><span class="line">addrs, _ := net.InterfaceAddrs()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, addr := <span class="keyword">range</span> addrs &#123;</span><br><span class="line">ipAddr, ok := addr.(*net.IPNet)</span><br><span class="line"><span class="keyword">if</span> !ok &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ipAddr.IP.IsLoopback() &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> !ipAddr.IP.IsGlobalUnicast() &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(ipAddr.IP.String())</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">getOutboundIP</span><span class="params">()</span></span> &#123;</span><br><span class="line">conn, err := net.Dial(<span class="string">&quot;udp&quot;</span>, <span class="string">&quot;114.114.114.114:80&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> conn.Close()</span><br><span class="line"></span><br><span class="line">localAddr := conn.LocalAddr().(*net.UDPAddr)</span><br><span class="line">fmt.Println(localAddr.IP.String())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Go 数据库 sqlx</title>
      <link href="/2019/05/01/Go%20%E6%95%B0%E6%8D%AE%E5%BA%93%20sqlx/"/>
      <url>/2019/05/01/Go%20%E6%95%B0%E6%8D%AE%E5%BA%93%20sqlx/</url>
      
        <content type="html"><![CDATA[<h1 id="1-Getting-Started"><a href="#1-Getting-Started" class="headerlink" title="1. Getting Started"></a>1. Getting Started</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">go get github.com/jmoiron/sqlx</span><br><span class="line">github.com/go-sql-driver/mysql</span><br></pre></td></tr></table></figure><h1 id="2-Handle-Types"><a href="#2-Handle-Types" class="headerlink" title="2. Handle Types"></a>2. Handle Types</h1><p>4 handle types:</p><table><thead><tr><th>sqlx</th><th>database/sql</th></tr></thead><tbody><tr><td>sqlx.DB</td><td>sql.DB</td></tr><tr><td>sqlx.Tx</td><td>sql.Tx</td></tr><tr><td>sqlx.Stmt</td><td>sql.Stmt</td></tr><tr><td>sqlx.NamedStmt</td><td></td></tr></tbody></table><p>2 cursor types:</p><table><thead><tr><th>sqlx</th><th>database/sql</th><th>from</th></tr></thead><tbody><tr><td>sqlx.Rows</td><td>sql.Rows</td><td>Queryx</td></tr><tr><td>sqlx.Row</td><td>sql.Row</td><td>QueryRowx</td></tr></tbody></table><span id="more"></span><h1 id="3-Connecting-to-Database"><a href="#3-Connecting-to-Database" class="headerlink" title="3. Connecting to Database"></a>3. Connecting to Database</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> dsn = <span class="string">&quot;root:123456@tcp(127.0.0.1:3306)/mydb?parseTime=true&amp;&amp;charset=utf8mb4&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> db *sqlx.DB</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1. same as sql.Open()</span></span><br><span class="line">db, err = sqlx.Open(<span class="string">&quot;mysql&quot;</span>, dsn)</span><br><span class="line">err = db.Ping()  <span class="comment">// force a connection and test that is worked </span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. open and connect at the same time</span></span><br><span class="line">db, err = sqlx.Connect(<span class="string">&quot;mysql&quot;</span>, dsn)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. same as 2, but panic on error</span></span><br><span class="line">db = sqlx.MustConnect(<span class="string">&quot;mysql&quot;</span>, dsn)</span><br></pre></td></tr></table></figure><h1 id="4-Querying"><a href="#4-Querying" class="headerlink" title="4. Querying"></a>4. Querying</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. unchanged from database/sql</span></span><br><span class="line">Exec(query <span class="keyword">string</span>, args ...<span class="keyword">interface</span>&#123;&#125;) (sql.Result, error)</span><br><span class="line">Query(query <span class="keyword">string</span>, args ...<span class="keyword">interface</span>&#123;&#125;) (*sql.Rows, error)</span><br><span class="line">QueryRow(query <span class="keyword">string</span>, args ...<span class="keyword">interface</span>&#123;&#125;) *sql.Row</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. extensions</span></span><br><span class="line">MustExec(query <span class="keyword">string</span>, args ...<span class="keyword">interface</span>&#123;&#125;) sql.Result</span><br><span class="line">Queryx(query <span class="keyword">string</span>, args ...<span class="keyword">interface</span>&#123;&#125;) (*sqlx.Rows, error)</span><br><span class="line">QueryRowx(query <span class="keyword">string</span>, args ...<span class="keyword">interface</span>&#123;&#125;) *sqlx.Row</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. new semantics: 结构体struct与数据库schema绑定</span></span><br><span class="line">Select(dest <span class="keyword">interface</span>&#123;&#125;, query <span class="keyword">string</span>, args ...<span class="keyword">interface</span>&#123;&#125;) error</span><br><span class="line">Get(dest <span class="keyword">interface</span>&#123;&#125;, query <span class="keyword">string</span>, args ...<span class="keyword">interface</span>&#123;&#125;) error  <span class="comment">// An error is returned if the result set is empty</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 4. sqlx.Row</span></span><br><span class="line"><span class="keyword">type</span> Rows <span class="keyword">struct</span> &#123;</span><br><span class="line">*sql.Rows</span><br><span class="line">unsafe <span class="keyword">bool</span></span><br><span class="line">Mapper *reflectx.Mapper</span><br><span class="line"><span class="comment">// these fields cache memory use for a rows during iteration w/ structScan</span></span><br><span class="line">started <span class="keyword">bool</span></span><br><span class="line">fields  [][]<span class="keyword">int</span></span><br><span class="line">values  []<span class="keyword">interface</span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 5. sql.Result</span></span><br><span class="line">LastInsertId() (<span class="keyword">int64</span>, error)</span><br><span class="line">RowsAffected() (<span class="keyword">int64</span>, error)</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">querying</span><span class="params">(db *sqlx.DB)</span></span> &#123;</span><br><span class="line"><span class="comment">// 1. Exec &amp; MustExec</span></span><br><span class="line">schema := <span class="string">`CREATE TABLE IF NOT EXISTS person (</span></span><br><span class="line"><span class="string">id INT(10) AUTO_INCREMENT PRIMARY KEY,</span></span><br><span class="line"><span class="string">name VARCHAR(20) NOT NULL,</span></span><br><span class="line"><span class="string">age TINYINT,</span></span><br><span class="line"><span class="string">address VARCHAR(100)</span></span><br><span class="line"><span class="string">)`</span></span><br><span class="line">db.MustExec(schema)</span><br><span class="line"></span><br><span class="line">sqlStr := <span class="string">&quot;insert into person(name, age) values(?, ?)&quot;</span></span><br><span class="line">db.MustExec(sqlStr, <span class="string">&quot;jack&quot;</span>, <span class="number">21</span>)</span><br><span class="line">db.MustExec(sqlStr, <span class="string">&quot;maxin&quot;</span>, <span class="number">30</span>)</span><br><span class="line"></span><br><span class="line">sqlStr = <span class="string">&quot;insert into person(name, age, address) values(?, ?, ?)&quot;</span></span><br><span class="line">result, err := db.Exec(sqlStr, <span class="string">&quot;lucy&quot;</span>, <span class="number">39</span>, <span class="string">&quot;London, UK&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line">id, _ := result.LastInsertId()</span><br><span class="line">fmt.Printf(<span class="string">&quot;last insert id is %d\n&quot;</span>, id)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. Query &amp; Queryx</span></span><br><span class="line">sqlStr = <span class="string">&quot;select * from person&quot;</span></span><br><span class="line">rows1, err := db.Query(sqlStr)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> rows1.Next() &#123;</span><br><span class="line"><span class="keyword">var</span> id <span class="keyword">int</span></span><br><span class="line"><span class="keyword">var</span> name <span class="keyword">string</span></span><br><span class="line"><span class="keyword">var</span> age <span class="keyword">uint8</span></span><br><span class="line"><span class="keyword">var</span> address sql.NullString</span><br><span class="line">err = rows1.Scan(&amp;id, &amp;name, &amp;age, &amp;address)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Printf(<span class="string">&quot;id: %d, name: %s, age: %d, address: %v\n&quot;</span>, id, name, age, address)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> person <span class="keyword">struct</span> &#123;</span><br><span class="line">Id      <span class="keyword">int</span></span><br><span class="line">Name    <span class="keyword">string</span></span><br><span class="line">Age     <span class="keyword">uint8</span></span><br><span class="line">Address sql.NullString</span><br><span class="line">&#125;</span><br><span class="line">rows2, err := db.Queryx(sqlStr)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> rows2.Next() &#123;</span><br><span class="line"><span class="keyword">var</span> p person</span><br><span class="line">rows2.Scan(&amp;p)</span><br><span class="line">fmt.Printf(<span class="string">&quot;%#v\n&quot;</span>, p)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. Get &amp; Select</span></span><br><span class="line"><span class="keyword">var</span> p person</span><br><span class="line"><span class="keyword">var</span> pp []person</span><br><span class="line"></span><br><span class="line">err = db.Get(&amp;p, <span class="string">&quot;select * from person limit 1&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Printf(<span class="string">&quot;%#v\n&quot;</span>, p)</span><br><span class="line"></span><br><span class="line">err = db.Select(&amp;pp, <span class="string">&quot;select * from person where id &gt; 2&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Printf(<span class="string">&quot;%#v\n&quot;</span>, pp)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> count <span class="keyword">int</span></span><br><span class="line">db.Get(&amp;count, <span class="string">&quot;select count(*) from person&quot;</span>)</span><br><span class="line">fmt.Println(count)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> names []<span class="keyword">string</span></span><br><span class="line">db.Select(&amp;names, <span class="string">&quot;select name from person&quot;</span>)</span><br><span class="line">fmt.Println(names)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="5-Transactions"><a href="#5-Transactions" class="headerlink" title="5. Transactions"></a>5. Transactions</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. sql.Tx</span></span><br><span class="line">Begin() (*sql.Tx, error)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. sqlx.Tx</span></span><br><span class="line">Beginx() (*sqlx.Tx, error)</span><br><span class="line">MustBegin() (*sql.Tx)</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">func transaction(db *sqlx.DB) &#123;</span><br><span class="line">tx := db.MustBegin()</span><br><span class="line"></span><br><span class="line">defer <span class="function"><span class="title">func</span></span>() &#123;</span><br><span class="line"><span class="keyword">if</span> err := recover(); err != nil &#123;</span><br><span class="line">tx.Rollback()</span><br><span class="line">&#125;</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line">tx.MustExec(<span class="string">&quot;delete from person where id=4&quot;</span>)</span><br><span class="line">tx.MustExec(<span class="string">&quot;insert into person values(2, &#x27;abc&#x27;, 22, &#x27;LA&#x27;)&quot;</span>)</span><br><span class="line">tx.MustExec(<span class="string">&quot;insert into person values(100, &#x27;abc&#x27;, 22, &#x27;LA&#x27;)&quot;</span>)</span><br><span class="line"></span><br><span class="line">err := tx.Commit()</span><br><span class="line"><span class="keyword">if</span> err != nil &#123;</span><br><span class="line">panic(err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="6-Prepared-Statements"><a href="#6-Prepared-Statements" class="headerlink" title="6. Prepared Statements"></a>6. Prepared Statements</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">prepared</span><span class="params">(db *sqlx.DB)</span></span> &#123;</span><br><span class="line">stmt, _ := db.Prepare(<span class="string">&quot;select * from person where id=?&quot;</span>)</span><br><span class="line">row := stmt.QueryRow(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> id <span class="keyword">int</span></span><br><span class="line"><span class="keyword">var</span> name <span class="keyword">string</span></span><br><span class="line"><span class="keyword">var</span> age <span class="keyword">uint8</span></span><br><span class="line"><span class="keyword">var</span> address sql.NullString</span><br><span class="line">row.Scan(&amp;id, &amp;name, &amp;age, &amp;address)</span><br><span class="line">fmt.Printf(<span class="string">&quot;id: %d, name: %s, age: %d, address: %v\n&quot;</span>, id, name, age, address)</span><br><span class="line"></span><br><span class="line">stmtx, _ := db.Preparex(<span class="string">&quot;select * from person where id=?&quot;</span>)</span><br><span class="line">rowx := stmtx.QueryRowx(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> p person</span><br><span class="line">rowx.Scan(&amp;p)</span><br><span class="line">fmt.Printf(<span class="string">&quot;%#v\n&quot;</span>, p)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="7-Query-Helpers"><a href="#7-Query-Helpers" class="headerlink" title="7. Query Helpers"></a>7. Query Helpers</h1><h2 id="7-1-“In”-Queries"><a href="#7-1-“In”-Queries" class="headerlink" title="7.1 “In” Queries"></a>7.1 “In” Queries</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">inQuery</span><span class="params">(db *sqlx.DB)</span></span> &#123;</span><br><span class="line">ids := []<span class="keyword">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*// converting argument $1 type: unsupported type []int, a slice of int</span></span><br><span class="line"><span class="comment">rows, err := db.Query(&quot;select name from person where id in (?)&quot;, ids)</span></span><br><span class="line"><span class="comment">if err != nil &#123;</span></span><br><span class="line"><span class="comment">panic(err)</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">for rows.Next() &#123;</span></span><br><span class="line"><span class="comment">var name string</span></span><br><span class="line"><span class="comment">rows.Scan(&amp;name)</span></span><br><span class="line"><span class="comment">fmt.Println(name)</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// convert to (?, ?, ...)</span></span><br><span class="line">query, args, err := sqlx.In(<span class="string">&quot;select name from person where id in (?)&quot;</span>, ids)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">query = db.Rebind(query)</span><br><span class="line">fmt.Println(query)</span><br><span class="line">rows, err := db.Query(query, args...)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> rows.Next() &#123;</span><br><span class="line"><span class="keyword">var</span> name <span class="keyword">string</span></span><br><span class="line">rows.Scan(&amp;name)</span><br><span class="line">fmt.Println(name)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-2-Named-Queries"><a href="#7-2-Named-Queries" class="headerlink" title="7.2 Named Queries"></a>7.2 Named Queries</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">NamedQuery(query <span class="keyword">string</span>, arg <span class="keyword">interface</span>&#123;&#125;) (*sqlx.Rows, error)</span><br><span class="line">NamedExec(query <span class="keyword">string</span>, arg <span class="keyword">interface</span>&#123;&#125;) (sql.Result, error)</span><br><span class="line">PrepareNamed(query <span class="keyword">string</span>) (*NamedStmt, error)</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">namedQuery</span><span class="params">(db *sqlx.DB)</span></span> &#123;</span><br><span class="line"><span class="comment">// named query with a struct</span></span><br><span class="line">p := person&#123;Name: <span class="string">&quot;jack&quot;</span>&#125;</span><br><span class="line">rows, _ := db.NamedQuery(<span class="string">&quot;select count(*) from person where name=:name&quot;</span>, p)</span><br><span class="line"><span class="keyword">for</span> rows.Next() &#123;</span><br><span class="line"><span class="keyword">var</span> count <span class="keyword">int</span></span><br><span class="line">rows.Scan(&amp;count)</span><br><span class="line">fmt.Println(count)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// named query with a map</span></span><br><span class="line">m := <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;&#123;<span class="string">&quot;address&quot;</span>: <span class="string">&quot;LA&quot;</span>&#125;</span><br><span class="line">stmt, _ := db.PrepareNamed(<span class="string">&quot;select * from person where address=:address limit 1&quot;</span>)</span><br><span class="line">row := stmt.QueryRowx(m)</span><br><span class="line">row.Scan(&amp;p)</span><br><span class="line">fmt.Printf(<span class="string">&quot;%#v\n&quot;</span>, p)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="8-Alternate-Scan-Types"><a href="#8-Alternate-Scan-Types" class="headerlink" title="8. Alternate Scan Types"></a>8. Alternate Scan Types</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">alternateScan</span><span class="params">(db *sqlx.DB)</span></span> &#123;</span><br><span class="line">rows, _ := db.Queryx(<span class="string">&quot;select * from person&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> rows.Next() &#123;</span><br><span class="line">cols, _ := rows.SliceScan()</span><br><span class="line">fmt.Println(cols)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rows, _ = db.Queryx(<span class="string">&quot;select * from person&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> rows.Next() &#123;</span><br><span class="line">cols := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;)</span><br><span class="line">rows.MapScan(cols)</span><br><span class="line">fmt.Println(cols)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="9-Connection-Pool"><a href="#9-Connection-Pool" class="headerlink" title="9. Connection Pool"></a>9. Connection Pool</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DB.SetMaxIdleConns(n <span class="keyword">int</span>)</span><br><span class="line">DB.SetMaxOpenConns(n <span class="keyword">int</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux 使用总结</title>
      <link href="/2019/04/30/Linux%20%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/"/>
      <url>/2019/04/30/Linux%20%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="1-Ubuntu"><a href="#1-Ubuntu" class="headerlink" title="1. Ubuntu"></a>1. Ubuntu</h1><h2 id="1-1-修改IP"><a href="#1-1-修改IP" class="headerlink" title="1.1 修改IP"></a>1.1 修改IP</h2><p>Ubuntu 16, 18:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/network/interfaces</span><br><span class="line">auto ens33</span><br><span class="line">iface ens33 inet static</span><br><span class="line">address 192.168.80.20</span><br><span class="line">netmask 255.255.255.0</span><br><span class="line">gateway 192.168.80.2</span><br><span class="line">dns-nameservers 8.8.8.8</span><br><span class="line"></span><br><span class="line">sudo ip addr flush ens33</span><br><span class="line">sudo systemctl restart networking</span><br></pre></td></tr></table></figure><span id="more"></span><p>Ubuntu 20:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/netplan/00-installer-config.yaml</span><br><span class="line">network:</span><br><span class="line">  ethernets:</span><br><span class="line">    ens33:</span><br><span class="line">      addresses:</span><br><span class="line">      - 192.168.80.121/24</span><br><span class="line">      gateway4: 192.168.80.2</span><br><span class="line">      nameservers:</span><br><span class="line">        addresses:</span><br><span class="line">        - 8.8.8.8</span><br><span class="line">        search:</span><br><span class="line">        - 8.8.8.8</span><br><span class="line">  version: 2</span><br><span class="line"></span><br><span class="line">sudo netplan apply</span><br></pre></td></tr></table></figure><h2 id="1-2-防火墙"><a href="#1-2-防火墙" class="headerlink" title="1.2 防火墙"></a>1.2 防火墙</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw status</span><br><span class="line">suod ufw <span class="built_in">enable</span>/<span class="built_in">disable</span></span><br><span class="line"></span><br><span class="line">sudo ufw allow/deny 22/tcp</span><br><span class="line"></span><br><span class="line">sudo ufw allow from 192.168.80.1</span><br><span class="line">sudo ufw delete allow from 192.168.80.1</span><br></pre></td></tr></table></figure><h2 id="1-3-sshd"><a href="#1-3-sshd" class="headerlink" title="1.3 sshd"></a>1.3 sshd</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line"></span><br><span class="line">sudo apt-get install openssh-server</span><br><span class="line"></span><br><span class="line">sudo ps -ef | grep ssh</span><br></pre></td></tr></table></figure><h2 id="1-4-Docker"><a href="#1-4-Docker" class="headerlink" title="1.4 Docker"></a>1.4 Docker</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 可能缺少的公共命令</span></span><br><span class="line">sudo apt-get install software-properties-common -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># 证书</span></span><br><span class="line">sudo curl -fsSL http://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo apt-key add -</span><br><span class="line"></span><br><span class="line"><span class="comment"># 仓库信息</span></span><br><span class="line">sudo add-apt-repository <span class="string">&quot;deb [arch=amd64] http://mirrors.aliyun.com/docker-ce/linux/ubuntu <span class="subst">$(lsb_release -cs)</span> stable&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新 cache</span></span><br><span class="line">sudo apt-get update</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可用版本查询</span></span><br><span class="line">sudo apt-cache policy docker-ce</span><br><span class="line">sudo apt-cache madison docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 docker 19.03.15~3-0~ubuntu-xenial</span></span><br><span class="line">sudo apt-get install docker-ce=5:19.03.15~3-0~ubuntu-xenial -y</span><br><span class="line"></span><br><span class="line">sudo docker version</span><br><span class="line"></span><br><span class="line"><span class="comment"># 不需要 sudo， 重新登录</span></span><br><span class="line">sudo usermod -aG docker <span class="variable">$USER</span></span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><h2 id="1-5-Python-多版本"><a href="#1-5-Python-多版本" class="headerlink" title="1.5 Python 多版本"></a>1.5 Python 多版本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 增加 deadsnakes PPA 源</span></span><br><span class="line">sudo add-apt-repository ppa:deadsnakes/ppa</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 python 3.9</span></span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install python3.9</span><br><span class="line"></span><br><span class="line"><span class="comment"># python 默认版本切换成 3.9</span></span><br><span class="line">sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.9 1</span><br><span class="line"></span><br><span class="line">sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 2</span><br><span class="line"></span><br><span class="line">sudo update-alternatives --config python3</span><br><span class="line">There are 2 choices <span class="keyword">for</span> the alternative python3 (providing /usr/bin/python3).</span><br><span class="line"></span><br><span class="line">  Selection    Path                Priority   Status</span><br><span class="line">------------------------------------------------------------</span><br><span class="line">* 0            /usr/bin/python3.8   2         auto mode</span><br><span class="line">  1            /usr/bin/python3.8   2         manual mode</span><br><span class="line">  2            /usr/bin/python3.9   1         manual mode</span><br><span class="line"></span><br><span class="line">Press &lt;enter&gt; to keep the current choice[*], or <span class="built_in">type</span> selection number: 2</span><br><span class="line"></span><br><span class="line">sudo apt install python3-pip python3.9-venv</span><br><span class="line"></span><br><span class="line">python3 -m venv /home/ubuntu/python/venv</span><br></pre></td></tr></table></figure><h2 id="1-6-防火墙"><a href="#1-6-防火墙" class="headerlink" title="1.6 防火墙"></a>1.6 防火墙</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw allow ssh</span><br><span class="line"></span><br><span class="line">sudo ufw allow 6379/tcp</span><br></pre></td></tr></table></figure><h2 id="1-7-阿里源"><a href="#1-7-阿里源" class="headerlink" title="1.7 阿里源"></a>1.7 阿里源</h2><p>ubuntu16:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">sudo -i</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;nameserver 8.8.8.8&quot;</span> &gt;&gt; /etc/resolv.conf</span><br><span class="line"></span><br><span class="line">mv /etc/apt/sources.list /etc/apt/sources.list.bak</span><br><span class="line"></span><br><span class="line">cat &gt; /etc/apt/sources.list &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string"># deb cdrom:[Ubuntu 16.04 LTS _Xenial Xerus_ - Release amd64 (20160420.1)]/ xenial main restricted</span></span><br><span class="line"><span class="string">deb-src http://archive.ubuntu.com/ubuntu xenial main restricted #Added by software-properties</span></span><br><span class="line"><span class="string">deb http://mirrors.aliyun.com/ubuntu/ xenial main restricted</span></span><br><span class="line"><span class="string">deb-src http://mirrors.aliyun.com/ubuntu/ xenial main restricted multiverse universe #Added by software-properties</span></span><br><span class="line"><span class="string">deb http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricted</span></span><br><span class="line"><span class="string">deb-src http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricted multiverse universe #Added by software-properties</span></span><br><span class="line"><span class="string">deb http://mirrors.aliyun.com/ubuntu/ xenial universe</span></span><br><span class="line"><span class="string">deb http://mirrors.aliyun.com/ubuntu/ xenial-updates universe</span></span><br><span class="line"><span class="string">deb http://mirrors.aliyun.com/ubuntu/ xenial multiverse</span></span><br><span class="line"><span class="string">deb http://mirrors.aliyun.com/ubuntu/ xenial-updates multiverse</span></span><br><span class="line"><span class="string">deb http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiverse</span></span><br><span class="line"><span class="string">deb-src http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiverse #Added by software-properties</span></span><br><span class="line"><span class="string">deb http://archive.canonical.com/ubuntu xenial partner</span></span><br><span class="line"><span class="string">deb-src http://archive.canonical.com/ubuntu xenial partner</span></span><br><span class="line"><span class="string">deb http://mirrors.aliyun.com/ubuntu/ xenial-security main restricted</span></span><br><span class="line"><span class="string">deb-src http://mirrors.aliyun.com/ubuntu/ xenial-security main restricted multiverse universe #Added by software-properties</span></span><br><span class="line"><span class="string">deb http://mirrors.aliyun.com/ubuntu/ xenial-security universe</span></span><br><span class="line"><span class="string">deb http://mirrors.aliyun.com/ubuntu/ xenial-security multiverse</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">apt-get update</span><br></pre></td></tr></table></figure><p>ubuntu20:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">mv /etc/apt/sources.list /etc/apt/sources.list.bak</span><br><span class="line"></span><br><span class="line">cat &gt; /etc/apt/sources.list &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">deb http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse</span></span><br><span class="line"><span class="string">deb-src http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">deb http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse</span></span><br><span class="line"><span class="string">deb-src http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">deb http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse</span></span><br><span class="line"><span class="string">deb-src http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">deb http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse</span></span><br><span class="line"><span class="string">deb-src http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">deb http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse</span></span><br><span class="line"><span class="string">deb-src http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">apt update</span><br></pre></td></tr></table></figure><h2 id="1-8-时区"><a href="#1-8-时区" class="headerlink" title="1.8 时区"></a>1.8 时区</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br><span class="line"></span><br><span class="line"><span class="comment"># alternative</span></span><br><span class="line">timedatectl set-timezone <span class="string">&quot;Asia/Shanghai&quot;</span></span><br><span class="line">timedatectl status</span><br><span class="line"></span><br><span class="line"><span class="comment"># alternative 2</span></span><br><span class="line">vi /etc/profile</span><br><span class="line">TZ=<span class="string">&#x27;Asia/Shanghai&#x27;</span></span><br><span class="line"><span class="built_in">export</span> TZ</span><br><span class="line"></span><br><span class="line"><span class="comment"># 时间更新</span></span><br><span class="line">date -s <span class="string">&quot;2019-06-04 11:06:30&quot;</span>  <span class="comment"># 修改为一个正确的时间</span></span><br><span class="line">hwclock -w</span><br><span class="line"></span><br><span class="line">crontab -e</span><br><span class="line">* */1 * * * ntpdate 0.asia.pool.ntp.org</span><br></pre></td></tr></table></figure><h2 id="1-9-k8s"><a href="#1-9-k8s" class="headerlink" title="1.9 k8s"></a>1.9 k8s</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">apt-get update &amp;&amp; apt-get install -y apt-transport-https</span><br><span class="line"></span><br><span class="line">curl https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg | apt-key add - </span><br><span class="line"></span><br><span class="line"><span class="comment"># ubuntu16</span></span><br><span class="line">cat &gt;/etc/apt/sources.list.d/kubernetes.list &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">deb https://mirrors.aliyun.com/kubernetes/apt/ kubernetes-xenial main</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">apt-get update</span><br><span class="line">apt-get install -y kubelet kubeadm kubectl</span><br></pre></td></tr></table></figure><h1 id="2-CentOS"><a href="#2-CentOS" class="headerlink" title="2. CentOS"></a>2. CentOS</h1><h2 id="2-1-寻找命令所在包"><a href="#2-1-寻找命令所在包" class="headerlink" title="2.1 寻找命令所在包"></a>2.1 寻找命令所在包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum whatprovides */lspci</span><br></pre></td></tr></table></figure><h2 id="2-2-获取磁盘的-uuid"><a href="#2-2-获取磁盘的-uuid" class="headerlink" title="2.2 获取磁盘的 uuid"></a>2.2 获取磁盘的 uuid</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">blkid</span><br><span class="line"></span><br><span class="line">/dev/sr0: UUID=<span class="string">&quot;2020-04-22-00-51-40-00&quot;</span> LABEL=<span class="string">&quot;CentOS 7 x86_64&quot;</span> TYPE=<span class="string">&quot;iso9660&quot;</span> PTTYPE=<span class="string">&quot;dos&quot;</span> </span><br><span class="line">/dev/sda1: UUID=<span class="string">&quot;8447e521-4bb8-4fb7-853e-cd6661dd98b4&quot;</span> TYPE=<span class="string">&quot;xfs&quot;</span></span><br></pre></td></tr></table></figure><h2 id="2-3-换yum源"><a href="#2-3-换yum源" class="headerlink" title="2.3. 换yum源"></a>2.3. 换yum源</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</span><br><span class="line"></span><br><span class="line">curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line">wget -O</span><br><span class="line"></span><br><span class="line">yum makecache</span><br></pre></td></tr></table></figure><h2 id="2-4-防火墙"><a href="#2-4-防火墙" class="headerlink" title="2.4 防火墙"></a>2.4 防火墙</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">iptables -A INPUT -p tcp -s 0/0 --dport 80 -j ACCEPT </span><br><span class="line"></span><br><span class="line">iptables -A OUTPUT -p tcp --sport 80 -m state --state ESTABLISHED -j ACCEPT </span><br><span class="line"></span><br><span class="line">service iptables save</span><br></pre></td></tr></table></figure><h1 id="3-公共部分"><a href="#3-公共部分" class="headerlink" title="3. 公共部分"></a>3. 公共部分</h1><h2 id="3-1-进程-amp-线程"><a href="#3-1-进程-amp-线程" class="headerlink" title="3.1 进程 &amp; 线程"></a>3.1 进程 &amp; 线程</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 线程</span></span><br><span class="line">top -H </span><br><span class="line"></span><br><span class="line"><span class="comment"># 需要ncurses， 更友好</span></span><br><span class="line">htop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进程的关联子进程</span></span><br><span class="line">ps -T -p 959</span><br><span class="line">    PID    SPID TTY          TIME CMD</span><br><span class="line">    959     959 ?        00:00:27 redis-server</span><br><span class="line">    959     960 ?        00:00:00 redis-server</span><br><span class="line">    959     961 ?        00:00:00 redis-server</span><br><span class="line">    959     962 ?        00:00:00 redis-server</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="3-2-路由"><a href="#3-2-路由" class="headerlink" title="3.2 路由"></a>3.2 路由</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除默认设置</span></span><br><span class="line">route delete 0.0.0.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 外网路由，全走无线</span></span><br><span class="line">route add 0.0.0.0 mask 0.0.0.0 192.168.33.1 –p</span><br><span class="line"></span><br><span class="line"><span class="comment"># 公司内网全部在10.40.*.*网段</span></span><br><span class="line">route add 10.40.0.0 mask 255.255.0.0 10.40.254.1 -p</span><br><span class="line"></span><br><span class="line"><span class="comment"># 路由追踪</span></span><br><span class="line">tracert -d google.com</span><br></pre></td></tr></table></figure><h2 id="3-3-tcpdump"><a href="#3-3-tcpdump" class="headerlink" title="3.3 tcpdump"></a>3.3 tcpdump</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">tcpdump -i ens33 port 8080 -w http.cap</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">tcpdump src port 1025</span><br><span class="line">tcpdump portrange 21-23</span><br><span class="line"></span><br><span class="line">tcpdump -vvAls0 | grep <span class="string">&#x27;User-Agent:&#x27;</span></span><br><span class="line">tcpdump -vvAls0 | grep <span class="string">&#x27;Set-Cookie|Host:|Cookie:&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="3-4-支持密码登录"><a href="#3-4-支持密码登录" class="headerlink" title="3.4 支持密码登录"></a>3.4 支持密码登录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/ssh/sshd_config</span><br><span class="line">PasswordAuthentication no =&gt; yes</span><br><span class="line"></span><br><span class="line">systemctl restart sshd</span><br></pre></td></tr></table></figure><h2 id="3-5-远程端口检查"><a href="#3-5-远程端口检查" class="headerlink" title="3.5 远程端口检查"></a>3.5 远程端口检查</h2><h3 id="3-5-1-telnet"><a href="#3-5-1-telnet" class="headerlink" title="3.5.1 telnet"></a>3.5.1 telnet</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">telnet baidu.com 80</span><br></pre></td></tr></table></figure><h3 id="3-5-2-nc-NetCat"><a href="#3-5-2-nc-NetCat" class="headerlink" title="3.5.2 nc (NetCat)"></a>3.5.2 nc (NetCat)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -v baidu.com 80</span><br></pre></td></tr></table></figure><h3 id="3-5-3-nmap"><a href="#3-5-3-nmap" class="headerlink" title="3.5.3 nmap"></a>3.5.3 nmap</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap baidu.com -p 80</span><br></pre></td></tr></table></figure><h2 id="3-6-sudo"><a href="#3-6-sudo" class="headerlink" title="3.6 sudo"></a>3.6 sudo</h2><h3 id="3-6-1-语法条目"><a href="#3-6-1-语法条目" class="headerlink" title="3.6.1 语法条目"></a>3.6.1 语法条目</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">who host=(runas)  TAG:<span class="built_in">command</span></span><br></pre></td></tr></table></figure><h3 id="3-6-2-配置"><a href="#3-6-2-配置" class="headerlink" title="3.6.2. 配置"></a>3.6.2. 配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">visudo</span><br><span class="line"></span><br><span class="line">oracle ALL=(root) NOPASSWD:/sbin/useradd, PASSWD:/sbin/userdel</span><br><span class="line"></span><br><span class="line">%admin ALL=(root) NOPASSWD:/sbin/shutdown</span><br><span class="line"></span><br><span class="line">web ALL=(operator) /etc/webhook/mytest.sh</span><br><span class="line"></span><br><span class="line"><span class="built_in">test</span> ALL=(ALL) /bin/cat /var/<span class="built_in">log</span>/secure*, !/bin/cat /var/<span class="built_in">log</span>/secure* *</span><br></pre></td></tr></table></figure><h3 id="3-6-3-执行sudo"><a href="#3-6-3-执行sudo" class="headerlink" title="3.6.3. 执行sudo"></a>3.6.3. 执行sudo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">su - oracle</span><br><span class="line">sudo /sbin/useradd test123</span><br><span class="line"></span><br><span class="line">su - web</span><br><span class="line">sudo -u operator /etc/webhook/mytest.sh</span><br></pre></td></tr></table></figure><h3 id=""><a href="#" class="headerlink" title=""></a></h3><h1 id="4-软件"><a href="#4-软件" class="headerlink" title="4. 软件"></a>4. 软件</h1><h2 id="4-1-Redis"><a href="#4-1-Redis" class="headerlink" title="4.1 Redis"></a>4.1 Redis</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget http://download.redis.io/releases/redis-5.0.12.tar.gz </span><br><span class="line">tar zxvf redis-5.0.12.tar.gz </span><br><span class="line"><span class="built_in">cd</span> redis-5.0.12</span><br><span class="line">make</span><br></pre></td></tr></table></figure><h2 id="4-2-k8s"><a href="#4-2-k8s" class="headerlink" title="4.2 k8s"></a>4.2 k8s</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/yum.repos.d/kubernetes.repo &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">[kubernetes]</span></span><br><span class="line"><span class="string">name=Kubernetes</span></span><br><span class="line"><span class="string">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/</span></span><br><span class="line"><span class="string">enabled=1</span></span><br><span class="line"><span class="string">gpgcheck=1</span></span><br><span class="line"><span class="string">repo_gpgcheck=1</span></span><br><span class="line"><span class="string">gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">setenforce 0</span><br><span class="line">yum install -y kubelet kubeadm kubectl</span><br><span class="line">systemctl <span class="built_in">enable</span> kubelet &amp;&amp; systemctl start kubelet</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Nginx配置</title>
      <link href="/2019/04/25/Nginx/"/>
      <url>/2019/04/25/Nginx/</url>
      
        <content type="html"><![CDATA[<h1 id="1-重定向"><a href="#1-重定向" class="headerlink" title="1. 重定向"></a>1. 重定向</h1><h2 id="1-1-proxy-pass"><a href="#1-1-proxy-pass" class="headerlink" title="1.1 proxy_pass"></a>1.1 proxy_pass</h2><p>302跳转，不能传递原来请求的header</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span>       <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span>  a.example.com;</span><br><span class="line">    <span class="attribute">listen</span>       <span class="number">443</span> ssl;</span><br><span class="line">  </span><br><span class="line">    <span class="attribute">location</span> = /xx &#123;</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://b.example.com/xx;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Host b.example.com;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Real-IP $remote_addr;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-For $remote_addr;</span><br><span class="line">        break;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="1-2-rewrite"><a href="#1-2-rewrite" class="headerlink" title="1.2 rewrite"></a>1.2 rewrite</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">        <span class="attribute">server_name</span> test1.com;</span><br><span class="line">        <span class="attribute">rewrite</span><span class="regexp"> ^(.*)</span> https://www.test1.com<span class="variable">$1</span> <span class="literal">permanent</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="2-负载均衡-upstream"><a href="#2-负载均衡-upstream" class="headerlink" title="2. 负载均衡 upstream"></a>2. 负载均衡 upstream</h1><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">upstream</span> balanceServer &#123;</span><br><span class="line">  ip_hash;</span><br><span class="line">  </span><br><span class="line">  <span class="attribute">server</span> <span class="number">192.168.1.10:8080</span> weight <span class="number">2</span>;</span><br><span class="line">  <span class="attribute">server</span> <span class="number">192.168.1.11:8080</span>;</span><br><span class="line">  <span class="attribute">server</span> <span class="number">192.168.1.12:8080</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">  <span class="attribute">server_name</span> test.com;</span><br><span class="line">  <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">  <span class="attribute">location</span> /api &#123;</span><br><span class="line">    <span class="attribute">proxy_pass</span> http://balanceServer;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>weight：指定轮询几率，weight和访问比率成正比，用于后端服务器性能不均的情况。与ip_hash不兼容</li></ul><p><strong>负载均衡策略：</strong></p><ol><li><p>轮询（默认）</p><p>缺点：如果其中某一台服务器压力太大，出现延迟，会影响所有分配在这台服务器下的用户。</p></li></ol><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">upstream</span> balanceServer &#123;</span><br><span class="line">  <span class="attribute">server</span> <span class="number">192.168.1.10:8080</span>;</span><br><span class="line">  <span class="attribute">server</span> <span class="number">192.168.1.11:8080</span>;</span><br><span class="line">  <span class="attribute">server</span> <span class="number">192.168.1.12:8080</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>最小连接数策略</li></ol><p>将请求优先分配给压力较小的服务器，它可以平衡每个队列的长度，并避免向压力大的服务器添加更多的请求</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">upstream</span> balanceServer &#123;</span><br><span class="line">  least_conn;</span><br><span class="line">  <span class="attribute">server</span> <span class="number">192.168.1.10:8080</span>;</span><br><span class="line">  <span class="attribute">server</span> <span class="number">192.168.1.11:8080</span>;</span><br><span class="line">  <span class="attribute">server</span> <span class="number">192.168.1.12:8080</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>最快响应时间策略</li></ol><p>依赖于 NGINX Plus，优先分配给响应时间最短的服务器。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">upstream</span> balanceServer &#123;</span><br><span class="line">  fair;</span><br><span class="line">  <span class="attribute">server</span> <span class="number">192.168.1.10:8080</span>;</span><br><span class="line">  <span class="attribute">server</span> <span class="number">192.168.1.11:8080</span>;</span><br><span class="line">  <span class="attribute">server</span> <span class="number">192.168.1.12:8080</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>session共享</li></ol><p>每个访问安访问ip的hash结果分配，可确保每个访客孤独访问一个后端服务器，可解决session保持问题。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">upstream</span> balanceServer &#123;</span><br><span class="line">  ip_hash;</span><br><span class="line">  <span class="attribute">server</span> <span class="number">192.168.1.10:8080</span>;</span><br><span class="line">  <span class="attribute">server</span> <span class="number">192.168.1.11:8080</span>;</span><br><span class="line">  <span class="attribute">server</span> <span class="number">192.168.1.12:8080</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="3-Nginx内置全局变量"><a href="#3-Nginx内置全局变量" class="headerlink" title="3. Nginx内置全局变量"></a>3. Nginx内置全局变量</h1><table><thead><tr><th>变量名</th><th>功能</th></tr></thead><tbody><tr><td>$host</td><td>请求信息中的Host，没有则设置成服务器名</td></tr><tr><td>$request_method</td><td>GET, POST</td></tr><tr><td>$args</td><td></td></tr><tr><td>$content_length</td><td></td></tr><tr><td>$http_user_agent</td><td></td></tr><tr><td>$http_cookie</td><td></td></tr><tr><td>$remote_addr</td><td></td></tr><tr><td>$remote_port</td><td></td></tr><tr><td>$server_protocol</td><td>HTTP/1.0 HTTP/1.1</td></tr><tr><td>$server_addr</td><td></td></tr><tr><td>$server_port</td><td></td></tr><tr><td>$server_name</td><td></td></tr></tbody></table><h1 id="4-请求过滤"><a href="#4-请求过滤" class="headerlink" title="4. 请求过滤"></a>4. 请求过滤</h1><h2 id="4-1-按状态码过滤"><a href="#4-1-按状态码过滤" class="headerlink" title="4.1 按状态码过滤"></a>4.1 按状态码过滤</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span>  <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span> test.com;</span><br><span class="line">    <span class="attribute">access_log</span> /var/log/nginx/nginx-access.log main;</span><br><span class="line">    <span class="attribute">error_log</span> /var/log/nginx/nginx-<span class="literal">error</span>.log;</span><br><span class="line">    <span class="attribute">error_page</span> <span class="number">404</span> = /<span class="number">404</span>;</span><br><span class="line">    <span class="attribute">error_page</span> <span class="number">403</span> = /<span class="number">403</span>;</span><br><span class="line">    <span class="attribute">error_page</span> <span class="number">500</span> <span class="number">501</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span> <span class="number">506</span> /50x.html;</span><br><span class="line">  </span><br><span class="line">  <span class="attribute">location</span> /50x.html &#123;</span><br><span class="line">    <span class="attribute">root</span> /data/www/static/html;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="4-2-按URL过滤"><a href="#4-2-按URL过滤" class="headerlink" title="4.2 按URL过滤"></a>4.2 按URL过滤</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">  <span class="comment">#...</span></span><br><span class="line">  </span><br><span class="line">  <span class="attribute">rewrite</span><span class="regexp"> ^.*$</span> /index.html;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-3-按请求类型过滤"><a href="#4-3-按请求类型过滤" class="headerlink" title="4.3 按请求类型过滤"></a>4.3 按请求类型过滤</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">if ( $request_method !~ ^(GET|POST|HEAD)$ ) &#123;</span><br><span class="line">return 403;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="5-配置gzip"><a href="#5-配置gzip" class="headerlink" title="5. 配置gzip"></a>5. 配置gzip</h1><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">  <span class="attribute">gzip</span>                    <span class="literal">on</span>;</span><br><span class="line">  <span class="attribute">gzip_http_version</span>       <span class="number">1</span>.<span class="number">1</span>;        </span><br><span class="line">  <span class="attribute">gzip_comp_level</span>         <span class="number">5</span>;</span><br><span class="line">  <span class="attribute">gzip_min_length</span>         <span class="number">1000</span>;</span><br><span class="line">  <span class="attribute">gzip_types</span> text/csv text/xml text/css text/plain text/javascript application/javascript application/x-javascript application/json application/xml;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="6-Nginx配置文件结构"><a href="#6-Nginx配置文件结构" class="headerlink" title="6. Nginx配置文件结构"></a>6. Nginx配置文件结构</h1><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">events</span> &#123; </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">http</span> </span><br><span class="line">&#123;</span><br><span class="line">  <span class="attribute">upstream</span> node &#123;</span><br><span class="line">    </span><br><span class="line">  &#125;</span><br><span class="line">    <span class="section">server</span></span><br><span class="line">    &#123; </span><br><span class="line">        <span class="attribute">location</span> path</span><br><span class="line">        &#123;</span><br><span class="line">            ...</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="attribute">location</span> path</span><br><span class="line">        &#123;</span><br><span class="line">            ...</span><br><span class="line">        &#125;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">    <span class="section">server</span></span><br><span class="line">    &#123;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="7-静态资源配置"><a href="#7-静态资源配置" class="headerlink" title="7. 静态资源配置"></a>7. 静态资源配置</h1><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">location</span> <span class="regexp">~* \.(png|gif|jpg|jpeg)$</span> &#123;</span><br><span class="line">    <span class="attribute">root</span>    /root/static/;  </span><br><span class="line">    <span class="attribute">autoindex</span> <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">access_log</span>  <span class="literal">off</span>;</span><br><span class="line">    <span class="attribute">expires</span>     <span class="number">24h</span>;  <span class="comment"># 过期时间为24小时          </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="8-静态资源缓存"><a href="#8-静态资源缓存" class="headerlink" title="8. 静态资源缓存"></a>8. 静态资源缓存</h1><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">location</span> /hhhh/ &#123;</span><br><span class="line">    <span class="attribute">root</span> /data/www/lp-web/;</span><br><span class="line">    <span class="attribute">index</span>  index.html;</span><br><span class="line">    <span class="attribute">try_files</span> $uri index.html;</span><br><span class="line">    </span><br><span class="line">    <span class="attribute">if</span> ($request_filename <span class="regexp">~* .*\.(?:htm|html)$)</span> &#123;</span><br><span class="line">        <span class="attribute">add_header</span> Cache-Control <span class="string">&quot;private, no-store, no-cache, must-revalidate, proxy-revalidate&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="attribute">if</span> ($request_filename <span class="regexp">~* .*\.(?:js|css)$)</span> &#123;</span><br><span class="line">        <span class="attribute">expires</span>      <span class="number">7d</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="attribute">if</span> ($request_filename <span class="regexp">~* .*\.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm)$)</span> &#123;</span><br><span class="line">        <span class="attribute">expires</span>      <span class="number">7d</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="9-nginx日志request-time-和upstream-response-time区别"><a href="#9-nginx日志request-time-和upstream-response-time区别" class="headerlink" title="9. nginx日志request_time 和upstream_response_time区别"></a>9. nginx日志request_time 和upstream_response_time区别</h1><ul><li><strong>request_time:</strong> request processing time in seconds with a milliseconds resolution; time elapsed between the first bytes were read from the client and the log write after the last bytes were sent to the client. 指的就是从接受用户请求的第一个字节到发送完响应数据的时间，即包括接收请求数据时间、程序响应时间、输出响应数据时间。</li><li><strong>upstream_response_time:</strong> keeps times of responses obtained from upstream servers; times are kept in seconds with a milliseconds resolution. Several response times are separated by commas and colons like addresses in the $upstream_addr variable. 指从Nginx向后端建立连接开始到接受完数据然后关闭连接为止的时间。</li></ul><p>从上面的描述可以看出，$request_time肯定比$upstream_response_time值大，特别是使用POST方式传递参数时，因为Nginx会把request body缓存住，接受完毕后才会把数据一起发给后端。所以如果用户网络较差，或者传递数据较大时，$request_time会比$upstream_response_time大很多。</p><p><code>$request_time</code> 包含了用户数据接收时间，而真正程序的响应时间应该用<code>$upstream_response_time</code>。</p><p>配置说明：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">log_format</span>  timed_combined  <span class="string">&#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span></span><br><span class="line">                      <span class="string">&#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span></span><br><span class="line">                      <span class="string">&#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot; &#x27;</span></span><br><span class="line">                        <span class="string">&#x27;$request_time $upstream_response_time&#x27;</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Nginx </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>select、poll和epoll</title>
      <link href="/2019/04/12/IO%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8%E5%92%8C%E5%BC%82%E6%AD%A5/"/>
      <url>/2019/04/12/IO%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8%E5%92%8C%E5%BC%82%E6%AD%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="1-select"><a href="#1-select" class="headerlink" title="1. select"></a>1. select</h1><p>select最早于1983年出现在4.2BSD中，它通过一个select()系统调用来监视多个文件描述符的数组，当select()返回后，该数组中就绪的文件描述符便会被内核修改标志位，使得进程可以获得这些文件描述符从而进行后续的读写操作。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="literal">true</span> &#123;</span><br><span class="line">    select(streams[])</span><br><span class="line">    <span class="keyword">for</span> i in streams[] &#123;</span><br><span class="line">        <span class="keyword">if</span> i has data</span><br><span class="line">        read until unavailable</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><span id="more"></span><p>select的优点是支持目前几乎所有的平台，缺点主要有如下2个：<br> 1）单个进程能够监视的文件描述符的数量存在最大限制，在Linux上一般为1024(32位，64位默认2048，proc/sys/fs/file-max)，不过可以通过修改宏定义甚至重新编译内核的方式提升这一限制。<br> 2）select 所维护的存储大量文件描述符的数据结构，随着文件描述符数量的增大，其复制的开销也线性增长。同时，由于网络响应时间的延迟使得大量TCP连接处于非活跃状态，但调用select()会对所有socket进行一次线性扫描，所以这也浪费了一定的开销。</p><h1 id="2-poll"><a href="#2-poll" class="headerlink" title="2. poll"></a>2. poll</h1><p>poll则在1986年诞生于System V Release 3，它和select在本质上没有多大差别，但是poll没有最大文件描述符数量的限制。</p><h1 id="3-epoll"><a href="#3-epoll" class="headerlink" title="3. epoll"></a>3. epoll</h1><p> epoll是Linux 2.6 开始出现的为处理大批量文件描述符而作了改进的poll，是Linux下多路复用IO接口select/poll的增强版本，它能显著提高程序在大量并发连接中只有少量活跃的情况下的系统CPU利用率。另一点原因就是获取事件的时候，它无须遍历整个被侦听的描述符集，只要遍历那些被内核IO事件异步唤醒而加入Ready队列的描述符集合就行了。<br> 在select/poll中，进程只有在调用一定的方法后，内核才对所有监视的文件描述符进行扫描，而epoll事先通过epoll_ctl()来注册一个文件描述符，一旦基于某个文件描述符就绪时，内核会采用类似callback的回调机制，迅速激活这个文件描述符，当进程调用epoll_wait()时便得到通知。 </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="literal">true</span> &#123;</span><br><span class="line">    active_stream[] = epoll_wait(epollfd)</span><br><span class="line">    <span class="keyword">for</span> i in active_stream[] &#123;</span><br><span class="line">        read <span class="keyword">or</span> write till</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-3-epoll"><a href="#1-3-epoll" class="headerlink" title="1.3 epoll"></a>1.3 epoll</h3><p>epoll支持水平触发和边缘触发，最大的特点在于边缘触发，它只告诉进程哪些fd刚刚变为就需态，并且只会通知一次。还有一个特点是，epoll使用“事件”的就绪通知方式，通过epoll_ctl注册fd，一旦该fd就绪，内核就会采用类似callback的回调机制来激活该fd，epoll_wait便可以收到通知</p><p>epoll的优点：</p><p><strong>1、没有最大并发连接的限制，</strong>能打开的FD的上限远大于1024（1G的内存上能监听约10万个端口）；<br><strong>2、效率提升</strong>，不是轮询的方式，不会随着FD数目的增加效率下降。只有活跃可用的FD才会调用callback函数；<br>      即Epoll最大的优点就在于它只管你“活跃”的连接，而跟连接总数无关，因此在实际的网络环境中，Epoll的效率就会远远高于select和poll。</p><p><strong>3、 内存拷贝</strong>，利用mmap()文件映射内存加速与内核空间的消息传递；即epoll使用mmap减少复制开销。</p><h3 id="1-4-select、poll、epoll-区别总结"><a href="#1-4-select、poll、epoll-区别总结" class="headerlink" title="1.4 select、poll、epoll 区别总结"></a>1.4 select、poll、epoll 区别总结</h3><p>1、支持一个进程所能打开的最大连接数</p><table><thead><tr><th>类型</th><th>特点</th></tr></thead><tbody><tr><td>select</td><td>单个进程所能打开的最大连接数有FD_SETSIZE宏定义，其大小是32个整数的大小（在32位的机器上，大小就是32<em>32，同理64位机器上FD_SETSIZE为32</em>64），当然我们可以对进行修改，然后重新编译内核，但是性能可能会受到影响，这需要进一步的测试。</td></tr><tr><td>poll</td><td>poll本质上和select没有区别，但是它没有最大连接数的限制，原因是它是基于链表来存储的</td></tr><tr><td>epoll</td><td>虽然连接数有上限，但是很大，1G内存的机器上可以打开10万左右的连接，2G内存的机器可以打开20万左右的连接</td></tr></tbody></table><p>2、FD剧增后带来的IO效率问题</p><table><thead><tr><th>类型</th><th>特点</th></tr></thead><tbody><tr><td>select</td><td>因为每次调用时都会对连接进行线性遍历，所以随着FD的增加会造成遍历速度慢的“线性下降性能问题”。</td></tr><tr><td>poll</td><td>同上</td></tr><tr><td>epoll</td><td>因为epoll内核中实现是根据每个fd上的callback函数来实现的，只有活跃的socket才会主动调用callback，所以在活跃socket较少的情况下，使用epoll没有前面两者的线性下降的性能问题，但是所有socket都很活跃的情况下，可能会有性能问题。</td></tr></tbody></table><p>3、 消息传递方式<br>| 类型 | 特点 |<br>| —— | ———————————————————— |<br>| select | 内核需要将消息传递到用户空间，都需要内核拷贝动作 |<br>| poll   | 同上                                             |<br>| epoll  | epoll通过内核和用户空间共享一块内存来实现的。    |</p><p><strong>总结：</strong></p><p>综上，在选择select，poll，epoll时要根据具体的使用场合以及这三种方式的自身特点。</p><p>1、表面上看epoll的性能最好，但是在连接数少并且连接都十分活跃的情况下，select和poll的性能可能比epoll好，毕竟epoll的通知机制需要很多函数回调。</p><p>2、select低效是因为每次它都需要轮询。但低效也是相对的，视情况而定，也可通过良好的设计改善</p><h2 id="2-异步与非阻塞的区别"><a href="#2-异步与非阻塞的区别" class="headerlink" title="2. 异步与非阻塞的区别"></a>2. 异步与非阻塞的区别</h2><p>非阻塞是对于socket而言；异步是相对于应用程序而言，是一种编程模型</p><p>Epoll是非阻塞的，但不是异步。实现阻塞和简单，<code>socket.setblocking(False)</code>即可；实现异步很复杂。</p><p>Linux没有实现异步IO(效率并不高)，Epoll是一种I/O多路复用技术，用户程序需要主动去询问内核是否有事件发生，而不是事件发生时内核主动去调用回调函数，所以不是异步的。</p><p>Tornado框架之所以是异步的，它在epoll的基础上进行了一层封装，由框架去取事件，然后由框架去调用用户的回调函数，所以对于基于该框架的用户程序来说，是异步的。</p><p>Tornado使用Epoll实现了异步编程模型，使用异步的前提是socket是非阻塞的。</p><h2 id="3-Python-select"><a href="#3-Python-select" class="headerlink" title="3. Python select"></a>3. Python select</h2><p>Python的select()方法直接调用操作系统的IO接口，它监控sockets,open files, and pipes(所有带fileno()方法的文件句柄)何时变成readable 和writeable, 或者通信错误，select()使得同时监控多个连接变的简单，并且这比写一个长循环来等待和监控多客户端连接要高效，因为select直接通过操作系统提供的C的网络接口进行操作，而不是通过Python的解释器。</p><p>select()方法接收并监控3个通信列表， 第一个是所有的输入的data,就是指外部发过来的数据，第2个是监控和接收所有要发出去的data(outgoing data),第3个监控错误信息，接下来我们需要创建2个列表来包含输入和输出信息来传给select().</p><p><strong>select_echo_server.py</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> select</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> queue <span class="keyword">import</span> Queue, Empty</span><br><span class="line"></span><br><span class="line">server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">server.setblocking(<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">server_address = (<span class="string">&#x27;localhost&#x27;</span>, <span class="number">5000</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;starting up on %s port %s&#x27;</span> % server_address, file=sys.stderr)</span><br><span class="line">server.bind(server_address)</span><br><span class="line">server.listen(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># reading sockets</span></span><br><span class="line">inputs = [server, ]</span><br><span class="line"></span><br><span class="line"><span class="comment"># writing sockets</span></span><br><span class="line">outputs = []</span><br><span class="line"></span><br><span class="line">message_queues = &#123;&#125;</span><br><span class="line"><span class="keyword">while</span> inputs:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;\nwaiting for the next event.&#x27;</span>)</span><br><span class="line">    readable, writable, exceptional = select.select(inputs, outputs, inputs)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> s <span class="keyword">in</span> readable:</span><br><span class="line">        <span class="keyword">if</span> s <span class="keyword">is</span> server:</span><br><span class="line">            <span class="comment"># A readable server socket is ready to accept a connection</span></span><br><span class="line">            connection, client_address = s.accept()</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;new connection from&#x27;</span>, client_address)</span><br><span class="line">            connection.setblocking(<span class="literal">False</span>)</span><br><span class="line">            inputs.append(connection)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># Give the connection a queue for data we want to send</span></span><br><span class="line">            message_queues[connection] = Queue()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            data = s.recv(<span class="number">1024</span>)</span><br><span class="line">            <span class="keyword">if</span> data:</span><br><span class="line">                <span class="comment"># A readable client socket has data</span></span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;received &quot;%s&quot; from %s&#x27;</span> % (data, s.getpeername()))</span><br><span class="line">                message_queues[s].put(data)</span><br><span class="line"></span><br><span class="line">                <span class="comment"># Add output channel for response</span></span><br><span class="line">                <span class="keyword">if</span> s <span class="keyword">not</span> <span class="keyword">in</span> outputs:</span><br><span class="line">                    outputs.append(s)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="comment"># Interpret empty result as closed connection</span></span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;closing&#x27;</span>, client_address, <span class="string">&#x27;after reading not data.&#x27;</span>)</span><br><span class="line"></span><br><span class="line">                <span class="comment"># Stop listening for input on the connection</span></span><br><span class="line">                <span class="keyword">if</span> s <span class="keyword">in</span> outputs:</span><br><span class="line">                    outputs.remove(s)</span><br><span class="line">                inputs.remove(s)</span><br><span class="line">                s.close()</span><br><span class="line"></span><br><span class="line">                <span class="comment"># Remove message queue</span></span><br><span class="line">                <span class="keyword">del</span> message_queues[s]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> s <span class="keyword">in</span> writable:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            next_msg = message_queues[s].get_nowait()</span><br><span class="line">        <span class="keyword">except</span> Empty:</span><br><span class="line">            <span class="comment"># No message waiting so stop checking for writability</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;output queue for&#x27;</span>, s.getpeername(), <span class="string">&#x27;is empty&#x27;</span>)</span><br><span class="line">            outputs.remove(s)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;sending &quot;%s&quot; to %s&#x27;</span> % (next_msg, s.getpeername()))</span><br><span class="line">            reply = <span class="string">&#x27;replied: &#x27;</span> + next_msg.decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">            s.send(reply.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> s <span class="keyword">in</span> exceptional:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;handling exceptional condition for&#x27;</span>, s.getpeername())</span><br><span class="line"></span><br><span class="line">        inputs.remove(s)</span><br><span class="line">        <span class="keyword">if</span> s <span class="keyword">in</span> outputs:</span><br><span class="line">            outputs.remove(s)</span><br><span class="line">        s.close()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">del</span> message_queues[s]</span><br></pre></td></tr></table></figure><p><strong>select_echo_multiclient.py</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">server_address = (<span class="string">&#x27;localhost&#x27;</span>, <span class="number">5000</span>)</span><br><span class="line"></span><br><span class="line">messages = [<span class="string">&#x27;message %s&#x27;</span> % i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>)]</span><br><span class="line">socks = [socket.socket(socket.AF_INET, socket.SOCK_STREAM) <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>)]</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;connecting to %s port %s&#x27;</span> % server_address, file=sys.stderr)</span><br><span class="line"><span class="keyword">for</span> s <span class="keyword">in</span> socks:</span><br><span class="line">    s.connect(server_address)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> message <span class="keyword">in</span> messages:</span><br><span class="line">    <span class="comment"># send messages on both sockets</span></span><br><span class="line">    <span class="keyword">for</span> s <span class="keyword">in</span> socks:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%s: sending &quot;%s&quot;&#x27;</span> % (s.getsockname(), message), file=sys.stderr)</span><br><span class="line">        s.send(message.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># read response on both sockets</span></span><br><span class="line">    <span class="keyword">for</span> s <span class="keyword">in</span> socks:</span><br><span class="line">        data = s.recv(<span class="number">1024</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%s: received &quot;%s&quot;&#x27;</span> % (s.getsockname(), data), file=sys.stderr)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> data:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;closing socket&#x27;</span>, s.getsockname(), file=sys.stderr)</span><br><span class="line">            s.close()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Redis</title>
      <link href="/2019/01/29/Redis/"/>
      <url>/2019/01/29/Redis/</url>
      
        <content type="html"><![CDATA[<h1 id="1-概述"><a href="#1-概述" class="headerlink" title="1. 概述"></a>1. 概述</h1><p>Redis：Remote Dictionary Server，高性能非关系型(NoSQL)键值对数据库</p><p>Redis特性：</p><ul><li>key-value 存储</li><li>支持数据可靠性存储及落地</li><li>单进程但线程高性能服务器</li><li>crash safe &amp; recovery slow</li><li>单机qps可达10W</li><li>适合小数据量高速读写访问</li></ul><span id="more"></span><h2 id="1-1-应用场景"><a href="#1-1-应用场景" class="headerlink" title="1.1 应用场景"></a>1.1 应用场景</h2><ul><li><p>高速缓存</p><ul><li>高频次，热门数据，降低数据库IO</li><li>分布式，做session共享</li></ul></li><li><p>多样化数据结构</p><ul><li>最新N个数据：通过List实现按时间排序的数据</li><li>排行榜，top N：zset有序集合</li><li>时效性数据，验证码：Expire过期</li><li>计算器，秒杀：原子性，INCR， DECR</li><li>大数据量去重：set集合</li><li>队列：list</li><li>发布订阅：pub/sub</li></ul></li></ul><h2 id="1-2-安装"><a href="#1-2-安装" class="headerlink" title="1.2 安装"></a>1.2 安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 编译工具</span></span><br><span class="line">apt install -y build-essential pkg-config libssl-dev</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 下载</span></span><br><span class="line">wget https://download.redis.io/releases/redis-6.2.5.tar.gz</span><br><span class="line">tar zxvf redis-6.2.5.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 编译</span></span><br><span class="line"><span class="built_in">cd</span> redis-6.2.5</span><br><span class="line">make MALLOC=libc BUILD_TLS=yes</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4. 创建redis系统用户</span></span><br><span class="line">adduser --system --group --no-create-home redis</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5. 拷贝编译后的命令</span></span><br><span class="line"><span class="built_in">cd</span> src</span><br><span class="line">cp redis-server redis-cli redis-benchmark redis-check-aof redis-check-rdb /usr/<span class="built_in">local</span>/bin/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6. 创建数据目录</span></span><br><span class="line">mkdir /var/lib/redis</span><br><span class="line">chown -R redis:redis /var/lib/redis</span><br><span class="line">chmod 770 /var/lib/redis</span><br><span class="line"></span><br><span class="line"><span class="comment"># 7. 创建日志目录</span></span><br><span class="line">mkdir /var/<span class="built_in">log</span>/redis</span><br><span class="line">chown -R redis:redis /var/<span class="built_in">log</span>/redis</span><br><span class="line"></span><br><span class="line"><span class="comment"># 8. 运行PID目录</span></span><br><span class="line">mkdir /var/run/redis</span><br><span class="line">chown -R redis:redis /var/run/redis</span><br><span class="line"></span><br><span class="line"><span class="comment"># 9. 配置文件</span></span><br><span class="line">mkdir -p /etc/redis</span><br><span class="line">cp ../redis.conf /etc/redis</span><br><span class="line"></span><br><span class="line">vi /etc/redis/redis.conf</span><br><span class="line"><span class="built_in">bind</span> 0.0.0.0 ::</span><br><span class="line">daemonize yes</span><br><span class="line">supervised systemd</span><br><span class="line">pidfile /var/run/redis_6379.pid</span><br><span class="line">logfile <span class="string">&quot;/var/log/redis/redis.log&quot;</span></span><br><span class="line">dir /var/lib/redis/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 10. 开机启动</span></span><br><span class="line">cat &gt; /etc/systemd/system/redis.service &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">[Unit]</span></span><br><span class="line"><span class="string">Description=Redis data structure server</span></span><br><span class="line"><span class="string">Documentation=https://redis.io/documentation</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Service]</span></span><br><span class="line"><span class="string">Type=forking</span></span><br><span class="line"><span class="string">ExecStart=/usr/local/bin/redis-server /etc/redis/redis.conf</span></span><br><span class="line"><span class="string">ExecStop=/usr/local/bin/redis-cli shutdown</span></span><br><span class="line"><span class="string">ExecReload=/bin/kill -s HUP \$MAINPID</span></span><br><span class="line"><span class="string">PrivateTmp=true</span></span><br><span class="line"><span class="string">RestartSec=10</span></span><br><span class="line"><span class="string">User=redis</span></span><br><span class="line"><span class="string">Group=redis</span></span><br><span class="line"><span class="string">LimitCORE=infinity</span></span><br><span class="line"><span class="string">LimitNOFILE=10032</span></span><br><span class="line"><span class="string">LimitNPROC=10032</span></span><br><span class="line"><span class="string">Restart=always</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Install]</span></span><br><span class="line"><span class="string">WantedBy=multi-user.target</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start redis</span><br><span class="line">systemctl status redis</span><br><span class="line">systemctl <span class="built_in">enable</span> redis</span><br></pre></td></tr></table></figure><h2 id="1-3-相关知识"><a href="#1-3-相关知识" class="headerlink" title="1.3 相关知识"></a>1.3 相关知识</h2><p>Redis: 单线程 + 多路 IO 复用</p><p>多路复用：使用一个线程来检查多个文件描述符 (socket) 的就绪状态，比如调用select 和pol函数，传入多个文件描述符，如果有一个文件描述符就绪，则返回，否则阻塞直到超时。得到就绪状态后，进行真正的操作可以在同一个线程里执行，也可以启动线程执行（比如线程池）</p><h2 id="1-4-管理命令"><a href="#1-4-管理命令" class="headerlink" title="1.4 管理命令"></a>1.4 管理命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">keys *</span><br><span class="line">exists KEY</span><br><span class="line"><span class="built_in">type</span> KEY</span><br><span class="line">del KEY</span><br><span class="line">unlink KEY  <span class="comment"># 非阻塞删除</span></span><br><span class="line"></span><br><span class="line">expire KEY 10  <span class="comment"># 10s后过期</span></span><br><span class="line">ttl KEY        <span class="comment"># 过期剩余时间 -1：永不过期 -2: 已过期 </span></span><br><span class="line"></span><br><span class="line">dbsize    <span class="comment"># key总数量</span></span><br><span class="line"></span><br><span class="line">flushdb   <span class="comment"># 清空当前库</span></span><br><span class="line">flushall  <span class="comment"># 清空所有库</span></span><br></pre></td></tr></table></figure><p>Redis-benchmark: 服务器性能测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 100个并发，100000次</span></span><br><span class="line">redis-benchmark -h localhost -p 6379 -c 100 -n 100000</span><br></pre></td></tr></table></figure><h2 id="1-5-优缺点"><a href="#1-5-优缺点" class="headerlink" title="1.5 优缺点"></a>1.5 优缺点</h2><p>优点：</p><ul><li>读写性能高</li><li>支持持久化，RDB &amp; AOF</li><li>数据类型丰富，五种：string, list, set, sorted-set, hash</li><li>支持简单事务</li><li>支持TTL</li><li>支持主从复制，可以进行读写分离</li></ul><p>缺点：</p><ul><li><p>数据库容量受限物理内存（低于物理内存的60%），不能支持海量数据的高性能读写。</p></li><li><p>不具备自动容错和恢复功能</p></li><li><p>主节点宕机，可能会有部分数据未及时同步到从节点，导致数据不一致</p></li><li><p>很难在线扩容，一般在系统上线前必须保有足够的空间</p></li><li><p>buffer io造成系统OOM</p></li></ul><h1 id="2-数据类型"><a href="#2-数据类型" class="headerlink" title="2. 数据类型"></a>2. 数据类型</h1><h2 id="2-1-基础类型"><a href="#2-1-基础类型" class="headerlink" title="2.1 基础类型"></a>2.1 基础类型</h2><ul><li><p>string: 字符串操作、原子计数器等</p></li><li><p>hash: 以hashmap方式存储，可用来存储json对象。</p></li><li><p>list: 消息队列，timeline等</p></li><li><p>set：Unique去重操作。统计独立IP，好友推荐去重等</p></li><li><p>sorted-set: 排行榜，TOP N操作，带权重</p></li></ul><p>跳表：一种随机化的数据结构，实质就是一种可以进行二分查找的有序链表。Redis中的set类型低层使用跳表实现。</p><h3 id="2-1-1-String"><a href="#2-1-1-String" class="headerlink" title="2.1.1 String"></a>2.1.1 String</h3><p>数据结构：简单动态字符串 (Simple Dynamic String, SDS)，是可以修改的，内部结构类似Golang的Slice，采用预先分配冗余空间方式来减少内存的频繁分配。扩容机制，长度小于1M，按两倍扩容；超过1M，扩容一次只新增1M。最大512M</p><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/redis/redis-string-sds.png" alt="img"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">get KEY</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> KEY VALUE</span><br><span class="line">setex KEY 10 VALUE</span><br><span class="line"></span><br><span class="line">append KEY VALUE</span><br><span class="line">strlen KEY</span><br><span class="line"></span><br><span class="line">setnx KEY VALUE  <span class="comment"># 不存在才设置</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 原子性操作</span></span><br><span class="line">incr KEY</span><br><span class="line">decr KEY</span><br><span class="line">incrby KEY 5</span><br><span class="line">decrby KEY 3</span><br><span class="line"></span><br><span class="line">mset k1 v1 k2 v2 ...</span><br><span class="line">mget k1 k2 ...</span><br></pre></td></tr></table></figure><h3 id="2-1-2-List"><a href="#2-1-2-List" class="headerlink" title="2.1.2 List"></a>2.1.2 List</h3><p>数据结构：快速链表 quickList.</p><ul><li>在元素较少的情况下，使用一块连续的内存存储，结构为ziplist，即压缩列表。</li><li>数据量较大时。会改成quickList，即链表存储，结构上有二外的指针prev 和 next</li></ul><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/redis/redis-list-quicklist.png" alt="img"></p><p>Redis 将链表和ziplist 集合起来组成quicklist，即满了快速插入删除性能，又不会出现太大的冗余空间。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">lpush KEY e1 e2 ...</span><br><span class="line">rpush KEY e1 e2 ...</span><br><span class="line"></span><br><span class="line">lpop KEY</span><br><span class="line">rpop KEY</span><br><span class="line"></span><br><span class="line">rpoplpush KEY1 KEY2   <span class="comment"># KEY1列表右吐出一个附加到KEY左边</span></span><br><span class="line"></span><br><span class="line">lrange KEY 0 -1</span><br><span class="line"></span><br><span class="line">lindex KEY 2</span><br><span class="line"></span><br><span class="line">llen KEY</span><br><span class="line"></span><br><span class="line">linsert KEY before pivot element</span><br><span class="line">linsert KEY after pivot element</span><br><span class="line"></span><br><span class="line">lrem KEY count element  <span class="comment"># 从左边删除count个elment元素</span></span><br><span class="line"></span><br><span class="line">lset KEY index element  <span class="comment"># 替换</span></span><br></pre></td></tr></table></figure><h3 id="2-1-3-Set"><a href="#2-1-3-Set" class="headerlink" title="2.1.3 Set"></a>2.1.3 Set</h3><p>数据结构：string类型的无序集合，底层其实是一个value为null的hash表，所以添加、删除和查找的时间复杂度都是o(1)</p><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/redis/redis-set-hashtable.png" alt="img"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">sadd KEY member...</span><br><span class="line"></span><br><span class="line">smembers KEY</span><br><span class="line">sismember KEY member</span><br><span class="line"></span><br><span class="line">scard KEY   <span class="comment"># </span></span><br><span class="line"></span><br><span class="line">srem KEY member...</span><br><span class="line">spop KEY   <span class="comment"># 随机取出一个值</span></span><br><span class="line">srandmember KEY count  <span class="comment"># 随机取出多个值，注意：不删除</span></span><br><span class="line"></span><br><span class="line">smove <span class="built_in">source</span> destination member  <span class="comment"># 将source中的member移动到destination</span></span><br><span class="line"></span><br><span class="line">sinter k1 k2  <span class="comment"># 交集</span></span><br><span class="line">sunion k1 k2  <span class="comment"># 并集</span></span><br><span class="line">sdiff  k1 k2  <span class="comment"># 差集 </span></span><br></pre></td></tr></table></figure><h3 id="2-1-4-Hash"><a href="#2-1-4-Hash" class="headerlink" title="2.1.4 Hash"></a>2.1.4 Hash</h3><p>数据结构：ziplist(压缩列表)，hashtable(哈希表)。当field-value长度短且个数少时，使用ziplist，否则使用hashtable</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">hset k f1 v1 f2 v2  <span class="comment"># hmset 效果一样</span></span><br><span class="line">hget k f1</span><br><span class="line">hmget k f1 f2 f3</span><br><span class="line"></span><br><span class="line">hexists k f1</span><br><span class="line"></span><br><span class="line">hkeys k</span><br><span class="line">kvals k</span><br><span class="line"></span><br><span class="line">hincrby k age 5</span><br><span class="line"></span><br><span class="line">hsetnx k addr LA  <span class="comment"># 不存在时才添加</span></span><br></pre></td></tr></table></figure><h3 id="2-1-5-ZSet"><a href="#2-1-5-ZSet" class="headerlink" title="2.1.5 ZSet"></a>2.1.5 ZSet</h3><p>数据结构：hashtable + skiplist</p><ul><li>hash：关联member和score，保证member的唯一性，可直接通过member找到相应的score值</li><li>跳跃表：根据score值，为member排序</li></ul><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/redis/redis-zset.png" alt="img"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">zadd k 100 java 200 cpp 300 golang 400 python 500 php</span><br><span class="line"></span><br><span class="line">zrange k 0 -1  <span class="comment"># 按score从小到大排序</span></span><br><span class="line"></span><br><span class="line">zrangebyscore k 200 400</span><br><span class="line">zrevrangebyscore k 200 400</span><br><span class="line"></span><br><span class="line">zincrby k 200 golang</span><br><span class="line"></span><br><span class="line">zrem k php cpp</span><br><span class="line"></span><br><span class="line">zcount k 100 300</span><br><span class="line"></span><br><span class="line">zrank k golang   <span class="comment"># 排名</span></span><br></pre></td></tr></table></figure><h3 id="2-1-6-数据结构"><a href="#2-1-6-数据结构" class="headerlink" title="2.1.6 数据结构"></a>2.1.6 数据结构</h3><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/redis/redis-basic-structure.png" alt="img"></p><h4 id="2-1-6-1-hashTable"><a href="#2-1-6-1-hashTable" class="headerlink" title="2.1.6.1 hashTable"></a>2.1.6.1 hashTable</h4><p>哈希表：由<strong>数组 + 链表</strong>构成的二维数据结构，数组是第一维，链表是第二维。数组中的每个元素称为槽或者桶，存储着链表的第一个元素的指针。</p><p>整体结构图：</p><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/redis/redis-hashtable-overall.png" alt="img"></p><p>一维数组：</p><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/redis/redis-hashtable.png" alt="img"></p><p>二维链表：</p><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/redis/redis-hashtable-linkedlist.png" alt="img"></p><p>扩容和缩容：</p><ul><li>扩容：元素个数等于一维数组长度时，会对数组进行两倍扩容</li><li>缩容：元素个数小于一维数组的10%</li></ul><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/redis/redis-hashtable-rehash.png" alt="img"></p><p>扩缩容时，需要重新申请一维数组，并对所有元素重新hash并挂载到元素链表。Redis采用rehash策略：所有的字典结构内部首层时一个数组，数组的两个元素分别指向一个hashtable，正常情况下只有一个hashtable，而在迁移过程中，保留新旧两个hashtable，元素可能会在两个表中任意一个中，因此同时尝试从两个hashtable中查找数据。当数据搬迁完毕，旧的hashtable会被自动删除。</p><p><strong>哈希函数：</strong>将key值打散的越均匀越好，高随机性的元素分布能够提升整体的查找效率。Redis的hash函数为siphash。hash函数打散效率如果很差或有迹可循，就会存在hash攻击，攻击者利用模式偏向性产生大量数据，并将这些数据挂载在同一个链表上，这种不均匀会导致查找性能急剧下降，同时浪费大量内存空间，导致Redis性能低下</p><h4 id="2-1-6-2-跳跃表"><a href="#2-1-6-2-跳跃表" class="headerlink" title="2.1.6.2 跳跃表"></a>2.1.6.2 跳跃表</h4><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/redis/redis-zset-skiplist-insert.png" alt="img"></p><p>根据score值插入紫色kv节点，首先从 kv-head 的最高层启动，判断指针的下一个元素的score值是否小于新元素的score，小于则继续向前遍历，否则从kv-head降一层，重新比较</p><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/redis/redis-zset-skiplist-search.png" alt="img"></p><p>寻找51：</p><ul><li>从第2层开始，1节点比51小，向后比较、</li><li>21节点比51小，继续向后，但后面是NULL，则从21节点下降到第1层</li><li>41节点比51小，继续向后，61节点比51大，则从41节点下降到第0层</li><li>51节点即为所要查找的节点，共查找了四次</li></ul><h2 id="2-2-发布订阅"><a href="#2-2-发布订阅" class="headerlink" title="2.2 发布订阅"></a>2.2 发布订阅</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 订阅</span></span><br><span class="line">subscribe mychannel</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 发布消息</span></span><br><span class="line">publish mychannel hello</span><br><span class="line">publish mychannel world</span><br></pre></td></tr></table></figure><h2 id="2-3-新类型"><a href="#2-3-新类型" class="headerlink" title="2.3 新类型"></a>2.3 新类型</h2><h3 id="2-3-1-Bitmaps"><a href="#2-3-1-Bitmaps" class="headerlink" title="2.3.1 Bitmaps"></a>2.3.1 Bitmaps</h3><p>Bitmaps本身不是数据类型，实际它就是字符串，但可可以对字符串的位进行操作</p><p>注意：初始化bitmaps时，如果offset过大，整个初始化过程会较慢，可能会造成redis的阻塞</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">setbit permission 2 1</span><br><span class="line">setbit permission 5 1</span><br><span class="line"></span><br><span class="line">getbit permission 5</span><br><span class="line"></span><br><span class="line">bitcount permission</span><br><span class="line">bitcount permission  0 -2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">setbit k1 2 1</span><br><span class="line">setbit k1 3 1</span><br><span class="line">setbit k1 4 1</span><br><span class="line">setbit k1 5 1</span><br><span class="line"></span><br><span class="line">setbit k2 0 1</span><br><span class="line">setbit k2 1 1</span><br><span class="line">setbit k2 2 1</span><br><span class="line">setbit k2 3 1</span><br><span class="line"></span><br><span class="line">bitop and k3 k1 k2</span><br><span class="line">bitcount k3    <span class="comment"># 2</span></span><br><span class="line"></span><br><span class="line">bitop xor k4 k1 k2</span><br><span class="line">bitcount k4   <span class="comment"># 4</span></span><br><span class="line"></span><br><span class="line">bitop or k5 k1 k2</span><br><span class="line">bitcount k5   <span class="comment"># 6</span></span><br><span class="line"></span><br><span class="line">bitop not k6 k1</span><br><span class="line">getbit k6 1  <span class="comment"># 1</span></span><br><span class="line">getbit k6 2  <span class="comment"># 0</span></span><br></pre></td></tr></table></figure><h3 id="2-3-2-HyperLogLog-基数统计"><a href="#2-3-2-HyperLogLog-基数统计" class="headerlink" title="2.3.2 HyperLogLog (基数统计)"></a>2.3.2 HyperLogLog (基数统计)</h3><p>网站统计PV(PageView): 可使用 incr, incrby实现</p><p>但独立访客UV(UniqueVistor)、独立IP、搜索记录数等需要去重和计数的问题。</p><p>HyperLogLog 用来做基数统计，其优点是，在输入元素的数量或者体积非常大时，计算基数需要的空间是固定的，并且很小。</p><p>每个 HyperLogLog 键只需要花费 12KB内存，就可以计算接近 2^64个不同元素的基数。</p><p>HyperLogLog 只会根据输入的元素来计算基数，但不会存储输入元素，所以它不能像集合一样，返回输入的各个元素。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">pfadd lang1 java</span><br><span class="line">pfadd lang1 php</span><br><span class="line">pfadd lang1 golang</span><br><span class="line">pfadd lang1 python</span><br><span class="line">pfadd lang1 golang</span><br><span class="line">pfadd lang1 php</span><br><span class="line">pfadd lang1 c++</span><br><span class="line"></span><br><span class="line">pfcount lang1  <span class="comment"># 5</span></span><br><span class="line"></span><br><span class="line">pfadd lang2 swift</span><br><span class="line">pfadd lang2 js</span><br><span class="line">pfadd lang2 dart</span><br><span class="line"></span><br><span class="line">pfmerge lang lang1 lang2</span><br><span class="line">pfcount lang  <span class="comment"># 8</span></span><br></pre></td></tr></table></figure><h3 id="2-3-3-Geospatial"><a href="#2-3-3-Geospatial" class="headerlink" title="2.3.3 Geospatial"></a>2.3.3 Geospatial</h3><p>Geospatial 是一个2维坐标，即经纬度。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">geoadd cities 121.47 31.23 Shanghai</span><br><span class="line">geoadd cities 106.50 29.53 Chongqing</span><br><span class="line">geoadd cities 114.05 22.52 Shenzhen</span><br><span class="line"></span><br><span class="line">geopos cities Shanghai</span><br><span class="line"></span><br><span class="line">geodist cities Shanghai Chongqing km</span><br><span class="line"></span><br><span class="line">georadius cities 110 30 1000 km</span><br></pre></td></tr></table></figure><h1 id="3-事务和锁"><a href="#3-事务和锁" class="headerlink" title="3. 事务和锁"></a>3. 事务和锁</h1><h2 id="3-1-事务"><a href="#3-1-事务" class="headerlink" title="3.1 事务"></a>3.1 事务</h2><p>Redis事务：是一个单独的隔离操作。事务中所有命令都会序列化，按顺序执行；在执行过程中，不会被其他客户端发送的命令请求打断。</p><p>作用：串行执行多个命令，防止其他命令插队</p><p>Redis事务特性：</p><ul><li>单独的隔离操作，一次性、顺序性、排他性的执行一个队列中的一系列命令</li><li>没有隔离级别</li><li>不保证原子性</li></ul><p>相关命令：</p><ul><li>Multi: 组队阶段</li><li>Exec：执行阶段</li><li>Discard: 放弃执行</li></ul><p>Queued失败，无法执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; MULTI</span><br><span class="line">&gt; <span class="built_in">set</span> k1 v1</span><br><span class="line">&gt; <span class="built_in">set</span> k2 v2</span><br><span class="line">&gt; getset k3 v3  <span class="comment"># 语法性错</span></span><br><span class="line">&gt; EXEC          <span class="comment"># 上述命令不会被执行</span></span><br></pre></td></tr></table></figure><p>Queued成功，正常执行，跳过失败命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; MULTI</span><br><span class="line">&gt; <span class="built_in">set</span> k1 v1</span><br><span class="line">&gt; <span class="built_in">set</span> k2 v2</span><br><span class="line">&gt; incr k3       <span class="comment"># 运行时异常</span></span><br><span class="line">&gt; <span class="built_in">set</span> k4 v4</span><br><span class="line">&gt; EXEC          <span class="comment"># 上述命令被执行，执行incr时抛出错误，但不影响其他命令</span></span><br></pre></td></tr></table></figure><h2 id="3-2-锁"><a href="#3-2-锁" class="headerlink" title="3.2 锁"></a>3.2 锁</h2><ul><li>悲观锁：每次操作，都上锁，别人不能操作，等我释放锁后，才能操作。MySQL中的行锁、表锁；读锁、写锁即为该类锁。</li><li>乐观锁：使用版本机制，在操作前，所有人均能获得当前的版本，在提交操作时，比对用户用户操作的版本是否和当前系统中的版本一致，只有在一致的情况下，操作才能成功，并生成新的版本号。乐观锁适用于多读的的应用类型，这样可提高吞吐量。</li></ul><p>Redis使用乐观锁，CAS: check-and-set 机制实现事务。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="built_in">set</span> balance 10000</span><br><span class="line"></span><br><span class="line"><span class="comment"># session 1</span></span><br><span class="line">&gt; WATCH balance</span><br><span class="line">&gt; MULTI</span><br><span class="line">&gt; decrby balance 2000</span><br><span class="line">&gt; EXEC                 <span class="comment"># 事务失败</span></span><br><span class="line">&gt; UNWATCH</span><br><span class="line"></span><br><span class="line"><span class="comment"># session 2</span></span><br><span class="line">&gt; decrby blanace 5000  <span class="comment"># 在 session 1的 WATCH后，EXEC前操作</span></span><br></pre></td></tr></table></figure><h2 id="3-3-Lua"><a href="#3-3-Lua" class="headerlink" title="3.3 Lua"></a>3.3 Lua</h2><p>Redis 的乐观锁，在多写的情况下，复杂的事务操作提交失败，导致与预想不一致的情况发生</p><p>Lua脚本，很容易被 C/C++调用，也可反过来调用C/C++函数。解释器不超过200k，适合做嵌入式脚本语言。</p><p>在Redis中，可将复杂、多步调用操作，写为一个Lua脚本，一次提交给Redis执行，减少连接Redis的次数，提升性能。</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">local</span> uid=KEYS[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">local</span> pid=KEYS[<span class="number">2</span>];</span><br><span class="line"><span class="keyword">local</span> stock=<span class="string">&quot;sk:&quot;</span>..pid..<span class="string">&quot;:stock&quot;</span>;</span><br><span class="line"><span class="keyword">local</span> users=<span class="string">&quot;sk:&quot;</span>..pid..<span class="string">&quot;:users&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> grabbed=redis.call(<span class="string">&quot;ismember&quot;</span>, users, uid);</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">tonumber</span>(grabbed) == <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> num=redis.call(<span class="string">&quot;get&quot;</span>, stock)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">tonumber</span>(num) &lt;= <span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    redis.call(<span class="string">&quot;decr&quot;</span>, stock);</span><br><span class="line">    redis.call(<span class="string">&quot;sadd&quot;</span>, users, uid);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>相关命令：</p><ul><li>EVAL</li><li>EVALSHA</li><li>SCRIPT LOAD - SCRIPT EXISTS</li><li>SCRIPT FLUSH</li><li>SCRIPT KILL</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">EVAL script numkeys key [key …] arg [arg …]</span><br><span class="line"></span><br><span class="line">EVAL <span class="string">&quot;return KEYS[1]&quot;</span> 1 key1    <span class="comment"># key：从eval的第三个参数开始算起</span></span><br><span class="line">EVAL <span class="string">&quot;return ARGV[1]&quot;</span> 0 value1  <span class="comment"># 附加参数</span></span><br></pre></td></tr></table></figure><h1 id="4-持久化"><a href="#4-持久化" class="headerlink" title="4. 持久化"></a>4. 持久化</h1><h2 id="4-1-RDB-Redis-Database"><a href="#4-1-RDB-Redis-Database" class="headerlink" title="4.1 RDB (Redis Database)"></a>4.1 RDB (Redis Database)</h2><ul><li><p>将数据以快照(snapshot)形式保存在磁盘上 (dump.db)</p></li><li><p>触发数据快照的三种机制：</p><ul><li><p>save: 手动持久化，将阻塞服务器，save期间，不能处理其他命令，直到持久化完毕</p></li><li><p>bgsave: 后台异步进行快照操作。它会fork一个子进程负责处理</p></li><li><p>自动触发：</p></li></ul></li></ul><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">save 3600 1     <span class="comment"># 1h内，至少有一个key变化，触发持久化</span></span><br><span class="line">save 300 10</span><br><span class="line">save 60 10000</span><br><span class="line"></span><br><span class="line">stop-writes-on-bgsave-error yes</span><br><span class="line">rdbcompression yes</span><br><span class="line">rdbchecksum yes</span><br><span class="line">dbfilename dump.db</span><br><span class="line">dir /data/redis/db</span><br></pre></td></tr></table></figure><p>快照保存过程：</p><ul><li>redis调用fork，产生一个子进程</li><li>父进程继续处理client请求，子进程负责将fork时刻整个内存数据库快照写入临时文件。</li><li>子进程完成写入临时文件后，用临时文件替换原来的快照文件，然后子进程退出。</li></ul><p>​         问题：每次快照持久化都是将内存数据完整写入到磁盘，如果数据量较大，读写操作较多，必然会引起磁盘IO问题。</p><p><strong>优势:</strong></p><ul><li>RDB文件紧凑，全量备份，适合用于进行备份和灾难恢复</li><li>生成RDB时，Redis主进程fork一个子进程来处理保存工作，主进程不需要进行任何磁盘IO操作</li><li>RDB恢复比AOF快</li></ul><p><strong>劣势：</strong>RDB数据保存子进程可能来不及保存数据，导致数据丢失</p><h2 id="4-2-AOF-append-only-file"><a href="#4-2-AOF-append-only-file" class="headerlink" title="4.2 AOF (append only file)"></a>4.2 AOF (append only file)</h2><ul><li>以日志形式记录每个<strong>写操作(增量保存)</strong>，追加写，不修改原有记录</li><li>aof的问题：aof文件会越来越大。可通过<strong>bgrewriteaof</strong>命令，将内存中的数据以命令方式保存到临时文件，同时fork一个子进程来重写aof文件，最后替换原来的文件。</li><li>AOF和RDB同时开启，系统默认取AOF的数据</li></ul><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">appendonly yes</span><br><span class="line">appendfilename &quot;appendonly.aof&quot;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 三选一</span></span><br><span class="line">appendsync always</span><br><span class="line">appendsync everysec</span><br><span class="line">appendsync no <span class="comment"># 完全依赖操作系统，性能最好，但持久化可能丢数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 自动bgrewriteaof</span></span><br><span class="line">auto-aof-rewrite-percentage 100  <span class="comment"># 大于64M到100%，即超过128M时开始重写</span></span><br><span class="line">auto-aof-rewrite-size 64mb</span><br></pre></td></tr></table></figure><p><strong>优势：</strong>  </p><ul><li>数据不容易丢失</li><li>日志文件过大时，会出现后台重写，不会影响客户端读写</li><li>日志文件以命令可读方式记录，容易查找命令记录来恢复数据</li></ul><p><strong>劣势：</strong></p><ul><li>AOF日志文件比RDB文件大</li><li>AOF开启后，写的QPS会降低</li></ul><p><strong>重写压缩：</strong></p><p>AOF文件持续增长过大时，会fork一个新的进程来重新日志文件。Redis4.0后的重写，就是把rdb快照，以二进制附加在新的aof头部，替换已有的历史数据。</p><h2 id="4-3-方案选择"><a href="#4-3-方案选择" class="headerlink" title="4.3 方案选择"></a>4.3 方案选择</h2><p>Snapchat性能更高，但可能会引起一定程度的数据丢失</p><p>建议：</p><ul><li>更新频繁，一致性要求较高，AOF策略为主</li><li>更新不频繁，可以容忍少量数据丢失或错误，Snapshot为主</li></ul><h1 id="5-分布式锁"><a href="#5-分布式锁" class="headerlink" title="5. 分布式锁"></a>5. 分布式锁</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">setnx lock 1</span><br><span class="line">del lock</span><br><span class="line"></span><br><span class="line">SET lock 1 NX 30 EX  <span class="comment"># 上锁 + 设置过期时间</span></span><br></pre></td></tr></table></figure><p>锁释放问题：别人可以去释放你加的锁，你也亦然。</p><p>解决方案：</p><ul><li><p>UUID：锁的值设置为uuid，只在获取到的锁的值等于你设置的uid时，才允许释放锁</p></li><li><p>Lua脚本：</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> redis.call(<span class="string">&quot;get&quot;</span>, KEYS[<span class="number">1</span>]) == ARGV[<span class="number">1</span>] <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> redis.call(<span class="string">&quot;del&quot;</span>, KEYS[<span class="number">1</span>]);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="6-过期策略"><a href="#6-过期策略" class="headerlink" title="6. 过期策略"></a>6. 过期策略</h1><h2 id="6-1-过期键删除策略"><a href="#6-1-过期键删除策略" class="headerlink" title="6.1 过期键删除策略"></a>6.1 过期键删除策略</h2><ul><li>定时过期：过期立即删除。对内存友好，但会占用大量CPU资源去处理过期的键，影响缓存的响应时间和吞吐量</li><li>惰性过期：只有当访问一个key时，才会判断它是否过期，过期则清除。对内存不友好，无用key占用了大量内存。</li><li>定期过期：每隔一定时间，扫描一定数量的数据库的expires字典中一定数量的key，并清除其中已过期的key。</li></ul><p>Redis 同时使用 <strong>惰性过期</strong> 和 <strong>定期过期</strong> 两种策略。</p><h2 id="6-2-设置和取消过期"><a href="#6-2-设置和取消过期" class="headerlink" title="6.2 设置和取消过期"></a>6.2 设置和取消过期</h2><p>EXPIRE</p><p>PERSIST</p><h2 id="6-3-过期机制"><a href="#6-3-过期机制" class="headerlink" title="6.3 过期机制"></a>6.3 过期机制</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">redis-cli</span><br><span class="line">&gt; flushdb</span><br><span class="line">&gt; keys *</span><br><span class="line">&gt; exists name</span><br><span class="line">&gt; <span class="built_in">set</span> name tom</span><br><span class="line">&gt; ttl name        <span class="comment"># -1, 永不过期</span></span><br><span class="line">&gt; expire name 5   <span class="comment"># 5s后过期</span></span><br><span class="line"></span><br><span class="line">&gt; <span class="built_in">set</span> age 20</span><br><span class="line">&gt; expireat age 1555506769</span><br></pre></td></tr></table></figure><p>过期机制：redis采用 Lazy Expriation 方式，即在访问key时判断是否过期，如果过期，则进行过期处理。其次，每秒对volation keys进行抽样测试，如果有过期键，那对所有过期key处理。</p><h1 id="7-内存淘汰策略"><a href="#7-内存淘汰策略" class="headerlink" title="7. 内存淘汰策略"></a>7. 内存淘汰策略</h1><p>MySQL中2000w数据，redis中只存20w数据，如何保证redis中的数据都是热数据？</p><ul><li>全局键空间选择性移除：<ul><li>noeviction：内存不足，写入新数据，报错</li><li>allkeys-lru：内存不足，写入新数据，将移除最近最少使用的key （最常用）</li><li>allkeys-random: 内存不足，写入新数据，将随机删除一个key</li></ul></li><li>带TTL的键空间选择性移除：<ul><li>volatile-lru：内存不足，写入新数据，在设置了过期时间的键空间中，移除最近最少使用的key</li><li>volatile-random：内存不足，写入新数据，在设置了过期时间的键空间中，随机移除一个key</li><li>volatile-ttl：内存不足，写入新数据，在设置了过期时间的键空间中，移除更早过期的key</li></ul></li></ul><h1 id="8-集群方案"><a href="#8-集群方案" class="headerlink" title="8. 集群方案"></a>8. 集群方案</h1><h2 id="8-1-主从模式"><a href="#8-1-主从模式" class="headerlink" title="8.1 主从模式"></a>8.1 主从模式</h2><p>主从同步特点:</p><ul><li>一个master可拥有多个slave</li><li>master可读写，并将变化的数据sync给slave</li><li>slave只读，接收master的sync数据</li><li>缺点：master只有一个，如果挂掉，无法对外提供写服务</li></ul><p>配置 salve:</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">replicaof 192.168.1.200 6379</span><br><span class="line">masterauth &lt;master-password&gt;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">redis-cli</span><br><span class="line">&gt; info</span><br><span class="line">&gt; monitor</span><br><span class="line">&gt; info replication  <span class="comment"># 查看集群状态</span></span><br></pre></td></tr></table></figure><h2 id="8-2-Sentinel-模式"><a href="#8-2-Sentinel-模式" class="headerlink" title="8.2 Sentinel 模式"></a>8.2 Sentinel 模式</h2><ul><li><p>哨兵模式建立在主从模式之上</p></li><li><p>当master挂掉，sentinel会在salve中选择一个作为master，并修改它们的配置文件，其他slave节点的配置文件也会同步修改</p></li><li><p>当master恢复后，它将不再是master，而是做为slave接收新master同步数据</p></li><li><p>多sentinel配置时，形成一个sentinel小集群，sentinel之间也会自动监控</p></li></ul><p>配置：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sentinel monitor mymaster 192.168.1.200 6379</span><br><span class="line">sentinel auth-pass mymaster 123456</span><br><span class="line">sentinel down-after-milliseconds mymaster 30000  <span class="comment"># 默认30s</span></span><br></pre></td></tr></table></figure><p>启动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/bin/redis-sentinel /usr/<span class="built_in">local</span>/reids/sentinel.conf</span><br></pre></td></tr></table></figure><h2 id="8-3-Cluster模式"><a href="#8-3-Cluster模式" class="headerlink" title="8.3 Cluster模式"></a>8.3 Cluster模式</h2><ul><li>多个主从模式节点网络互联，数据共享</li><li>客户端可连接任意一个master节点进行读写</li><li>不支持同时处理多个key (MSET/MGET), 因为redis需要把key均匀分布在各个节点上，高并发下同时创建key-value会降低性能并导致不可预测行为</li><li>支持在线增加、删除节点</li><li>Redis 集群没有使用一致性hash，而是引入额哈希槽的概念。Redis集群有16384（2^14）个哈希槽，每个key通过CRC16校验后对16384取模来决定放置在哪个槽，集群的每个节点负责一部分hash槽。</li><li>数据库无法选择，都在0上</li></ul><p>配置：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cluster-enabled yes</span><br><span class="line">cluster-config-file node_6379.conf</span><br><span class="line">cluster-node-timeout 15000</span><br></pre></td></tr></table></figure><p>集群命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 增加节点</span></span><br><span class="line">&gt; CLUSTER MEET 192.168.1.201 6380</span><br><span class="line">&gt; CLUSTER NODES</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更改节点身份, 节点改为slave</span></span><br><span class="line">&gt; CLUSTER REPLICATE a8fdc205a9f19cc1c7507a60c4f01b13d11d7fd0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除节点</span></span><br><span class="line">&gt; CLUSTER FORGET 40bd001563085fc35165329ea1ff5c5ecbdbbeef</span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存配置</span></span><br><span class="line">&gt; CLUSTER SAVECONFIG</span><br></pre></td></tr></table></figure><h1 id="9-缓存异常"><a href="#9-缓存异常" class="headerlink" title="9. 缓存异常"></a>9. 缓存异常</h1><h2 id="9-1-雪崩-大量key集中过期"><a href="#9-1-雪崩-大量key集中过期" class="headerlink" title="9.1 雪崩 (大量key集中过期)"></a>9.1 雪崩 (大量key集中过期)</h2><p>场景：服务器重启或<strong>大量缓存同一时期失效</strong>时，大量的流量会冲击到数据库上，数据库会因承受不了而当机。即缓存层出现了错误，所有数据请求到达存储层，导则存储层无法响应</p><p>解决方案：</p><ul><li>构建多级缓存架构：nginx缓存 + redis缓存 + 其他缓存</li><li>使用锁或队列：可保证问题不出现，但不适合高并发情况</li><li><strong>设置过期标志更新缓存</strong>：记录缓存数据是否过期（设置提前量），如果过期会触发通知另外的线程去后台更新实际key的缓存</li><li><strong>将缓存失效时间分散开</strong>：可通过随机数生成随机时间，这样保证key不在同一时间内过期。</li></ul><h2 id="9-2-穿透-缓存空值"><a href="#9-2-穿透-缓存空值" class="headerlink" title="9.2 穿透 (缓存空值)"></a>9.2 穿透 (缓存空值)</h2><p>场景：用户查询某条数据，但redis中没有，即缓存未命中；继续向持久层数据库查询，还是没有，即本次查询失败。当大量查询失败时，导则持久层数据库压力过大，即为缓存穿透</p><p>解决方案：</p><ul><li><strong>缓存空值</strong>：即数据不存在，依旧设置一个默认值到缓存中，但该key的过期时间较短。简单应急方案</li><li><strong>设置白名单</strong>：使用bitmaps定义一个可访问的名单，名单id作为bitmaps的偏移量，每次访问和bitmaps中的id进行比较，如果id不存在，则不允许访问。每次访问都要查询，效率不高</li><li><strong>布隆过滤器(Bloom Filter)</strong>：是一个二进制向量(位图)和一系列随机映射函数(哈希函数)。布隆过滤器科研检测一个元素是否在一个集合中，其优点是空间效率和查询时间远超过一般的算法，缺点是有一定的错误识别率和删除困难。实现：将所有可能存在的数据哈希到以恶搞足够大的bitmaps中，一个一定不存在的数据会被这个bitmaps拦截掉，从而避免了对底层存储系统的查询压力。</li><li>实时监控：当发现Redis的命中率开始急速降低，需要排查访问对象和访问的数据，和运维人员配合，设置黑名单限制访问。</li></ul><h2 id="9-3-击穿-热门key过期"><a href="#9-3-击穿-热门key过期" class="headerlink" title="9.3 击穿 (热门key过期)"></a>9.3 击穿 (热门key过期)</h2><p>场景：某个key非常热点，高并发访问它时，该key突然失效，导则高并发请求直接访问持久数据库，就像在屏障上凿了一个洞</p><p>解决方案：</p><ul><li><p><strong>预先设置热门数据</strong>：在redis高峰访问前，把一些热门数据提前存入redis中，并加大这些热门数据key的过期时长</p></li><li><p>实时调整：现场监控哪些热门数据，实时调整可以的过期时长</p></li><li><p>使用互斥锁：缓存失效时，不立即查询数据库，先获取锁setnx mutex lock，成功后，查询数据库并设置缓存，删除mutex锁。缺点：访问效率会被降低</p></li></ul><h1 id="10-Redis优化"><a href="#10-Redis优化" class="headerlink" title="10. Redis优化"></a>10. Redis优化</h1><h2 id="10-1-内存管理"><a href="#10-1-内存管理" class="headerlink" title="10.1 内存管理"></a>10.1 内存管理</h2><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># HashMap成员数量，小于配置，按紧凑格式存储，内存开销少，任意一个超过，就使用真实的HashMap存储，内存占用大</span></span><br><span class="line">hash-max-zipmap-entries 64   <span class="comment"># 成员数量少</span></span><br><span class="line">hash-max-zipmap-value 512    <span class="comment"># 成员长度小</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># List</span></span><br><span class="line">list-max-ziplist-value 64</span><br><span class="line">list-max-ziplist-entries 512</span><br></pre></td></tr></table></figure><h2 id="10-2-持久化"><a href="#10-2-持久化" class="headerlink" title="10.2 持久化"></a>10.2 持久化</h2><p>选择aof，每个实例不要超过2G</p><h2 id="10-3-优化方向"><a href="#10-3-优化方向" class="headerlink" title="10.3 优化方向"></a>10.3 优化方向</h2><ul><li>进行master-slave主从同步配置，在出现服务故障时可切换</li><li>在master禁用数据持久化，在slave上配置数据持久化</li><li>Memory+swap不足。此时dump会挂死，最终会导致机器挡掉。64-128GB内存， SSD硬盘。</li><li>当使用的Memory超过60%，会使用swap，内存碎片大</li><li>当达到最大内存时，会清空带过期时间的key，即使该key未过期</li><li>redis和DB同步，先写DB，后写redis，内存写速度快</li></ul><p>Redis使用建议：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">key:</span><br><span class="line">    object-type:id:field</span><br><span class="line">    length 10~20</span><br><span class="line">    </span><br><span class="line">value:</span><br><span class="line">    string 不超过2K</span><br><span class="line">    set, sortedset 元素个数不超过5000</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> NoSQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes Helm</title>
      <link href="/2018/07/09/Kubernetes%20Helm/"/>
      <url>/2018/07/09/Kubernetes%20Helm/</url>
      
        <content type="html"><![CDATA[<h1 id="1-Helm"><a href="#1-Helm" class="headerlink" title="1. Helm"></a>1. Helm</h1><p>Helm：让应用管理（Deployment、Service等）可配置，能动态生成。通过动态生成的k8s资源清单文件 (deployment.yaml, service.yaml)，然后调用kubectl自动执行k8s资源部署。</p><p>Helm 包管理工具，是部署环境的流程封装</p><p>Helm 两个重要概念：</p><ul><li>chart: 创建一个<strong>应用的信息集合</strong>，包含各种kubernetes对象的配置模板、参数定义、依赖关系、文档说明等。chart是应用部署的自包含逻辑单元，即yum中的<strong>安装包</strong></li><li>release: chart的<strong>运行实例</strong>。当chart被安装到kubernetes中，就生成一个release。chart能够多次安装到同一个集群，每次安装都是一个realease</li></ul><p>helm 包含两个组件：Helm 客户端 和 Tiller 服务器</p><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/k8s/k8s_helm_client.png" alt="helm"></p><p>Helm客户端: 负责chart和release的创建和管理、和Tiller的交互</p><p>Tiller服务器：运行在kubernetes集群节点中，处理Helm客户端请求，与API Server交互</p><span id="more"></span><h2 id="1-1-Helm-部署"><a href="#1-1-Helm-部署" class="headerlink" title="1.1 Helm 部署"></a>1.1 Helm 部署</h2><p>安装包下载地址：<a href="https://github.com/helm/helm/releases">https://github.com/helm/helm/releases</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://get.helm.sh/helm-v2.16.10-linux-amd64.tar.gz</span><br><span class="line">tar zxvf helm-v2.16.10-linux-amd64.tar.gz</span><br><span class="line">cp linux-amd64/helm /usr/<span class="built_in">local</span>/bin</span><br></pre></td></tr></table></figure><p><strong>安装Tiller:</strong> k8s APIServer开启了RBAC访问控制，在创建Tiller需要使用service account: tiller，并分配合适的角色给它</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tiller-rbac-config.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">tiller</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line">  </span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">tiller</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">cluster-admin</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">tiller</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建RBAC</span></span><br><span class="line">$ kubectl create -f tiller-rbac-config.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 部署 tiller 服务器</span></span><br><span class="line">$ helm init --service-account tiller --skip-refresh</span><br><span class="line"></span><br><span class="line"><span class="comment"># tiller 服务器，namespace 为 kube-system</span></span><br><span class="line">$ kubectl get pod -n kube-system | grep tiller</span><br><span class="line">NAME                                 READY   STATUS    RESTARTS   AGE</span><br><span class="line">tiller-deploy-6845b7d56c-2wk2x       1/1     Running   0          31s</span><br><span class="line"></span><br><span class="line">$ helm version</span><br><span class="line">Client: &amp;version.Version&#123;SemVer:<span class="string">&quot;v2.16.10&quot;</span>, GitCommit:<span class="string">&quot;bceca24a91639f045f22ab0f41e47589a932cf5e&quot;</span>, GitTreeState:<span class="string">&quot;clean&quot;</span>&#125;</span><br><span class="line">Server: &amp;version.Version&#123;SemVer:<span class="string">&quot;v2.16.10&quot;</span>, GitCommit:<span class="string">&quot;bceca24a91639f045f22ab0f41e47589a932cf5e&quot;</span>, GitTreeState:<span class="string">&quot;clean&quot;</span>&#125;</span><br></pre></td></tr></table></figure><p><strong>部署 helm v3.3:</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ wget https://get.helm.sh/helm-v3.3.1-linux-amd64.tar.gz</span><br><span class="line">$ tar zxvf helm-v3.3.1-linux-amd64.tar.gz</span><br><span class="line">$ cp linux-amd64/helm /usr/<span class="built_in">local</span>/bin/helm</span><br><span class="line"></span><br><span class="line">$ helm repo add stable https://kubernetes-charts.storage.googleapis.com/</span><br><span class="line"></span><br><span class="line">$ helm repo update</span><br></pre></td></tr></table></figure><p>命令汇总：</p><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td>helm search hub xxx</td><td>在Helm Hub上搜索Chart</td></tr><tr><td>helm search repo repo_name</td><td>在本地配置的Repo中搜索Chart</td></tr><tr><td>helm install release_name chart_reference</td><td>chart一共有5种reference</td></tr><tr><td>helm list</td><td>查看已部署的release</td></tr><tr><td>helm status release_name</td><td>查看release信息</td></tr><tr><td>helm upgrade release_name chart_reference</td><td>修改chart信息后升级release</td></tr><tr><td>helm history release_name</td><td>查看release的更新历史记录</td></tr><tr><td>helm rollback release_name revision</td><td>回滚操作</td></tr><tr><td>helm uninstall release_name</td><td>卸载release</td></tr></tbody></table><h2 id="1-2-Helm-自定义模板"><a href="#1-2-Helm-自定义模板" class="headerlink" title="1.2 Helm 自定义模板"></a>1.2 Helm 自定义模板</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir helm-demo &amp;&amp; <span class="built_in">cd</span> helm-demo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建自描述文件</span></span><br><span class="line">$ cat &gt; Chart.yaml &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">name: hello</span></span><br><span class="line"><span class="string">version: 1.0.0</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建目标文件，用于生成 kubernetes 资源清单 manifests</span></span><br><span class="line">$ mkdir templates</span><br><span class="line">$ cat &gt; ./templates/deployment.yaml &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">apiVersion: apps/v1</span></span><br><span class="line"><span class="string">kind: Deployment</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: hello-world</span></span><br><span class="line"><span class="string">spec:</span></span><br><span class="line"><span class="string">  replicas: 3</span></span><br><span class="line"><span class="string">  selector:</span></span><br><span class="line"><span class="string">    matchLabels:</span></span><br><span class="line"><span class="string">      app: hello-world</span></span><br><span class="line"><span class="string">  template:</span></span><br><span class="line"><span class="string">    metadata:</span></span><br><span class="line"><span class="string">      labels:</span></span><br><span class="line"><span class="string">        app: hello-world</span></span><br><span class="line"><span class="string">    spec:</span></span><br><span class="line"><span class="string">      containers:</span></span><br><span class="line"><span class="string">      - name: hello-world</span></span><br><span class="line"><span class="string">        image: hub.elihe.io/library/nginx:v1</span></span><br><span class="line"><span class="string">        ports:</span></span><br><span class="line"><span class="string">        - containerPort: 80</span></span><br><span class="line"><span class="string">          protocol: TCP</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建 svc</span></span><br><span class="line">$ cat &gt; ./templates/service.yaml &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">apiVersion: v1</span></span><br><span class="line"><span class="string">kind: Service</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: hello-world</span></span><br><span class="line"><span class="string">spec:</span></span><br><span class="line"><span class="string">  type: NodePort</span></span><br><span class="line"><span class="string">  ports:</span></span><br><span class="line"><span class="string">  - port: 80</span></span><br><span class="line"><span class="string">    targetPort: 80</span></span><br><span class="line"><span class="string">    protocol: TCP</span></span><br><span class="line"><span class="string">  selector:</span></span><br><span class="line"><span class="string">    app: hello-world</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装</span></span><br><span class="line"><span class="comment">#$ helm install . --name hello</span></span><br><span class="line">$ helm install hello . </span><br><span class="line">NAME: hello</span><br><span class="line">LAST DEPLOYED: Thu Oct 15 10:35:57 2020</span><br><span class="line">NAMESPACE: default</span><br><span class="line">STATUS: deployed</span><br><span class="line">REVISION: 1</span><br><span class="line">TEST SUITE: None</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询</span></span><br><span class="line">$ helm list</span><br><span class="line">NAME    NAMESPACE       REVISION        UPDATED                                 STATUS          CHART           APP VERSION</span><br><span class="line">hello   default         1               2020-10-15 10:35:57.015330177 +0800 CST deployed        hello-1.0.1   </span><br></pre></td></tr></table></figure><p>通过动态配置项：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 动态配置</span></span><br><span class="line">$ cat &gt; values.yaml &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">image:</span></span><br><span class="line"><span class="string">  repository: hub.elihe.io/test/nginx</span></span><br><span class="line"><span class="string">  tag: v2</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 动态模板</span></span><br><span class="line">$ cat &gt; ./templates/deployment.yaml &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">apiVersion: apps/v1</span></span><br><span class="line"><span class="string">kind: Deployment</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: hello-world</span></span><br><span class="line"><span class="string">spec:</span></span><br><span class="line"><span class="string">  replicas: 1</span></span><br><span class="line"><span class="string">  selector:</span></span><br><span class="line"><span class="string">    matchLabels:</span></span><br><span class="line"><span class="string">      app: hello-world</span></span><br><span class="line"><span class="string">  template:</span></span><br><span class="line"><span class="string">    metadata:</span></span><br><span class="line"><span class="string">      labels:</span></span><br><span class="line"><span class="string">        app: hello-world</span></span><br><span class="line"><span class="string">    spec:</span></span><br><span class="line"><span class="string">      containers:</span></span><br><span class="line"><span class="string">      - name: hello-world</span></span><br><span class="line"><span class="string">        image: &#123;&#123; .Values.image.repository &#125;&#125;:&#123;&#123; .Values.image.tag &#125;&#125;</span></span><br><span class="line"><span class="string">        ports:</span></span><br><span class="line"><span class="string">        - containerPort: 80</span></span><br><span class="line"><span class="string">          protocol: TCP</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 升级版本</span></span><br><span class="line">$ helm upgrade hello -f values.yaml .</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定版本升级</span></span><br><span class="line">$ helm upgrade --<span class="built_in">set</span> image.tag=<span class="string">&#x27;v3&#x27;</span> hello . </span><br><span class="line"></span><br><span class="line"><span class="comment"># 历史</span></span><br><span class="line">$ helm <span class="built_in">history</span> hello</span><br><span class="line">REVISION        UPDATED                         STATUS          CHART           APP VERSION     DESCRIPTION     </span><br><span class="line">1               Thu Oct 15 10:35:57 2020        superseded      hello-1.0.1                     Install complete</span><br><span class="line">2               Thu Oct 15 10:40:11 2020        superseded      hello-1.0.1                     Upgrade complete</span><br><span class="line">3               Thu Oct 15 10:40:33 2020        deployed        hello-1.0.1                     Upgrade complete</span><br><span class="line"></span><br><span class="line"><span class="comment"># 回滚</span></span><br><span class="line">$ helm rollback hello 2</span><br><span class="line">Rollback was a success.</span><br><span class="line"></span><br><span class="line"><span class="comment"># 卸载</span></span><br><span class="line">$ helm uninstall --keep-history hello</span><br><span class="line"></span><br><span class="line"><span class="comment"># 还原</span></span><br><span class="line">$ helm rollback hello 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 彻底删除</span></span><br><span class="line">$ helm uninstall hello</span><br></pre></td></tr></table></figure><p><strong>debug：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置检查和预生成配置清单</span></span><br><span class="line">$ helm install . --dry-run --debug --<span class="built_in">set</span> image.tag=v2</span><br></pre></td></tr></table></figure><h1 id="2-部署-Dashboard"><a href="#2-部署-Dashboard" class="headerlink" title="2. 部署 Dashboard"></a>2. 部署 Dashboard</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir dashboard &amp;&amp; <span class="built_in">cd</span> dashboard</span><br><span class="line"></span><br><span class="line">$ helm repo update</span><br><span class="line"></span><br><span class="line">$ helm repo list</span><br><span class="line">NAME    URL                                             </span><br><span class="line">stable  https://kubernetes-charts.storage.googleapis.com</span><br><span class="line"><span class="built_in">local</span>   http://127.0.0.1:8879/charts    </span><br><span class="line"></span><br><span class="line">$ helm fetch stable/kubernetes-dashboard</span><br><span class="line">$ tar zxvf kubernetes-dashboard-1.11.1.tgz </span><br><span class="line">$ <span class="built_in">cd</span> kubernetes-dashboard</span><br><span class="line"></span><br><span class="line"><span class="comment"># 参数设置</span></span><br><span class="line">$ cat &gt; kubernetes-dashboard.yaml &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">image:</span></span><br><span class="line"><span class="string">  repository: k8s.gcr.io/kubernetes-dashboard-amd64</span></span><br><span class="line"><span class="string">  tag: v1.8.3</span></span><br><span class="line"><span class="string">ingress:</span></span><br><span class="line"><span class="string">  enable: true</span></span><br><span class="line"><span class="string">  hosts:</span></span><br><span class="line"><span class="string">    - k8s.frognew.com</span></span><br><span class="line"><span class="string">  annotations:</span></span><br><span class="line"><span class="string">    nginx.ingress.kubernetes.io/ssl-redirect: true</span></span><br><span class="line"><span class="string">    nginx.ingress.kubernetes.io/backend-protocol: HTTPS</span></span><br><span class="line"><span class="string">  tls:</span></span><br><span class="line"><span class="string">    - secretName: frognew-com-tls-secret</span></span><br><span class="line"><span class="string">      hosts:</span></span><br><span class="line"><span class="string">      - k8s.frognew.com</span></span><br><span class="line"><span class="string">rbac:</span></span><br><span class="line"><span class="string">  clusterAdminRole: true</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装</span></span><br><span class="line">$ helm install kubernetes-dashboard . \</span><br><span class="line">--namespace kube-system \</span><br><span class="line">-f kubernetes-dashboard.yaml </span><br><span class="line"></span><br><span class="line"><span class="comment"># 容器已运行</span></span><br><span class="line">$ kubectl get pod -n kube-system</span><br><span class="line">NAME                                    READY   STATUS    RESTARTS   AGE</span><br><span class="line">kubernetes-dashboard-7cfd66fc8b-8t79v   1/1     Running   0          37s</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看访问</span></span><br><span class="line">$ kubectl get svc -n kube-system</span><br><span class="line">NAME                   TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)                  AGE</span><br><span class="line">kubernetes-dashboard   ClusterIP   10.98.142.181   &lt;none&gt;        443/TCP                  66s</span><br><span class="line"></span><br><span class="line"><span class="comment"># 改为NodePort访问</span></span><br><span class="line">$ kubectl edit svc kubernetes-dashboard -n kube-system</span><br><span class="line"><span class="built_in">type</span>: NodePort</span><br><span class="line"></span><br><span class="line">$ kubectl get svc -n kube-system</span><br><span class="line">kubernetes-dashboard   NodePort    10.101.30.189   &lt;none&gt;        443:31667/TCP            3m11s</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取令牌访问 token</span></span><br><span class="line">$ kubectl get secret -n kube-system | grep kubernetes-dashboard-token</span><br><span class="line">kubernetes-dashboard-token-bbt69                 kubernetes.io/service-account-token   3      3m12s</span><br><span class="line"></span><br><span class="line">$ kubectl describe secret kubernetes-dashboard-token-bbt69 -n kube-system</span><br><span class="line">token:      eyJhbGciOiJSUzI1NiIsImtpZCI6IlduNEdhTUJxOWtXbFhwdlhRSzhEMGFRemdJR0duQl9FNm9Rc2d0ekREQkEifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJrdWJlcm5ldGVzLWRhc2hib2FyZC10b2tlbi1iYnQ2OSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJrdWJlcm5ldGVzLWRhc2hib2FyZCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjBlMTZlZjcyLWM5YjgtNDViMC05OTEzLThhNzY2NmY2ZDQzNyIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDprdWJlLXN5c3RlbTprdWJlcm5ldGVzLWRhc2hib2FyZCJ9.4FxXZN-Gc6mpd50sl7Wrm_ZjO5T53LrMa30MYMAHubIxOSgIh5HBvpdq5SxgQg2-XGTWZy8yZvxdmC53XOl5zqq-7RMKKjTv-Qa3O_KcHRPpnAOjj9aXvRbGdSlc5Y4D2nkysRKjWca8NjSrTXOzNHMFK0CHEIqVP-GFrKUMWmZRGYiwIoaBBKgTaS-KM3vF2Be94U2f1-ybFloOsAgEijqhUWrxpBgvXYfAmWjH4tdjCgo_1YEFPYUuUS9hq_VifdvWma9ZQthKbWplik9nuG2g-9o_xS0en5rnbxJQFfoAl5iypEi6zJiKgFoGwJsl5ScLFhpDaYN3QNhOnHhJrA</span><br></pre></td></tr></table></figure><p>部署Dashboard2.0:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 卸载V1.8.3</span></span><br><span class="line">$ helm uninstall kubernetes-dashboard --namespace kube-system</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用kubectl安装</span></span><br><span class="line">$ wget https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.4/aio/deploy/recommended.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装</span></span><br><span class="line">$ kubectl apply -f recommended.yaml</span><br><span class="line"></span><br><span class="line">$ kubectl get pod -n kubernetes-dashboard</span><br><span class="line">NAME                                         READY   STATUS    RESTARTS   AGE</span><br><span class="line">dashboard-metrics-scraper-6b4884c9d5-8j778   1/1     Running   0          38s</span><br><span class="line">kubernetes-dashboard-7d8574ffd9-wff2g        1/1     Running   0          38s</span><br><span class="line"></span><br><span class="line">$ kubectl get svc -n kubernetes-dashboard</span><br><span class="line">NAME                        TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)    AGE</span><br><span class="line">dashboard-metrics-scraper   ClusterIP   10.99.116.101    &lt;none&gt;        8000/TCP   115s</span><br><span class="line">kubernetes-dashboard        ClusterIP   10.111.190.197   &lt;none&gt;        443/TCP    116s</span><br><span class="line"></span><br><span class="line"><span class="comment"># 改为NodePort</span></span><br><span class="line">$ kubectl edit svc kubernetes-dashboard -n kubernetes-dashboard</span><br><span class="line"><span class="built_in">type</span>: NodePort</span><br><span class="line"></span><br><span class="line">$ kubectl get svc -n kubernetes-dashboard</span><br><span class="line">NAME                        TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)         AGE</span><br><span class="line">dashboard-metrics-scraper   ClusterIP   10.99.116.101    &lt;none&gt;        8000/TCP        2m40s</span><br><span class="line">kubernetes-dashboard        NodePort    10.111.190.197   &lt;none&gt;        443:32202/TCP   2m41s</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开放账号权限</span></span><br><span class="line">cat &gt; dashboard-admin.yaml &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string"># Creating a Service Account</span></span><br><span class="line"><span class="string">apiVersion: v1</span></span><br><span class="line"><span class="string">kind: ServiceAccount</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: admin-user</span></span><br><span class="line"><span class="string">  namespace: kubernetes-dashboard</span></span><br><span class="line"><span class="string">  </span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string"># Creating a ClusterRoleBinding</span></span><br><span class="line"><span class="string">apiVersion: rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="string">kind: ClusterRoleBinding</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: admin-user</span></span><br><span class="line"><span class="string">roleRef:</span></span><br><span class="line"><span class="string">  apiGroup: rbac.authorization.k8s.io</span></span><br><span class="line"><span class="string">  kind: ClusterRole</span></span><br><span class="line"><span class="string">  name: cluster-admin</span></span><br><span class="line"><span class="string">subjects:</span></span><br><span class="line"><span class="string">- kind: ServiceAccount</span></span><br><span class="line"><span class="string">  name: admin-user</span></span><br><span class="line"><span class="string">  namespace: kubernetes-dashboard</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 开放管理员权限</span></span><br><span class="line">$ kubectl apply -f dashboard-admin.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 访问token</span></span><br><span class="line">$ kubectl -n kubernetes-dashboard describe secret $(kubectl -n kubernetes-dashboard get secret | grep admin-user | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>)</span><br><span class="line">Name:         admin-user-token-zjkxs</span><br><span class="line">Namespace:    kubernetes-dashboard</span><br><span class="line">Labels:       &lt;none&gt;</span><br><span class="line">Annotations:  kubernetes.io/service-account.name: admin-user</span><br><span class="line">              kubernetes.io/service-account.uid: af11f2f3-613e-4bc5-959b-4591e3ada6df</span><br><span class="line"></span><br><span class="line">Type:  kubernetes.io/service-account-token</span><br><span class="line"></span><br><span class="line">Data</span><br><span class="line">====</span><br><span class="line">ca.crt:     1025 bytes</span><br><span class="line">namespace:  20 bytes</span><br><span class="line">token:      eyJhbGciOiJSUzI1NiIsImtpZCI6IlduNEdhTUJxOWtXbFhwdlhRSzhEMGFRemdJR0duQl9FNm9Rc2d0ekREQkEifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlcm5ldGVzLWRhc2hib2FyZCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJhZG1pbi11c2VyLXRva2VuLXpqa3hzIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImFkbWluLXVzZXIiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiJhZjExZjJmMy02MTNlLTRiYzUtOTU5Yi00NTkxZTNhZGE2ZGYiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6a3ViZXJuZXRlcy1kYXNoYm9hcmQ6YWRtaW4tdXNlciJ9.NRMwYGUtsf0v8rL3aZQDmi1lTAFMp1m2xEvAO6zavtFFo6HJzbpF_ReSssgWeK5LLk6sbOXVUx19O0wnASSPKg7JXiXBBGyb_qHkMdD5p2yc5ggGJu_MjE_0kXS-0OvSMS20Dtv1BiZiWB-eNEy3xxTorivG2Zah8-ART5J1HtqHauxxyQr21pHfQ9XlmOlby3MQVelIbQ1e7-EZemOSggcQI0rlpWlU_OPiakksoJGEcwr0xK7kypLnxG4AjM9x9fgjIBft30c4tfwMDXzYiB5ZwwDP2cHRiYN6fnE9XdJmrGBVAL4SgTabXFz2DOfOFpsbWkcDNdOBBWsZHzvUww</span><br><span class="line"></span><br><span class="line"><span class="comment"># 卸载</span></span><br><span class="line">$ kubectl delete -f dashboard-admin.yaml </span><br><span class="line">$ kubectl delete -f recommended.yaml </span><br></pre></td></tr></table></figure><h1 id="3-Prometheus"><a href="#3-Prometheus" class="headerlink" title="3. Prometheus"></a>3. Prometheus</h1><h2 id="3-1-组件说明"><a href="#3-1-组件说明" class="headerlink" title="3.1 组件说明"></a>3.1 组件说明</h2><ul><li>MetricServer: k8s 集群资源使用情况的集合器，收集数据给 k8s 集群内使用，如kubectl, hpa, scheduler等 （支持kubectl top node等操作）</li><li>PrometheusOperator: 系统监控和警报工具箱，用来存储监控数据</li><li>NodeExporter: 各个node的关键度量指标状态数据</li><li>KubeStateMetrics: 收集k8s集群内资源对象数据，制定告警规则</li><li>Prometheus: 采用pull方式收集apiserver, scheduler, controller-manager, kubelet组件数据，通过http协议传输</li><li>Grafana: 可视化数据统计和监控平台</li></ul><h2 id="3-2-构建记录"><a href="#3-2-构建记录" class="headerlink" title="3.2 构建记录"></a>3.2 构建记录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir prometheus &amp;&amp; <span class="built_in">cd</span> promethues</span><br><span class="line"></span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/coreos/kube-prometheus.git</span><br><span class="line">$ <span class="built_in">cd</span> kube-prometheus/manifests</span><br><span class="line"></span><br><span class="line"><span class="comment"># 当前k8s版本为 v1.18.6, 切换分支 release-0.6</span></span><br><span class="line">$ git checkout release-0.6</span><br></pre></td></tr></table></figure><p><strong>修改 grafana-service.yaml, 开启NodePort方式:</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">grafana</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">grafana</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">monitoring</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span>     <span class="comment"># add</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">3000</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">nodePort:</span> <span class="number">30100</span>  <span class="comment"># add</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">grafana</span></span><br></pre></td></tr></table></figure><p><strong>修改 prometheus-service.yaml, 开启NodePort方式:</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">prometheus:</span> <span class="string">k8s</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">prometheus-k8s</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">monitoring</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span>  <span class="comment"># add</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">web</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">9090</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="string">web</span></span><br><span class="line">    <span class="attr">nodePort:</span> <span class="number">30200</span>  <span class="comment"># add</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">prometheus</span></span><br><span class="line">    <span class="attr">prometheus:</span> <span class="string">k8s</span></span><br><span class="line">  <span class="attr">sessionAffinity:</span> <span class="string">ClientIP</span></span><br></pre></td></tr></table></figure><p><strong>修改 alertmanager-service.yaml, 开启NodePort方式:</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    alertmanager: main</span><br><span class="line">  name: alertmanager-main</span><br><span class="line">  namespace: monitoring</span><br><span class="line">spec:</span><br><span class="line">  <span class="built_in">type</span>: NodePort  <span class="comment"># add</span></span><br><span class="line">  ports:</span><br><span class="line">  - name: web</span><br><span class="line">    port: 9093</span><br><span class="line">    targetPort: web</span><br><span class="line">    nodePort: 30300  <span class="comment"># add</span></span><br><span class="line">  selector:</span><br><span class="line">    alertmanager: main</span><br><span class="line">    app: alertmanager</span><br><span class="line">  sessionAffinity: ClientIP</span><br></pre></td></tr></table></figure><p><strong>获取需要的镜像:</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ find . -<span class="built_in">type</span> f | xargs grep <span class="string">&#x27;image:&#x27;</span> | awk <span class="string">&#x27;&#123;print $3&#125;&#x27;</span> | sed <span class="string">&#x27;/^[ ]*$/d&#x27;</span> | sort | uniq</span><br><span class="line">directxman12/k8s-prometheus-adapter:v0.7.0</span><br><span class="line">grafana/grafana:7.1.0</span><br><span class="line">quay.io/coreos/kube-rbac-proxy:v0.4.1</span><br><span class="line">quay.io/coreos/kube-state-metrics:v1.9.5</span><br><span class="line">quay.io/coreos/prometheus-operator:v0.40.0</span><br><span class="line">quay.io/prometheus/alertmanager:v0.21.0</span><br><span class="line">quay.io/prometheus/node-exporter:v0.18.1</span><br><span class="line">quay.io/prometheus/prometheus:v2.20.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 先手动拉取镜像</span></span><br><span class="line">docker pull quay.io/coreos/kube-rbac-proxy:v0.4.1</span><br><span class="line">docker pull quay.io/coreos/kube-state-metrics:v1.9.5</span><br><span class="line">docker pull quay.io/coreos/prometheus-operator:v0.40.0</span><br><span class="line">docker pull quay.io/prometheus/alertmanager:v0.21.0</span><br><span class="line">docker pull quay.io/prometheus/node-exporter:v0.18.1</span><br><span class="line">docker pull quay.io/prometheus/prometheus:v2.20.0</span><br></pre></td></tr></table></figure><p>执行安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Create the namespace and CRDs, and then wait for them to be availble before creating the remaining resources</span></span><br><span class="line">$ kubectl create -f manifests/setup</span><br><span class="line">$ until kubectl get servicemonitors --all-namespaces ; <span class="keyword">do</span> date; sleep 1; <span class="built_in">echo</span> <span class="string">&quot;&quot;</span>; <span class="keyword">done</span></span><br><span class="line">$ kubectl create -f manifests/</span><br><span class="line"></span><br><span class="line"><span class="comment"># teardown the stack</span></span><br><span class="line">$ kubectl delete --ignore-not-found=<span class="literal">true</span> -f manifests/ -f manifests/setup</span><br></pre></td></tr></table></figure><p>安装后检查：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get pod -n monitoring</span><br><span class="line">NAME                                   READY   STATUS    RESTARTS   AGE</span><br><span class="line">alertmanager-main-0                    2/2     Running   0          6m17s</span><br><span class="line">alertmanager-main-1                    2/2     Running   0          6m16s</span><br><span class="line">alertmanager-main-2                    2/2     Running   0          6m16s</span><br><span class="line">grafana-67dfc5f687-vqfbh               1/1     Running   0          6m7s</span><br><span class="line">kube-state-metrics-69d4c7c69d-2lmfl    3/3     Running   0          6m6s</span><br><span class="line">node-exporter-j9nzx                    2/2     Running   0          6m4s</span><br><span class="line">node-exporter-lwmkw                    2/2     Running   0          6m3s</span><br><span class="line">node-exporter-p5sl8                    2/2     Running   0          6m3s</span><br><span class="line">prometheus-adapter-66b855f564-qvs8x    1/1     Running   0          5m53s</span><br><span class="line">prometheus-k8s-0                       3/3     Running   1          5m46s</span><br><span class="line">prometheus-k8s-1                       3/3     Running   1          5m46s</span><br><span class="line">prometheus-operator-75c98bcfd7-smmwd   2/2     Running   0          8m22s</span><br><span class="line"></span><br><span class="line">$ kubectl top node</span><br><span class="line">NAME         CPU(cores)   CPU%   MEMORY(bytes)   MEMORY%   </span><br><span class="line">k8s-master   321m         16%    1329Mi          70%       </span><br><span class="line">k8s-node01   190m         9%     1062Mi          56%       </span><br><span class="line">k8s-node02   961m         48%    1011Mi          53%  </span><br><span class="line"></span><br><span class="line">$ kubectl top pod -n monitoring</span><br><span class="line">NAME                                   CPU(cores)   MEMORY(bytes)   </span><br><span class="line">alertmanager-main-0                    7m           22Mi            </span><br><span class="line">alertmanager-main-1                    11m          23Mi            </span><br><span class="line">alertmanager-main-2                    9m           24Mi            </span><br><span class="line">grafana-67dfc5f687-vqfbh               25m          25Mi            </span><br><span class="line">kube-state-metrics-69d4c7c69d-2lmfl    2m           33Mi            </span><br><span class="line">node-exporter-j9nzx                    58m          19Mi            </span><br><span class="line">node-exporter-lwmkw                    5m           18Mi            </span><br><span class="line">node-exporter-p5sl8                    5m           13Mi            </span><br><span class="line">prometheus-adapter-66b855f564-qvs8x    4m           18Mi            </span><br><span class="line">prometheus-k8s-0                       31m          235Mi           </span><br><span class="line">prometheus-k8s-1                       26m          195Mi           </span><br><span class="line">prometheus-operator-75c98bcfd7-smmwd   1m           34Mi </span><br><span class="line"></span><br><span class="line">$ kubectl get svc -n monitoring</span><br><span class="line">NAME                    TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)                      AGE</span><br><span class="line">alertmanager-main       NodePort    10.105.101.126   &lt;none&gt;        9093:30300/TCP               9m37s</span><br><span class="line">alertmanager-operated   ClusterIP   None             &lt;none&gt;        9093/TCP,9094/TCP,9094/UDP   9m37s</span><br><span class="line">grafana                 NodePort    10.100.132.19    &lt;none&gt;        3000:30100/TCP               9m26s</span><br><span class="line">kube-state-metrics      ClusterIP   None             &lt;none&gt;        8443/TCP,9443/TCP            9m25s</span><br><span class="line">node-exporter           ClusterIP   None             &lt;none&gt;        9100/TCP                     9m25s</span><br><span class="line">prometheus-adapter      ClusterIP   10.101.16.41     &lt;none&gt;        443/TCP                      9m12s</span><br><span class="line">prometheus-k8s          NodePort    10.101.33.228    &lt;none&gt;        9090:30200/TCP               9m10s</span><br><span class="line">prometheus-operated     ClusterIP   None             &lt;none&gt;        9090/TCP                     9m4s</span><br><span class="line">prometheus-operator     ClusterIP   None             &lt;none&gt;        8443/TCP                     11m</span><br></pre></td></tr></table></figure><p><strong>访问 promethues</strong>：<a href="http://192.168.31.40:30200">http://192.168.31.40:30200</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sum by (pod_name)(rate(container_cpu_usage_seconds_total&#123;image!=<span class="string">&quot;&quot;</span>&#125;[1m] ))</span><br></pre></td></tr></table></figure><p><strong>访问 Grafana</strong>: <a href="http://192.168.31.40:30100">http://192.168.31.40:30100</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin/admin</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/k8s/grafana-monitor.png" alt="grafana"></p><h1 id="3-Horizontal-Pod-Autoscaling"><a href="#3-Horizontal-Pod-Autoscaling" class="headerlink" title="3. Horizontal Pod Autoscaling"></a>3. Horizontal Pod Autoscaling</h1><p>HPA 可以根据CPU利用率自动伸缩一个 Replication Controller、Deployment或者 ReplicaSet中的Pod数量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; hpa.yaml &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">apiVersion: apps/v1</span></span><br><span class="line"><span class="string">kind: Deployment</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: php-apache</span></span><br><span class="line"><span class="string">spec:</span></span><br><span class="line"><span class="string">  replicas: 1</span></span><br><span class="line"><span class="string">  selector:</span></span><br><span class="line"><span class="string">    matchLabels:</span></span><br><span class="line"><span class="string">      app: apache</span></span><br><span class="line"><span class="string">  template:   # Pod</span></span><br><span class="line"><span class="string">    metadata:</span></span><br><span class="line"><span class="string">      labels:</span></span><br><span class="line"><span class="string">        app: apache</span></span><br><span class="line"><span class="string">    spec:</span></span><br><span class="line"><span class="string">      containers:</span></span><br><span class="line"><span class="string">      - name: php-apache</span></span><br><span class="line"><span class="string">        image: gcr.io/google_containers/hpa-example</span></span><br><span class="line"><span class="string">        ports:</span></span><br><span class="line"><span class="string">        - containerPort: 80</span></span><br><span class="line"><span class="string">        resources:</span></span><br><span class="line"><span class="string">          requests:</span></span><br><span class="line"><span class="string">            cpu: 0.1</span></span><br><span class="line"><span class="string">            memory: 32Mi</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">apiVersion: v1</span></span><br><span class="line"><span class="string">kind: Service</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: php-apache</span></span><br><span class="line"><span class="string">spec:</span></span><br><span class="line"><span class="string">  type: ClusterIP</span></span><br><span class="line"><span class="string">  selector: </span></span><br><span class="line"><span class="string">    app: apache</span></span><br><span class="line"><span class="string">  ports:</span></span><br><span class="line"><span class="string">  - name: http</span></span><br><span class="line"><span class="string">    port: 80</span></span><br><span class="line"><span class="string">    targetPort: 80</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动</span></span><br><span class="line">$ kubectl apply -f hpa.yaml</span><br><span class="line"></span><br><span class="line">$ kubectl top pod</span><br><span class="line">NAME                          CPU(cores)   MEMORY(bytes)   </span><br><span class="line">php-apache-86d4bcdcd9-wlvs5   1/1     Running   0          29m </span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建HPA控制器</span></span><br><span class="line">$ kubectl autoscale deployment php-apache --cpu-percent=50 --min=1 --max=10</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看数据释放统计到了</span></span><br><span class="line">$ kubectl get hpa</span><br><span class="line">NAME         REFERENCE               TARGETS   MINPODS   MAXPODS   REPLICAS   AGE</span><br><span class="line">php-apache   Deployment/php-apache   0%/50%    1         10        1          5m</span><br><span class="line"></span><br><span class="line"><span class="comment"># 增加负载，查看负载数量 （新开一个窗口）</span></span><br><span class="line">$ kubectl run -i --tty load-generator --image=busybox /bin/sh</span><br><span class="line">$ <span class="keyword">while</span> <span class="literal">true</span>; <span class="keyword">do</span> wget -q -O- http://php-apache.default.svc.cluster.local; <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 监控</span></span><br><span class="line"> kubectl get hpa -w</span><br><span class="line">NAME         REFERENCE               TARGETS         MINPODS   MAXPODS   REPLICAS   AGE</span><br><span class="line">php-apache   Deployment/php-apache   &lt;unknown&gt;/50%   1         10        0          7s</span><br><span class="line">php-apache   Deployment/php-apache   &lt;unknown&gt;/50%   1         10        1          15s</span><br><span class="line">php-apache   Deployment/php-apache   0%/50%          1         10        1          4m3s</span><br><span class="line">php-apache   Deployment/php-apache   0%/50%          1         10        1          5m19s</span><br><span class="line">php-apache   Deployment/php-apache   1%/50%          1         10        1          19m</span><br><span class="line">php-apache   Deployment/php-apache   0%/50%          1         10        1          20m</span><br><span class="line">php-apache   Deployment/php-apache   0%/50%          1         10        1          25m</span><br><span class="line">php-apache   Deployment/php-apache   378%/50%        1         10        1          28m</span><br><span class="line">php-apache   Deployment/php-apache   378%/50%        1         10        4          28m</span><br><span class="line">php-apache   Deployment/php-apache   467%/50%        1         10        8          28m</span><br><span class="line"></span><br><span class="line"><span class="comment"># 尝试新作 Pod</span></span><br><span class="line">$ kubectl get pod -w</span><br><span class="line">NAME                          READY   STATUS    RESTARTS   AGE</span><br><span class="line">load-generator                1/1     Running   0          45m</span><br><span class="line">php-apache-86d4bcdcd9-wlvs5   1/1     Running   0          29m</span><br><span class="line">php-apache-86d4bcdcd9-7cjmm   0/1     Pending   0          0s</span><br><span class="line">php-apache-86d4bcdcd9-7cjmm   0/1     Pending   0          0s</span><br><span class="line">php-apache-86d4bcdcd9-dr2rg   0/1     Pending   0          0s</span><br><span class="line">php-apache-86d4bcdcd9-9srl5   0/1     Pending   0          0s</span><br><span class="line">php-apache-86d4bcdcd9-dr2rg   0/1     Pending   0          0s</span><br><span class="line">php-apache-86d4bcdcd9-9srl5   0/1     Pending   0          0s</span><br><span class="line">php-apache-86d4bcdcd9-dr2rg   0/1     ContainerCreating   0          0s</span><br><span class="line">php-apache-86d4bcdcd9-9srl5   0/1     ContainerCreating   0          1s</span><br><span class="line">php-apache-86d4bcdcd9-7cjmm   0/1     ContainerCreating   0          1s</span><br><span class="line">php-apache-86d4bcdcd9-hzf8h   0/1     Pending             0          0s</span><br><span class="line">php-apache-86d4bcdcd9-m4tp6   0/1     Pending             0          0s</span><br><span class="line">php-apache-86d4bcdcd9-hzf8h   0/1     Pending             0          0s</span><br><span class="line">php-apache-86d4bcdcd9-5bfp8   0/1     Pending             0          0s</span><br><span class="line">php-apache-86d4bcdcd9-m4tp6   0/1     Pending             0          0s</span><br><span class="line">php-apache-86d4bcdcd9-5bfp8   0/1     Pending             0          0s</span><br><span class="line">php-apache-86d4bcdcd9-8scwl   0/1     Pending             0          0s</span><br><span class="line">php-apache-86d4bcdcd9-8scwl   0/1     Pending             0          0s</span><br><span class="line">php-apache-86d4bcdcd9-hzf8h   0/1     ContainerCreating   0          0s</span><br><span class="line">php-apache-86d4bcdcd9-m4tp6   0/1     ContainerCreating   0          0s</span><br><span class="line">php-apache-86d4bcdcd9-5bfp8   0/1     ContainerCreating   0          0s</span><br><span class="line">php-apache-86d4bcdcd9-8scwl   0/1     ContainerCreating   0          0s</span><br><span class="line">php-apache-86d4bcdcd9-rsg9f   0/1     Pending             0          0s</span><br><span class="line">php-apache-86d4bcdcd9-z6qkt   0/1     Pending             0          0s</span><br><span class="line">php-apache-86d4bcdcd9-rsg9f   0/1     Pending             0          0s</span><br><span class="line">php-apache-86d4bcdcd9-z6qkt   0/1     Pending             0          0s</span><br><span class="line">php-apache-86d4bcdcd9-rsg9f   0/1     ContainerCreating   0          1s</span><br><span class="line">php-apache-86d4bcdcd9-z6qkt   0/1     ContainerCreating   0          3s</span><br></pre></td></tr></table></figure><h1 id="4-资源限制"><a href="#4-资源限制" class="headerlink" title="4. 资源限制"></a>4. 资源限制</h1><h2 id="4-1-Pod"><a href="#4-1-Pod" class="headerlink" title="4.1 Pod"></a>4.1 Pod</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">php-apache</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">gcr.io/google_containers/hpa-example</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="attr">requests:</span></span><br><span class="line">        <span class="attr">cpu:</span> <span class="number">0.1</span></span><br><span class="line">        <span class="attr">memory:</span> <span class="string">32Mi</span></span><br><span class="line">      <span class="attr">limits:</span></span><br><span class="line">        <span class="attr">cpu:</span> <span class="string">200m</span></span><br><span class="line">        <span class="attr">memory:</span> <span class="string">100Mi</span></span><br></pre></td></tr></table></figure><h2 id="4-2-名称空间"><a href="#4-2-名称空间" class="headerlink" title="4.2 名称空间"></a>4.2 名称空间</h2><ol><li>计算姿态配额</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ResourceQuota</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">compute-resource</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">spark-cluster</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">hard:</span></span><br><span class="line">    <span class="attr">pods:</span> <span class="number">20</span></span><br><span class="line">    <span class="attr">requests.cpu:</span> <span class="number">20</span></span><br><span class="line">    <span class="attr">requests.memory:</span> <span class="string">100Gi</span></span><br><span class="line">    <span class="attr">limits.cpu:</span> <span class="number">40</span></span><br><span class="line">    <span class="attr">limits.memory:</span> <span class="string">200Gi</span></span><br></pre></td></tr></table></figure><ol start="2"><li>配置对象数量配额限制</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ResourceQuota</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">object-counts</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">spark-cluster</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">hard:</span></span><br><span class="line">    <span class="attr">configmaps:</span> <span class="number">10</span></span><br><span class="line">    <span class="attr">persistentvolumeclaims:</span> <span class="number">4</span></span><br><span class="line">    <span class="attr">replicationcontrollers:</span> <span class="number">20</span></span><br><span class="line">    <span class="attr">secrets:</span> <span class="number">10</span></span><br><span class="line">    <span class="attr">services:</span> <span class="number">10</span></span><br><span class="line">    <span class="attr">services.loadbalancer:</span> <span class="number">2</span></span><br></pre></td></tr></table></figure><ol start="3"><li>配置CPU 和 内存的 LimitRange</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">LimitRange</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">mem-limit-range</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">limits:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">default:</span></span><br><span class="line">      <span class="attr">memory:</span> <span class="string">50Gi</span></span><br><span class="line">      <span class="attr">cpu:</span> <span class="number">5</span></span><br><span class="line">    <span class="attr">defaulyRequest:</span></span><br><span class="line">      <span class="attr">memory:</span> <span class="string">1Gi</span></span><br><span class="line">      <span class="attr">cpu:</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">Container</span></span><br></pre></td></tr></table></figure><h1 id="5-EFK-日志"><a href="#5-EFK-日志" class="headerlink" title="5. EFK 日志"></a>5. EFK 日志</h1><p>EFK: Elasticsearch + Fluentd + Kibana</p><p>ELFK: Elasticsearch + Logstash + Filebeat + Kibana</p><p>安装参考：<a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-an-elasticsearch-fluentd-and-kibana-efk-logging-stack-on-kubernetes">https://www.digitalocean.com/community/tutorials/how-to-set-up-an-elasticsearch-fluentd-and-kibana-efk-logging-stack-on-kubernetes</a></p><h2 id="5-1-创建-Namespace"><a href="#5-1-创建-Namespace" class="headerlink" title="5.1 创建 Namespace"></a>5.1 创建 Namespace</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir efk &amp;&amp; <span class="built_in">cd</span> efk</span><br><span class="line"></span><br><span class="line">$ cat &gt; kube-logging.yaml &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">kind: Namespace</span></span><br><span class="line"><span class="string">apiVersion: v1</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: kube-logging</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">$ kubectl create -f kube-logging.yaml</span><br><span class="line"></span><br><span class="line">$ kubectl get ns | grep kube-logging</span><br><span class="line">kube-logging      Active        6s</span><br></pre></td></tr></table></figure><h2 id="5-2-ElasticSearch"><a href="#5-2-ElasticSearch" class="headerlink" title="5.2 ElasticSearch"></a>5.2 ElasticSearch</h2><h3 id="5-2-1-创建无头服务"><a href="#5-2-1-创建无头服务" class="headerlink" title="5.2.1 创建无头服务"></a>5.2.1 创建无头服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">$ cat &gt; elasticsearch_svc.yaml &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">kind: Service</span></span><br><span class="line"><span class="string">apiVersion: v1</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: elasticsearch</span></span><br><span class="line"><span class="string">  namespace: kube-logging</span></span><br><span class="line"><span class="string">  labels:</span></span><br><span class="line"><span class="string">    app: elasticsearch</span></span><br><span class="line"><span class="string">spec:</span></span><br><span class="line"><span class="string">  selector:</span></span><br><span class="line"><span class="string">    app: elasticsearch</span></span><br><span class="line"><span class="string">  clusterIP: None</span></span><br><span class="line"><span class="string">  ports:</span></span><br><span class="line"><span class="string">    - port: 9200</span></span><br><span class="line"><span class="string">      name: rest</span></span><br><span class="line"><span class="string">    - port: 9300</span></span><br><span class="line"><span class="string">      name: inter-node</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">$ kubectl create -f elasticsearch_svc.yaml</span><br><span class="line"></span><br><span class="line">$ kubectl get services --namespace=kube-logging</span><br><span class="line">NAME            TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)             AGE</span><br><span class="line">elasticsearch   ClusterIP   None         &lt;none&gt;        9200/TCP,9300/TCP   13s</span><br></pre></td></tr></table></figure><h3 id="5-2-2-创建PV"><a href="#5-2-2-创建PV" class="headerlink" title="5.2.2 创建PV"></a>5.2.2 创建PV</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$ cat &gt; elasticsearch_pv.ymal &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">apiVersion: v1</span></span><br><span class="line"><span class="string">kind: PersistentVolume</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: nfspv1</span></span><br><span class="line"><span class="string">  namespace: kube-logging</span></span><br><span class="line"><span class="string">spec:</span></span><br><span class="line"><span class="string">  capacity:</span></span><br><span class="line"><span class="string">    storage: 1Gi</span></span><br><span class="line"><span class="string">  accessModes:</span></span><br><span class="line"><span class="string">    - ReadWriteOnce</span></span><br><span class="line"><span class="string">  persistentVolumeReclaimPolicy: Retain</span></span><br><span class="line"><span class="string">  storageClassName: nfs</span></span><br><span class="line"><span class="string">  nfs:</span></span><br><span class="line"><span class="string">    path: /nfs</span></span><br><span class="line"><span class="string">    server: 192.168.31.200</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">$ kubectl create -f elasticsearch_pv.ymal</span><br><span class="line"></span><br><span class="line">$ kubectl get pv -n kube-logging</span><br><span class="line">NAME     CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS      CLAIM   STORAGECLASS   REASON   AGE</span><br><span class="line">nfspv1   1Gi        RWO            Retain           Available           nfs                     18s</span><br></pre></td></tr></table></figure><h3 id="5-2-3-安装ES"><a href="#5-2-3-安装ES" class="headerlink" title="5.2.3 安装ES"></a>5.2.3 安装ES</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line">$ cat &gt; elasticsearch_statefulset.yaml &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">apiVersion: apps/v1</span></span><br><span class="line"><span class="string">kind: StatefulSet</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: es-cluster</span></span><br><span class="line"><span class="string">  namespace: kube-logging</span></span><br><span class="line"><span class="string">spec:</span></span><br><span class="line"><span class="string">  serviceName: elasticsearch</span></span><br><span class="line"><span class="string">  #replicas: 3</span></span><br><span class="line"><span class="string">  replicas: 1</span></span><br><span class="line"><span class="string">  selector:</span></span><br><span class="line"><span class="string">    matchLabels:</span></span><br><span class="line"><span class="string">      app: elasticsearch</span></span><br><span class="line"><span class="string">  template:</span></span><br><span class="line"><span class="string">    metadata:</span></span><br><span class="line"><span class="string">      labels:</span></span><br><span class="line"><span class="string">        app: elasticsearch</span></span><br><span class="line"><span class="string">    spec:</span></span><br><span class="line"><span class="string">      containers:</span></span><br><span class="line"><span class="string">      - name: elasticsearch</span></span><br><span class="line"><span class="string">        image: docker.elastic.co/elasticsearch/elasticsearch:7.2.0</span></span><br><span class="line"><span class="string">        resources:</span></span><br><span class="line"><span class="string">            limits:</span></span><br><span class="line"><span class="string">              #cpu: 1000m</span></span><br><span class="line"><span class="string">              cpu: 400m</span></span><br><span class="line"><span class="string">            requests:</span></span><br><span class="line"><span class="string">              cpu: 100m</span></span><br><span class="line"><span class="string">        ports:</span></span><br><span class="line"><span class="string">        - containerPort: 9200</span></span><br><span class="line"><span class="string">          name: rest</span></span><br><span class="line"><span class="string">          protocol: TCP</span></span><br><span class="line"><span class="string">        - containerPort: 9300</span></span><br><span class="line"><span class="string">          name: inter-node</span></span><br><span class="line"><span class="string">          protocol: TCP</span></span><br><span class="line"><span class="string">        volumeMounts:</span></span><br><span class="line"><span class="string">        - name: data</span></span><br><span class="line"><span class="string">          mountPath: /usr/share/elasticsearch/data</span></span><br><span class="line"><span class="string">        env:</span></span><br><span class="line"><span class="string">          - name: cluster.name</span></span><br><span class="line"><span class="string">            value: k8s-logs</span></span><br><span class="line"><span class="string">          - name: node.name</span></span><br><span class="line"><span class="string">            valueFrom:</span></span><br><span class="line"><span class="string">              fieldRef:</span></span><br><span class="line"><span class="string">                fieldPath: metadata.name</span></span><br><span class="line"><span class="string">          - name: discovery.type  # test-bed</span></span><br><span class="line"><span class="string">            value: single-node</span></span><br><span class="line"><span class="string">          #- name: discovery.seed_hosts</span></span><br><span class="line"><span class="string">            #value: &quot;es-cluster-0.elasticsearch,es-cluster-1.elasticsearch,es-cluster-2.elasticsearch&quot;</span></span><br><span class="line"><span class="string">          #- name: cluster.initial_master_nodes</span></span><br><span class="line"><span class="string">            #value: &quot;es-cluster-0,es-cluster-1,es-cluster-2&quot;</span></span><br><span class="line"><span class="string">          - name: ES_JAVA_OPTS</span></span><br><span class="line"><span class="string">            #value: &quot;-Xms512m -Xmx512m&quot;</span></span><br><span class="line"><span class="string">            value: &quot;-Xms256m -Xmx256m&quot;</span></span><br><span class="line"><span class="string">      initContainers:</span></span><br><span class="line"><span class="string">      - name: fix-permissions</span></span><br><span class="line"><span class="string">        image: busybox</span></span><br><span class="line"><span class="string">        command: [&quot;sh&quot;, &quot;-c&quot;, &quot;chown -R 1000:1000 /usr/share/elasticsearch/data&quot;]</span></span><br><span class="line"><span class="string">        securityContext:</span></span><br><span class="line"><span class="string">          privileged: true</span></span><br><span class="line"><span class="string">        volumeMounts:</span></span><br><span class="line"><span class="string">        - name: data</span></span><br><span class="line"><span class="string">          mountPath: /usr/share/elasticsearch/data</span></span><br><span class="line"><span class="string">      - name: increase-vm-max-map</span></span><br><span class="line"><span class="string">        image: busybox</span></span><br><span class="line"><span class="string">        command: [&quot;sysctl&quot;, &quot;-w&quot;, &quot;vm.max_map_count=262144&quot;]</span></span><br><span class="line"><span class="string">        securityContext:</span></span><br><span class="line"><span class="string">          privileged: true</span></span><br><span class="line"><span class="string">      - name: increase-fd-ulimit</span></span><br><span class="line"><span class="string">        image: busybox</span></span><br><span class="line"><span class="string">        command: [&quot;sh&quot;, &quot;-c&quot;, &quot;ulimit -n 65536&quot;]</span></span><br><span class="line"><span class="string">        securityContext:</span></span><br><span class="line"><span class="string">          privileged: true</span></span><br><span class="line"><span class="string">  volumeClaimTemplates:</span></span><br><span class="line"><span class="string">  - metadata:</span></span><br><span class="line"><span class="string">      name: data</span></span><br><span class="line"><span class="string">      labels:</span></span><br><span class="line"><span class="string">        app: elasticsearch</span></span><br><span class="line"><span class="string">    spec:</span></span><br><span class="line"><span class="string">      accessModes: [ &quot;ReadWriteOnce&quot; ]</span></span><br><span class="line"><span class="string">      storageClassName: nfs</span></span><br><span class="line"><span class="string">      resources:</span></span><br><span class="line"><span class="string">        requests:</span></span><br><span class="line"><span class="string">          storage: 1Gi</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">$ kubectl create -f elasticsearch_statefulset.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 监控创建进度</span></span><br><span class="line">$ kubectl rollout status sts/es-cluster --namespace=kube-logging</span><br><span class="line"></span><br><span class="line">$ kubectl get pod -n kube-logging</span><br><span class="line">NAME           READY   STATUS    RESTARTS   AGE</span><br><span class="line">es-cluster-0   1/1     Running   0          59s</span><br><span class="line"></span><br><span class="line"><span class="comment"># 监控日志</span></span><br><span class="line">$ kubectl logs -f es-cluster-0  -n kube-logging </span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启本地端口，测试服务</span></span><br><span class="line">$ kubectl port-forward es-cluster-0 9200:9200 --namespace=kube-logging</span><br><span class="line"></span><br><span class="line">$ curl http://localhost:9200/_cluster/state?pretty</span><br></pre></td></tr></table></figure><h2 id="5-3-Kibana"><a href="#5-3-Kibana" class="headerlink" title="5.3 Kibana"></a>5.3 Kibana</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">$ cat &gt; kibana.yaml &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">apiVersion: v1</span></span><br><span class="line"><span class="string">kind: Service</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: kibana</span></span><br><span class="line"><span class="string">  namespace: kube-logging</span></span><br><span class="line"><span class="string">  labels:</span></span><br><span class="line"><span class="string">    app: kibana</span></span><br><span class="line"><span class="string">spec:</span></span><br><span class="line"><span class="string">  type: NodePort</span></span><br><span class="line"><span class="string">  ports:</span></span><br><span class="line"><span class="string">  - port: 5601</span></span><br><span class="line"><span class="string">  selector:</span></span><br><span class="line"><span class="string">    app: kibana</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">apiVersion: apps/v1</span></span><br><span class="line"><span class="string">kind: Deployment</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: kibana</span></span><br><span class="line"><span class="string">  namespace: kube-logging</span></span><br><span class="line"><span class="string">  labels:</span></span><br><span class="line"><span class="string">    app: kibana</span></span><br><span class="line"><span class="string">spec:</span></span><br><span class="line"><span class="string">  replicas: 1</span></span><br><span class="line"><span class="string">  selector:</span></span><br><span class="line"><span class="string">    matchLabels:</span></span><br><span class="line"><span class="string">      app: kibana</span></span><br><span class="line"><span class="string">  template:</span></span><br><span class="line"><span class="string">    metadata:</span></span><br><span class="line"><span class="string">      labels:</span></span><br><span class="line"><span class="string">        app: kibana</span></span><br><span class="line"><span class="string">    spec:</span></span><br><span class="line"><span class="string">      containers:</span></span><br><span class="line"><span class="string">      - name: kibana</span></span><br><span class="line"><span class="string">        image: docker.elastic.co/kibana/kibana:7.2.0</span></span><br><span class="line"><span class="string">        resources:</span></span><br><span class="line"><span class="string">          limits:</span></span><br><span class="line"><span class="string">            cpu: 1000m</span></span><br><span class="line"><span class="string">          requests:</span></span><br><span class="line"><span class="string">            cpu: 100m</span></span><br><span class="line"><span class="string">        env:</span></span><br><span class="line"><span class="string">          - name: ELASTICSEARCH_URL</span></span><br><span class="line"><span class="string">            value: http://elasticsearch:9200</span></span><br><span class="line"><span class="string">        ports:</span></span><br><span class="line"><span class="string">        - containerPort: 5601</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">$ kubectl create -f kibana.yaml</span><br><span class="line"></span><br><span class="line">$ kubectl rollout status deployment/kibana --namespace=kube-logging</span><br><span class="line"></span><br><span class="line">$ kubectl get pod -n kube-logging</span><br><span class="line">NAME                      READY   STATUS    RESTARTS   AGE</span><br><span class="line">es-cluster-0              1/1     Running   0          13m</span><br><span class="line">kibana-5749b5778b-zvtwn   1/1     Running   0          4m33s</span><br><span class="line"></span><br><span class="line">$ kubectl get svc -n kube-logging</span><br><span class="line">NAME            TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)             AGE</span><br><span class="line">elasticsearch   ClusterIP   None             &lt;none&gt;        9200/TCP,9300/TCP   89m</span><br><span class="line">kibana          NodePort    10.106.103.244   &lt;none&gt;        5601:30750/TCP      8s</span><br><span class="line"></span><br><span class="line">$ curl http://192.168.1.40:30750</span><br></pre></td></tr></table></figure><h2 id="5-4-Fluentd"><a href="#5-4-Fluentd" class="headerlink" title="5.4 Fluentd"></a>5.4 Fluentd</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line">$ cat &gt; fluentd.yaml &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">apiVersion: v1</span></span><br><span class="line"><span class="string">kind: ServiceAccount</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: fluentd</span></span><br><span class="line"><span class="string">  namespace: kube-logging</span></span><br><span class="line"><span class="string">  labels:</span></span><br><span class="line"><span class="string">    app: fluentd</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">apiVersion: rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="string">kind: ClusterRole</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: fluentd</span></span><br><span class="line"><span class="string">  labels:</span></span><br><span class="line"><span class="string">    app: fluentd</span></span><br><span class="line"><span class="string">rules:</span></span><br><span class="line"><span class="string">- apiGroups:</span></span><br><span class="line"><span class="string">  - &quot;&quot;</span></span><br><span class="line"><span class="string">  resources:</span></span><br><span class="line"><span class="string">  - pods</span></span><br><span class="line"><span class="string">  - namespaces</span></span><br><span class="line"><span class="string">  verbs:</span></span><br><span class="line"><span class="string">  - get</span></span><br><span class="line"><span class="string">  - list</span></span><br><span class="line"><span class="string">  - watch</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">kind: ClusterRoleBinding</span></span><br><span class="line"><span class="string">apiVersion: rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: fluentd</span></span><br><span class="line"><span class="string">roleRef:</span></span><br><span class="line"><span class="string">  kind: ClusterRole</span></span><br><span class="line"><span class="string">  name: fluentd</span></span><br><span class="line"><span class="string">  apiGroup: rbac.authorization.k8s.io</span></span><br><span class="line"><span class="string">subjects:</span></span><br><span class="line"><span class="string">- kind: ServiceAccount</span></span><br><span class="line"><span class="string">  name: fluentd</span></span><br><span class="line"><span class="string">  namespace: kube-logging</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">apiVersion: apps/v1</span></span><br><span class="line"><span class="string">kind: DaemonSet</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: fluentd</span></span><br><span class="line"><span class="string">  namespace: kube-logging</span></span><br><span class="line"><span class="string">  labels:</span></span><br><span class="line"><span class="string">    app: fluentd</span></span><br><span class="line"><span class="string">spec:</span></span><br><span class="line"><span class="string">  selector:</span></span><br><span class="line"><span class="string">    matchLabels:</span></span><br><span class="line"><span class="string">      app: fluentd</span></span><br><span class="line"><span class="string">  template:</span></span><br><span class="line"><span class="string">    metadata:</span></span><br><span class="line"><span class="string">      labels:</span></span><br><span class="line"><span class="string">        app: fluentd</span></span><br><span class="line"><span class="string">    spec:</span></span><br><span class="line"><span class="string">      serviceAccount: fluentd</span></span><br><span class="line"><span class="string">      serviceAccountName: fluentd</span></span><br><span class="line"><span class="string">      tolerations:</span></span><br><span class="line"><span class="string">      - key: node-role.kubernetes.io/master</span></span><br><span class="line"><span class="string">        effect: NoSchedule</span></span><br><span class="line"><span class="string">      containers:</span></span><br><span class="line"><span class="string">      - name: fluentd</span></span><br><span class="line"><span class="string">        image: fluent/fluentd-kubernetes-daemonset:v1.4.2-debian-elasticsearch-1.1</span></span><br><span class="line"><span class="string">        env:</span></span><br><span class="line"><span class="string">          - name:  FLUENT_ELASTICSEARCH_HOST</span></span><br><span class="line"><span class="string">            value: &quot;elasticsearch.kube-logging.svc.cluster.local&quot;</span></span><br><span class="line"><span class="string">          - name:  FLUENT_ELASTICSEARCH_PORT</span></span><br><span class="line"><span class="string">            value: &quot;9200&quot;</span></span><br><span class="line"><span class="string">          - name: FLUENT_ELASTICSEARCH_SCHEME</span></span><br><span class="line"><span class="string">            value: &quot;http&quot;</span></span><br><span class="line"><span class="string">          - name: FLUENTD_SYSTEMD_CONF</span></span><br><span class="line"><span class="string">            value: disable</span></span><br><span class="line"><span class="string">        resources:</span></span><br><span class="line"><span class="string">          limits:</span></span><br><span class="line"><span class="string">            #memory: 512Mi</span></span><br><span class="line"><span class="string">            memory: 256Mi</span></span><br><span class="line"><span class="string">          requests:</span></span><br><span class="line"><span class="string">            cpu: 100m</span></span><br><span class="line"><span class="string">            memory: 200Mi</span></span><br><span class="line"><span class="string">        volumeMounts:</span></span><br><span class="line"><span class="string">        - name: varlog</span></span><br><span class="line"><span class="string">          mountPath: /var/log</span></span><br><span class="line"><span class="string">        - name: varlibdockercontainers</span></span><br><span class="line"><span class="string">          mountPath: /var/lib/docker/containers</span></span><br><span class="line"><span class="string">          readOnly: true</span></span><br><span class="line"><span class="string">      terminationGracePeriodSeconds: 30</span></span><br><span class="line"><span class="string">      volumes:</span></span><br><span class="line"><span class="string">      - name: varlog</span></span><br><span class="line"><span class="string">        hostPath:</span></span><br><span class="line"><span class="string">          path: /var/log</span></span><br><span class="line"><span class="string">      - name: varlibdockercontainers</span></span><br><span class="line"><span class="string">        hostPath:</span></span><br><span class="line"><span class="string">          path: /var/lib/docker/containers</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">$ kubectl create -f fluentd.yaml</span><br><span class="line"></span><br><span class="line">$ kubectl get ds -n kube-logging</span><br><span class="line">NAME      DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR   AGE</span><br><span class="line">fluentd   2         2         2       2            2           &lt;none&gt;          27s</span><br></pre></td></tr></table></figure><h2 id="5-5-Kibana-页面"><a href="#5-5-Kibana-页面" class="headerlink" title="5.5 Kibana 页面"></a>5.5 Kibana 页面</h2><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/k8s/kibana_discover.png" alt="kibana"></p><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/k8s/kibana_index.png" alt="kibana"></p><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/k8s/kibana_index_settings.png" alt="kibana"></p><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/k8s/kibana_logs.png" alt="kibana"></p><h2 id="5-6-测试"><a href="#5-6-测试" class="headerlink" title="5.6 测试"></a>5.6 测试</h2><p>创建一个 Pod：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ cat &gt; counter.yaml &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">apiVersion: v1</span></span><br><span class="line"><span class="string">kind: Pod</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: counter</span></span><br><span class="line"><span class="string">spec:</span></span><br><span class="line"><span class="string">  containers:</span></span><br><span class="line"><span class="string">  - name: count</span></span><br><span class="line"><span class="string">    image: busybox</span></span><br><span class="line"><span class="string">    args: [/bin/sh, -c,</span></span><br><span class="line"><span class="string">            &#x27;i=0; while true; do echo &quot;$i: $(date)&quot;; i=$((i+1)); sleep 1; done&#x27;]</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">$ kubectl create -f counter.yaml</span><br></pre></td></tr></table></figure><h1 id="6-补充：Port说明："><a href="#6-补充：Port说明：" class="headerlink" title="6. 补充：Port说明："></a>6. 补充：Port说明：</h1><p>Pod Template中的ports: </p><ul><li>containerPort: 容器对外开发的端口</li></ul><p>Service 中的 ports:</p><ul><li>port: 监听请求，接收端口，绑定在ClusterIP上</li><li>targetPort: 指定Pod的接收端口，与containerPort绑定</li><li>nodePort: 类型为NodeType时，绑定在NodeIP上，未指定则随机给一个</li></ul>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes 安全机制</title>
      <link href="/2018/07/08/Kubernetes%20%E5%AE%89%E5%85%A8%E6%9C%BA%E5%88%B6/"/>
      <url>/2018/07/08/Kubernetes%20%E5%AE%89%E5%85%A8%E6%9C%BA%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="1-机制说明"><a href="#1-机制说明" class="headerlink" title="1. 机制说明"></a>1. 机制说明</h1><p>API Server 是集群内部各个组件通讯的中介，也是外部控制的入口。k8s 使用认证(Authentication)、鉴权(Authorization)、准入控制(Admission Control) 三步来确保API Server的安全。</p><h1 id="2-认证-Authentication"><a href="#2-认证-Authentication" class="headerlink" title="2. 认证 (Authentication)"></a>2. 认证 (Authentication)</h1><ul><li><p>HTTP Token：HTTP Request Header 的 Token字段</p></li><li><p>HTTP Base:  客户端通过<code>base64 USERNAME:PASSWORD</code>, 填充 HTTP Request Header 的 Authorization字段，服务端收到后解码获取用户名和密码</p></li><li><p>HTTPS: 基于CA根证书签名的客户端身份认证方式。（推荐）</p></li></ul><span id="more"></span><h2 id="2-1-HTTPS-证书认证"><a href="#2-1-HTTPS-证书认证" class="headerlink" title="2.1 HTTPS 证书认证"></a>2.1 HTTPS 证书认证</h2><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/k8s/https-auth.png" alt="https"></p><h2 id="2-2-需要认证的节点"><a href="#2-2-需要认证的节点" class="headerlink" title="2.2 需要认证的节点"></a>2.2 需要认证的节点</h2><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/k8s/k8s_node_auth.png" alt="auth"></p><p><strong>两种类型：</strong></p><ul><li><p>Kubernetes组件对API Server的访问：kubectl、Controller Manager、Scheduler、kubelet、kube-proxy</p></li><li><p>Kubernetes管理的Pod对容器的访问：Pod（dashborad也是以Pod形式运行）</p></li></ul><p><strong>安全性说明：</strong></p><ul><li>Controller Manager、Scheduler与API Server在同一台机器，所以直接使用API Server的非安全端口访问<code>--insecure-bind-address=127.0.0.1</code></li><li>kubectl、kubelet、kube-proxy访问API Server都需要证书进行HTTPS双向认证</li></ul><p><strong>证书颁发：</strong></p><ul><li>手动签发：通过k8s集群的根 ca 进行签发 HTTPS 证书</li><li>自动签发：kubelet 首次访问 API Server 时，使用 token 认证，通过后，Controller Manager 会为kubelet生成一个证书，以后的访问均使用该证书</li></ul><h2 id="2-3-kubeconfig"><a href="#2-3-kubeconfig" class="headerlink" title="2.3 kubeconfig"></a>2.3 kubeconfig</h2><p>kubeconfig 文件包含集群参数（CA证书、API Server地址），客户端参数，集群context信息（集群名称、用户名）。k8s 组件通过启动时指定不同的 kubeconfig 文件可以切换到不同的集群</p><p><code>cat ~/.kube/config</code></p><h2 id="2-4-ServiceAccount"><a href="#2-4-ServiceAccount" class="headerlink" title="2.4 ServiceAccount"></a>2.4 ServiceAccount</h2><p>Pod 中的容器访问API Server。因为Pod的创建和销毁是动态的，所以要为它手动生成证书是不可行的，k8s 使用 Service Account解决Pod访问API Server的认证问题</p><h2 id="2-5-Secret-与-SA-的关系"><a href="#2-5-Secret-与-SA-的关系" class="headerlink" title="2.5 Secret 与 SA 的关系"></a>2.5 Secret 与 SA 的关系</h2><p>Secret 分两类：</p><ul><li>用于ServiceAccount的 service-account-token</li><li>用于保存用户自定义的保密信息的 Opaque</li></ul><p>SA 中包含三个部分：</p><ul><li>token：使用API Server私钥签名的 JWT</li><li>ca.crt: 根证书，用于Client端验证API Server发送的证书</li><li>namespace: 标识该service-account-token的作用域名空间</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get secret --all-namespaces</span><br><span class="line">NAMESPACE         NAME                                             TYPE                                  DATA   AGE</span><br><span class="line">default           default-token-rhw7k                              kubernetes.io/service-account-token   3      5d16h</span><br><span class="line">ingress-nginx     default-token-ftjf6                              kubernetes.io/service-account-token   3      2d3h</span><br><span class="line">kube-system       kube-proxy-token-kcgcp                           kubernetes.io/service-account-token   3      5d16h</span><br><span class="line"></span><br><span class="line">$ kubectl describe secret default-token-rhw7k</span><br><span class="line">Name:         default-token-rhw7k</span><br><span class="line">Namespace:    default</span><br><span class="line">Labels:       &lt;none&gt;</span><br><span class="line">Annotations:  kubernetes.io/service-account.name: default</span><br><span class="line">              kubernetes.io/service-account.uid: 3fdb2906-e8c4-4bb1-9dc0-ac8aa15167b6</span><br><span class="line"></span><br><span class="line">Type:  kubernetes.io/service-account-token</span><br><span class="line"></span><br><span class="line">Data</span><br><span class="line">====</span><br><span class="line">ca.crt:     1025 bytes</span><br><span class="line">namespace:  7 bytes</span><br><span class="line">token:      eyJhbGciOiJSUzI1NiIsImtpZCI6Ikx5ZjJCcWJPandjZzl5czlkRHpZZWp0d2NtT2dSU0w3c2M5dXY2ZUQ0QkUifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJkZWZhdWx0Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6ImRlZmF1bHQtdG9rZW4tcmh3N2siLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiZGVmYXVsdCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjNmZGIyOTA2LWU4YzQtNGJiMS05ZGMwLWFjOGFhMTUxNjdiNiIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDpkZWZhdWx0OmRlZmF1bHQifQ.FkcID8mWCOXDQbZAZPJLWSSWngvt9R-69AEDVV_QQvyvP_BW1MwiANOM2cXkS-qDo4-hcDcRKGOZ-q7BxQC96YUsj41iiLBbsXyVI1_ovEgp58dwROJe-MTxkSlk8sic40QmW2y1CwREf-5EIxwLy1iGekbbMZb4W0m4oXa-BN7qzNzMwu4Bb6ScJbxljHpO33K80oKtWYN-fpow31FjMjZMEebUvf-pGw6O2FPLvzwC7A7_U-WRNrFWd2wZIRQf8GfQgUf5-phAnmyawcJ4gpQooRvHoyGyW366dEY-qAk4D-1xSj598X0Q_pq7PdT1WQkO3nozHL-w4mbSlb3Ytw</span><br><span class="line"></span><br><span class="line">$ kubectl get pod -n kube-system</span><br><span class="line">NAME                                 READY   STATUS    RESTARTS   AGE</span><br><span class="line">kube-proxy-c5t62                     1/1     Running   13         5d16h</span><br><span class="line">kube-proxy-q7m2t                     1/1     Running   13         5d16h</span><br><span class="line">kube-proxy-t2tgb                     1/1     Running   13         5d16h</span><br><span class="line"></span><br><span class="line">$ kubectl <span class="built_in">exec</span> kube-proxy-c5t62 -n kube-system -it -- ls -l /run/secrets/kubernetes.io/serviceaccount</span><br><span class="line">total 0</span><br><span class="line">lrwxrwxrwx 1 root root 13 Sep 13 06:40 ca.crt -&gt; ..data/ca.crt</span><br><span class="line">lrwxrwxrwx 1 root root 16 Sep 13 06:40 namespace -&gt; ..data/namespace</span><br><span class="line">lrwxrwxrwx 1 root root 12 Sep 13 06:40 token -&gt; ..data/token</span><br></pre></td></tr></table></figure><h2 id="2-6-总结"><a href="#2-6-总结" class="headerlink" title="2.6 总结"></a>2.6 总结</h2><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/k8s/k8s_auth.png" alt="auth"></p><h1 id="3-鉴权-Authorization"><a href="#3-鉴权-Authorization" class="headerlink" title="3. 鉴权 (Authorization)"></a>3. 鉴权 (Authorization)</h1><p>认证 和鉴权：</p><ul><li>认证(authencation): 通过只代表通讯双方是可信的</li><li>鉴权(authorization): 确定请求方有哪些资源权限</li></ul><p>API Server的授权策略，启动参数<code>--authorization-mode</code></p><ul><li>AlwaysDeny: 拒绝所有请求，一般用于测试</li><li>AlwaysAllow: 接收所有请求。如果集群不需要授权流程，采用该策略</li><li>ABAC (Attribute-Based Access Control): 基于属性的访问控制，表示使用用户配置的授权规则对用户请求进行匹配和控制</li><li>Webbook: 通过调用外部REST服务对用户进行授权</li><li>RBAC (Role-Based Access Control): <strong>基于角色的访问控制</strong>，默认规则</li></ul><p><strong>RBAC优势：</strong></p><ul><li>对集群中的资源和非资源均拥有完整的覆盖</li><li>整个RBAC完全由几个API对象完成，同其他API对象一样，可以用kubectl或API进行操作</li><li>可在运行时调整，无需重启API Server</li></ul><h2 id="3-1-RBAC-的-API资源对象"><a href="#3-1-RBAC-的-API资源对象" class="headerlink" title="3.1 RBAC 的 API资源对象"></a>3.1 RBAC 的 API资源对象</h2><ul><li>Role</li><li>ClusterRole</li><li>RoleBinding</li><li>ClusterRoleBinding</li></ul><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/k8s/k8s_rbac.png" alt="auth"></p><p>k8s 不会提供用户管理，User, Group, ServiceAccount指定的用户，需要通过证书请求文件指定：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;CN&quot;</span>: <span class="string">&quot;admin&quot;</span>,  <span class="comment">// User</span></span><br><span class="line">  <span class="attr">&quot;hosts&quot;</span>: [],</span><br><span class="line">  <span class="attr">&quot;key&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;algo&quot;</span>: <span class="string">&quot;rsa&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;size&quot;</span>: <span class="number">2048</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;names&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;C&quot;</span>: <span class="string">&quot;CN&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;ST&quot;</span>: <span class="string">&quot;HangZhou&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;L&quot;</span>: <span class="string">&quot;XS&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;O&quot;</span>: <span class="string">&quot;system:master&quot;</span>,  <span class="comment">// Group</span></span><br><span class="line">      <span class="attr">&quot;OU&quot;</span>: <span class="string">&quot;Sytem&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-2-Role-amp-ClusterRole"><a href="#3-2-Role-amp-ClusterRole" class="headerlink" title="3.2 Role &amp; ClusterRole"></a>3.2 Role &amp; ClusterRole</h2><h3 id="3-2-1-Role"><a href="#3-2-1-Role" class="headerlink" title="3.2.1 Role"></a>3.2.1 Role</h3><p>Role 表示一组规则权限，权限只会增加（累加权限），不存在一开始就开通很多权限而通过RBAC对其减少的操作。Role 必须定义在一个namespace中，跨namespace可以使用ClusterRole</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">pod-reader</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]  <span class="comment"># &quot;&quot; indicates the core API group</span></span><br><span class="line">  <span class="attr">resources:</span> [ <span class="string">pods</span> ]</span><br><span class="line">  <span class="attr">verbs:</span> [<span class="string">get</span>, <span class="string">watch</span>, <span class="string">list</span>]</span><br></pre></td></tr></table></figure><h3 id="3-2-2-ClusterRole"><a href="#3-2-2-ClusterRole" class="headerlink" title="3.2.2 ClusterRole"></a>3.2.2 ClusterRole</h3><p>ClusterRole 是集群级别的，可用于：</p><ul><li>集群级别资源控制，例如node访问权限</li><li>非资源型 endpoints，例如/healthz 访问</li><li>所有命名空间资源控制，例如pod</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">secret-reader</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]  <span class="comment"># &quot;&quot; indicates the core API group</span></span><br><span class="line">  <span class="attr">resources:</span> [ <span class="string">secrets</span> ]</span><br><span class="line">  <span class="attr">verbs:</span> [<span class="string">get</span>, <span class="string">watch</span>, <span class="string">list</span>]</span><br></pre></td></tr></table></figure><h2 id="3-3-RoleBinding-amp-ClusterRoleBinding"><a href="#3-3-RoleBinding-amp-ClusterRoleBinding" class="headerlink" title="3.3 RoleBinding &amp; ClusterRoleBinding"></a>3.3 RoleBinding &amp; ClusterRoleBinding</h2><h3 id="3-3-1-RoleBinding"><a href="#3-3-1-RoleBinding" class="headerlink" title="3.3.1 RoleBinding"></a>3.3.1 RoleBinding</h3><p>RoleBinding 可以将角色中定义的权限赋予用户或组，它包含了一种权限列表(subjects)，权限列表包含不同形式的待授予权限资源类型（users，groups，service accounts），同时它也包含被Bind的Role引用</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">RoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">read-pods</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">User</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">jane</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">pod-reader</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br></pre></td></tr></table></figure><p>RoleBinding引用ClusterRole：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># This role binding allows &quot;dave&quot; to read secrets in the &quot;development&quot; namespace</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">RoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">read-secrets</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">development</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">User</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">dave</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">secret-reader</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br></pre></td></tr></table></figure><h3 id="3-3-2-ClusterRoleBinding"><a href="#3-3-2-ClusterRoleBinding" class="headerlink" title="3.3.2 ClusterRoleBinding"></a>3.3.2 ClusterRoleBinding</h3><p>ClusterRoleBinding 可以对整个集群中的所有命名空间资源权限进行授权</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># This cluster role binding allows anyone in the &quot;manager&quot; group to read secrets in any namespace.</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">read-secrets-global</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">Group</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">manager</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">secret-reader</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br></pre></td></tr></table></figure><h2 id="3-4-Resources"><a href="#3-4-Resources" class="headerlink" title="3.4 Resources"></a>3.4 Resources</h2><p>访问子资源:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET /api/v1/namespaces/&#123;namespace&#125;/pods/&#123;name&#125;/log</span><br></pre></td></tr></table></figure> <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">pod-and-pod-logs-reader</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]  <span class="comment"># &quot;&quot; indicates the core API group</span></span><br><span class="line">  <span class="attr">resources:</span> [ <span class="string">pods</span>, <span class="string">&quot;pods/log&quot;</span> ]</span><br><span class="line">  <span class="attr">verbs:</span> [<span class="string">get</span>, <span class="string">list</span>]</span><br></pre></td></tr></table></figure><h2 id="3-5-to-Subjects"><a href="#3-5-to-Subjects" class="headerlink" title="3.5 to Subjects"></a>3.5 to Subjects</h2><p>RoleBinding &amp; ClusterRoleBinding 可以将Role绑定到Subjects, Subjects 可以是groups, users, 或SA</p><h2 id="3-6-示例"><a href="#3-6-示例" class="headerlink" title="3.6 示例"></a>3.6 示例</h2><h3 id="3-6-1-创建Linux账号"><a href="#3-6-1-创建Linux账号" class="headerlink" title="3.6.1 创建Linux账号"></a>3.6.1 创建Linux账号</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">useradd devuser</span><br><span class="line">passwd devuser</span><br><span class="line"></span><br><span class="line">su - devuser</span><br><span class="line">$ kubectl get pod   <span class="comment"># 无权限</span></span><br><span class="line">The connection to the server localhost:8080 was refused - did you specify the right host or port?</span><br></pre></td></tr></table></figure><h3 id="3-6-2-安装证书工具"><a href="#3-6-2-安装证书工具" class="headerlink" title="3.6.2 安装证书工具"></a>3.6.2 安装证书工具</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载证书生成工具</span></span><br><span class="line">$ wget https://pkg.cfssl.org/R1.2/cfssl_linux-amd64</span><br><span class="line">$ wget https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64 </span><br><span class="line">$ wget https://pkg.cfssl.org/R1.2/cfssl-certinfo_linux-amd64 </span><br><span class="line">$ chmod +x cfssl*</span><br><span class="line">$ mv cfssl_linux-amd64 /usr/<span class="built_in">local</span>/bin/cfssl </span><br><span class="line">$ mv cfssljson_linux-amd64 /usr/<span class="built_in">local</span>/bin/cfssljson</span><br><span class="line">$ mv cfssl-certinfo_linux-amd64 /usr/<span class="built_in">local</span>/bin/cfssl-certinfo</span><br></pre></td></tr></table></figure><h3 id="3-6-3-生成证书"><a href="#3-6-3-生成证书" class="headerlink" title="3.6.3 生成证书"></a>3.6.3 生成证书</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir -p ~/cert/devuser</span><br><span class="line"></span><br><span class="line"><span class="comment"># 证书请求文件</span></span><br><span class="line">$ cat &gt; ~/cert/devuser/user-csr.json &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  &quot;CN&quot;: &quot;devuser&quot;, </span></span><br><span class="line"><span class="string">  &quot;hosts&quot;: [],</span></span><br><span class="line"><span class="string">  &quot;key&quot;: &#123;</span></span><br><span class="line"><span class="string">    &quot;algo&quot;: &quot;rsa&quot;,</span></span><br><span class="line"><span class="string">    &quot;size&quot;: 2048</span></span><br><span class="line"><span class="string">  &#125;,</span></span><br><span class="line"><span class="string">  &quot;names&quot;: [</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">      &quot;C&quot;: &quot;CN&quot;,</span></span><br><span class="line"><span class="string">      &quot;ST&quot;: &quot;JS&quot;,</span></span><br><span class="line"><span class="string">      &quot;L&quot;: &quot;NJ&quot;,</span></span><br><span class="line"><span class="string">      &quot;O&quot;: &quot;k8s&quot;,</span></span><br><span class="line"><span class="string">      &quot;OU&quot;: &quot;Sytem&quot;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  ]</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成证书</span></span><br><span class="line">$ <span class="built_in">cd</span> /etc/kubernetes/pki</span><br><span class="line">$ cfssl gencert -ca=ca.crt -ca-key=ca.key -profile=kubernetes ~/cert/devuser/user-csr.json | cfssljson -bare devuser</span><br></pre></td></tr></table></figure><h3 id="3-6-4-设置集群参数"><a href="#3-6-4-设置集群参数" class="headerlink" title="3.6.4 设置集群参数"></a>3.6.4 设置集群参数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置集群参数</span></span><br><span class="line"><span class="built_in">cd</span> ~/cert/devuser</span><br><span class="line"><span class="built_in">export</span> KUBE_APISERVER=<span class="string">&quot;https://192.168.31.40:6443&quot;</span></span><br><span class="line"></span><br><span class="line">kubectl config set-cluster kubernetes \</span><br><span class="line">--certificate-authority=/etc/kubernetes/pki/ca.crt \</span><br><span class="line">--embed-certs=<span class="literal">true</span> \</span><br><span class="line">--server=<span class="variable">$&#123;KUBE_APISERVER&#125;</span> \</span><br><span class="line">--kubeconfig=devuser.kubeconfig</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置客户端认证参数</span></span><br><span class="line">kubectl config set-credentials devuser \</span><br><span class="line">--client-certificate=/etc/kubernetes/pki/devuser.pem \</span><br><span class="line">--client-key=/etc/kubernetes/pki/devuser-key.pem \</span><br><span class="line">--embed-certs=<span class="literal">true</span> \</span><br><span class="line">--kubeconfig=devuser.kubeconfig</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置上下文</span></span><br><span class="line">kubectl config set-context kubernetes \</span><br><span class="line">--cluster=kubernetes \</span><br><span class="line">--user=devuser \</span><br><span class="line">--namespace=dev \</span><br><span class="line">--kubeconfig=devuser.kubeconfig</span><br></pre></td></tr></table></figure><h3 id="3-6-5-角色绑定"><a href="#3-6-5-角色绑定" class="headerlink" title="3.6.5 角色绑定"></a>3.6.5 角色绑定</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rolebinding</span></span><br><span class="line">kubectl create ns dev</span><br><span class="line">kubectl create rolebinding devuser-admin-binding --clusterrole=admin --user=devuser --namespace=dev</span><br></pre></td></tr></table></figure><h3 id="3-6-6-用户管理配置"><a href="#3-6-6-用户管理配置" class="headerlink" title="3.6.6 用户管理配置"></a>3.6.6 用户管理配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /home/devuser/.kube</span><br><span class="line">cp devuser.kubeconfig /home/devuser/.kube/config</span><br><span class="line">chown -R devuser:devuser /home/devuser/.kube</span><br></pre></td></tr></table></figure><h3 id="3-6-7-设置默认上下-和-验证"><a href="#3-6-7-设置默认上下-和-验证" class="headerlink" title="3.6.7 设置默认上下 和 验证"></a>3.6.7 设置默认上下 和 验证</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置默认上下文</span></span><br><span class="line">su - devuser</span><br><span class="line">$ kubectl config use-context kubernetes --kubeconfig=.kube/config</span><br><span class="line">Switched to context <span class="string">&quot;kubernetes&quot;</span>.</span><br><span class="line"></span><br><span class="line"><span class="comment"># devuser 用户下创建 pod</span></span><br><span class="line">$ kubectl get pod</span><br><span class="line">No resources found <span class="keyword">in</span> dev namespace.</span><br><span class="line"></span><br><span class="line">$  kubectl run nginx --image=hub.elihe.io/<span class="built_in">test</span>/nginx:v1</span><br><span class="line">pod/nginx created</span><br><span class="line"></span><br><span class="line">$ kubectl get pod</span><br><span class="line">NAME    READY   STATUS    RESTARTS   AGE</span><br><span class="line">nginx   1/1     Running   0          4s</span><br><span class="line"></span><br><span class="line">$ kubectl get pod -n default</span><br><span class="line">Error from server (Forbidden): pods is forbidden: User <span class="string">&quot;devuser&quot;</span> cannot list resource <span class="string">&quot;pods&quot;</span> <span class="keyword">in</span> API group <span class="string">&quot;&quot;</span> <span class="keyword">in</span> the namespace <span class="string">&quot;default&quot;</span></span><br></pre></td></tr></table></figure><h1 id="4-准入控制"><a href="#4-准入控制" class="headerlink" title="4. 准入控制"></a>4. 准入控制</h1><p>准入控制是 API Server 的插件集合，通过添加不同的插件，实现额外的准入控制规则</p><p>常见准入控制插件：</p><ul><li>NamespaceLifecycle: 防止在不存在的namespace上创建对象；防止删除系统预置的namespace；删除namespace时，连带删除它下面的所有资源</li><li>LimitRanger: 确保请求的资源不会超过资源所在Namespace的LimitRange的限制</li><li>ServiceAccount: 实现自动化添加SA</li><li>ResourceQuota: 确保请求的资源不会超过资源的ResourceQuota限制</li></ul>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes 集群调度</title>
      <link href="/2018/07/07/Kubernetes%20%E9%9B%86%E7%BE%A4%E8%B0%83%E5%BA%A6/"/>
      <url>/2018/07/07/Kubernetes%20%E9%9B%86%E7%BE%A4%E8%B0%83%E5%BA%A6/</url>
      
        <content type="html"><![CDATA[<h1 id="1-调度说明"><a href="#1-调度说明" class="headerlink" title="1. 调度说明"></a>1. 调度说明</h1><h2 id="1-1-简介"><a href="#1-1-简介" class="headerlink" title="1.1 简介"></a>1.1 简介</h2><p>Scheduler 是 K8S 的调度器，主要任务是把定义的 pod 分配到集群节点上。它主要考虑如下问题：</p><ul><li>公平： 如何确保每个节点都被分配资源</li><li>资源高利用率：集群所有资源最大化被使用</li><li>效率：调度性能要好，能够尽快地对大批量的 pod 完成调度工作</li><li>灵活：允许用户根据自己的需求控制调度的逻辑</li></ul><p>Scheduler 作为独立的进程允许，启动后会一直监听API Server，获取 <code>PodSpec.NodeName</code> 为空的pod，对每个 pod 都会创建一个 binding，表明该 pod 应该放到哪个节点上</p><span id="more"></span><h2 id="1-2-调度过程"><a href="#1-2-调度过程" class="headerlink" title="1.2 调度过程"></a>1.2 调度过程</h2><ul><li>首先，过滤掉不满足条件的节点，这个过程称为 predicate</li><li>其次，对通过的节点按优先级排序，这个是 priority</li><li>最后，从中选择优先级最高的节点。</li></ul><p><strong>总结：预选 + 优选</strong></p><p>Predicate 算法：</p><ul><li>PodFitsResources: 节点上剩余资源是否大于 pod 请求资源</li><li>PodFitsHost: 如果 pod 指定了NodeName，检查当前节点名称是否与之匹配</li><li>PodFitsHostPorts: pod 申请的port 是否已被占用</li><li>PodSelectorMatches: 过滤掉和 pod 指定的 label 不匹配的节点</li><li>NoDiskConflict: 已经 mount 的 volume和pod指定的 volume 不冲突，除非它们都是只读的</li></ul><p>如果在 predicate 过程中没有合适的节点，pod 会一直在 pending 状态，不断重试调度，直到有节点满足条件。多个节点同时满足条件，继续按 priorities 过程，按优先级大小排序</p><p>优先级选项：</p><ul><li>LeastRequestedPriority: 计算 CPU 和 Memory 的使用率来决定权重，使用率越低权重越高</li><li>BalancedResourceAllocation: CPU 和 Memory 的使用率接近，权重越高。通常和上一个一起使用</li><li>ImageLocalityPriority: 本地已下载镜像，镜像总大小越大，权重越高</li></ul><h2 id="1-3-自定义调度器"><a href="#1-3-自定义调度器" class="headerlink" title="1.3 自定义调度器"></a>1.3 自定义调度器</h2><p><code>spec.schedulername</code> 指定调度器名称</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">annotation-second-scheduler</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">multischeduler-example</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">schedulername:</span> <span class="string">my-scheduler</span></span><br><span class="line">  <span class="attr">conatiners:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">pod-with-second-annotation-container</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">gcr.io/google_containers/pause:2.0</span></span><br></pre></td></tr></table></figure><h1 id="2-调度亲和性"><a href="#2-调度亲和性" class="headerlink" title="2. 调度亲和性"></a>2. 调度亲和性</h1><h2 id="2-1-节点亲和性"><a href="#2-1-节点亲和性" class="headerlink" title="2.1 节点亲和性"></a>2.1 节点亲和性</h2><p>pod.spec.nodeAffinity:</p><ul><li>preferredDuringSchedulingIgnoredDuringExecution: 软策略</li><li>requiredDuringSchedulingIgnoredDuringExecution: 硬策略</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span> </span><br><span class="line">  <span class="attr">name:</span> <span class="string">node-affinity</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">node-affinity-pod</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">with-node-affinity</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">busybox</span></span><br><span class="line">    <span class="attr">command:</span> [<span class="string">&quot;/bin/sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;sleep 600&quot;</span>]</span><br><span class="line">  <span class="attr">affinity:</span></span><br><span class="line">    <span class="attr">nodeAffinity:</span></span><br><span class="line">      <span class="attr">requiredDuringSchedulingIgnoredDuringExecution:</span></span><br><span class="line">        <span class="attr">nodeSelectorTerms:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">matchExpressions:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">kubernetes.io/hostname</span></span><br><span class="line">            <span class="attr">operator:</span> <span class="string">NotIn</span></span><br><span class="line">            <span class="attr">values:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">k8s-node02</span></span><br><span class="line">      <span class="attr">preferredDuringSchedulingIgnoredDuringExecution:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">weight:</span> <span class="number">1</span></span><br><span class="line">        <span class="attr">preference:</span></span><br><span class="line">          <span class="attr">matchExpressions:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">source</span></span><br><span class="line">            <span class="attr">operator:</span> <span class="string">In</span></span><br><span class="line">            <span class="attr">values:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">k8s-node01</span></span><br></pre></td></tr></table></figure><h2 id="2-2-Pod-亲和性"><a href="#2-2-Pod-亲和性" class="headerlink" title="2.2 Pod 亲和性"></a>2.2 Pod 亲和性</h2><p>pod.spec.affinity.podAffinity/PodAntiAffinity:</p><ul><li>preferredDuringSchedulingIgnoredDuringExecution: 软策略</li><li>requiredDuringSchedulingIgnoredDuringExecution: 硬策略</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">pod-affinity</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">pod-3</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">pod-3</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">busybox</span></span><br><span class="line">    <span class="attr">command:</span> [<span class="string">&quot;/bin/sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;sleep 600&quot;</span>]</span><br><span class="line">  <span class="attr">affinity:</span></span><br><span class="line">    <span class="attr">podAffinity:</span></span><br><span class="line">      <span class="attr">requiredDuringSchedulingIgnoredDuringExecution:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">labelSelector:</span></span><br><span class="line">          <span class="attr">matchExpressions:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">app</span></span><br><span class="line">            <span class="attr">operator:</span> <span class="string">In</span></span><br><span class="line">            <span class="attr">values:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">pod-1</span></span><br><span class="line">        <span class="attr">topologyKey:</span> <span class="string">kubernetes.io/hostname</span></span><br><span class="line">    <span class="attr">podAntiAffinity:</span></span><br><span class="line">      <span class="attr">preferredDuringSchedulingIgnoredDuringExecution:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">weight:</span> <span class="number">1</span></span><br><span class="line">        <span class="attr">podAffinityTerm:</span></span><br><span class="line">          <span class="attr">labelSelector:</span></span><br><span class="line">            <span class="attr">matchExpressions:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">app</span></span><br><span class="line">              <span class="attr">operator:</span> <span class="string">In</span></span><br><span class="line">              <span class="attr">values:</span></span><br><span class="line">              <span class="bullet">-</span> <span class="string">pod-2</span></span><br><span class="line">          <span class="attr">topologyKey:</span> <span class="string">kubernetes.io/hostname</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get pod</span><br><span class="line">NAME            READY   STATUS    RESTARTS   AGE</span><br><span class="line">node-affinity   1/1     Running   0          9m22s</span><br><span class="line">pod-affinity    0/1     Pending   0          10s</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注意node-affinity必须是running的，否则即使修改了的label满足条件，pod-3也不会创建</span></span><br><span class="line">$ kubectl label pod node-affinity app=pod-1 --overwrite=<span class="literal">true</span></span><br><span class="line">pod/node-affinity labeled</span><br><span class="line"></span><br><span class="line">$ kubectl get pod --show-labels</span><br><span class="line">NAME            READY   STATUS    RESTARTS   AGE   LABELS</span><br><span class="line">node-affinity   1/1     Running   1          10m   app=pod-1</span><br><span class="line">pod-affinity    1/1     Running   0          95s   app=pod-3</span><br></pre></td></tr></table></figure><h2 id="2-3-亲和性-反亲和性策略对比"><a href="#2-3-亲和性-反亲和性策略对比" class="headerlink" title="2.3 亲和性/反亲和性策略对比"></a>2.3 亲和性/反亲和性策略对比</h2><table><thead><tr><th>调度策略</th><th>匹配标签</th><th>操作符</th><th>拓扑域支持</th><th>调度目标</th></tr></thead><tbody><tr><td>nodeAffinity</td><td>Node</td><td>In, NotIn, Exists, DoesNotExist, Gt, Lt</td><td>No</td><td>指定主机</td></tr><tr><td>podAffinity</td><td>Pod</td><td>In, NotIn, Exists, DoesNotExist</td><td>Yes</td><td>指定Pod在同一个拓扑域</td></tr><tr><td>podAntiAffinity</td><td>Pod</td><td>In, NotIn, Exists, DoesNotExist</td><td>Yes</td><td>指定Pod不在同一个拓扑域</td></tr></tbody></table><h1 id="3-污点-和-容忍"><a href="#3-污点-和-容忍" class="headerlink" title="3. 污点 和 容忍"></a>3. 污点 和 容忍</h1><ul><li><p>亲和性：Pod的一种偏好或硬性要求，它使 Pod 能被吸引到一类特定的节点</p></li><li><p>污点：与亲和性相反，它使节点能够排斥一类特定的Pod</p><ul><li><p>Taint：用来避免pod节点被分配到不合适的节点上</p></li><li><p>Toleration：表示pod可以(容忍)被分配到Taint节点上</p></li></ul></li></ul><h2 id="3-1-Taint"><a href="#3-1-Taint" class="headerlink" title="3.1 Taint"></a>3.1 Taint</h2><h3 id="3-1-1-污点的组成"><a href="#3-1-1-污点的组成" class="headerlink" title="3.1.1 污点的组成"></a>3.1.1 污点的组成</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">key</span>=value:effect</span><br></pre></td></tr></table></figure><p>其中value可以为空，effect描述污点的作用，当前支持如下三个选项：</p><ul><li>NoSchedule: 不会将Pod调度到具有该污点的Node上</li><li>PreferNoSchedule: 尽量避免将Pod调度到具有该污点的Node上</li><li>NoExecute: 不会将Pod调度到具有该污点的Node上，同时会将已存在的Pod驱逐出该Node</li></ul><h3 id="3-1-2-污点的设置，查看和去除"><a href="#3-1-2-污点的设置，查看和去除" class="headerlink" title="3.1.2 污点的设置，查看和去除"></a>3.1.2 污点的设置，查看和去除</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置污点</span></span><br><span class="line">$ kubectl taint nodes k8s-node01 kickoff=<span class="built_in">test</span>:NoSchedule</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看污点</span></span><br><span class="line">$ kubectl describe node k8s-node01  | grep -i taint</span><br><span class="line">Taints:             kickoff=<span class="built_in">test</span>:NoSchedule</span><br><span class="line"></span><br><span class="line"><span class="comment"># 去除污点</span></span><br><span class="line">$ kubectl taint nodes k8s-node01 kickoff=<span class="built_in">test</span>:NoSchedule-</span><br></pre></td></tr></table></figure><h2 id="3-2-Toleration"><a href="#3-2-Toleration" class="headerlink" title="3.2 Toleration"></a>3.2 Toleration</h2><p>pod.spec.tolerations</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">tolerations:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">key:</span> <span class="string">key1</span></span><br><span class="line">  <span class="attr">operator:</span> <span class="string">Equal</span></span><br><span class="line">  <span class="attr">value:</span> <span class="string">value1</span></span><br><span class="line">  <span class="attr">effect:</span> <span class="string">NoSchedule</span></span><br><span class="line">  <span class="attr">tolerationSeconds:</span> <span class="number">3600</span>  <span class="comment"># 驱离前保留时间</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">key:</span> <span class="string">key2</span></span><br><span class="line">  <span class="attr">operator:</span> <span class="string">Equal</span></span><br><span class="line">  <span class="attr">value:</span> <span class="string">value2</span></span><br><span class="line">  <span class="attr">effect:</span> <span class="string">NoExecute</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">key:</span> <span class="string">key3</span></span><br><span class="line">  <span class="attr">operator:</span> <span class="string">Exists</span></span><br><span class="line">  <span class="attr">effect:</span> <span class="string">NoSchedule</span></span><br></pre></td></tr></table></figure><ul><li>key, value, effect 要与 Node 上设置的taint一致</li><li>operator等于 Exists 时，忽略 value值</li><li>tolerationSeconds Pod被驱离前的保留时间</li></ul><ol><li>当不指定key时，容忍所有的污点key</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">tolerations:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">operator:</span> <span class="string">Exists</span></span><br></pre></td></tr></table></figure><ol start="2"><li>当不指定effect时，容忍所有的污点作用</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">tolerations:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">key:</span> <span class="string">key</span></span><br><span class="line">  <span class="attr">operator:</span> <span class="string">Exists</span></span><br></pre></td></tr></table></figure><ol start="3"><li>多个master节点，可去除默认污点</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 主节点默认设置污点</span></span><br><span class="line">$ kubectl describe node k8s-master | grep -i taint</span><br><span class="line">Taints:             node-role.kubernetes.io/master:NoSchedule</span><br><span class="line"></span><br><span class="line">$ kubectl taint nodes k8s-master node-role.kubernetes.io/master=:PreferNoSchedule</span><br></pre></td></tr></table></figure><h3 id="3-2-1-示例"><a href="#3-2-1-示例" class="headerlink" title="3.2.1 示例"></a>3.2.1 示例</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># taint-toleration.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span> </span><br><span class="line">  <span class="attr">name:</span> <span class="string">pod-1</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">pod-1</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">busybox</span></span><br><span class="line">    <span class="attr">command:</span> [<span class="string">&quot;/bin/sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;sleep 600&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">pod-2</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">pod-2</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">busybox</span></span><br><span class="line">    <span class="attr">command:</span> [<span class="string">&quot;/bin/sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;sleep 600&quot;</span>]</span><br><span class="line">  <span class="attr">tolerations:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">kickoff</span></span><br><span class="line">    <span class="attr">operator:</span> <span class="string">Equal</span></span><br><span class="line">    <span class="attr">value:</span> <span class="string">test</span></span><br><span class="line">    <span class="attr">effect:</span> <span class="string">NoSchedule</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 节点都打上污点标识</span></span><br><span class="line">$ kubectl taint nodes k8s-node01 kickoff=<span class="built_in">test</span>:NoSchedule</span><br><span class="line">$ kubectl taint nodes k8s-node02 kickoff=<span class="built_in">test</span>:NoSchedule</span><br><span class="line"></span><br><span class="line">$ kubectl create -f taint-toleration.yaml</span><br><span class="line"></span><br><span class="line">$ kubectl  get pod -o wide</span><br><span class="line">NAME    READY   STATUS    RESTARTS   AGE   IP            NODE         NOMINATED NODE   READINESS GATES</span><br><span class="line">pod-1   0/1     Pending   0          58s   &lt;none&gt;        &lt;none&gt;       &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod-2   1/1     Running   0          58s   10.244.2.55   k8s-node02   &lt;none&gt;           &lt;none&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 去除污点</span></span><br><span class="line">$ kubectl taint nodes k8s-node01 kickoff=<span class="built_in">test</span>:NoSchedule-</span><br><span class="line"></span><br><span class="line"><span class="comment"># 不再Pending</span></span><br><span class="line">$ kubectl  get pod -o wide</span><br><span class="line">NAME    READY   STATUS    RESTARTS   AGE   IP            NODE         NOMINATED NODE   READINESS GATES</span><br><span class="line">pod-1   1/1     Running   0          2m    10.244.1.40   k8s-node01   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod-2   1/1     Running   0          2m    10.244.2.55   k8s-node02   &lt;none&gt;           &lt;none&gt;</span><br></pre></td></tr></table></figure><h1 id="4-固定节点"><a href="#4-固定节点" class="headerlink" title="4. 固定节点"></a>4. 固定节点</h1><h2 id="4-1-指定节点名称"><a href="#4-1-指定节点名称" class="headerlink" title="4.1 指定节点名称"></a>4.1 指定节点名称</h2><p><code>pod.spec.nodeName</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span> </span><br><span class="line">  <span class="attr">name:</span> <span class="string">test-1</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">tools</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">tools</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">nodeName:</span> <span class="string">k8s-node01</span>  <span class="comment"># 指定节点名称</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">pod-1</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">busybox</span></span><br><span class="line">        <span class="attr">command:</span> [<span class="string">&quot;/bin/sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;sleep 600&quot;</span>]</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get pod -o wide</span><br><span class="line">NAME                      READY   STATUS    RESTARTS   AGE   IP            NODE         NOMINATED NODE   READINESS GATES</span><br><span class="line">test-1-5c889d444f-pp9td   1/1     Running   0          48s   10.244.1.41   k8s-node01   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">test-1-5c889d444f-rtk25   1/1     Running   0          48s   10.244.1.43   k8s-node01   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">test-1-5c889d444f-rv2fc   1/1     Running   0          48s   10.244.1.42   k8s-node01   &lt;none&gt;           &lt;none&gt;</span><br></pre></td></tr></table></figure><h2 id="4-2-指定节点选择器"><a href="#4-2-指定节点选择器" class="headerlink" title="4.2 指定节点选择器"></a>4.2 指定节点选择器</h2><p><code>pod.spec.nodeSelector</code>, 通过label-selector机制选择节点，由调度器调度策略匹配label，然后调度到目标节点</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span> </span><br><span class="line">  <span class="attr">name:</span> <span class="string">test-2</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">web</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">web</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">nodeSelector:</span>  <span class="comment"># 指定标签</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">backendNode1</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">web</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">busybox</span></span><br><span class="line">        <span class="attr">command:</span> [<span class="string">&quot;/bin/sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;sleep 600&quot;</span>]</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get pod -o wide</span><br><span class="line">NAME                      READY   STATUS    RESTARTS   AGE</span><br><span class="line">test-2-564fd7c7df-4jftd   0/1     Pending   0          3s      &lt;none&gt;        &lt;none&gt;       &lt;none&gt;           &lt;none&gt;</span><br><span class="line">test-2-564fd7c7df-tdwj7   0/1     Pending   0          3s      &lt;none&gt;        &lt;none&gt;       &lt;none&gt;           &lt;none&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 给node打标签</span></span><br><span class="line">$ kubectl label node k8s-node02 <span class="built_in">type</span>=backendNode1</span><br><span class="line">node/k8s-node02 labeled</span><br><span class="line"></span><br><span class="line">$ kubectl get pod -o wide</span><br><span class="line">NAME                      READY   STATUS    RESTARTS   AGE     IP            NODE         NOMINATED NODE   READINESS GATES</span><br><span class="line">test-2-564fd7c7df-4jftd   1/1     Running   0          3m24s   10.244.2.56   k8s-node02   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">test-2-564fd7c7df-tdwj7   1/1     Running   0          3m24s   10.244.2.57   k8s-node02   &lt;none&gt;           &lt;none&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes 存储</title>
      <link href="/2018/07/06/Kubernetes%20%E5%AD%98%E5%82%A8/"/>
      <url>/2018/07/06/Kubernetes%20%E5%AD%98%E5%82%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="1-ConfigMap"><a href="#1-ConfigMap" class="headerlink" title="1. ConfigMap"></a>1. ConfigMap</h1><p>提供向容器注入配置信息的机制，可以用来保存单个属性，也可以用来保存整个配置文化或 JSON 二进制大对象</p><h2 id="1-1-创建-ConfigMap"><a href="#1-1-创建-ConfigMap" class="headerlink" title="1.1 创建 ConfigMap"></a>1.1 创建 ConfigMap</h2><h3 id="1-1-1-文件"><a href="#1-1-1-文件" class="headerlink" title="1.1.1 文件"></a>1.1.1 文件</h3><p><code>--from-file</code>：指定文件或目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$ cat &gt; ./ui.properties &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">color=red</span></span><br><span class="line"><span class="string">background=cyan</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">$ kubectl create configmap ui-config --from-file=./ui.properties </span><br><span class="line"></span><br><span class="line">$ kubectl get cm ui-config -o yaml</span><br><span class="line">apiVersion: v1</span><br><span class="line">data:</span><br><span class="line">  ui.properties: |    <span class="comment"># key 为文件名称</span></span><br><span class="line">    color=red</span><br><span class="line">    background=cyan</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  ...</span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="1-1-2-字面值"><a href="#1-1-2-字面值" class="headerlink" title="1.1.2 字面值"></a>1.1.2 字面值</h3><p><code>--from-literal</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl create configmap special-config --from-literal=special.how=very --from-literal=special.type=charm</span><br><span class="line"></span><br><span class="line">$ kubectl describe cm special-config</span><br><span class="line"></span><br><span class="line">$ kubectl get cm special-config -o yaml</span><br><span class="line">apiVersion: v1</span><br><span class="line">data:</span><br><span class="line">  special.how: very</span><br><span class="line">  special.type: charm</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  ...</span><br></pre></td></tr></table></figure><h2 id="1-2-使用-ConfigMap"><a href="#1-2-使用-ConfigMap" class="headerlink" title="1.2 使用 ConfigMap"></a>1.2 使用 ConfigMap</h2><h3 id="1-2-1-使用-ConfigMap-代替环境变量"><a href="#1-2-1-使用-ConfigMap-代替环境变量" class="headerlink" title="1.2.1 使用 ConfigMap 代替环境变量"></a>1.2.1 使用 ConfigMap 代替环境变量</h3><p><code>spec.containers[].env[]</code></p><p><code>spec.containers[].envFrom[]</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># configmap-injection.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">special-config</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">special.how:</span> <span class="string">very</span></span><br><span class="line">  <span class="attr">special.type:</span> <span class="string">charm</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">env-config</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">log_level:</span> <span class="string">INFO</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">configmap-pod</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">cm-container</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">busybox</span></span><br><span class="line">    <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">    <span class="attr">command:</span> [<span class="string">&quot;/bin/sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;env&quot;</span>]</span><br><span class="line">    <span class="attr">env:</span> <span class="comment"># 按key导入</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">SPECIAL_LEVEL_KEY</span></span><br><span class="line">      <span class="attr">valueFrom:</span></span><br><span class="line">        <span class="attr">configMapKeyRef:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">special-config</span></span><br><span class="line">          <span class="attr">key:</span> <span class="string">special.how</span>       </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">SPECIAL_TYPE_KEY</span></span><br><span class="line">      <span class="attr">valueFrom:</span></span><br><span class="line">        <span class="attr">configMapKeyRef:</span>            </span><br><span class="line">          <span class="attr">name:</span> <span class="string">special-config</span></span><br><span class="line">          <span class="attr">key:</span> <span class="string">special.type</span> </span><br><span class="line">    <span class="attr">envFrom:</span> <span class="comment"># 全部导入</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">configMapRef:</span>        </span><br><span class="line">        <span class="attr">name:</span> <span class="string">env-config</span></span><br><span class="line">  <span class="attr">restartPolicy:</span> <span class="string">Never</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl create -f configmap-injection.yaml </span><br><span class="line"></span><br><span class="line">$ kubectl get pod</span><br><span class="line">NAME            READY   STATUS      RESTARTS   AGE</span><br><span class="line">configmap-pod   0/1     Completed   0          2m35s</span><br><span class="line"></span><br><span class="line">$ kubectl logs configmap-pod </span><br><span class="line">...</span><br><span class="line">SPECIAL_TYPE_KEY=charm    <span class="comment"># target</span></span><br><span class="line">SPECIAL_LEVEL_KEY=very    <span class="comment"># target</span></span><br><span class="line">log_level=INFO            <span class="comment"># target</span></span><br><span class="line">KUBERNETES_SERVICE_PORT_HTTPS=443</span><br><span class="line">KUBERNETES_PORT_443_TCP=tcp://10.96.0.1:443</span><br><span class="line">KUBERNETES_SERVICE_HOST=10.96.0.1</span><br></pre></td></tr></table></figure><h3 id="1-2-2-用-ConfigMap-设置命令行参数"><a href="#1-2-2-用-ConfigMap-设置命令行参数" class="headerlink" title="1.2.2 用 ConfigMap 设置命令行参数"></a>1.2.2 用 ConfigMap 设置命令行参数</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">configmap-pod</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">cm-container</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">busybox</span></span><br><span class="line">    <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">    <span class="attr">command:</span> [<span class="string">&quot;/bin/sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;echo $&#123;SPECIAL_LEVEL_KEY&#125; $&#123;SPECIAL_TYPE_KEY&#125; &quot;</span>]</span><br><span class="line">    <span class="attr">env:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">SPECIAL_LEVEL_KEY</span></span><br><span class="line">      <span class="attr">valueFrom:</span></span><br><span class="line">        <span class="attr">configMapKeyRef:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">special-config</span></span><br><span class="line">          <span class="attr">key:</span> <span class="string">special.how</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">SPECIAL_TYPE_KEY</span></span><br><span class="line">      <span class="attr">valueFrom:</span></span><br><span class="line">        <span class="attr">configMapKeyRef:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">special-config</span></span><br><span class="line">          <span class="attr">key:</span> <span class="string">special.type</span> </span><br><span class="line">  <span class="attr">restartPolicy:</span> <span class="string">Never</span></span><br></pre></td></tr></table></figure><h3 id="1-2-3-通过数据插件使用-ConfigMap"><a href="#1-2-3-通过数据插件使用-ConfigMap" class="headerlink" title="1.2.3 通过数据插件使用 ConfigMap"></a>1.2.3 通过数据插件使用 ConfigMap</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">configmap-pod</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">cm-container</span>      </span><br><span class="line">    <span class="attr">image:</span> <span class="string">busybox</span></span><br><span class="line">    <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">    <span class="attr">command:</span> [<span class="string">&quot;/bin/sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;sleep 300&quot;</span>]</span><br><span class="line">    <span class="attr">volumeMounts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">config-volume</span>          </span><br><span class="line">      <span class="attr">mountPath:</span> <span class="string">/etc/config</span></span><br><span class="line">  <span class="attr">volumes:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">config-volume</span></span><br><span class="line">    <span class="attr">configMap:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">special-config</span></span><br><span class="line">  <span class="attr">restartPolicy:</span> <span class="string">Never</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl <span class="built_in">exec</span> configmap-pod -it -- cat /etc/config/special.how</span><br><span class="line">very</span><br></pre></td></tr></table></figure><h3 id="1-2-4-ConfigMap-热更新"><a href="#1-2-4-ConfigMap-热更新" class="headerlink" title="1.2.4 ConfigMap 热更新"></a>1.2.4 ConfigMap 热更新</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># configmap-hot-update.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">log-config</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">log_level:</span> <span class="string">INFO</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">hub.elihe.io/test/nginx:v1</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">config-volume</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/etc/config</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">config-volume</span></span><br><span class="line">        <span class="attr">configMap:</span> </span><br><span class="line">          <span class="attr">name:</span> <span class="string">log-config</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl apply -f configmap-hot-update.yaml</span><br><span class="line"></span><br><span class="line">$ kubectl get pod</span><br><span class="line">NAME                     READY   STATUS      RESTARTS   AGE</span><br><span class="line">nginx-df47dc9cd-9mjnx   1/1     Running     0          82s</span><br><span class="line"></span><br><span class="line">$ kubectl <span class="built_in">exec</span> nginx-df47dc9cd-9mjnx -it -- cat /etc/config/log_level</span><br><span class="line">INFO</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改 ConfigMap</span></span><br><span class="line">$ kubectl edit configmap log-config</span><br><span class="line">apiVersion: v1</span><br><span class="line">data:</span><br><span class="line">  log_level: DEBUG</span><br><span class="line">kind: ConfigMap</span><br><span class="line"></span><br><span class="line"><span class="comment"># 30s 后再次查询</span></span><br><span class="line">$ kubectl <span class="built_in">exec</span> nginx-df47dc9cd-9mjnx -it -- cat /etc/config/log_level</span><br><span class="line">DEBUG</span><br><span class="line"></span><br><span class="line"><span class="comment"># 触发热更新, 会重新启动, 配置生效</span></span><br><span class="line">$ kubectl patch deployment nginx --patch <span class="string">&#x27;&#123;&quot;spec&quot;: &#123;&quot;template&quot;: &#123;&quot;metadata&quot;: &#123;&quot;annotations&quot;: &#123;&quot;version.config&quot;: &quot;20201014&quot;&#125;&#125;&#125;&#125;&#125;&#x27;</span></span><br></pre></td></tr></table></figure><h1 id="2-Secret"><a href="#2-Secret" class="headerlink" title="2. Secret"></a>2. Secret</h1><p>Secret 解决密码、token、密钥等敏感数据的配置问题，可以以Volume 或环境变量方式导入 Pod 中使用</p><p>Secret 类型有三种：</p><ul><li>Service Account: 用来访问 k8s api。由 k8s 自动创建，自动挂载到 Pod 的 <code>/run/secrets/kubernetes.io/serviceaccount</code> 目录下</li><li>Opaque: base64 编码格式的 Secret，用来存储密码、密钥等</li><li>kubernetes.io/dockerconfigjson: 用来存储私有 docker registry 的认证信息</li></ul><h2 id="2-1-Service-Account-SA"><a href="#2-1-Service-Account-SA" class="headerlink" title="2.1 Service Account (SA)"></a>2.1 Service Account (SA)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl <span class="built_in">exec</span> nginx-596675fccc-v8gfw -it -- ls /run/secrets/kubernetes.io/serviceaccount</span><br><span class="line">ca.crt  namespace  token</span><br></pre></td></tr></table></figure><h2 id="2-2-Opaque"><a href="#2-2-Opaque" class="headerlink" title="2.2 Opaque"></a>2.2 Opaque</h2><h3 id="2-2-1-创建"><a href="#2-2-1-创建" class="headerlink" title="2.2.1 创建"></a>2.2.1 创建</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> -n <span class="string">&quot;admin&quot;</span> | base64</span><br><span class="line">YWRtaW4=</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">echo</span> -n <span class="string">&quot;pass123&quot;</span> | base64</span><br><span class="line">cGFzczEyMw==</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># secret.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Secret</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">my-secret</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">Opaque</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">username:</span> <span class="string">YWRtaW4=</span></span><br><span class="line">  <span class="attr">password:</span> <span class="string">cGFzczEyMw==</span></span><br></pre></td></tr></table></figure><h3 id="2-2-2-使用-Secret"><a href="#2-2-2-使用-Secret" class="headerlink" title="2.2.2 使用 Secret"></a>2.2.2 使用 Secret</h3><ol><li>将 Secret 挂载到 Volume</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># secret-volume.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">secret-volume</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">secret-volume</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">volumes:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">secrets</span></span><br><span class="line">    <span class="attr">secret:</span></span><br><span class="line">      <span class="attr">secretName:</span> <span class="string">my-secret</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">db</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">hub.elihe.io/test/nginx:v1</span></span><br><span class="line">    <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">    <span class="attr">volumeMounts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">secrets</span></span><br><span class="line">      <span class="attr">mountPath:</span> <span class="string">&quot;/etc/secrets&quot;</span></span><br><span class="line">      <span class="attr">readOnly:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl create -f secret-volume.yaml </span><br><span class="line"></span><br><span class="line">$ kubectl get pod</span><br><span class="line">NAME            READY   STATUS    RESTARTS   AGE</span><br><span class="line">secret-volume   1/1     Running   0          8s</span><br><span class="line"></span><br><span class="line">$ kubectl <span class="built_in">exec</span> secret-volume -it -- ls /etc/secrets</span><br><span class="line">password  username</span><br><span class="line"></span><br><span class="line"><span class="comment"># 容器内自动解密</span></span><br><span class="line">$ kubectl <span class="built_in">exec</span> secret-volume -it -- cat /etc/secrets/password</span><br><span class="line">pass123</span><br></pre></td></tr></table></figure><ol start="2"><li>将 Secret 导入环境变量</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># secret-env.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">secret-env</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">secret-pod</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">secret-pod</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">hub.elihe.io/test/nginx:v1</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">TEST_USER</span></span><br><span class="line">          <span class="attr">valueFrom:</span></span><br><span class="line">            <span class="attr">secretKeyRef:</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">my-secret</span></span><br><span class="line">              <span class="attr">key:</span> <span class="string">username</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">TEST_PASSWORD</span></span><br><span class="line">          <span class="attr">valueFrom:</span></span><br><span class="line">            <span class="attr">secretKeyRef:</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">my-secret</span></span><br><span class="line">              <span class="attr">key:</span> <span class="string">password</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl apply -f secret-env.yaml </span><br><span class="line"></span><br><span class="line">$ kubectl get pod</span><br><span class="line">NAME                          READY   STATUS    RESTARTS   AGE</span><br><span class="line">secret-env-6f5785997f-2w7dj   1/1     Running   0          8s</span><br><span class="line">secret-env-6f5785997f-khzjz   1/1     Running   0          8s</span><br><span class="line"></span><br><span class="line">$ kubectl <span class="built_in">exec</span> secret-env-6f5785997f-2w7dj -it -- env | grep TEST</span><br><span class="line">TEST_USER=admin</span><br><span class="line">TEST_PASSWORD=pass123</span><br></pre></td></tr></table></figure><h2 id="2-3-kubernetes-io-dockerconfigjson"><a href="#2-3-kubernetes-io-dockerconfigjson" class="headerlink" title="2.3 kubernetes.io/dockerconfigjson"></a>2.3 kubernetes.io/dockerconfigjson</h2><p>创建 docker register 认证</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl create secret docker-register myregisterkey --docker-server=hub.elihe.io --docker-username=admin --docker-password=Harbor12345 --docker-email=eli.he@live.cn</span><br></pre></td></tr></table></figure><p>创建 Pod 时，用 <code>imagePullSecrets</code> 来引用刚创建的 myregisterkey</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">hub.elihe.io/test/nginx:v1</span></span><br><span class="line">  <span class="attr">imagePullSecrets:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">myregisterkey</span></span><br></pre></td></tr></table></figure><h1 id="3-Volume"><a href="#3-Volume" class="headerlink" title="3. Volume"></a>3. Volume</h1><p>volume 解决问题：</p><ol><li>容器磁盘上的新增文件，容器重启后将消失，无法持久化</li><li>Pod中运行的多个容器需求共享文件</li></ol><p>当 Pod 中的容器重启时，volume 数据还在。但是当 Pod 不存在时，volume 也将不复存在。</p><p>Volume 支持的类型：</p><ul><li><code>awsElasticBlockStore</code>, <code>azureDisk</code>, <code>azureFile</code>, <code>cephfs</code>, <code>csi</code>, <code>downwardAPI</code>, <code>emptyDir</code></li><li><code>fc</code>, <code>flocker</code>, <code>gcePersistentDisk</code>, <code>gitRepo</code>, <code>glusterfs</code>, <code>hostPath</code>, <code>iscsi</code>, <code>local</code>, <code>nfs</code></li><li><code>persistentVolumeClaim</code>, <code>projected</code>, <code>portworxVolume</code>, <code>quobyte</code>, <code>rbd</code>, <code>scaleIO</code>, <code>secret</code></li><li><code>storageos</code> <code>vsphereVolume</code></li></ul><h2 id="3-1-emptyDir"><a href="#3-1-emptyDir" class="headerlink" title="3.1 emptyDir"></a>3.1 emptyDir</h2><p>创建 Pod 时，会自动创建 <code>emptyDir</code>  卷，它最初是空的，Pod 中的容器可以读取和写入 emptyDir 卷中的文件。当删除 Pod 时，emptyDir 中的数据将被永久删。容器崩溃不会导致 Pod 被删除，因此 emptyDir 卷中的数据在容器崩溃时是安全的。</p><p>emptyDir 用法：</p><ul><li>暂存空间，例如用于基于磁盘的合并排序</li><li>用于长时间计算崩溃恢复时的检查点</li><li>Web服务器容器提供数据时，保存内容管理容器提取的文件</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">vol-emptydir</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">c1</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">busybox</span></span><br><span class="line">    <span class="attr">command:</span> [<span class="string">&quot;/bin/sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;sleep 600&quot;</span>]</span><br><span class="line">    <span class="attr">volumeMounts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/cache</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">cache-volume</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">c2</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">busybox</span></span><br><span class="line">    <span class="attr">command:</span> [<span class="string">&quot;/bin/sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;sleep 600&quot;</span>]</span><br><span class="line">    <span class="attr">volumeMounts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/cache</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">cache-volume</span></span><br><span class="line">  <span class="attr">volumes:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">cache-volume</span></span><br><span class="line">    <span class="attr">emptyDir:</span> &#123;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl <span class="built_in">exec</span> vol-emptydir -c c1 -it -- touch /cache/now.txt</span><br><span class="line"></span><br><span class="line">$ kubectl <span class="built_in">exec</span> vol-emptydir -c c2 -it -- ls -l /cache/now.txt</span><br><span class="line">-rw-r--r--    1 root     root             0 Oct 14 01:34 /cache/now.txt</span><br></pre></td></tr></table></figure><h2 id="3-2-hostPath"><a href="#3-2-hostPath" class="headerlink" title="3.2 hostPath"></a>3.2 hostPath</h2><p>将主机节点的文件系统中的文件和目录挂载到集群中</p><p>hostPath 用途：</p><ul><li>运行需要访问 Docker 内部的容器，使用 <code>/var/lib/docker</code> 的 hostPath</li><li>在容器中运行 <code>cAdvisor</code>(猫头鹰，Google提供的一个服务)，使用 <code>/dev/cgroups</code> 的 hostPath</li></ul><p>hostPath 卷指定 <code>type</code>检查：</p><table><thead><tr><th>值</th><th>行为</th></tr></thead><tbody><tr><td></td><td>空字符串(默认)，向后兼容，在挂载hostPath 卷之前不会执行任何检查</td></tr><tr><td>DirectoryOrCreate</td><td>目录不存在自动创建，权限0755，与kubectl具有相同组和所有权</td></tr><tr><td>Directory</td><td>目录必须存在</td></tr><tr><td>FileOrCreate</td><td>文件不存在自动创建，权限0644，与kubectl具有相同组和所有权</td></tr><tr><td>File</td><td>文件必须存在</td></tr><tr><td>Socket</td><td>Unix 套接字必须存在</td></tr><tr><td>CharDevice</td><td>字符设备必须存在</td></tr><tr><td>BlockDevice</td><td>块设备必须存在</td></tr></tbody></table><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">vol-hostpath</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">c1</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">busybox</span></span><br><span class="line">    <span class="attr">command:</span> [<span class="string">&quot;/bin/sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;sleep 600&quot;</span>]</span><br><span class="line">    <span class="attr">volumeMounts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/data</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">data-volume</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">c2</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">busybox</span></span><br><span class="line">    <span class="attr">command:</span> [<span class="string">&quot;/bin/sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;sleep 600&quot;</span>]</span><br><span class="line">    <span class="attr">volumeMounts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/data</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">data-volume</span></span><br><span class="line">  <span class="attr">volumes:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">data-volume</span></span><br><span class="line">    <span class="attr">hostPath:</span></span><br><span class="line">      <span class="attr">path:</span> <span class="string">/data</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">Directory</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get pod -o wide</span><br><span class="line">NAME           READY   STATUS              RESTARTS   AGE   IP       NODE         NOMINATED NODE   READINESS GATES</span><br><span class="line">vol-hostpath   0/2     ContainerCreating   0          44s   &lt;none&gt;   k8s-node02   &lt;none&gt;           &lt;none&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># k8s-node02 上创建目录 /data</span></span><br><span class="line">$ mkdir /data</span><br><span class="line">$ date &gt; /data/abc.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看文件内容</span></span><br><span class="line">$ kubectl <span class="built_in">exec</span> vol-hostpath -c c1 -it -- cat /data/abc.txt</span><br><span class="line">Sat Sep 12 11:10:53 CST 2020</span><br></pre></td></tr></table></figure><h1 id="4-PV-amp-PVC"><a href="#4-PV-amp-PVC" class="headerlink" title="4. PV &amp; PVC"></a>4. PV &amp; PVC</h1><p>PV 作用：屏蔽后端不同存储类型之间，挂载方式不一致等特性差异</p><p>PVC: 寻找一个合适的PV进行绑定</p><h2 id="4-1-概念"><a href="#4-1-概念" class="headerlink" title="4.1 概念"></a>4.1 概念</h2><ul><li>PV: Persistent Volume。由管理员设置的存储，它是集群的一部分。就像节点是集群中的资源一样，PV 也是集群中的资源。PV 是 Volume 之类的卷插件，但具有独立于使用 PV 的 Pod 的生命周期之外。<ul><li>静态 PV：集群管理员创建一些 PV。它们带有可供集群用户使用的实际存储的细节。它们存储在 k8s api 中，可用于消费</li><li>动态 PV：当管理员创建的静态 PV 都不匹配用户的 PersistentVolumeClaim时，集群可能会尝试动态地为 PVC创建卷。此配置基于<code>StorageClasses</code>: PVC必须请求（存储类），并且管理员必须创建并配置该类才能够尽兴动态创建。声明该类为 “” 可有效地禁用其动态配置</li></ul></li><li>PVC: PersistentVolumeClaim。是用户存储的请求。它与Pod 类似。Pod 消耗节点资源，PVC 消耗 PV 资源。Pod 可以请求特定级别的资源(CPU &amp; Memory)。PVC 可以请求特定的大小和访问模式（例如，可以以读/写一次或只读多次模式挂载)</li></ul><h3 id="4-1-1-绑定"><a href="#4-1-1-绑定" class="headerlink" title="4.1.1 绑定"></a>4.1.1 绑定</h3><p>mater 中的控制环路监视新的 PVC，寻找匹配的PV（如果可能），并将它们绑定在一起。如果为新的PVC动态调配PV，则该环路将始终将该PV绑定到PVC。否则，用户总会得到他们所请求的存储，但容器可能会超出要求的数量。一旦PV和PVC绑定后，PVC绑定是排他性的，不管它们是如何绑定的，PVC和PV绑定是一一映射的</p><h3 id="4-1-2-持久化卷声明的保护"><a href="#4-1-2-持久化卷声明的保护" class="headerlink" title="4.1.2 持久化卷声明的保护"></a>4.1.2 持久化卷声明的保护</h3><p>PVC 保护的目的是确保 pod 正在使用的 PVC 不会从系统中移除，因为如果被移除的话，可能导致数据丢失。</p><p>当 Pod 状态为 Pending 或 Running 时，PVC 处于活动状态</p><p>当启用 PVC 保护 alpha 功能时，如果用户删除一个 pod 正在使用的 PVC，该 PVC 不会被立即删除。PVC 的删除将被推迟，直到 PVC 不再被任何 Pod 使用</p><h3 id="4-1-3-持久化卷类型"><a href="#4-1-3-持久化卷类型" class="headerlink" title="4.1.3 持久化卷类型"></a>4.1.3 持久化卷类型</h3><ul><li>GCEPersistentDisk, AWSElasticBlockStore, AsureFile, AzureDisk, FC(Fibre Channel)</li><li>FlexVolume, Flocker, NFS, iSCSI, RBD(Ceph Block Device), CephFS</li><li>Cinder (OpenStack block storage), Glusterfs, VsphereVolume, QuoByte Volumes</li><li>HostPath, VMware Photon, Portworx Volumes, ScaleIO Volumes, StorageOS</li></ul><h3 id="4-1-4-PV-访问模式"><a href="#4-1-4-PV-访问模式" class="headerlink" title="4.1.4 PV 访问模式"></a>4.1.4 PV 访问模式</h3><p>PV 可以以资源提供者支持的任何方式挂载在主机上。</p><ul><li>ReadWriteOnce: 单节点读写模式，RWO</li><li>ReadOnlyMany: 多节点只读模式，ROX</li><li>ReadWriteMany: 多节点读写模式， RWX</li></ul><h3 id="4-1-5-回收策略"><a href="#4-1-5-回收策略" class="headerlink" title="4.1.5 回收策略"></a>4.1.5 回收策略</h3><ul><li>Retain: 保留，需手动回收</li><li>Recycle: 基本擦除 （rm -rf /thevolume/*），新版k8s已不支持</li><li>Delete: 关联的存储资产将被删除</li></ul><p>只有 NFS和HostPath 支持 Recycle 策略</p><p>AWS EBS、GCE PD、Azure Disk 和 Cinder 卷 支持 Delete 策略</p><h3 id="4-1-6-状态"><a href="#4-1-6-状态" class="headerlink" title="4.1.6 状态"></a>4.1.6 状态</h3><ul><li>Available: 空闲资源，还未被绑定</li><li>Bound: 已绑定</li><li>Released: 解除绑定，但未被集群重新声明</li><li>Failed: 自动回收失败</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolume</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">pv-1</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">capacity:</span></span><br><span class="line">    <span class="attr">storage:</span> <span class="string">2Gi</span></span><br><span class="line">  <span class="attr">volumeMode:</span> <span class="string">Filesystem</span></span><br><span class="line">  <span class="attr">accessModes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ReadWriteOnce</span>  <span class="comment"># 同时只允许一个用户读写操作</span></span><br><span class="line">  <span class="attr">persistentVolumeReclaimPolicy:</span> <span class="string">Recycle</span></span><br><span class="line">  <span class="attr">storageClassName:</span> <span class="string">slow</span></span><br><span class="line">  <span class="attr">mountOptions:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">hard</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">nfsserevr=4.1</span></span><br><span class="line">  <span class="attr">nfs:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/tmp</span></span><br><span class="line">    <span class="attr">server:</span> <span class="number">192.168</span><span class="number">.31</span><span class="number">.200</span></span><br></pre></td></tr></table></figure><h2 id="4-2-持久化演示-NFS"><a href="#4-2-持久化演示-NFS" class="headerlink" title="4.2 持久化演示 NFS"></a>4.2 持久化演示 NFS</h2><h3 id="4-2-1-安装-NFS-服务器"><a href="#4-2-1-安装-NFS-服务器" class="headerlink" title="4.2.1 安装 NFS 服务器"></a>4.2.1 安装 NFS 服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">yum install -y nfs-common nfs-utils rpcbind</span><br><span class="line">mkdir /nfs</span><br><span class="line">chmod 666 /nfs</span><br><span class="line">chown nfsnobody /nfs</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;/nfs *(rw, no_root_squash,no_all_squash,sync)&#x27;</span> &gt; /etc/exports</span><br><span class="line"></span><br><span class="line">systemctl start rpcbind</span><br><span class="line">systemctl start nfs</span><br><span class="line">exportfs -rv</span><br><span class="line"></span><br><span class="line"><span class="comment"># 客户端安装</span></span><br><span class="line">yum install -y nfs-utils rpcbind</span><br><span class="line">showmount -e 192.168.31.200</span><br><span class="line">mkdir /<span class="built_in">test</span></span><br><span class="line">mount -t nfs 192.168.31.200:/nfs /<span class="built_in">test</span></span><br></pre></td></tr></table></figure><h3 id="4-2-2-部署-PV"><a href="#4-2-2-部署-PV" class="headerlink" title="4.2.2 部署 PV"></a>4.2.2 部署 PV</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># pv.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolume</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nfspv1</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">capacity:</span></span><br><span class="line">    <span class="attr">storage:</span> <span class="string">1Gi</span></span><br><span class="line">  <span class="attr">accessModes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ReadWriteOnce</span></span><br><span class="line">  <span class="attr">persistentVolumeReclaimPolicy:</span> <span class="string">Retain</span></span><br><span class="line">  <span class="attr">storageClassName:</span> <span class="string">nfs</span></span><br><span class="line">  <span class="attr">nfs:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/nfs</span></span><br><span class="line">    <span class="attr">server:</span> <span class="number">192.168</span><span class="number">.31</span><span class="number">.200</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolume</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nfspv2</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">capacity:</span></span><br><span class="line">    <span class="attr">storage:</span> <span class="string">2Gi</span></span><br><span class="line">  <span class="attr">accessModes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ReadWriteOnce</span></span><br><span class="line">  <span class="attr">persistentVolumeReclaimPolicy:</span> <span class="string">Retain</span></span><br><span class="line">  <span class="attr">storageClassName:</span> <span class="string">nfs</span></span><br><span class="line">  <span class="attr">nfs:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/nfs2</span></span><br><span class="line">    <span class="attr">server:</span> <span class="number">192.168</span><span class="number">.31</span><span class="number">.200</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolume</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nfspv3</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">capacity:</span></span><br><span class="line">    <span class="attr">storage:</span> <span class="string">3Gi</span></span><br><span class="line">  <span class="attr">accessModes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ReadWriteOnce</span></span><br><span class="line">  <span class="attr">persistentVolumeReclaimPolicy:</span> <span class="string">Retain</span></span><br><span class="line">  <span class="attr">storageClassName:</span> <span class="string">nfs</span></span><br><span class="line">  <span class="attr">nfs:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/nfs3</span></span><br><span class="line">    <span class="attr">server:</span> <span class="number">192.168</span><span class="number">.31</span><span class="number">.200</span></span><br></pre></td></tr></table></figure><h3 id="4-2-3-创建服务并使用-PVC"><a href="#4-2-3-创建服务并使用-PVC" class="headerlink" title="4.2.3 创建服务并使用 PVC"></a>4.2.3 创建服务并使用 PVC</h3><p>StatefulSet 控制器，必须先要有一个无头服务</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># app.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">web</span></span><br><span class="line">  <span class="attr">clusterIP:</span> <span class="string">None</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">    </span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">StatefulSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">web</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">serviceName:</span> <span class="string">nginx</span> <span class="comment"># service 必须为无头服务</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">hub.elihe.io/test/nginx:v1</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">web</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">www</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/usr/share/nginx/html</span></span><br><span class="line">  <span class="attr">volumeClaimTemplates:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">www</span></span><br><span class="line">    <span class="attr">spec:</span>  <span class="comment"># 选择条件</span></span><br><span class="line">      <span class="attr">accessModes:</span> [ <span class="string">&quot;ReadWriteOnce&quot;</span> ]</span><br><span class="line">      <span class="attr">storageClassName:</span> <span class="string">nfs</span></span><br><span class="line">      <span class="attr">resources:</span></span><br><span class="line">        <span class="attr">requests:</span></span><br><span class="line">          <span class="attr">storage:</span> <span class="string">1Gi</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl apply -f pv.yaml</span><br><span class="line">$ kubectl apply -f app.yaml</span><br><span class="line"></span><br><span class="line">$ kubectl get pv</span><br><span class="line">NAME     CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS   CLAIM               STORAGECLASS   REASON   AGE</span><br><span class="line">nfspv1   1Gi        RWO            Retain           Bound    default/www-web-0   nfs                     5m23s</span><br><span class="line">nfspv2   2Gi        RWO            Retain           Bound    default/www-web-1   nfs                     5m23s</span><br><span class="line">nfspv3   3Gi        RWO            Retain           Bound    default/www-web-2   nfs                     5m23s</span><br><span class="line"></span><br><span class="line">$ kubectl get pvc</span><br><span class="line">NAME        STATUS   VOLUME   CAPACITY   ACCESS MODES   STORAGECLASS   AGE</span><br><span class="line">www-web-0   Bound    nfspv1   1Gi        RWO            nfs            2m53s</span><br><span class="line">www-web-1   Bound    nfspv2   2Gi        RWO            nfs            2m50s</span><br><span class="line">www-web-2   Bound    nfspv3   3Gi        RWO            nfs            2m45s</span><br><span class="line"></span><br><span class="line">$ kubectl get sts   <span class="comment"># statefulset</span></span><br><span class="line">NAME   READY   AGE</span><br><span class="line">web    3/3     3m11s</span><br><span class="line"></span><br><span class="line">$  kubectl get pod</span><br><span class="line">NAME    READY   STATUS    RESTARTS   AGE</span><br><span class="line">web-0   1/1     Running   0          3m29s</span><br><span class="line">web-1   1/1     Running   0          3m26s</span><br><span class="line">web-2   1/1     Running   0          3m21s</span><br><span class="line"></span><br><span class="line">$ kubectl get svc</span><br><span class="line">NAME         TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE</span><br><span class="line">kubernetes   ClusterIP   10.96.0.1    &lt;none&gt;        443/TCP   4d17h</span><br><span class="line">nginx        ClusterIP   None         &lt;none&gt;        80/TCP    49m</span><br></pre></td></tr></table></figure><p>StatefulSet 相关总结：</p><ul><li>Pod Name(网络标识)：<code>$(statefulset name)-(order)</code>。例如：web-0</li><li>DNS 域名：<code>$(podname).(headless server name)</code>  Pod 重建，IP改变，但域名不变。例如：web-0.nginx</li><li>域名FQDN：<code>$(service name).$(namespace).svc.cluster.local</code>, 其中”cluster.local”为集群的域名。例如：nginx.default.svc.cluster.local</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get pod -n kube-system -o wide | grep coredns</span><br><span class="line">coredns-66bff467f8-8lb4m             1/1     Running   4          21d   10.244.0.10     k8s-master   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">coredns-66bff467f8-nbzmn             1/1     Running   4          21d   10.244.0.11     k8s-master   &lt;none&gt;           &lt;none&gt;</span><br><span class="line"></span><br><span class="line">$ dig -t A nginx.default.svc.cluster.local. @10.244.0.10</span><br><span class="line">;; ANSWER SECTION:</span><br><span class="line">nginx.default.svc.cluster.local. 30 IN  A       10.244.2.53</span><br><span class="line">nginx.default.svc.cluster.local. 30 IN  A       10.244.1.36</span><br><span class="line">nginx.default.svc.cluster.local. 30 IN  A       10.244.2.54</span><br></pre></td></tr></table></figure><p>FQDN：(Fully Qualified Domain Name)全限定域名：同时带有主机名和域名的名称。（通过符号“.”）例如：主机名是bigserver,域名是mycompany.com,那么FQDN就是bigserver.mycompany.com</p><p>StatefulSet 启停顺序：</p><ul><li>有序部署：如果有多个Pod副本，它们会按顺序创建 0～N-1，并且只有当Pod处于Running和Ready状态，才会创建下一个Pod</li><li>有序删除：Pod被删除时，删除顺序从N-1～ 0</li><li>有序扩展：扩展时，也必须按顺序进行</li></ul><p>StatefulSet 使用场景：</p><ul><li>稳定的持久存储</li><li>稳定的网络标识，即Pod重新调度后，PodName 和 Hostname 不变</li><li>有序部署，有序扩展，具有 init containers 来实现</li><li>有序收缩</li></ul><p>pv资源释放：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl delete svc nginx</span><br><span class="line"></span><br><span class="line">$ kubectl delete sts --all</span><br><span class="line"></span><br><span class="line">$ kubectl get pvc</span><br><span class="line">NAME        STATUS   VOLUME   CAPACITY   ACCESS MODES   STORAGECLASS   AGE</span><br><span class="line">www-web-0   Bound    nfspv1   1Gi        RWO            nfs            39m</span><br><span class="line">www-web-1   Bound    nfspv2   2Gi        RWO            nfs            39m</span><br><span class="line">www-web-2   Bound    nfspv3   3Gi        RWO            nfs            39m</span><br><span class="line"></span><br><span class="line">$ kubectl delete pvc --all</span><br><span class="line">persistentvolumeclaim <span class="string">&quot;www-web-0&quot;</span> deleted</span><br><span class="line">persistentvolumeclaim <span class="string">&quot;www-web-1&quot;</span> deleted</span><br><span class="line">persistentvolumeclaim <span class="string">&quot;www-web-2&quot;</span> deleted</span><br><span class="line"></span><br><span class="line">$ kubectl get pv</span><br><span class="line">NAME     CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS     CLAIM               STORAGECLASS   REASON   AGE</span><br><span class="line">nfspv1   1Gi        RWO            Retain           Released   default/www-web-0   nfs                     41m</span><br><span class="line">nfspv2   2Gi        RWO            Retain           Released   default/www-web-1   nfs                     41m</span><br><span class="line">nfspv3   3Gi        RWO            Retain           Released   default/www-web-2   nfs                     41m</span><br><span class="line"></span><br><span class="line">$ kubectl edit pv nfspv1</span><br><span class="line">...</span><br><span class="line">spec:</span><br><span class="line">  accessModes:</span><br><span class="line">  - ReadWriteOnce</span><br><span class="line">  capacity:</span><br><span class="line">    storage: 1Gi</span><br><span class="line">  claimRef: <span class="comment"># 删除</span></span><br><span class="line">    apiVersion: v1</span><br><span class="line">    kind: PersistentVolumeClaim</span><br><span class="line">    name: www-web-0</span><br><span class="line">    namespace: default</span><br><span class="line">    resourceVersion: <span class="string">&quot;104634&quot;</span></span><br><span class="line">    uid: 57597e18-963d-4ce1-b1d9-880ac0ef3da0</span><br><span class="line">  nfs:</span><br><span class="line">    path: /nfs</span><br><span class="line">    server: 192.168.31.200</span><br><span class="line">  persistentVolumeReclaimPolicy: Retain</span><br><span class="line">  storageClassName: nfs</span><br><span class="line">  ...</span><br><span class="line"></span><br><span class="line">$ kubectl get pv</span><br><span class="line">NAME     CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS      CLAIM               STORAGECLASS   REASON   AGE</span><br><span class="line">nfspv1   1Gi        RWO            Retain           Available                       nfs                     46m</span><br><span class="line">nfspv2   2Gi        RWO            Retain           Released    default/www-web-1   nfs                     46m</span><br><span class="line">nfspv3   3Gi        RWO            Retain           Released    default/www-web-2   nfs                     46m</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes Service</title>
      <link href="/2018/07/05/Kubernetes%20Service/"/>
      <url>/2018/07/05/Kubernetes%20Service/</url>
      
        <content type="html"><![CDATA[<h1 id="1-Service-的概念"><a href="#1-Service-的概念" class="headerlink" title="1. Service 的概念"></a>1. Service 的概念</h1><p>SVC：服务发现</p><p>Service 定义了这样一种抽象：一个 Pod 的逻辑分组，一种可以访问它们的策略 – 通常称为微服务。这一组 Pod 能够被 Service 访问到，通常是通过 Label Selector</p><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/k8s/k8s_svc.png" alt="svc"></p><p>Service 能够提供负载均衡能力，但只提供了 4 层，而没有 7 层。当需要更多的匹配规则来转发请求时，不支持。</p><span id="more"></span><h1 id="2-Service-代理模式分类"><a href="#2-Service-代理模式分类" class="headerlink" title="2. Service 代理模式分类"></a>2. Service 代理模式分类</h1><h2 id="2-1-VIP-和-Service-代理"><a href="#2-1-VIP-和-Service-代理" class="headerlink" title="2.1 VIP 和 Service 代理"></a>2.1 VIP 和 Service 代理</h2><p><code>kube-proxy</code> 进程：负责为 Service 实现一种 VIP（虚拟IP）的形式，代理模式有如下三种：</p><ul><li><p>userspace：k8s v1.0</p></li><li><p>iptables: v1.1 加入，v1.2 默认</p></li><li><p>ipvs: v1.8 加入，v1.14 默认</p></li><li><p>Ingress API: v1.1 新增，支持 7 层服务</p></li></ul><p>为什么不使用 round-robin DNS?  dns 存在缓存，当有Pod节点故障时，无法自动处理</p><h3 id="2-1-1-userspace"><a href="#2-1-1-userspace" class="headerlink" title="2.1.1 userspace"></a>2.1.1 userspace</h3><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/k8s/k8s_proxy_userspace.png" alt="userspace"></p><h3 id="2-1-2-iptables"><a href="#2-1-2-iptables" class="headerlink" title="2.1.2 iptables"></a>2.1.2 iptables</h3><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/k8s/k8s_proxy_iptables.png" alt="userspace"></p><h3 id="2-1-3-ipvs"><a href="#2-1-3-ipvs" class="headerlink" title="2.1.3 ipvs"></a>2.1.3 ipvs</h3><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/k8s/k8s_proxy_ipvs.png" alt="userspace"></p><p>kube-proxy 监控 Service 和 Endpoints，调用 netlink 接口以相应地创建 ipvs 规则，并定期与 Service 和 Endpoints 对象同步 ipvs 规则，以确保 ipvs 状态与期望一致。访问服务时，流量将被重定向到其中一个后端 Pod</p><p>与 iptables 类似，ipvs 于 netfilter 的 hook 功能，但使用hash表作为底层数据结构并在内核空间中工作。这意味着 ipvs 可以快速地重定向流量，并且在同步代理规则时具有更好的性能。</p><p>ipvs 为负载均衡算法提供了更多选项：</p><ul><li>rr: 轮训调度</li><li>lc: 最小连接数</li><li>dh: 目标hash</li><li>sh: 源hash</li><li>sed: 最短期望延迟</li><li>nq: 不排队调度</li></ul><h1 id="3-Service-的类型"><a href="#3-Service-的类型" class="headerlink" title="3. Service 的类型"></a>3. Service 的类型</h1><ul><li>ClusterIp: 默认类型，自动分配一个仅 Cluster 内部可以访问的虚拟IP</li><li>NodePort: 在ClusterIp 基础上为 Service 在每台机器上绑定一个端口，这样就可以通过 <code>&lt;NodeIp&gt;:&lt;NodePort&gt;</code> 来访问服务</li><li>LoadBalancer: 在 NodePort 基础上，借助 Cloud Provider 创建一个外部负载均衡器，并将请求转发到 <code>&lt;NodeIp&gt;:&lt;NodePort&gt;</code></li><li>ExternalName: 把集群外部的服务引入集群内部，在集群内部直接使用。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/k8s/k8s_kube_proxy.png" alt="kube-proxy"></p><h2 id="3-1-ClusterIp"><a href="#3-1-ClusterIp" class="headerlink" title="3.1 ClusterIp"></a>3.1 ClusterIp</h2><p>ClusterIP 主要在每个 node 节点使用 iptables，将发向 ClusterIp 的流量转发至 kube-proxy，然后 kube-proxy 自己内部实现负载均衡算法，查询到该 Service 下对应 Pod 的地址和端口，进而将数据转发给对应的 Pod</p><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/k8s/k8s_cluster_ip.png" alt="clusterip"></p><p>工作原理：</p><ul><li>apiserver: 用户通过 kubectl 向 apiserver 下发创建 service 的命令，apiserver 接收到请求后，将数据存储到 etcd 中</li><li>kube-proxy: 该进程负载监控 Service 和 Pod 的变化 (etcd)，并将变化信息更新到本地 iptables中</li><li>iptables: 使用NAT 等技术，将 VIP 的流量转发至 Endpoint 中  </li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># myapp-deploy.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">myapp-deploy</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">selector:</span> </span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">myapp</span></span><br><span class="line">      <span class="attr">release:</span> <span class="string">stable</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">myapp</span></span><br><span class="line">        <span class="attr">release:</span> <span class="string">stable</span></span><br><span class="line">        <span class="attr">env:</span> <span class="string">test</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">myapp</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">hub.elihe.io/test/nginx:v1</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">          <span class="attr">containerPort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># myapp-service-clusterip.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">myapp</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ClusterIP</span></span><br><span class="line">  <span class="attr">selector:</span> <span class="comment"># 绑定Pod</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">myapp</span></span><br><span class="line">    <span class="attr">release:</span> <span class="string">stable</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><p>操作：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl apply -f myapp-deploy.yaml</span><br><span class="line">$ kubectl apply -f myapp-service-clusterip.yaml</span><br><span class="line"></span><br><span class="line">$ kubectl get pod -o wide</span><br><span class="line">NAME                            READY   STATUS    RESTARTS   AGE   IP            NODE         NOMINATED NODE   READINESS GATES</span><br><span class="line">myapp-deploy-7779c7f4bb-dv7zh   1/1     Running   0          24s   10.244.2.31   k8s-node02   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">myapp-deploy-7779c7f4bb-jc8dp   1/1     Running   0          24s   10.244.2.32   k8s-node02   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">myapp-deploy-7779c7f4bb-lx4kl   1/1     Running   0          24s   10.244.1.25   k8s-node01   &lt;none&gt;           &lt;none&gt;</span><br><span class="line"></span><br><span class="line">$ kubectl get svc</span><br><span class="line">NAME         TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)   AGE</span><br><span class="line">kubernetes   ClusterIP   10.96.0.1      &lt;none&gt;        443/TCP   20d</span><br><span class="line">myapp        ClusterIP   10.96.155.51   &lt;none&gt;        80/TCP    42s</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过 ClusterIp 访问</span></span><br><span class="line">$ curl 10.96.155.51</span><br><span class="line">Hello MyApp | Version: v1 | &lt;a href=<span class="string">&quot;hostname.html&quot;</span>&gt;Pod Name&lt;/a&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># ipvs转发</span></span><br><span class="line">$ ipvsadm -Ln</span><br><span class="line">IP Virtual Server version 1.2.1 (size=4096)</span><br><span class="line">Prot LocalAddress:Port Scheduler Flags</span><br><span class="line">  -&gt; RemoteAddress:Port           Forward Weight ActiveConn InActConn      </span><br><span class="line">TCP  10.96.155.51:80 rr</span><br><span class="line">  -&gt; 10.244.1.25:80               Masq    1      0          0         </span><br><span class="line">  -&gt; 10.244.2.31:80               Masq    1      0          0         </span><br><span class="line">  -&gt; 10.244.2.32:80               Masq    1      0          0   </span><br></pre></td></tr></table></figure><p><strong>Headless Service:</strong></p><p>当不需要负载均衡和独立Service Ip时，可以指定 <code>spec.clusterIP</code> 为 None来创建 Headless Service。这类 Service 并不会分配 Cluster IP，kube-proxy 也不会处理它们，而且平台也不会其对进行负载均衡和路由</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># myapp-service-clusterip-headless.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">myapp-headless</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ClusterIP</span></span><br><span class="line">  <span class="attr">selector:</span> </span><br><span class="line">    <span class="attr">app:</span> <span class="string">myapp</span></span><br><span class="line">    <span class="attr">release:</span> <span class="string">stable</span></span><br><span class="line">  <span class="attr">clusterIP:</span> <span class="string">None</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><p>操作：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl apply -f myapp-service-clusterip-headless.yaml</span><br><span class="line"></span><br><span class="line">$ kubectl get svc</span><br><span class="line">NAME             TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)   AGE</span><br><span class="line">myapp-headless   ClusterIP   None         &lt;none&gt;        80/TCP    31s</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取 DNS 地址信息</span></span><br><span class="line">$ kubectl get pod -n kube-system -o wide</span><br><span class="line">NAME                                 READY   STATUS    RESTARTS   AGE     IP              NODE         NOMINATED NODE   READINESS GATES</span><br><span class="line">coredns-66bff467f8-8lb4m             1/1     Running   2          20d   10.244.0.6      k8s-master   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">coredns-66bff467f8-nbzmn             1/1     Running   2          20d   10.244.0.7      k8s-master   &lt;none&gt;           &lt;none&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 dig 命令</span></span><br><span class="line">$ yum install -y bind-utils</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解析域名 i 记录</span></span><br><span class="line">$ dig -t A myapp-headless.default.svc.cluster.local. @10.244.0.6</span><br><span class="line"></span><br><span class="line">;; ANSWER SECTION:</span><br><span class="line">myapp-headless.default.svc.cluster.local. 30 IN A 10.244.2.32</span><br><span class="line">myapp-headless.default.svc.cluster.local. 30 IN A 10.244.2.31</span><br><span class="line">myapp-headless.default.svc.cluster.local. 30 IN A 10.244.1.25</span><br></pre></td></tr></table></figure><p>虽然没有svc，但依旧可以通过访问域名，路由到不同Pod上</p><h2 id="3-2-NodePort"><a href="#3-2-NodePort" class="headerlink" title="3.2 NodePort"></a>3.2 NodePort</h2><p>原理：在当前Node的物理机上暴露一个端口，外部可以通过IP:PORT 方式访问集群服务</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># myapp-service-nodeport.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">myapp</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span></span><br><span class="line">  <span class="attr">selector:</span> </span><br><span class="line">    <span class="attr">app:</span> <span class="string">myapp</span></span><br><span class="line">    <span class="attr">release:</span> <span class="string">stable</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><p>操作：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl apply -f myapp-service-nodeport.yaml</span><br><span class="line"></span><br><span class="line">$ kubectl get svc</span><br><span class="line">NAME         TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)        AGE</span><br><span class="line">myapp            NodePort    10.106.31.155   &lt;none&gt;        80:31205/TCP   6s</span><br><span class="line"></span><br><span class="line">$ curl 192.168.31.40:31205</span><br><span class="line"></span><br><span class="line"><span class="comment"># 访问流程</span></span><br><span class="line">$ ipvsadm -Ln</span><br><span class="line">TCP  192.168.31.40:31205 rr</span><br><span class="line">  -&gt; 10.244.1.26:80               Masq    1      0          0         </span><br><span class="line">  -&gt; 10.244.2.33:80               Masq    1      0          0         </span><br><span class="line">  -&gt; 10.244.2.34:80               Masq    1      0    </span><br></pre></td></tr></table></figure><h2 id="3-3-ExternalName"><a href="#3-3-ExternalName" class="headerlink" title="3.3 ExternalName"></a>3.3 ExternalName</h2><p>该类型的 Service 通过返回 CNAME 和 它的值，可将服务映射到 externalName 字段的内容。ExternalName没有 selector，也未指定任何端口和 Endpoint。相反，它为集群提供访问外部服务方式</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># myapp-service-external-name.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">my-service</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ExternalName</span></span><br><span class="line">  <span class="attr">externalName:</span> <span class="string">hub.elihe.io</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl apply -f myapp-service-external-name.yaml</span><br><span class="line"></span><br><span class="line">$ kubectl get svc</span><br><span class="line">NAME         TYPE           CLUSTER-IP       EXTERNAL-IP    PORT(S)        AGE</span><br><span class="line">my-service       ExternalName   &lt;none&gt;          hub.elihe.io   &lt;none&gt;         21s</span><br><span class="line"></span><br><span class="line">$  kubectl get pod -n kube-system -o wide</span><br><span class="line">NAME                                 READY   STATUS    RESTARTS   AGE   IP              NODE         NOMINATED NODE   READINESS GATES</span><br><span class="line">coredns-66bff467f8-8lb4m             1/1     Running   3          20d   10.244.0.8      k8s-master   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">coredns-66bff467f8-nbzmn             1/1     Running   3          20d   10.244.0.9      k8s-master   &lt;none&gt;           &lt;none&gt;</span><br><span class="line"></span><br><span class="line">$ dig -t A my-service.default.svc.cluster.local. @10.244.0.8</span><br><span class="line"></span><br><span class="line">;; ANSWER SECTION:</span><br><span class="line">my-service.default.svc.cluster.local. 30 IN CNAME hub.elihe.io.</span><br></pre></td></tr></table></figure><h1 id="4-Service-Ingress"><a href="#4-Service-Ingress" class="headerlink" title="4. Service Ingress"></a>4. Service Ingress</h1><p>ingress: 进入、入境</p><h2 id="4-1-Ingress-Nginx-部署"><a href="#4-1-Ingress-Nginx-部署" class="headerlink" title="4.1 Ingress-Nginx 部署"></a>4.1 Ingress-Nginx 部署</h2><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/k8s/ingress_nginx_1.png" alt="ingress-nginx"></p><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/k8s/ingress_nginx_2.png" alt="ingress-nginx"></p><p>部署：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">$ wget https://raw.githubusercontent.com/kubernetes/ingress-nginx/nginx-0.30.0/deploy/static/mandatory.yaml</span><br><span class="line"></span><br><span class="line">$ wget https://raw.githubusercontent.com/kubernetes/ingress-nginx/nginx-0.30.0/deploy/static/provider/baremetal/service-nodeport.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 手动下载包</span></span><br><span class="line">$ grep image mandatory.yaml </span><br><span class="line">image: quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.30.0</span><br><span class="line"></span><br><span class="line">$ docker pull quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.30.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导出</span></span><br><span class="line">$ docker save -o nginx-ingress.tar quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.30.0</span><br><span class="line">$ gzip nginx-ingress.tar</span><br><span class="line"></span><br><span class="line"><span class="comment"># 上次到每个节点，然后导入镜像</span></span><br><span class="line">$ gunzip nginx-ingress.tar.gz </span><br><span class="line">$ docker load -i nginx-ingress.tar </span><br><span class="line"></span><br><span class="line"><span class="comment"># 部署</span></span><br><span class="line">$ kubectl apply -f mandatory.yaml</span><br><span class="line">$ kubectl apply -f service-nodeport.yaml</span><br><span class="line"></span><br><span class="line">$ kubectl get deploy -n ingress-nginx</span><br><span class="line">NAME                       READY   UP-TO-DATE   AVAILABLE   AGE</span><br><span class="line">nginx-ingress-controller   1/1     1            1           5m26s</span><br><span class="line"></span><br><span class="line">$ kubectl get rs -n ingress-nginx</span><br><span class="line">NAME                                  DESIRED   CURRENT   READY   AGE</span><br><span class="line">nginx-ingress-controller-5bb8fb4bb6   1         1         1       6m10s</span><br><span class="line"></span><br><span class="line">$ kubectl get pod -n ingress-nginx</span><br><span class="line">NAME                                        READY   STATUS    RESTARTS   AGE</span><br><span class="line">nginx-ingress-controller-5bb8fb4bb6-6lnb4   1/1     Running   0          6m13s</span><br><span class="line"></span><br><span class="line">$ kubectl get svc -n ingress-nginx</span><br><span class="line">NAME            TYPE       CLUSTER-IP     EXTERNAL-IP   PORT(S)                      AGE</span><br><span class="line">ingress-nginx   NodePort   10.107.51.68   &lt;none&gt;        80:31319/TCP,443:32750/TCP   5m36s</span><br></pre></td></tr></table></figure><h2 id="4-2-Ingress-HTTP-代理访问"><a href="#4-2-Ingress-HTTP-代理访问" class="headerlink" title="4.2 Ingress HTTP 代理访问"></a>4.2 Ingress HTTP 代理访问</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ingress-http-1.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-app-1</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">selector:</span> </span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">nginx-1</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">nginx-1</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">nginx-1</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">hub.elihe.io/test/nginx:v1</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span>     </span><br><span class="line"><span class="meta">---          </span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-svc-1</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">nginx-1</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-1</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">www1.elihe.io</span></span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">        <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">serviceName:</span> <span class="string">nginx-svc-1</span></span><br><span class="line">          <span class="attr">servicePort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ingress-http-2.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-app-2</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">selector:</span> </span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">nginx-2</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">nginx-2</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">nginx-2</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">hub.elihe.io/test/nginx:v2</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span>     </span><br><span class="line"><span class="meta">---          </span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-svc-2</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">nginx-2</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-2</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">www2.elihe.io</span></span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">        <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">serviceName:</span> <span class="string">nginx-svc-2</span></span><br><span class="line">          <span class="attr">servicePort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><p>操作：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl apply -f ingress-http-1.yaml</span><br><span class="line">$ kubectl apply -f ingress-http-2.yaml </span><br><span class="line"></span><br><span class="line">$ kubectl get svc</span><br><span class="line">NAME         TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)   AGE</span><br><span class="line">nginx-svc-1   ClusterIP   10.109.205.227   &lt;none&gt;        80/TCP    32s</span><br><span class="line">nginx-svc-2   ClusterIP   10.108.96.68     &lt;none&gt;        80/TCP    29s</span><br><span class="line"></span><br><span class="line">$ curl 10.109.205.227</span><br><span class="line">Hello MyApp | Version: v1 | &lt;a href=<span class="string">&quot;hostname.html&quot;</span>&gt;Pod Name&lt;/a&gt;</span><br><span class="line"></span><br><span class="line">$ curl 10.108.96.68</span><br><span class="line">Hello MyApp | Version: v2  | &lt;a href=<span class="string">&quot;hostname.html&quot;</span>&gt;Pod Name&lt;/a&gt;</span><br><span class="line"></span><br><span class="line">$ kubectl get ingress</span><br><span class="line">NAME      CLASS    HOSTS           ADDRESS        PORTS   AGE</span><br><span class="line">nginx-1   &lt;none&gt;   www1.elihe.io   10.107.51.68   80      5m46s</span><br><span class="line">nginx-2   &lt;none&gt;   www2.elihe.io   10.107.51.68   80      116s</span><br><span class="line"></span><br><span class="line">$ kubectl get svc -n ingress-nginx</span><br><span class="line">NAME            TYPE       CLUSTER-IP      EXTERNAL-IP   PORT(S)                      AGE</span><br><span class="line">ingress-nginx   NodePort   10.107.51.68   &lt;none&gt;        80:31319/TCP,443:32750/TCP   37m</span><br><span class="line"></span><br><span class="line">$ kubectl get pod -n ingress-nginx</span><br><span class="line">NAME                                        READY   STATUS    RESTARTS   AGE</span><br><span class="line">nginx-ingress-controller-5bb8fb4bb6-6lnb4   1/1     Running   0          42m</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入 nginx-ingress-controller 容器, 查询 nginx 配置</span></span><br><span class="line">$ kubectl <span class="built_in">exec</span> nginx-ingress-controller-5bb8fb4bb6-6lnb4 -n ingress-nginx -it -- /bin/sh</span><br><span class="line">/etc/nginx $ cat nginx.conf</span><br><span class="line"></span><br><span class="line">$ curl http://www1.elihe.io:31319</span><br><span class="line">Hello MyApp | Version: v1 | &lt;a href=<span class="string">&quot;hostname.html&quot;</span>&gt;Pod Name&lt;/a&gt;</span><br><span class="line"></span><br><span class="line">$ curl http://www2.elihe.io:31319</span><br><span class="line">Hello MyApp | Version: v2 | &lt;a href=<span class="string">&quot;hostname.html&quot;</span>&gt;Pod Name&lt;/a&gt;</span><br></pre></td></tr></table></figure><h2 id="4-3-Ingress-HTTPS-代理访问"><a href="#4-3-Ingress-HTTPS-代理访问" class="headerlink" title="4.3 Ingress HTTPS 代理访问"></a>4.3 Ingress HTTPS 代理访问</h2><p>创建证书，以及cert存储方式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ openssl req -x509 -sha256 -nodes -days 365 -newkey rsa:2048 -keyout tls.key -out tls.crt -subj <span class="string">&quot;/CN=nginxsvc/O=nginxsvc&quot;</span></span><br><span class="line"></span><br><span class="line">$ kubectl create secret tls tls-secret --key tls.key --cert tls.crt</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ingress-https.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-app-3</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">selector:</span> </span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">nginx-3</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">nginx-3</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">nginx-3</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">hub.elihe.io/test/nginx:v3</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span>     </span><br><span class="line"><span class="meta">---          </span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-svc-3</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">nginx-3</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-https</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">tls:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">hosts:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">www3.elihe.io</span></span><br><span class="line">      <span class="attr">secretName:</span> <span class="string">tls-secret</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">www3.elihe.io</span></span><br><span class="line">      <span class="attr">http:</span></span><br><span class="line">        <span class="attr">paths:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">            <span class="attr">backend:</span></span><br><span class="line">              <span class="attr">serviceName:</span> <span class="string">nginx-svc-3</span></span><br><span class="line">              <span class="attr">servicePort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl apply -f ingress-https.yaml</span><br><span class="line"></span><br><span class="line">$ kubectl get ingress</span><br><span class="line">NAME         CLASS    HOSTS          ADDRESS   PORTS     AGE</span><br><span class="line">nginx-https   &lt;none&gt;   www3.elihe.io   10.107.51.68   80, 443   51s</span><br><span class="line"></span><br><span class="line">$ kubectl get svc -n ingress-nginx</span><br><span class="line">NAME            TYPE       CLUSTER-IP      EXTERNAL-IP   PORT(S)                      AGE</span><br><span class="line">ingress-nginx   NodePort   10.107.51.68   &lt;none&gt;        80:31319/TCP,443:32750/TCP   56m</span><br><span class="line"></span><br><span class="line">https://www.elihe.io:32750/</span><br></pre></td></tr></table></figure><h2 id="4-4-Nginx-进行-BasicAuth"><a href="#4-4-Nginx-进行-BasicAuth" class="headerlink" title="4.4 Nginx 进行 BasicAuth"></a>4.4 Nginx 进行 BasicAuth</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装apache</span></span><br><span class="line">yum install -y httpd</span><br><span class="line">htpasswd -c auth eli</span><br><span class="line">kubectl create secret generic basic-auth --from-file=auth</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ingress-http-basicauth.yaml </span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-basicauth</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">hub.elihe.io/test/nginx:v1</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-svc</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-basicauth</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">nginx.ingress.kubernetes.io/auth-type:</span> <span class="string">basic</span></span><br><span class="line">    <span class="attr">nginx.ingress.kubernetes.io/auth-secret:</span> <span class="string">basic-auth</span></span><br><span class="line">    <span class="attr">nginx.ingress.kubernetes.io/auth-realm:</span> <span class="string">&#x27;Authentication Required - eli&#x27;</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">auth.elihe.io</span></span><br><span class="line">      <span class="attr">http:</span></span><br><span class="line">        <span class="attr">paths:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">            <span class="attr">backend:</span></span><br><span class="line">              <span class="attr">serviceName:</span> <span class="string">nginx-svc</span></span><br><span class="line">              <span class="attr">servicePort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl apply -f ingress-http-basicauth.yaml </span><br><span class="line"></span><br><span class="line">$ kubectl get ingress</span><br><span class="line">NAME              CLASS    HOSTS           ADDRESS   PORTS   AGE</span><br><span class="line">nginx-basicauth   &lt;none&gt;   auth.elihe.io             80      15s</span><br><span class="line"></span><br><span class="line">$ kubectl get svc -n ingress-nginx</span><br><span class="line">NAME            TYPE       CLUSTER-IP     EXTERNAL-IP   PORT(S)                      AGE</span><br><span class="line">ingress-nginx   NodePort   10.107.51.68   &lt;none&gt;        80:31319/TCP,443:32750/TCP   71m</span><br><span class="line"></span><br><span class="line">http://auth.elihe.io:31319  <span class="comment"># 弹出验证窗口</span></span><br></pre></td></tr></table></figure><h2 id="4-5-Nginx-重写"><a href="#4-5-Nginx-重写" class="headerlink" title="4.5 Nginx 重写"></a>4.5 Nginx 重写</h2><table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>nginx.ingress.kubernetes.io/rewrite-target</td><td>String</td><td>重定向的目标URI</td></tr><tr><td>nginx.ingress.kubernetes.io/ssl-redirect</td><td>Boolean</td><td>仅支持https</td></tr><tr><td>nginx.ingress.kubernetes.io/force-ssl-redirect</td><td>Boolean</td><td>强制重定向至https</td></tr><tr><td>nginx.ingress.kubernetes.io/app-root</td><td>String</td><td>上下文 “/”</td></tr><tr><td>nginx.ingress.kubernetes.io/use-regex</td><td>Boolean</td><td>使用正则表达式</td></tr></tbody></table><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ingress-http-rewrite.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-rewrite</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">nginx.ingress.kubernetes.io/rewrite-target:</span> <span class="string">http://baidu.com</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">www1.elihe.io</span></span><br><span class="line">      <span class="attr">http:</span></span><br><span class="line">        <span class="attr">paths:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">            <span class="attr">backend:</span></span><br><span class="line">              <span class="attr">serviceName:</span> <span class="string">nginx-svc</span></span><br><span class="line">              <span class="attr">servicePort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl apply -f ingress-http-rewrite.yaml</span><br><span class="line"></span><br><span class="line">$ kubectl get ingress</span><br><span class="line">NAME              CLASS    HOSTS           ADDRESS        PORTS   AGE</span><br><span class="line">nginx-rewrite     &lt;none&gt;   www1.elihe.io   10.107.51.68   80      14s</span><br><span class="line"></span><br><span class="line">$ kubectl get svc -n ingress-nginx</span><br><span class="line">NAME            TYPE       CLUSTER-IP     EXTERNAL-IP   PORT(S)                      AGE</span><br><span class="line">ingress-nginx   NodePort   10.107.51.68   &lt;none&gt;        80:31319/TCP,443:32750/TCP   75m</span><br><span class="line"></span><br><span class="line">http://www1.elihe.io:31319  <span class="comment"># 重定向到百度</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes 资源控制器</title>
      <link href="/2018/07/04/Kubernetes%20%E8%B5%84%E6%BA%90%E6%8E%A7%E5%88%B6%E5%99%A8/"/>
      <url>/2018/07/04/Kubernetes%20%E8%B5%84%E6%BA%90%E6%8E%A7%E5%88%B6%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="1-控制器"><a href="#1-控制器" class="headerlink" title="1. 控制器"></a>1. 控制器</h1><p>自主式 Pod 和 控制器管理的 Pod：</p><ul><li>自主式Pod：Pod退出，不会被再次创建，因为无管理者（资源控制器）。</li><li>控制器管理的Pod： 在控制器的生命周期里，始终要维持 Pod 的副本数目</li></ul><p>K8S 中内建了很多 controller (控制器)，这些相当于一个状态机，用来控制Pod的具体状态和行为</p><h1 id="2-ReplicaSet"><a href="#2-ReplicaSet" class="headerlink" title="2. ReplicaSet"></a>2. ReplicaSet</h1><p>作用：维持Pod的副本数，用来确保容器应用的副本数量始终保持在用户定义的副本数，即如果有容器异常退出，会自动创建新的Pod来替代；而如果异常多出来的容器也会自动回收。RS 通过<code>selector标签</code>来认定哪些<code>pod</code>是属于它当前的，template 中的 labels 必须对应起来</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ReplicaSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">rs-nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">tier:</span> <span class="string">frontend</span></span><br><span class="line">  <span class="attr">template:</span>  <span class="comment"># pod模板</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">tier:</span> <span class="string">frontend</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">GET_HOSTS_FROM</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">dns</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get pod --show-labels</span><br><span class="line">rs-nginx-fqgmx                  1/1     Running   0          107s    tier=frontend</span><br><span class="line">rs-nginx-r8949                  1/1     Running   0          107s    tier=frontend</span><br><span class="line">rs-nginx-wstkr                  1/1     Running   0          107s    tier=frontend</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$ kubectl label pod rs-nginx-fqgmx tier=backend --overwrite=<span class="literal">true</span></span><br><span class="line">pod/rs-nginx-fqgmx labeled</span><br><span class="line"></span><br><span class="line">$ kubectl get pod --show-labels</span><br><span class="line">NAME             READY   STATUS    RESTARTS   AGE     LABELS</span><br><span class="line">rs-nginx-6lqps   1/1     Running   0          93s     tier=frontend</span><br><span class="line">rs-nginx-fqgmx   1/1     Running   0          4m46s   tier=backend   <span class="comment"># 不再受rs管理</span></span><br><span class="line">rs-nginx-r8949   1/1     Running   0          4m46s   tier=frontend</span><br><span class="line">rs-nginx-wstkr   1/1     Running   0          4m46s   tier=frontend</span><br></pre></td></tr></table></figure><h1 id="3-Deployment"><a href="#3-Deployment" class="headerlink" title="3 Deployment"></a>3 Deployment</h1><p>Deployment 为 Pod 和 ReplicaSet 提供一个声明式 (declarative) 方法，用来替代以前的 RC 来方便的管理应用，典型的应用场景包括：</p><ul><li>定义 Deployment 来创建 Pod 和 ReplicaSet</li><li>滚动升级和回滚应用 (创建一个新的RS，新RS中Pod增1，旧RS的Pod减1)</li><li>扩容和缩容</li><li>暂停和继续 Deployment</li></ul><blockquote><p>补充：命令式编程和声明式编程</p><ul><li>命令式编程：它侧重于如何实现程序，需要把程序的实现结果按照逻辑一步一步写下来</li><li>声明式编程：它侧重于定义想要什么，然后告诉计算机 / 引擎，让它帮你去实现。（SQL）</li></ul><p>声明式（Deployment）：apply优先</p><p>命令式（RS）：create优先</p></blockquote><p><strong>RS 与 Deployment的关联：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/kubernetes/k8s-deployment-scale-replicas.png" alt="rs"></p><p>部署一个简单的 Nginx 应用</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">deploy-nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">tier:</span> <span class="string">frontend</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">tier:</span> <span class="string">frontend</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get pod --show-labels</span><br><span class="line">NAME                            READY   STATUS    RESTARTS   AGE     LABELS</span><br><span class="line">deploy-nginx-864fc9c987-7kxx7   1/1     Running   0          25s     app=nginx,pod-template-hash=864fc9c987,tier=frontend</span><br><span class="line">deploy-nginx-864fc9c987-d6pxg   1/1     Running   0          25s     app=nginx,pod-template-hash=864fc9c987,tier=frontend</span><br><span class="line">deploy-nginx-864fc9c987-nkk4p   1/1     Running   0          25s     app=nginx,pod-template-hash=864fc9c987,tier=frontend</span><br><span class="line"></span><br><span class="line"><span class="comment"># 扩容</span></span><br><span class="line">$ kubectl scale deployment deploy-nginx --replicas=5</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新镜像, 会自动创建rs</span></span><br><span class="line">$ kubectl <span class="built_in">set</span> image deployment/deploy-nginx nginx=nginx:1.21.3</span><br><span class="line"></span><br><span class="line"><span class="comment"># 回滚</span></span><br><span class="line">$ kubectl rollout undo deployment/deploy-nginx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询回滚状态</span></span><br><span class="line">$ kubectl rollout status deployment/deploy-nginx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看历史版本 (创建时，加--record，会显示描述)</span></span><br><span class="line">$ kubectl rollout <span class="built_in">history</span> deployment/deploy-nginx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 回滚到某个历史版本</span></span><br><span class="line">$ kubectl rollout undo deployment/deploy-nginx --to-revision=2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 暂停更新</span></span><br><span class="line">$ kubectl rollout pause deployment/deploy-nginx</span><br></pre></td></tr></table></figure><p><strong>版本更新策略</strong>：默认25%替换</p><p><strong>清理历史版本</strong>：可以通过设置 <code>spec.revisionHistoryLimit</code> 来指定 Deployment 最多保留多少个 <code>revision</code> 历史记录。默认保留所有的revision，如果该项设置为0，Deployment将不能被回退</p><h1 id="4-DaemonSet"><a href="#4-DaemonSet" class="headerlink" title="4. DaemonSet"></a>4. DaemonSet</h1><p>确保每个没有被 tainted 的节点上,都运行一个 Pod 副本. 当有新节点加入集群时, 自动在该节点上新增一个 Pod 副本.当集群移除节点时, 该 Pod 也会被回收.</p><p>使用DaemonSet 的一些典型场景：</p><ul><li>运行集群存储 daemon，例如在每个Node上运行 <code>glusterd</code>, <code>ceph</code></li><li>在每个Node上运行日志收集 daemon，例如 <code>fluentd</code>, <code>logstash</code></li><li>在每个Node上运行监控 daemon, 例如 <code>Promethesus Node Exporter</code>, <code>collectd</code>, <code>Datalog</code>代理，<code>New Replic</code>代理，<code>Ganglia</code>, <code>gmond</code></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">DaemonSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ds-nginx</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">daemonset</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">ds</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">ds</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">nginx</span></span><br></pre></td></tr></table></figure><h1 id="5-Job"><a href="#5-Job" class="headerlink" title="5.  Job"></a>5.  Job</h1><p>Job 仅执行一次的任务，它确保批处理任务的一个或多个 Pod 成功结束。</p><p>特殊说明：</p><ul><li><code>spec.template</code> 格式同 Pod</li><li>RestartPolicy 仅支持 Never 或 OnFailure</li><li>单个Pod时，默认Pod成功运行后 Job 结束</li><li><code>.spec.completions</code> 标志 Job 结束需要运行的Pod个数，默认为1</li><li><code>.spec.parallelism</code> 标志并行运行的 Pod 个数，默认为1</li><li><code>.spec.activeDeadlineSeconds</code> 标志失败 Pod的重试最大时间，超过这个时间将不会再重试</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">batch/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Job</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">pi</span></span><br><span class="line"><span class="attr">spec:</span> </span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">pi</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">pi</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">perl</span></span><br><span class="line">        <span class="attr">command:</span> [<span class="string">&quot;perl&quot;</span>, <span class="string">&quot;-Mbignum-bpi&quot;</span>, <span class="string">&quot;-wle&quot;</span>, <span class="string">&quot;print bpi(2000)&quot;</span>]</span><br><span class="line">      <span class="attr">restartPolicy:</span> <span class="string">Never</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get job</span><br><span class="line">NAME   COMPLETIONS   DURATION   AGE</span><br><span class="line">pi     0/1           10s        10s</span><br><span class="line"></span><br><span class="line">$ kubectl get pod</span><br><span class="line">NAME       READY   STATUS              RESTARTS   AGE</span><br><span class="line">pi-779v9   0/1     ContainerCreating   0          14s</span><br><span class="line"></span><br><span class="line">$ kubectl describe pod pi-779v9</span><br></pre></td></tr></table></figure><h1 id="6-CronJob"><a href="#6-CronJob" class="headerlink" title="6. CronJob"></a>6. CronJob</h1><p>CornJob 管理基于时间的 Job，即：</p><ul><li>在给定时间点只执行一次</li><li>周期性地在给定时间点运行</li></ul><p>特殊说明：</p><ul><li><p><code>.spec.schedule</code>: 调度，必选字段，格式同Cron</p></li><li><p><code>spec.jobTemplate</code>: 格式同 Pod</p></li><li><p><code>.spec.startingDeadlineSeconds</code>: 启动Job的期限，可选字段。如果因为任何原因而错过了被调度的时间，那么错过了执行时间的Job被认为是失败的</p></li><li><p><code>.spec.concurrencyPolicy</code>: 并发策略，可选字段</p><ul><li><code>Allow</code>: 默认，允许并发运行 Job</li><li><code>Forbid</code>: 禁止并发Job，只能顺序执行</li><li><code>Replace</code>: 用新的Job替换当前正在运行的 Job</li></ul></li><li><p><code>.spec.suspend</code>: 挂起，可选字段，如果设置为true，后续所有执行都会被挂起。默认为fasle </p></li><li><p><code>.spec.successfulJobsHistoryLimit</code> 和 <code>.spec.failedJobsHistoryLimit</code>: 历史限制，可选字段。它们指定了可以保留多少完成和失败的Job。默认值为3和1。如果设置为0，相关类型的Job完成后，将不会保留 </p></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">batch/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">CronJob</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">hello</span></span><br><span class="line"><span class="attr">spec:</span> </span><br><span class="line">  <span class="attr">schedule:</span> <span class="string">&quot;*/1 * * * *&quot;</span></span><br><span class="line">  <span class="attr">jobTemplate:</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">template:</span></span><br><span class="line">        <span class="attr">spec:</span></span><br><span class="line">          <span class="attr">containers:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">hello</span></span><br><span class="line">            <span class="attr">image:</span> <span class="string">busybox</span></span><br><span class="line">            <span class="attr">args:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">/bin/sh</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">-c</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">date;</span> <span class="string">echo</span> <span class="string">Hello</span> <span class="string">from</span> <span class="string">the</span> <span class="string">Kubernetes</span> <span class="string">cluster</span></span><br><span class="line">          <span class="attr">restartPolicy:</span> <span class="string">OnFailure</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get cj</span><br><span class="line">NAME    SCHEDULE      SUSPEND   ACTIVE   LAST SCHEDULE   AGE</span><br><span class="line">hello   */1 * * * *   False     0        52s             2m24s</span><br><span class="line"></span><br><span class="line">$ kubectl get job</span><br><span class="line">NAME               COMPLETIONS   DURATION   AGE</span><br><span class="line">hello-1602576000   1/1           17s        49s</span><br><span class="line"></span><br><span class="line">$ kubectl get pod</span><br><span class="line">NAME                     READY   STATUS      RESTARTS   AGE</span><br><span class="line">hello-1602576000-r6mgh   0/1     Completed   0          52</span><br></pre></td></tr></table></figure><h1 id="7-StatefulSet-（有状态服务）"><a href="#7-StatefulSet-（有状态服务）" class="headerlink" title="7. StatefulSet （有状态服务）"></a>7. StatefulSet （有状态服务）</h1><p>StatefulSet 作为 Controller 为 Pod 提供的唯一标识，它可以确保部署和 scale 的顺序</p><p>StatefulSet 解决了有状态服务的问题，其应用场景包括：</p><ul><li>稳定的持久化存储，即 Pod 重新调度后，还能够访问到相同的持久化数据，基于PVC来实现</li><li>稳定的网络标识，即 Pod 重新调度后其 PodName 和 HostName 不变，基于 Headless Service （即没有Cluster IP的Service）来实现</li><li>有序部署、有序扩展，即Pod是有序的，在部署和扩展时，要按照定义的顺序依次进行 (即从 0 到N - 1, 在下一个Pod 运行前，所有 Pod 必须是 Running 和 Ready 状态)，基于 Init Containers 来实现</li><li>有序收缩、有序删除（即从 N-1 到 0）</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Storages</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span> </span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolume</span> </span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nfs-pv</span> </span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">capacity:</span></span><br><span class="line">    <span class="attr">storage:</span> <span class="string">5Gi</span> </span><br><span class="line">  <span class="attr">accessModes:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">ReadWriteOnce</span> </span><br><span class="line">  <span class="attr">persistentVolumeReclaimPolicy:</span> <span class="string">Retain</span></span><br><span class="line">  <span class="attr">nfs:</span></span><br><span class="line">   <span class="attr">path:</span> <span class="string">/nfsdata</span></span><br><span class="line">   <span class="attr">server:</span> <span class="number">192.168</span><span class="number">.80</span><span class="number">.240</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># MySQL configurations</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">mysql</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">mysql</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">master.cnf:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    # Apply this config only on the master.</span></span><br><span class="line"><span class="string">    [mysqld]</span></span><br><span class="line"><span class="string">    log-bin</span></span><br><span class="line"><span class="string">    default-time-zone=&#x27;+8:00&#x27;</span></span><br><span class="line"><span class="string">    character-set-client-handshake=FALSE</span></span><br><span class="line"><span class="string">    character-set-server=utf8mb4</span></span><br><span class="line"><span class="string">    collation-server=utf8mb4_unicode_ci</span></span><br><span class="line"><span class="string">    init_connect=&#x27;SET NAMES utf8mb4 COLLATE utf8mb4_unicode_ci&#x27;</span></span><br><span class="line"><span class="string"></span>  <span class="attr">slave.cnf:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    # Apply this config only on slaves.</span></span><br><span class="line"><span class="string">    [mysqld]</span></span><br><span class="line"><span class="string">    super-read-only</span></span><br><span class="line"><span class="string">    default-time-zone=&#x27;+8:00&#x27;</span></span><br><span class="line"><span class="string">    character-set-client-handshake=FALSE</span></span><br><span class="line"><span class="string">    character-set-server=utf8mb4</span></span><br><span class="line"><span class="string">    collation-server=utf8mb4_unicode_ci</span></span><br><span class="line"><span class="string">    init_connect=&#x27;SET NAMES utf8mb4 COLLATE utf8mb4_unicode_ci&#x27;</span></span><br><span class="line"><span class="string"></span>    </span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># Headless service for stable DNS entries of StatefulSet members.</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">mysql</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">mysql</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">mysql</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">3306</span></span><br><span class="line">  <span class="attr">clusterIP:</span> <span class="string">None</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">mysql</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># Client service for connecting to any MySQL instance for reads.</span></span><br><span class="line"><span class="comment"># For writes, you must instead connect to the master: mysql-0.mysql.</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">mysql-read</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">mysql</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">mysql</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">3306</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">mysql</span></span><br><span class="line">    </span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># Applications</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">StatefulSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">mysql</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">mysql</span></span><br><span class="line">  <span class="attr">serviceName:</span> <span class="string">mysql</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">mysql</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">initContainers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">init-mysql</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">mysql:5.7</span></span><br><span class="line">        <span class="attr">command:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">bash</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&quot;-c&quot;</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">|</span></span><br><span class="line"><span class="string">          set -ex</span></span><br><span class="line"><span class="string">          # Generate mysql server-id from pod ordinal index.</span></span><br><span class="line"><span class="string">          [[ `hostname` =~ -([0-9]+)$ ]] || exit 1</span></span><br><span class="line"><span class="string">          ordinal=$&#123;BASH_REMATCH[1]&#125;</span></span><br><span class="line"><span class="string">          echo [mysqld] &gt; /mnt/conf.d/server-id.cnf</span></span><br><span class="line"><span class="string">          # Add an offset to avoid reserved server-id=0 value.</span></span><br><span class="line"><span class="string">          echo server-id=$((100 + $ordinal)) &gt;&gt; /mnt/conf.d/server-id.cnf</span></span><br><span class="line"><span class="string">          # Copy appropriate conf.d files from config-map to emptyDir.</span></span><br><span class="line"><span class="string">          if [[ $ordinal -eq 0 ]]; then</span></span><br><span class="line"><span class="string">            cp /mnt/config-map/master.cnf /mnt/conf.d/</span></span><br><span class="line"><span class="string">          else</span></span><br><span class="line"><span class="string">            cp /mnt/config-map/slave.cnf /mnt/conf.d/</span></span><br><span class="line"><span class="string">          fi</span></span><br><span class="line"><span class="string"></span>        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">conf</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/mnt/conf.d/</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">config-map</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/mnt/config-map</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">clone-mysql</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">ipunktbs/xtrabackup</span></span><br><span class="line">        <span class="attr">command:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">bash</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&quot;-c&quot;</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">|</span></span><br><span class="line"><span class="string">          set -ex</span></span><br><span class="line"><span class="string">          # Skip the clone if data already exists.</span></span><br><span class="line"><span class="string">          [[ -d /var/lib/mysql/mysql ]] &amp;&amp; exit 0</span></span><br><span class="line"><span class="string">          # Skip the clone on master (ordinal index 0).</span></span><br><span class="line"><span class="string">          [[ `hostname` =~ -([0-9]+)$ ]] || exit 1</span></span><br><span class="line"><span class="string">          ordinal=$&#123;BASH_REMATCH[1]&#125;</span></span><br><span class="line"><span class="string">          [[ $ordinal -eq 0 ]] &amp;&amp; exit 0</span></span><br><span class="line"><span class="string">          # Clone data from previous peer.</span></span><br><span class="line"><span class="string">          ncat --recv-only mysql-$(($ordinal-1)).mysql 3307 | xbstream -x -C /var/lib/mysql</span></span><br><span class="line"><span class="string">          # Prepare the backup.</span></span><br><span class="line"><span class="string">          xtrabackup --prepare --target-dir=/var/lib/mysql</span></span><br><span class="line"><span class="string"></span>        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">data</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/var/lib/mysql</span></span><br><span class="line">          <span class="attr">subPath:</span> <span class="string">mysql</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">conf</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/etc/mysql/conf.d</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">mysql</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">mysql:5.7</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MYSQL_ALLOW_EMPTY_PASSWORD</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">mysql</span></span><br><span class="line">          <span class="attr">containerPort:</span> <span class="number">3306</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">data</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/var/lib/mysql</span></span><br><span class="line">          <span class="attr">subPath:</span> <span class="string">mysql</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">conf</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/etc/mysql/conf.d</span></span><br><span class="line">        <span class="attr">resources:</span></span><br><span class="line">          <span class="attr">requests:</span></span><br><span class="line">            <span class="attr">cpu:</span> <span class="string">500m</span></span><br><span class="line">            <span class="attr">memory:</span> <span class="string">512m</span></span><br><span class="line">        <span class="attr">livenessProbe:</span></span><br><span class="line">          <span class="attr">exec:</span></span><br><span class="line">            <span class="attr">command:</span> [<span class="string">&quot;mysqladmin&quot;</span>, <span class="string">&quot;ping&quot;</span>]</span><br><span class="line">          <span class="attr">initialDelaySeconds:</span> <span class="number">30</span></span><br><span class="line">          <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">          <span class="attr">timeoutSeconds:</span> <span class="number">5</span></span><br><span class="line">        <span class="attr">readinessProbe:</span></span><br><span class="line">          <span class="attr">exec:</span></span><br><span class="line">            <span class="comment"># Check we can execute queries over TCP (skip-networking is off).</span></span><br><span class="line">            <span class="attr">command:</span> [<span class="string">&quot;mysql&quot;</span>, <span class="string">&quot;-h&quot;</span>, <span class="string">&quot;127.0.0.1&quot;</span>, <span class="string">&quot;-e&quot;</span>, <span class="string">&quot;SELECT 1&quot;</span>]</span><br><span class="line">          <span class="attr">initialDelaySeconds:</span> <span class="number">5</span></span><br><span class="line">          <span class="attr">periodSeconds:</span> <span class="number">2</span></span><br><span class="line">          <span class="attr">timeoutSeconds:</span> <span class="number">1</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">xtrabackup</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">ipunktbs/xtrabackup</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">xtrabackup</span></span><br><span class="line">          <span class="attr">containerPort:</span> <span class="number">3307</span></span><br><span class="line">        <span class="attr">command:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">bash</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&quot;-c&quot;</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">|</span></span><br><span class="line"><span class="string">          set -ex</span></span><br><span class="line"><span class="string">          cd /var/lib/mysql</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">          <span class="comment"># Determine binlog position of cloned data, if any.</span></span><br><span class="line">          <span class="string">if</span> [[ <span class="string">-f</span> <span class="string">xtrabackup_slave_info</span> <span class="string">&amp;&amp;</span> <span class="string">&quot;x$(&lt;xtrabackup_slave_info)&quot;</span> <span class="type">!=</span> <span class="string">&quot;x&quot;</span> ]]<span class="string">;</span> <span class="string">then</span></span><br><span class="line">            <span class="comment"># XtraBackup already generated a partial &quot;CHANGE MASTER TO&quot; query</span></span><br><span class="line">            <span class="comment"># because we&#x27;re cloning from an existing slave. (Need to remove the tailing semicolon!)</span></span><br><span class="line">            <span class="string">cat</span> <span class="string">xtrabackup_slave_info</span> <span class="string">|</span> <span class="string">sed</span> <span class="string">-E</span> <span class="string">&#x27;s/;$//g&#x27;</span> <span class="string">&gt;</span> <span class="string">change_master_to.sql.in</span></span><br><span class="line">            <span class="comment"># Ignore xtrabackup_binlog_info in this case (it&#x27;s useless).</span></span><br><span class="line">            <span class="string">rm</span> <span class="string">-f</span> <span class="string">xtrabackup_slave_info</span> <span class="string">xtrabackup_binlog_info</span></span><br><span class="line">          <span class="string">elif</span> [[ <span class="string">-f</span> <span class="string">xtrabackup_binlog_info</span> ]]<span class="string">;</span> <span class="string">then</span></span><br><span class="line">            <span class="comment"># We&#x27;re cloning directly from master. Parse binlog position.</span></span><br><span class="line">            [[ <span class="string">`cat</span> <span class="string">xtrabackup_binlog_info`</span> <span class="string">=~</span> <span class="string">^(.*?)</span>[[<span class="string">:space:</span>]]<span class="string">+(.*?)$</span> ]] <span class="string">||</span> <span class="string">exit</span> <span class="number">1</span></span><br><span class="line">            <span class="string">rm</span> <span class="string">-f</span> <span class="string">xtrabackup_binlog_info</span> <span class="string">xtrabackup_slave_info</span></span><br><span class="line">            <span class="string">echo</span> <span class="string">&quot;CHANGE MASTER TO MASTER_LOG_FILE=&#x27;$&#123;BASH_REMATCH[1]&#125;&#x27;,\</span></span><br><span class="line"><span class="string">                  MASTER_LOG_POS=$&#123;BASH_REMATCH[2]&#125;&quot;</span> <span class="string">&gt;</span> <span class="string">change_master_to.sql.in</span></span><br><span class="line">          <span class="string">fi</span></span><br><span class="line"></span><br><span class="line">          <span class="comment"># Check if we need to complete a clone by starting replication.</span></span><br><span class="line">          <span class="string">if</span> [[ <span class="string">-f</span> <span class="string">change_master_to.sql.in</span> ]]<span class="string">;</span> <span class="string">then</span></span><br><span class="line">            <span class="string">echo</span> <span class="string">&quot;Waiting for mysqld to be ready (accepting connections)&quot;</span></span><br><span class="line">            <span class="string">until</span> <span class="string">mysql</span> <span class="string">-h</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> <span class="string">-e</span> <span class="string">&quot;SELECT 1&quot;</span><span class="string">;</span> <span class="string">do</span> <span class="string">sleep</span> <span class="number">1</span><span class="string">;</span> <span class="string">done</span></span><br><span class="line"></span><br><span class="line">            <span class="string">echo</span> <span class="string">&quot;Initializing replication from clone position&quot;</span></span><br><span class="line">            <span class="string">mysql</span> <span class="string">-h</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> <span class="string">\</span></span><br><span class="line">                  <span class="string">-e</span> <span class="string">&quot;$(&lt;change_master_to.sql.in), \</span></span><br><span class="line"><span class="string">                          MASTER_HOST=&#x27;mysql-0.mysql&#x27;, \</span></span><br><span class="line"><span class="string">                          MASTER_USER=&#x27;root&#x27;, \</span></span><br><span class="line"><span class="string">                          MASTER_PASSWORD=&#x27;&#x27;, \</span></span><br><span class="line"><span class="string">                          MASTER_CONNECT_RETRY=10; \</span></span><br><span class="line"><span class="string">                        START SLAVE;&quot;</span> <span class="string">||</span> <span class="string">exit</span> <span class="number">1</span></span><br><span class="line">            <span class="comment"># In case of container restart, attempt this at-most-once.</span></span><br><span class="line">            <span class="string">mv</span> <span class="string">change_master_to.sql.in</span> <span class="string">change_master_to.sql.orig</span></span><br><span class="line">          <span class="string">fi</span></span><br><span class="line"></span><br><span class="line">          <span class="comment"># Start a server to send backups when requested by peers.</span></span><br><span class="line">          <span class="string">exec</span> <span class="string">ncat</span> <span class="string">--listen</span> <span class="string">--keep-open</span> <span class="string">--send-only</span> <span class="string">--max-conns=1</span> <span class="number">3307</span> <span class="string">-c</span> <span class="string">\</span></span><br><span class="line">            <span class="string">&quot;xtrabackup --backup --slave-info --stream=xbstream --host=127.0.0.1 --user=root&quot;</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">data</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/var/lib/mysql</span></span><br><span class="line">          <span class="attr">subPath:</span> <span class="string">mysql</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">conf</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/etc/mysql/conf.d</span></span><br><span class="line">        <span class="attr">resources:</span></span><br><span class="line">          <span class="attr">requests:</span></span><br><span class="line">            <span class="attr">cpu:</span> <span class="string">100m</span></span><br><span class="line">            <span class="attr">memory:</span> <span class="string">100Mi</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">conf</span></span><br><span class="line">        <span class="attr">emptyDir:</span> &#123;&#125;</span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">config-map</span></span><br><span class="line">        <span class="attr">configMap:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">mysql</span></span><br><span class="line">  <span class="attr">volumeClaimTemplates:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">data</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">accessModes:</span> [<span class="string">&quot;ReadWriteOnce&quot;</span>]</span><br><span class="line">      <span class="attr">resources:</span></span><br><span class="line">        <span class="attr">requests:</span></span><br><span class="line">          <span class="attr">storage:</span> <span class="string">5Gi</span></span><br></pre></td></tr></table></figure><h1 id="8-Horizontal-Pod-AutoScalling"><a href="#8-Horizontal-Pod-AutoScalling" class="headerlink" title="8. Horizontal Pod AutoScalling"></a>8. Horizontal Pod AutoScalling</h1><p>应用的资源使用率通常有高峰和低谷的时候，如何削峰填谷，提高集群的整体资源利用率，HPA 提供了 Pod 的水平自动缩放功能</p><p>通过控制RS，Deployment 来实现自动缩放</p>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes 资源清单</title>
      <link href="/2018/07/03/Kubernetes%20%E8%B5%84%E6%BA%90%E6%B8%85%E5%8D%95/"/>
      <url>/2018/07/03/Kubernetes%20%E8%B5%84%E6%BA%90%E6%B8%85%E5%8D%95/</url>
      
        <content type="html"><![CDATA[<h1 id="1-K8S-资源"><a href="#1-K8S-资源" class="headerlink" title="1. K8S 资源"></a>1. K8S 资源</h1><p>k8s中，所有的内容都被抽象为资源，资源实例化后，称为对象</p><p>集群资源分类：</p><ul><li>名称空间级别: 只在本名称空间下可见</li><li>集群级别: role, 不管在什么名称空间小，均可见</li><li>元数据级别: HPA(可以CPU利用率平滑扩展)</li></ul><span id="more"></span><h2 id="1-1-工作负载-workload"><a href="#1-1-工作负载-workload" class="headerlink" title="1.1 工作负载 (workload)"></a>1.1 工作负载 (workload)</h2><ul><li>Pod: 最小资源，共享网络栈、存储卷等</li><li>ReplicaSet：调度器，管理Pod的创建，通过标签的选择去控制Pod的副本数</li><li>Deployment: 控制器，通过控制RS的创建，去创建Pod</li><li>StatefulSet：有状态服务管理器</li><li>DaemonSet：可在每个节点都运行一个Pod组件</li><li>Job: 批量工作</li><li>CronJob: 定时或轮训工作</li></ul><h2 id="1-2-服务发现及负载均衡"><a href="#1-2-服务发现及负载均衡" class="headerlink" title="1.2 服务发现及负载均衡"></a>1.2 服务发现及负载均衡</h2><ul><li>Service</li><li>Ingress</li></ul><h2 id="1-3-配置与存储"><a href="#1-3-配置与存储" class="headerlink" title="1.3 配置与存储"></a>1.3 配置与存储</h2><ul><li><p>Volume: 存储卷</p></li><li><p>CSI: 容器存储接口，可扩展第三方存储设备</p></li><li><p>ConfigMap: 配置中心</p></li><li><p>Secret: 敏感数据保存</p></li><li><p>DownwardAPI: 外部环境中的信息输出给容器</p></li></ul><h2 id="1-4-集群"><a href="#1-4-集群" class="headerlink" title="1.4 集群"></a>1.4 集群</h2><p>不指定名称空间，所有节点均能访问：role</p><ul><li>Namespace</li><li>Node</li><li>Role</li><li>ClusterRole</li><li>RoleBinding</li><li>ClusterRoleBinding</li></ul><h2 id="1-5-元数据"><a href="#1-5-元数据" class="headerlink" title="1.5 元数据"></a>1.5 元数据</h2><ul><li>HPA</li><li>PodTemplate</li><li>LimitRange</li></ul><h2 id="1-6-用法查询"><a href="#1-6-用法查询" class="headerlink" title="1.6 用法查询"></a>1.6 用法查询</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl explain pod</span><br><span class="line"></span><br><span class="line">kubectl explain pod.spec</span><br></pre></td></tr></table></figure><h1 id="2-Pod-生命周期"><a href="#2-Pod-生命周期" class="headerlink" title="2. Pod 生命周期"></a>2. Pod 生命周期</h1><p><img src="https://raw.githubusercontent.com/elihe2011/bedgraph/master/kubernetes/k8s-pod-lifecycle.png" alt="img"></p><p>1）kubectl –&gt; apiserver –&gt; CRI –&gt; kubelet  环境初始化</p><p>2）启动Pause容器: 初始化网络和数据卷</p><p>3）init C初始化。多个initC时，必须串行执行，且每个必须执行成功才向下走</p><p>4）Main C，开始运行时，启动Start命令/脚本；结束时，执行Stop命令(做哪些清理操作等)</p><p>5）Readiness 就绪检测：若干秒后，进行是否就绪的探测。只有当Readiness成功后，Pod才会显示Ready状态</p><p>6）Liveness 生存检测：探测Main C中的进程是否正常，不正常则执行重启、删除等命令</p><h2 id="2-1-InitC-容器"><a href="#2-1-InitC-容器" class="headerlink" title="2.1 InitC 容器"></a>2.1 InitC 容器</h2><p>即 Infra 容器，其镜像是一个用汇编写成，永远处于“pause”状态的容器，解压后大小100~200KB，运行时占用极小的资源</p><p><strong>作用</strong>：</p><ul><li><p>initC 容器可作为 Pod 中其他容器的初始化工具</p></li><li><p>出于安全考虑，将应用容器中的某些实用工具（python, awk等）单独拆开放入initC容器</p></li><li><p>应用容器的启动是并行的，而 initC 容器可阻塞应用容器的启动，直到满足一些先决条件</p></li></ul><p>实例：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">test-initc</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">myapp</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">initContainers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">init-myservice</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">busybox:1.28.4</span></span><br><span class="line">    <span class="attr">command:</span> [<span class="string">&#x27;sh&#x27;</span>,<span class="string">&#x27;-c&#x27;</span>,<span class="string">&#x27;until nslookup myservice;do echo waiting for myservice;sleep 2; done;&#x27;</span>] </span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">init-mydb</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">busybox:1.28.4</span></span><br><span class="line">    <span class="attr">command:</span> [<span class="string">&#x27;sh&#x27;</span>,<span class="string">&#x27;-c&#x27;</span>,<span class="string">&#x27;until nslookup mydb;do echo waiting for mydb;sleep 2;done;&#x27;</span>]</span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">mypod</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">busybox:1.28.4</span></span><br><span class="line">    <span class="attr">command:</span> [<span class="string">&#x27;sh&#x27;</span>,<span class="string">&#x27;-c&#x27;</span>,<span class="string">&#x27;echo The app is running!&amp;&amp; sleep 3600&#x27;</span>] </span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">myservice</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">9001</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">mydb</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">9002</span></span><br></pre></td></tr></table></figure><h2 id="2-2-容器探针"><a href="#2-2-容器探针" class="headerlink" title="2.2 容器探针"></a>2.2 容器探针</h2><p>健康状态探针：</p><ul><li>ReadinessProbe: 判断容器服务是否可用，成功显示ready， 失败不触发重启</li><li>LivenessProbe: 判断容器是否存活，如果探测到不健康，将触发重启策略。如果未配置该探针，则永远返回成功.</li></ul><p>探针的三种实现方式：</p><ul><li>ExecAction: 容器内执行命令，返回码等于0则认为成功</li><li>TCPSocketAction: 在指定端口上的容器IP地址进行TCP检查，如果端口打开，则认为成功</li><li>HTTPGetAction: 在指定端口和路径的容器IP地址执行HTTP GET请求，状态码在 [200, 399] 表示成功</li></ul><p>探测结果：</p><ul><li>success</li><li>failed：失败，按策略处理</li><li>unknown：诊断失败，但不会采取任何行动</li></ul><h3 id="2-2-1-就绪检测"><a href="#2-2-1-就绪检测" class="headerlink" title="2.2.1 就绪检测"></a>2.2.1 就绪检测</h3><p>检测失败，状态非Ready，但不会重启容器</p><p><strong>spec.containers[].readinessProbe.httpGet</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># readiness-probe-httpget.yaml </span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">readiness-httpget-pod</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">readiness-httpget-container</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">    <span class="attr">readinessProbe:</span></span><br><span class="line">      <span class="attr">httpGet:</span></span><br><span class="line">        <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/index1.html</span></span><br><span class="line">      <span class="attr">initialDelaySeconds:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">periodSeconds:</span> <span class="number">3</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl create -f readiness-probe-httpget.yaml </span><br><span class="line"></span><br><span class="line">$ kubectl get pod</span><br><span class="line">NAME                    READY   STATUS    RESTARTS   AGE</span><br><span class="line">readiness-httpget-pod   0/1     Running   0          9s</span><br><span class="line"></span><br><span class="line">$ kubectl describe pod readiness-httpget-pod</span><br><span class="line">Warning  Unhealthy  1s (x3 over 7s)  kubelet, k8s-node01  Readiness probe failed: HTTP probe failed with statuscode: 404</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入容器</span></span><br><span class="line">$ kubectl <span class="built_in">exec</span> readiness-httpget-pod -it -- /bin/sh</span><br><span class="line"><span class="comment"># cd /usr/share/nginx/html</span></span><br><span class="line"><span class="comment"># ls -al</span></span><br><span class="line">total 8</span><br><span class="line">drwxr-xr-x 2 root root  40 Aug 14 00:36 .</span><br><span class="line">drwxr-xr-x 3 root root  18 Aug 14 00:36 ..</span><br><span class="line">-rw-r--r-- 1 root root 494 Aug 11 14:50 50x.html</span><br><span class="line">-rw-r--r-- 1 root root 612 Aug 11 14:50 index.html</span><br><span class="line"><span class="comment"># echo &quot;hello, i&#x27;am index1.html&quot; &gt; index1.html</span></span><br><span class="line"><span class="comment"># logout</span></span><br><span class="line"></span><br><span class="line">$ kubectl get pod</span><br><span class="line">NAME                    READY   STATUS    RESTARTS   AGE</span><br><span class="line">readiness-httpget-pod   1/1     Running   0          2m57s</span><br></pre></td></tr></table></figure><h3 id="2-2-2-存活检测"><a href="#2-2-2-存活检测" class="headerlink" title="2.2.2 存活检测"></a>2.2.2 存活检测</h3><p>检测失败，直接重启Pod</p><p><strong>spec.containers[].livenessProbe.exec</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># liveness-prob-exec.yaml </span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">liveness-exec-pod</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">liveness-exec-container</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">busybox</span></span><br><span class="line">    <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">    <span class="attr">command:</span> [<span class="string">&quot;/bin/sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;touch /tmp/abc.txt; sleep 60; rm -f /tmp/abc.txt; sleep 3600&quot;</span>]</span><br><span class="line">    <span class="attr">livenessProbe:</span></span><br><span class="line">      <span class="attr">exec:</span></span><br><span class="line">        <span class="attr">command:</span> [<span class="string">&quot;test&quot;</span>, <span class="string">&quot;-e&quot;</span>, <span class="string">&quot;/tmp/abc.txt&quot;</span>]</span><br><span class="line">      <span class="attr">initialDelaySeconds:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">periodSeconds:</span> <span class="number">3</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl create -f liveness-prob-exec.yaml </span><br><span class="line"></span><br><span class="line"><span class="comment"># 失败，重启自动重启</span></span><br><span class="line">$ kubectl get pod -w</span><br><span class="line">NAME                READY   STATUS    RESTARTS   AGE</span><br><span class="line">liveness-exec-pod   1/1     Running   0          26s</span><br><span class="line">liveness-exec-pod   1/1     Running   1          2m58s</span><br><span class="line">liveness-exec-pod   1/1     Running   2          3m35s</span><br><span class="line">liveness-exec-pod   1/1     Running   3          5m15s</span><br></pre></td></tr></table></figure><p><strong>spec.containers[].livenessProbe.httpGet</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">liveness-httpget-pod</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">liveness-httpget</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">    <span class="attr">livenessProbe:</span></span><br><span class="line">      <span class="attr">httpGet:</span></span><br><span class="line">        <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/index.html</span></span><br><span class="line">      <span class="attr">initialDelaySeconds:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">periodSeconds:</span> <span class="number">3</span></span><br><span class="line">      <span class="attr">timeoutSeconds:</span> <span class="number">10</span>  <span class="comment"># 超时处理</span></span><br></pre></td></tr></table></figure><p><strong>spec.containers[].livenessProbe.tcpSocket</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">tcpsocket-pod</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">redis</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">redis</span></span><br><span class="line">    <span class="attr">livenessProbe:</span></span><br><span class="line">      <span class="attr">tcpSocket:</span></span><br><span class="line">        <span class="attr">port:</span> <span class="number">6379</span></span><br><span class="line">      <span class="attr">initialDelaySeconds:</span> <span class="number">5</span></span><br><span class="line">      <span class="attr">periodSeconds:</span> <span class="number">3</span></span><br><span class="line">      <span class="attr">timeoutSeconds:</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="2-3-启动-amp-退出"><a href="#2-3-启动-amp-退出" class="headerlink" title="2.3 启动 &amp; 退出"></a>2.3 启动 &amp; 退出</h2><p><strong>spec.containers[].lifecycle.postStart|preStop</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">lifecycle-demo</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">lifecycle-demo-container</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">lifecycle:</span></span><br><span class="line">      <span class="attr">postStart:</span></span><br><span class="line">        <span class="attr">exec:</span></span><br><span class="line">          <span class="attr">command:</span> [<span class="string">&quot;/bin/sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;echo Hello postStart &gt; /tmp/hello.txt&quot;</span>]</span><br><span class="line">      <span class="attr">preStop:</span></span><br><span class="line">        <span class="attr">exec:</span></span><br><span class="line">          <span class="attr">command:</span> [<span class="string">&quot;/usr/sbin/nginx&quot;</span>, <span class="string">&quot;-s&quot;</span>, <span class="string">&quot;quit&quot;</span>]</span><br></pre></td></tr></table></figure><h2 id="2-4-Pod-状态值"><a href="#2-4-Pod-状态值" class="headerlink" title="2.4 Pod 状态值"></a>2.4 Pod 状态值</h2><ul><li>Pending：Pod已被k8s系统接受，但有一个或多个镜像容器尚未创建。等待时间包括调度Pod的时间和通过网络下载镜像的时间。</li><li>Running: Pod已经绑定到一个节点上了，Pod中的所有容器已被创建</li><li>Succeeded: Pod中的所有容器都被成功终止，且不会再重启</li><li>Failed: Pod中的所有容器都已终止，但至少有一个容器以非0返回值退出</li><li>Unknown: 未知原因无法获取Pod状态，通常是因为与Pod所在主机的通信失败</li></ul><h1 id="3-注入卷"><a href="#3-注入卷" class="headerlink" title="3. 注入卷"></a>3. 注入卷</h1><p>Projected Volume: 不是为了存放容器里的数据，也不是用于容器和宿主机之间的数据交换，而是为了给容器提供预先定义好的数据</p><p>常见的 Projected Volume:</p><ul><li>Secret</li><li>ConfigMap</li><li>Downward API</li><li>ServiceAccountToken</li></ul><h2 id="3-1-Secret"><a href="#3-1-Secret" class="headerlink" title="3.1 Secret"></a>3.1 Secret</h2><p>作用：把 Pod 想要访问的加密数据放入 etcd 中</p><p>类型：</p><table><thead><tr><th>内置类型</th><th>用法</th></tr></thead><tbody><tr><td><code>Opaque</code></td><td>用户定义的任意数据</td></tr><tr><td><code>kubernetes.io/service-account-token</code></td><td>服务账号令牌</td></tr><tr><td><code>kubernetes.io/dockercfg</code></td><td><code>~/.dockercfg</code> 文件的序列化形式</td></tr><tr><td><code>kubernetes.io/dockerconfigjson</code></td><td><code>~/.docker/config.json</code> 文件的序列化形式</td></tr><tr><td><code>kubernetes.io/basic-auth</code></td><td>用于基本身份认证的凭据</td></tr><tr><td><code>kubernetes.io/ssh-auth</code></td><td>用于 SSH 身份认证的凭据</td></tr><tr><td><code>kubernetes.io/tls</code></td><td>用于 TLS 客户端或者服务器端的数据</td></tr><tr><td><code>bootstrap.kubernetes.io/token</code></td><td>启动引导令牌数据</td></tr></tbody></table><h3 id="3-1-1-Opaque"><a href="#3-1-1-Opaque" class="headerlink" title="3.1.1 Opaque"></a>3.1.1 Opaque</h3><p>创建 secret：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 方法1：</span></span><br><span class="line">$ kubectl apply -f - &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">apiVersion: v1</span></span><br><span class="line"><span class="string">kind: Secret</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: mysecret</span></span><br><span class="line"><span class="string">type: Opaque</span></span><br><span class="line"><span class="string">stringData:</span></span><br><span class="line"><span class="string">  user: root</span></span><br><span class="line"><span class="string">  pass: &quot;123456&quot;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法2：</span></span><br><span class="line">$ kubectl create secret generic my-secret --from-literal=user=root --from-literal=pass=123456</span><br></pre></td></tr></table></figure><p>使用 secret：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">pod-secret-volume</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">secret-volume</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">busybox</span></span><br><span class="line">    <span class="attr">args:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">sleep</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;86400&quot;</span></span><br><span class="line">    <span class="attr">volumeMounts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">mysql-cred</span></span><br><span class="line">      <span class="attr">mountPath:</span> <span class="string">&quot;/projected-volume&quot;</span></span><br><span class="line">      <span class="attr">readOnly:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">volumes:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">mysql-cred</span></span><br><span class="line">    <span class="attr">secret:</span></span><br><span class="line">      <span class="attr">secretName:</span> <span class="string">mysecret</span></span><br><span class="line">      <span class="attr">items:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">user</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">cred/user</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">pass</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">cred/pass</span></span><br></pre></td></tr></table></figure><p>检查数据挂载：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl <span class="built_in">exec</span> -it pod-secret-volume -- cat /projected-volume/cred/pass</span><br><span class="line">123456</span><br></pre></td></tr></table></figure><h3 id="3-1-2-TLS"><a href="#3-1-2-TLS" class="headerlink" title="3.1.2 TLS"></a>3.1.2 TLS</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Secret</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">secret-tls</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">kubernetes.io/tls</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">tls.crt:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        MIIC2DCCAcCgAwIBAgIBATANBgkqh ...</span></span><br><span class="line"><span class="string"></span>  <span class="attr">tls.key:</span> <span class="string">|</span></span><br><span class="line">        <span class="string">MIIEpgIBAAKCAQEA7yn3bRHQ5FHMQ</span> <span class="string">...</span></span><br></pre></td></tr></table></figure><h2 id="3-2-ConfigMap"><a href="#3-2-ConfigMap" class="headerlink" title="3.2 ConfigMap"></a>3.2 ConfigMap</h2><p>作用：保存无需加密的，应用所需的配置信息</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">special-config</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">special.how:</span> <span class="string">very</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">env-config</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">log_level:</span> <span class="string">INFO</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">pod-configmap</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">cm-container</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">busybox</span></span><br><span class="line">    <span class="attr">command:</span> [<span class="string">&quot;/bin/sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;env&quot;</span>]</span><br><span class="line">    <span class="attr">env:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">SPECIAL_LEVEL_KEY</span></span><br><span class="line">      <span class="attr">valueFrom:</span></span><br><span class="line">        <span class="attr">configMapKeyRef:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">special-config</span></span><br><span class="line">          <span class="attr">key:</span> <span class="string">special.how</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">LOG_LEVEL</span></span><br><span class="line">      <span class="attr">valueFrom:</span></span><br><span class="line">        <span class="attr">configMapKeyRef:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">env-config</span></span><br><span class="line">          <span class="attr">key:</span> <span class="string">log_level</span></span><br><span class="line">  <span class="attr">restartPolicy:</span> <span class="string">Never</span></span><br></pre></td></tr></table></figure><h2 id="3-3-DownwardAPI"><a href="#3-3-DownwardAPI" class="headerlink" title="3.3 DownwardAPI"></a>3.3 DownwardAPI</h2><p>作用：让 Pod 中的容器，能够直接获取该 Pod API 对象本身的信息</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">downward-api-volume</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">zone:</span> <span class="string">china-standard-time</span></span><br><span class="line">    <span class="attr">cluster:</span> <span class="string">taos-1</span></span><br><span class="line">    <span class="attr">rack:</span> <span class="string">rack-22</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">version:</span> <span class="string">&quot;1.2&quot;</span></span><br><span class="line">    <span class="attr">builder:</span> <span class="string">gopher</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">busybox</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">busybox</span></span><br><span class="line">    <span class="attr">command:</span> [<span class="string">&quot;sh&quot;</span>, <span class="string">&quot;-c&quot;</span>]</span><br><span class="line">    <span class="attr">args:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">while</span> <span class="literal">true</span><span class="string">;</span> <span class="string">do</span></span><br><span class="line">        <span class="string">if</span> [[ <span class="string">-e</span> <span class="string">/etc/podinfo/labels</span> ]]<span class="string">;</span> <span class="string">then</span></span><br><span class="line">          <span class="string">echo</span> <span class="string">-en</span> <span class="string">&#x27;\n\n&#x27;</span><span class="string">;</span> <span class="string">cat</span> <span class="string">/etc/podinfo/labels;</span> <span class="string">fi;</span></span><br><span class="line">        <span class="string">if</span> [[ <span class="string">-e</span> <span class="string">/etc/podinfo/annotations</span> ]]<span class="string">;</span> <span class="string">then</span></span><br><span class="line">          <span class="string">echo</span> <span class="string">-en</span> <span class="string">&#x27;\n\n&#x27;</span><span class="string">;</span> <span class="string">cat</span> <span class="string">/etc/podinfo/annotations;</span> <span class="string">fi;</span></span><br><span class="line">        <span class="string">sleep</span> <span class="number">5</span><span class="string">;</span></span><br><span class="line">      <span class="string">done;</span></span><br><span class="line">    <span class="attr">volumeMounts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">podinfo</span></span><br><span class="line">      <span class="attr">mountPath:</span> <span class="string">/etc/podinfo</span></span><br><span class="line">  <span class="attr">volumes:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">podinfo</span></span><br><span class="line">    <span class="attr">downwardAPI:</span></span><br><span class="line">      <span class="attr">items:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">&quot;labels&quot;</span></span><br><span class="line">        <span class="attr">fieldRef:</span></span><br><span class="line">          <span class="attr">fieldPath:</span> <span class="string">metadata.labels</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">&quot;annotations&quot;</span></span><br><span class="line">        <span class="attr">fieldRef:</span></span><br><span class="line">          <span class="attr">fieldPath:</span> <span class="string">metadata.annotations</span></span><br></pre></td></tr></table></figure><p><strong>环境变量方式</strong>：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">downward-api-env</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">busybox</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">busybox</span></span><br><span class="line">    <span class="attr">command:</span> [<span class="string">&quot;/bin/sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;env&quot;</span>]</span><br><span class="line">    <span class="attr">env:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POD_NAME</span></span><br><span class="line">      <span class="attr">valueFrom:</span></span><br><span class="line">        <span class="attr">fieldRef:</span></span><br><span class="line">          <span class="attr">fieldPath:</span> <span class="string">metadata.name</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POD_IP</span></span><br><span class="line">      <span class="attr">valueFrom:</span></span><br><span class="line">        <span class="attr">fieldRef:</span></span><br><span class="line">          <span class="attr">fieldPath:</span> <span class="string">status.podIP</span></span><br></pre></td></tr></table></figure><h2 id="3-4-ServiceAccountToken"><a href="#3-4-ServiceAccountToken" class="headerlink" title="3.4 ServiceAccountToken"></a>3.4 ServiceAccountToken</h2><p>Service Account 是 k8s 的一种内置”服务账户“，它绑定了一个特殊的 Secret，即 ServiceAccountToken, 保存了授权信息等内容。任何在 k8s 集群上运行的应用，都必须使用 ServiceAccountToken 中的授权信息，才能合法访问 API Server.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl describe pod nginx</span><br><span class="line">Containers:</span><br><span class="line">  nginx:</span><br><span class="line">    ...</span><br><span class="line">    Mounts:</span><br><span class="line">      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-stqtv (ro)</span><br><span class="line">Volumes:</span><br><span class="line">  kube-api-access-stqtv:</span><br><span class="line">    Type:                    Projected (a volume that contains injected data from multiple sources)</span><br><span class="line">    TokenExpirationSeconds:  3607</span><br><span class="line">    ConfigMapName:           kube-root-ca.crt</span><br><span class="line">    ConfigMapOptional:       &lt;nil&gt;</span><br><span class="line">    DownwardAPI:             <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">$ kubectl <span class="built_in">exec</span> -it nginx -- ls /run/secrets/kubernetes.io/serviceaccount</span><br><span class="line">ca.crt  namespace  token</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes 集群安装</title>
      <link href="/2018/07/02/Kubernetes%20%E9%9B%86%E7%BE%A4%E5%AE%89%E8%A3%85/"/>
      <url>/2018/07/02/Kubernetes%20%E9%9B%86%E7%BE%A4%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="1-安装准备"><a href="#1-安装准备" class="headerlink" title="1. 安装准备"></a>1. 安装准备</h1><h2 id="1-1-设置主机名"><a href="#1-1-设置主机名" class="headerlink" title="1.1 设置主机名"></a>1.1 设置主机名</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># master</span></span><br><span class="line">hostnamectl set-hostname k8s-master</span><br><span class="line"></span><br><span class="line"><span class="comment"># node</span></span><br><span class="line">hostnamectl set-hostname k8s-node01</span><br><span class="line">hostnamectl set-hostname k8s-node02</span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="1-2-hostname相互解析"><a href="#1-2-hostname相互解析" class="headerlink" title="1.2 hostname相互解析"></a>1.2 hostname相互解析</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/hosts</span><br><span class="line">192.168.31.40  k8s-master</span><br><span class="line">192.168.31.41  k8s-node01</span><br><span class="line">192.168.31.42  k8s-node02</span><br></pre></td></tr></table></figure><h2 id="1-3-关闭虚拟内存-swap"><a href="#1-3-关闭虚拟内存-swap" class="headerlink" title="1.3 关闭虚拟内存 swap"></a>1.3 关闭虚拟内存 swap</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">swapoff -a &amp;&amp; sed -i <span class="string">&#x27;/ swap / s/^\(.*\)$/#\1/g&#x27;</span> /etc/fstab</span><br></pre></td></tr></table></figure><h2 id="1-4-调整内核参数"><a href="#1-4-调整内核参数" class="headerlink" title="1.4 调整内核参数"></a>1.4 调整内核参数</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/sysctl.d/kubernetes.conf &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-iptables=1</span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-ip6tables=1</span></span><br><span class="line"><span class="string">net.ipv4.ip_forward=1</span></span><br><span class="line"><span class="string">net.ipv4.tcp_tw_recycle=0</span></span><br><span class="line"><span class="string">vm.swappiness=0     # 禁止使用 swap 空间，只有当系统 OOM 时才允许使用它</span></span><br><span class="line"><span class="string">vm.overcommit_memory=1   # 不检查物理内存是否够用</span></span><br><span class="line"><span class="string">fs.inotify.max_user_instances=8192  # 开启 OOM</span></span><br><span class="line"><span class="string">vm.panic_on_oom=0 </span></span><br><span class="line"><span class="string">fs.inotify.max_user_watches=1048576</span></span><br><span class="line"><span class="string">fs.file-max=52706963</span></span><br><span class="line"><span class="string">fs.nr_open=52706963</span></span><br><span class="line"><span class="string">net.ipv6.conf.all.disable_ipv6=1</span></span><br><span class="line"><span class="string">net.netfilter.nf_conntrack_max=2310720</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">sysctl -p /etc/sysctl.d/kubernetes.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 问题 sysctl: cannot stat /proc/sys/net/bridge/bridge-nf-call-iptables: No such file or directory</span></span><br><span class="line">modprobe br_netfilter </span><br></pre></td></tr></table></figure><h2 id="1-5-升级内核"><a href="#1-5-升级内核" class="headerlink" title="1.5 升级内核"></a>1.5 升级内核</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">uname -r</span><br><span class="line">3.10.0-1127.el7.x86_64</span><br><span class="line"></span><br><span class="line"><span class="comment"># 内核repo</span></span><br><span class="line">rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-3.el7.elrepo.noarch.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装新内核</span></span><br><span class="line">yum --enablerepo=elrepo-kernel install -y kernel-lt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查启动menu是否已加入新内核版本</span></span><br><span class="line">cat /boot/grub2/grub.cfg | grep elrepo | grep menuentry</span><br><span class="line">menuentry <span class="string">&#x27;CentOS Linux (4.4.236-1.el7.elrepo.x86_64) 7 (Core)&#x27;</span> --class centos --class gnu-linux --class gnu --class os --unrestricted <span class="variable">$menuentry_id_option</span> <span class="string">&#x27;gnulinux-3.10.0-1127.el7.x86_64-advanced-3ec6d414-2b79-482d-9643-b7baeb42cb3d&#x27;</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开机从新内核启动</span></span><br><span class="line">grub2-set-default <span class="string">&#x27;CentOS Linux (4.4.236-1.el7.elrepo.x86_64) 7 (Core)&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启系统</span></span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><h2 id="1-6-开启-ipvs-kube-proxy需要"><a href="#1-6-开启-ipvs-kube-proxy需要" class="headerlink" title="1.6 开启 ipvs (kube-proxy需要)"></a>1.6 开启 ipvs (kube-proxy需要)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">modprobe br_netfilter</span><br><span class="line"></span><br><span class="line">cat &gt; /etc/sysconfig/modules/ipvs.modules &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">#!/bin/bash</span></span><br><span class="line"><span class="string">modprobe -- ip_vs</span></span><br><span class="line"><span class="string">modprobe -- ip_vs_rr</span></span><br><span class="line"><span class="string">modprobe -- ip_vs_wrr</span></span><br><span class="line"><span class="string">modprobe -- ip_vs_sh</span></span><br><span class="line"><span class="string">modprobe -- nf_conntrack_ipv4</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">chmod 755 /etc/sysconfig/modules/ipvs.modules &amp;&amp; bash /etc/sysconfig/modules/ipvs.modules</span><br><span class="line"></span><br><span class="line">lsmod | grep -e ip_vs -e nf_conntrack_ipv4</span><br></pre></td></tr></table></figure><h1 id="2-Kubeadm-部署安装"><a href="#2-Kubeadm-部署安装" class="headerlink" title="2. Kubeadm 部署安装"></a>2. Kubeadm 部署安装</h1><h2 id="2-1-安装kubeadm"><a href="#2-1-安装kubeadm" class="headerlink" title="2.1 安装kubeadm"></a>2.1 安装kubeadm</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/yum.repos.d/kubernetes.repo &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">[kubernetes]</span></span><br><span class="line"><span class="string">name=Kubernetes</span></span><br><span class="line"><span class="string">baseurl=http://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64</span></span><br><span class="line"><span class="string">enabled=1</span></span><br><span class="line"><span class="string">gpgcheck=1</span></span><br><span class="line"><span class="string">repo_gpgcheck=1</span></span><br><span class="line"><span class="string">gpgkey=http://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg http://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询版本</span></span><br><span class="line">yum list kubelet --showduplicates</span><br><span class="line"></span><br><span class="line">yum install -y kubeadm-1.18.6 kubelet-1.18.6 kubectl-1.18.6</span><br><span class="line"></span><br><span class="line">systemctl <span class="built_in">enable</span> kubelet</span><br></pre></td></tr></table></figure><ul><li>kubelet: 运行在集群的所有节点上，用于启动Pod和容器对象的工具</li><li>kubeadm: 初始化集群，启动集群的命令工具</li><li>kubectl: 和集群通信的命令行工具。可以部署和管理应用，查看各种资源，创建、删除和更新各种组建</li></ul><h2 id="2-2-下载k8s镜像"><a href="#2-2-下载k8s镜像" class="headerlink" title="2.2 下载k8s镜像"></a>2.2 下载k8s镜像</h2><p>默认镜像放google服务器上，国内使用aliyun服务器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ vi load_kube_images.sh</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">url=registry.aliyuncs.com/google_containers</span><br><span class="line">version=v1.18.6</span><br><span class="line">images=(`kubeadm config images list --kubernetes-version=<span class="variable">$version</span>|awk -F <span class="string">&#x27;/&#x27;</span> <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>`)</span><br><span class="line"><span class="keyword">for</span> imagename <span class="keyword">in</span> <span class="variable">$&#123;images[@]&#125;</span> ; <span class="keyword">do</span></span><br><span class="line">    docker pull <span class="variable">$url</span>/<span class="variable">$imagename</span></span><br><span class="line">    docker tag <span class="variable">$url</span>/<span class="variable">$imagename</span> k8s.gcr.io/<span class="variable">$imagename</span></span><br><span class="line">    docker rmi -f <span class="variable">$url</span>/<span class="variable">$imagename</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">$ chmod u+x load_kube_images.sh &amp;&amp; bash load_kube_images.sh</span><br></pre></td></tr></table></figure><h2 id="2-3-初始化主节点-k8s-master"><a href="#2-3-初始化主节点-k8s-master" class="headerlink" title="2.3 初始化主节点 (k8s-master)"></a>2.3 初始化主节点 (k8s-master)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 默认配置</span></span><br><span class="line">$ kubeadm config <span class="built_in">print</span> init-defaults &gt; kubeadm-config.yaml</span><br><span class="line"></span><br><span class="line">$ vi kubeadm-config.yaml</span><br><span class="line">...</span><br><span class="line">localAPIEndpoint:</span><br><span class="line">  advertiseAddress: 192.168.31.40  <span class="comment"># 修改为本机IP</span></span><br><span class="line">  bindPort: 6443</span><br><span class="line">...</span><br><span class="line">kubernetesVersion: v1.18.6   <span class="comment"># 版本必须匹配</span></span><br><span class="line">networking:</span><br><span class="line">  dnsDomain: cluster.local</span><br><span class="line">  podSubnet: 10.244.0.0/16   <span class="comment"># 新增</span></span><br><span class="line">  serviceSubnet: 10.96.0.0/12</span><br><span class="line">scheduler: &#123;&#125;</span><br><span class="line"><span class="comment"># 新增如下，修改kube-proxy协议为ipvs</span></span><br><span class="line">---</span><br><span class="line">apiVersion: kubeproxy.config.k8s.io/v1alpha1</span><br><span class="line">kind: KubeProxyConfiguration</span><br><span class="line">featureGates:</span><br><span class="line">  SupportIPVSProxyMode: <span class="literal">true</span></span><br><span class="line">mode: ipvs</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行初始化</span></span><br><span class="line">$ kubeadm init --config=kubeadm-config.yaml --upload-certs | tee kubeadm-init.log</span><br><span class="line">...</span><br><span class="line">[kubelet-finalize] Updating <span class="string">&quot;/etc/kubernetes/kubelet.conf&quot;</span> to point to a rotatable kubelet client certificate and key</span><br><span class="line">[addons] Applied essential addon: CoreDNS</span><br><span class="line">[addons] Applied essential addon: kube-proxy</span><br><span class="line"></span><br><span class="line">Your Kubernetes control-plane has initialized successfully!</span><br><span class="line"></span><br><span class="line">To start using your cluster, you need to run the following as a regular user:</span><br><span class="line"></span><br><span class="line">  mkdir -p <span class="variable">$HOME</span>/.kube</span><br><span class="line">  sudo cp -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line">  sudo chown $(id -u):$(id -g) <span class="variable">$HOME</span>/.kube/config</span><br><span class="line"></span><br><span class="line">You should now deploy a pod network to the cluster.</span><br><span class="line">Run <span class="string">&quot;kubectl apply -f [podnetwork].yaml&quot;</span> with one of the options listed at:</span><br><span class="line">  https://kubernetes.io/docs/concepts/cluster-administration/addons/</span><br><span class="line"></span><br><span class="line">Then you can join any number of worker nodes by running the following on each as root:</span><br><span class="line"></span><br><span class="line">kubeadm join 192.168.31.40:6443 --token abcdef.0123456789abcdef \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:1c02156e6d3d6b85938e20f0473af2dffff7a22a6c67387aba97da38f0952386 </span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果发生错误，重置后重新init</span></span><br><span class="line">$ kubeadm reset</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行初始化后的提示步骤</span></span><br><span class="line">$ mkdir -p <span class="variable">$HOME</span>/.kube</span><br><span class="line">$ sudo cp -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line">$ sudo chown $(id -u):$(id -g) <span class="variable">$HOME</span>/.kube/config</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取节点</span></span><br><span class="line">$ kubectl get node</span><br><span class="line">NAME         STATUS     ROLES    AGE     VERSION</span><br><span class="line">k8s-master   NotReady   master   3m31s   v1.18.6</span><br></pre></td></tr></table></figure><h2 id="2-4-部署网络-k8s-master"><a href="#2-4-部署网络-k8s-master" class="headerlink" title="2.4 部署网络 (k8s-master)"></a>2.4 部署网络 (k8s-master)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 解决DNS污染问题 (不推荐)</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">&quot;199.232.68.133 raw.githubusercontent.com&quot;</span> &gt;&gt; /etc/hosts  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 尽量用nsloop查询，将dns配对</span></span><br><span class="line">$ yum install -y bind-utils</span><br><span class="line">$ nslookup raw.githubusercontent.com</span><br><span class="line"></span><br><span class="line">$ wget https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml</span><br><span class="line"></span><br><span class="line">$ kubectl apply -f kube-flannel.yml</span><br><span class="line">podsecuritypolicy.policy/psp.flannel.unprivileged created</span><br><span class="line">clusterrole.rbac.authorization.k8s.io/flannel created</span><br><span class="line">clusterrolebinding.rbac.authorization.k8s.io/flannel created</span><br><span class="line">serviceaccount/flannel created</span><br><span class="line">configmap/kube-flannel-cfg created</span><br><span class="line">daemonset.apps/kube-flannel-ds created</span><br><span class="line"></span><br><span class="line">$ kubectl get pod -n kube-system</span><br><span class="line">kube-flannel-ds-4dlvt                1/1     Running   0          54s</span><br><span class="line"></span><br><span class="line">$ kubectl get node</span><br><span class="line">NAME         STATUS   ROLES    AGE   VERSION</span><br><span class="line">k8s-master   Ready    master   22m   v1.18.6</span><br></pre></td></tr></table></figure><h2 id="2-5-工作节点加入集群-k8s-node1-k8s-node2"><a href="#2-5-工作节点加入集群-k8s-node1-k8s-node2" class="headerlink" title="2.5 工作节点加入集群 (k8s-node1, k8s-node2)"></a>2.5 工作节点加入集群 (k8s-node1, k8s-node2)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># k8s-master节点下 kubeadm init 的运行日志最后行</span></span><br><span class="line">$ kubeadm join 192.168.31.40:6443 --token abcdef.0123456789abcdef \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:1c02156e6d3d6b85938e20f0473af2dffff7a22a6c67387aba97da38f0952386 </span><br></pre></td></tr></table></figure><p><strong>如果未找到，主节点(k8s-master) 执行下列操作获取令牌</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ kubeadm token list</span><br><span class="line">TOKEN                     TTL         EXPIRES                     USAGES                   DESCRIPTION                                                EXTRA GROUPS</span><br><span class="line">7114t2.imdu2ivf56cbjk38   1h          2020-09-22T22:31:42+08:00   &lt;none&gt;                   Proxy <span class="keyword">for</span> managing TTL <span class="keyword">for</span> the kubeadm-certs secret        &lt;none&gt;</span><br><span class="line">abcdef.0123456789abcdef   23h         2020-09-23T20:31:43+08:00   authentication,signing   &lt;none&gt;                                                     system:bootstrappers:kubeadm:default-node-token</span><br><span class="line"></span><br><span class="line"><span class="comment"># 令牌过期</span></span><br><span class="line">$ kubeadm token create</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成密钥</span></span><br><span class="line">$ openssl x509 -pubkey -<span class="keyword">in</span> /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2&gt;/dev/null | openssl dgst -sha256 -hex | sed <span class="string">&#x27;s/^.* //&#x27;</span></span><br><span class="line">0daca31a7b9820fc60eaa28cacc25ee3a16c7af5c6e8104d91bf709bf2e741bc</span><br></pre></td></tr></table></figure><h2 id="2-6-查看所有节点"><a href="#2-6-查看所有节点" class="headerlink" title="2.6 查看所有节点"></a>2.6 查看所有节点</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl 命令补齐</span></span><br><span class="line">yum install -y bash-completion</span><br><span class="line"><span class="built_in">source</span> /usr/share/bash-completion/bash_completion</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> &lt;(kubectl completion bash)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;source &lt;(kubectl completion bash)&quot;</span> &gt;&gt; ~/.bash_profile</span><br><span class="line"></span><br><span class="line">kubectl get node</span><br><span class="line"></span><br><span class="line">kubectl get pod -n kube-system</span><br><span class="line"></span><br><span class="line"><span class="comment"># 当前各个节点的详细情况</span></span><br><span class="line">kubectl get pod -n kube-system -o wide</span><br></pre></td></tr></table></figure><h2 id="2-7-问题：组件controller-manager-和scheduler状态-Unhealthy"><a href="#2-7-问题：组件controller-manager-和scheduler状态-Unhealthy" class="headerlink" title="2.7 问题：组件controller-manager 和scheduler状态 Unhealthy"></a>2.7 问题：组件controller-manager 和scheduler状态 Unhealthy</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get cs</span><br><span class="line">NAME                 STATUS      MESSAGE                                                                                     ERROR</span><br><span class="line">scheduler            Unhealthy   Get http://127.0.0.1:10251/healthz: dial tcp 127.0.0.1:10251: connect: connection refused   </span><br><span class="line">controller-manager   Unhealthy   Get http://127.0.0.1:10252/healthz: dial tcp 127.0.0.1:10252: connect: connection refused   </span><br><span class="line">etcd-0               Healthy     &#123;<span class="string">&quot;health&quot;</span>:<span class="string">&quot;true&quot;</span>&#125;   </span><br><span class="line"></span><br><span class="line">$ netstat -an | grep -e 10251 -e 10252</span><br></pre></td></tr></table></figure><p><strong>解决方法:</strong> 检查kube-scheduler和kube-controller-manager组件配置是否禁用了非安全端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">$ vi /etc/kubernetes/manifests/kube-scheduler.yaml </span><br><span class="line">...</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - <span class="built_in">command</span>:</span><br><span class="line">    - kube-scheduler</span><br><span class="line">    - --kubeconfig=/etc/kubernetes/scheduler.conf</span><br><span class="line">    - --leader-elect=<span class="literal">true</span></span><br><span class="line">    <span class="comment">#- --port=0    # 注释掉</span></span><br><span class="line">    image: k8s.gcr.io/kube-scheduler:v1.18.6</span><br><span class="line"></span><br><span class="line">$ vi /etc/kubernetes/manifests/kube-controller-manager.yaml</span><br><span class="line">...</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - <span class="built_in">command</span>:</span><br><span class="line">    - kube-controller-manager</span><br><span class="line">    - --node-cidr-mask-size=24</span><br><span class="line">    <span class="comment">#- --port=0   # 注释掉</span></span><br><span class="line">    - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启kubelet</span></span><br><span class="line">$ systemctl restart kubelet</span><br><span class="line"></span><br><span class="line"><span class="comment"># 再次查询状态</span></span><br><span class="line">$ kubectl get cs</span><br><span class="line">NAME                 STATUS    MESSAGE             ERROR</span><br><span class="line">scheduler            Healthy   ok                  </span><br><span class="line">controller-manager   Healthy   ok                  </span><br><span class="line">etcd-0               Healthy   &#123;<span class="string">&quot;health&quot;</span>:<span class="string">&quot;true&quot;</span>&#125;   </span><br></pre></td></tr></table></figure><h1 id="6-k8s主节点测试"><a href="#6-k8s主节点测试" class="headerlink" title="6. k8s主节点测试"></a>6. k8s主节点测试</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">vi nginx.yml</span><br><span class="line"><span class="comment"># API 版本号</span></span><br><span class="line">apiVersion: apps/v1</span><br><span class="line"><span class="comment"># 类型，如：Pod/ReplicationController/Deployment/Service/Ingress</span></span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  <span class="comment"># Kind 的名称</span></span><br><span class="line">  name: nginx-app</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      <span class="comment"># 容器标签的名字，发布 Service 时，selector 需要和这里对应</span></span><br><span class="line">      app: nginx</span><br><span class="line">  <span class="comment"># 部署的实例数量</span></span><br><span class="line">  replicas: 2</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: nginx</span><br><span class="line">    spec:</span><br><span class="line">      <span class="comment"># 配置容器，数组类型，说明可以配置多个容器</span></span><br><span class="line">      containers:</span><br><span class="line">      <span class="comment"># 容器名称</span></span><br><span class="line">      - name: nginx</span><br><span class="line">        <span class="comment"># 容器镜像</span></span><br><span class="line">        image: hub.elihe.io/library/nginx:v1</span><br><span class="line">        <span class="comment"># 只有镜像不存在时，才会进行镜像拉取</span></span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        ports:</span><br><span class="line">        <span class="comment"># Pod 端口</span></span><br><span class="line">        - containerPort: 80</span><br><span class="line">        </span><br><span class="line">kubectl apply -f nginx.yml</span><br><span class="line"></span><br><span class="line">kubectl get pod -o wide</span><br><span class="line">NAME                         READY   STATUS    RESTARTS   AGE   IP           NODE         NOMINATED NODE   READINESS GATES</span><br><span class="line">nginx-app-76b8bd9478-z74zq   1/1     Running   0          93s   10.244.1.2   k8s-node02   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">nginx-app-76b8bd9478-z8zt6   1/1     Running   0          93s   10.244.2.5   k8s-node01   &lt;none&gt;           &lt;none&gt;</span><br><span class="line"></span><br><span class="line">kubectl delete pod nginx-app-76b8bd9478-z74zq</span><br><span class="line"></span><br><span class="line">kubectl get pod -o wide</span><br><span class="line"></span><br><span class="line"><span class="comment"># 变更数量</span></span><br><span class="line">kubectl scale --replicas=3 deployment/nginx-app</span><br><span class="line"></span><br><span class="line">kubectl get pod -o wide</span><br><span class="line">NAME                         READY   STATUS    RESTARTS   AGE     IP           NODE         NOMINATED NODE   READINESS GATES</span><br><span class="line">nginx-app-76b8bd9478-6gkq6   1/1     Running   0          4m25s   10.244.1.3   k8s-node02   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">nginx-app-76b8bd9478-d7p6r   1/1     Running   0          13s     10.244.1.4   k8s-node02   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">nginx-app-76b8bd9478-z8zt6   1/1     Running   0          6m37s   10.244.2.5   k8s-node01   &lt;none&gt;           &lt;none&gt;</span><br><span class="line"></span><br><span class="line">kubectl get deployment</span><br><span class="line">NAME        READY   UP-TO-DATE   AVAILABLE   AGE</span><br><span class="line">nginx-app   3/3     3            3           12m</span><br><span class="line"></span><br><span class="line">kubectl get svc</span><br><span class="line">NAME         TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE</span><br><span class="line">kubernetes   ClusterIP   10.96.0.1    &lt;none&gt;        443/TCP   16h</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开放访问端口</span></span><br><span class="line">kubectl expose deployment nginx-app --port=3000 --target-port=80</span><br><span class="line"></span><br><span class="line">kubectl get svc</span><br><span class="line">NAME         TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)    AGE</span><br><span class="line">kubernetes   ClusterIP   10.96.0.1      &lt;none&gt;        443/TCP    16h</span><br><span class="line">nginx-app    ClusterIP   10.104.89.46   &lt;none&gt;        3000/TCP   9s</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试端口转发</span></span><br><span class="line">curl -i 10.104.89.46:3000</span><br><span class="line">ipvsadm -Ln</span><br><span class="line">TCP  10.104.89.46:3000 rr</span><br><span class="line">  -&gt; 10.244.1.3:80                Masq    1      0          1         </span><br><span class="line">  -&gt; 10.244.1.4:80                Masq    1      0          1         </span><br><span class="line">  -&gt; 10.244.2.5:80                Masq    1      0          1    </span><br><span class="line">  </span><br><span class="line"><span class="comment"># 开放外部访问nginx</span></span><br><span class="line">kubectl edit svc nginx-app</span><br><span class="line"><span class="built_in">type</span>: NodePort <span class="comment">#ClusterIP</span></span><br><span class="line"></span><br><span class="line">kubectl get svc</span><br><span class="line">NAME         TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)          AGE</span><br><span class="line">kubernetes   ClusterIP   10.96.0.1      &lt;none&gt;        443/TCP          16h</span><br><span class="line">nginx-app    NodePort    10.104.89.46   &lt;none&gt;        3000:31057/TCP   8m44s</span><br><span class="line"></span><br><span class="line">http://192.168.31.40:31057/</span><br><span class="line">http://192.168.31.41:31057/</span><br><span class="line">http://192.168.31.42:31057/</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes 基础概念</title>
      <link href="/2018/07/01/Kubernetes%20%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/"/>
      <url>/2018/07/01/Kubernetes%20%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/</url>
      
        <content type="html"><![CDATA[<h1 id="1-架构"><a href="#1-架构" class="headerlink" title="1. 架构"></a>1. 架构</h1><p>Kubernetes特点：</p><ul><li>轻量级：消耗资源小</li><li>开源</li><li>弹性伸缩</li><li>负载均衡：IPVS</li></ul><h2 id="1-1-核心组件"><a href="#1-1-核心组件" class="headerlink" title="1.1 核心组件"></a>1.1 核心组件</h2><ul><li><p>etcd: 保存整个集群的状态</p></li><li><p>apiserver: 资源操作的唯一入口，提供了认证、授权、访问控制、API注册和发现等机制</p></li><li><p>controller manager: 负责维护集群的状态，比如故障检测、自动扩展、滚动更新等</p></li><li><p>scheduler: 负责资源的调度，按照预定的调度策略将Pod调度到相应的机器上</p></li><li><p>kubelet: 负责维护容器的生命周期、Volume(CVI) 和网络(CNI)的管理</p></li><li><p>container runtime: 负责镜像管理以及Pod和容器的真正运行 (CRI)</p></li><li><p>kube-proxy: 负责为Service提供cluster内部的服务发现和负载均衡 （四层）</p><ul><li>iptables</li><li>ipvs</li></ul></li></ul><p>etcd: 可信赖的分布式键值对存储服务，为整个分布式集群存储关键数据，协助分布式集群的正常运转。</p><span id="more"></span><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/k8s/k8s_components.png" alt="components"></p><h2 id="1-2-Add-ons"><a href="#1-2-Add-ons" class="headerlink" title="1.2 Add-ons:"></a>1.2 Add-ons:</h2><ul><li>kube-dns: 负责为整个集群提供DNS服务（CoreDNS, 可以为集群中的SVC创建一个域名IP对应关系解析，即A记录)</li><li>Ingress Controller: 为服务提供外网入口 （七层代理）</li><li>Dashboard: 提供GUI</li><li>Federation: 提供跨可用区的集群</li><li>Prometheus：监控</li><li>ELK：集群日志统一分析接入平台</li></ul><h1 id="2-Pod"><a href="#2-Pod" class="headerlink" title="2. Pod"></a>2. Pod</h1><ul><li>共享存储</li><li>共享网络</li></ul><h2 id="2-1-Pod-控制器类型"><a href="#2-1-Pod-控制器类型" class="headerlink" title="2.1 Pod 控制器类型"></a>2.1 Pod 控制器类型</h2><ul><li>RelicationController &amp; ReplicaSet &amp; Deployment</li></ul><h3 id="2-1-1-ReplicationController-amp-ReplicaSet-amp-Deployment"><a href="#2-1-1-ReplicationController-amp-ReplicaSet-amp-Deployment" class="headerlink" title="2.1.1 ReplicationController &amp; ReplicaSet &amp; Deployment"></a>2.1.1 ReplicationController &amp; ReplicaSet &amp; Deployment</h3><ul><li>ReplicationController: 用来确保容器的应用副本数始终是用户定义的副本数。即如果有容器异常退出，会创建新的Pod来代替；如果多出来，自动回收。</li><li>ReplicaSet: 新版k8s中建议使用ReplicaSet取代RelocationController，它支持集合式selector</li><li>Deployment: 用来自动管理ReplicaSet。ReplicaSet不支持rolling-update，但Deployment支持。</li></ul><h3 id="2-1-2-HPA-（HorizontalPodAutoScale"><a href="#2-1-2-HPA-（HorizontalPodAutoScale" class="headerlink" title="2.1.2 HPA （HorizontalPodAutoScale)"></a>2.1.2 HPA （HorizontalPodAutoScale)</h3><p>HPA仅适用于Deployment和ReplicaSet，在v1版本中仅支持根据Pod的CPU利用率扩/缩容，在v1alpha中，支持根据内存和用户自定义的metric扩/缩容</p><h3 id="2-1-3-StatefulSet"><a href="#2-1-3-StatefulSet" class="headerlink" title="2.1.3 StatefulSet"></a>2.1.3 StatefulSet</h3><p>解决有状态服务的问题（Deployment和ReplicaSet只支持无状态服务），应用场景：</p><ul><li>稳定的持久化存储，即Pod重新调度后还是能够访问到相同的持久化数据，基于PVC来实现</li><li>稳定的网络标志，即Pod重新调度后，其PodName和HostName不变，基于Headless Service (即没有Cluster IP的Service)来实现</li><li>有序部署，有序扩展，即Pod是有顺序的，在部署或扩展的时候，要依据定义的顺序依次进程（即从0到N-1，在下一个Pod运行之前，所有之前的Pod必须是Running和Ready状态)，基于init containers来实现</li><li>有序收缩，有序删除（即从N-1到0）</li></ul><h3 id="2-1-4-DaemonSet"><a href="#2-1-4-DaemonSet" class="headerlink" title="2.1.4 DaemonSet"></a>2.1.4 DaemonSet</h3><p>确保全部（或部分）Node上运行一个Pod副本。当有Node加入集群时，也会为它们新增一个Pod；当有Node从集群移除时，这些Pod会被回收。删除DaemonSet，将会删除它创建的所有Pod。</p><p>一些典型的DaemonSet用法：</p><ul><li>运行集群存储daemon，例如每个Node上运行glusterd、ceph</li><li>在每个Node上进行日志收集daemon，例如fluentd、logstash</li><li>在每个Node上运行监控daemon，例如Prometheus Node Exporter</li></ul><h3 id="2-1-5-Job-amp-CronJob"><a href="#2-1-5-Job-amp-CronJob" class="headerlink" title="2.1.5 Job &amp; CronJob"></a>2.1.5 Job &amp; CronJob</h3><ul><li>Job: 负责批处理任务，即仅执行一次的任务，它保证批处理任务的一个或多个Pod成功结束</li><li>CronJob：定时Job<ul><li>在给定时间点运行一次</li><li>周期性地在给定时间点运行</li></ul></li></ul><h2 id="2-2-服务发现"><a href="#2-2-服务发现" class="headerlink" title="2.2 服务发现"></a>2.2 服务发现</h2><p>Service 通过标签选择到Pod</p><h1 id="3-网络通讯模式"><a href="#3-网络通讯模式" class="headerlink" title="3. 网络通讯模式"></a>3. 网络通讯模式</h1><p>k8s 的网络模型假定了所有Pod都在一个可以直接连通的扁平化网络空间中。在GCE(Google Compute Engine) 里面是现成的网络模型。但在私有云中搭建k8s集群，一般需要我们自己去实现这个扁平化网络模型。</p><p>扁平化网络：所有的Pod可以通过IP“直接到达”</p><h2 id="3-1-通讯模式"><a href="#3-1-通讯模式" class="headerlink" title="3.1 通讯模式"></a>3.1 通讯模式</h2><ul><li>同一个Pod内的多个容器之间：lo</li><li>各Pod之间的通信: Overlay Network</li><li>Pod与Service之间的通讯：各节点的iptables规则</li></ul><h2 id="3-2-Flannel"><a href="#3-2-Flannel" class="headerlink" title="3.2 Flannel"></a>3.2 Flannel</h2><p>Flannel是CoreOS团队针对k8s设计的一种网络规划服务。它的功能是让集群中的不同节点主机创建的Docker容器都具有全集群唯一的虚拟IP地址，而且它还能在这些IP地址之间建立一个覆盖网络(Overlay Network)，通过这个网络，将数据包原封不动地传递到模板容器内。</p><p>etcd为Flannel提供服务：</p><ul><li>存储Flannel可分配的IP地址段资源</li><li>监控etcd中每个Pod的实际地址，并在内存中创建和维护Pod节点路由表</li></ul><h2 id="3-3-总结：不同情况下网络的通信方式"><a href="#3-3-总结：不同情况下网络的通信方式" class="headerlink" title="3.3 总结：不同情况下网络的通信方式"></a>3.3 总结：不同情况下网络的通信方式</h2><ul><li>同一个Pod内部通信：共享同一个网络命名空间，共享同一个Linux协议栈。lo网卡</li><li>Pod1至Pod2:<ul><li>同一台主机：由Docker0网桥转发，不需要经过Flannel</li><li>不同主机：将Pod的IP和Node的IP关联起来，通过这个关联让Pod可以相互访问。涉及网络封包和拆包，较消耗资源。</li></ul></li><li>Pod至Service网络：基于性能考虑，全部为iptables/LVS维护和转发</li><li>Pod到外网：Pod向外网发送请求，查找路由表，转发数据包到宿主机的网卡，宿主机网卡完成路由选择后，iptables执行Masquerade，把源IP更改为宿主网卡的IP，然后向外网服务器发送请求</li><li>外网访问Pod：Service</li></ul><h3 id="3-4-组件通讯示意图"><a href="#3-4-组件通讯示意图" class="headerlink" title="3.4 组件通讯示意图"></a>3.4 组件通讯示意图</h3><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/k8s/k8s-3layer-network.png" alt="network"></p><ul><li>节点网络：物理的网络</li><li>Pod网络：虚拟网络</li><li>Service网络：虚拟网络</li></ul>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Docker 私有仓库</title>
      <link href="/2018/06/17/Docker%20%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93/"/>
      <url>/2018/06/17/Docker%20%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<h1 id="1-安装Docker"><a href="#1-安装Docker" class="headerlink" title="1. 安装Docker"></a>1. 安装Docker</h1><p>详见 Docker 安装</p><h1 id="2-安装Docker-Compose"><a href="#2-安装Docker-Compose" class="headerlink" title="2. 安装Docker Compose"></a>2. 安装Docker Compose</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl -L <span class="string">&quot;https://github.com/docker/compose/releases/download/1.27.0/docker-compose-<span class="subst">$(uname -s)</span>-<span class="subst">$(uname -m)</span>&quot;</span> -o /usr/<span class="built_in">local</span>/bin/docker-compose</span><br><span class="line"></span><br><span class="line">chmod +x /usr/<span class="built_in">local</span>/bin/docker-compose</span><br></pre></td></tr></table></figure><span id="more"></span><h1 id="3-安装Harbor"><a href="#3-安装Harbor" class="headerlink" title="3. 安装Harbor"></a>3. 安装Harbor</h1><p>下载地址：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fgoharbor%2Fharbor%2Freleases">https://github.com/goharbor/harbor/releases</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/goharbor/harbor/releases/download/v2.0.2/harbor-offline-installer-v2.0.2.tgz</span><br><span class="line"></span><br><span class="line">tar zxvf harbor-offline-installer-v2.0.2.tgz</span><br><span class="line"></span><br><span class="line">mv harbor /usr/<span class="built_in">local</span>/</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/harbor</span><br><span class="line"></span><br><span class="line">cp harbor.yml.tmpl harbor.yml</span><br><span class="line"></span><br><span class="line">vi harbor.yml</span><br><span class="line">hostname: hub.elihe.io</span><br><span class="line">https:</span><br><span class="line">  port: 443</span><br><span class="line">  <span class="comment"># The path of cert and key files for nginx</span></span><br><span class="line">  certificate: /data/cert/server.crt</span><br><span class="line">  private_key: /data/cert/server.key</span><br><span class="line"></span><br><span class="line">mkdir -p /data/cert &amp;&amp; <span class="built_in">cd</span> /data/cert</span><br><span class="line"></span><br><span class="line"><span class="comment"># 私钥</span></span><br><span class="line">openssl genrsa -des3 -out server.key 2048</span><br><span class="line"></span><br><span class="line"><span class="comment"># 证书请求</span></span><br><span class="line">openssl req -new -key server.key -out server.csr</span><br><span class="line"></span><br><span class="line"><span class="comment"># 备份私钥</span></span><br><span class="line">cp server.key server.key.org</span><br><span class="line"></span><br><span class="line"><span class="comment"># 转换成证书 （去除设置的密码）</span></span><br><span class="line">openssl rsa -<span class="keyword">in</span> server.key.org -out server.key</span><br><span class="line"></span><br><span class="line"><span class="comment"># 签名</span></span><br><span class="line">openssl x509 -req -days 3650 -<span class="keyword">in</span> server.csr -signkey server.key -out server.crt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 证书赋予执行权限</span></span><br><span class="line">chmod a+x *</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装harbor</span></span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/harbor</span><br><span class="line">./install.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动 docker-compose</span></span><br><span class="line">docker-compose start</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开机启动 docker-compose</span></span><br><span class="line"><span class="comment"># 启动不一定成功，废弃</span></span><br><span class="line">vi /etc/rc.d/rc.local</span><br><span class="line">/usr/<span class="built_in">local</span>/bin/docker-compose -f /usr/<span class="built_in">local</span>/harbor/docker-compose.yml up -d</span><br><span class="line"></span><br><span class="line"><span class="comment"># 按这种方式</span></span><br><span class="line">crontab -e</span><br><span class="line">@reboot sleep 60 &amp;&amp; /usr/<span class="built_in">local</span>/bin/docker-compose -f /usr/<span class="built_in">local</span>/harbor/docker-compose.yml up -d</span><br></pre></td></tr></table></figure><h1 id="4-Harbor服务器和客户端配置"><a href="#4-Harbor服务器和客户端配置" class="headerlink" title="4. Harbor服务器和客户端配置"></a>4. Harbor服务器和客户端配置</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加域名解析</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;192.168.31.200 hub.elihe.io&quot;</span> &gt;&gt; /etc/hosts</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置daemon.json</span></span><br><span class="line">vi /etc/docker/daemon.json</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;insecure-registries&quot;</span>: [<span class="string">&quot;https://hub.elihe.io&quot;</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启docker</span></span><br><span class="line">systemctl daemon-reload &amp;&amp; systemctl restart docker</span><br></pre></td></tr></table></figure><h1 id="5-访问Harbor"><a href="#5-访问Harbor" class="headerlink" title="5. 访问Harbor"></a>5. 访问Harbor</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">https://hub.elihe.io  admin/Harbor12345</span><br><span class="line"></span><br><span class="line">docker login https://hub.elihe.io </span><br><span class="line"></span><br><span class="line">docker pull nginx</span><br><span class="line"></span><br><span class="line">docker tag nginx hub.elihe.io/library/nginx:v1 </span><br><span class="line"></span><br><span class="line">cat index.html </span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;Hello MyApp | Version: v1 | &lt;a href=&quot;hostname.html&quot;&gt;Pod Name&lt;/a&gt;&#x27;</span> &gt; index.html</span><br><span class="line"></span><br><span class="line">cat &gt; hostname.html &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">&lt;script type=&quot;text/javascript&quot;&gt;</span></span><br><span class="line"><span class="string">document.write(location.hostname);</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">docker commit 7e7553b2204f hub.elihe.io/library/nginx:v1</span><br><span class="line"></span><br><span class="line">docker push hub.elihe.io/library/nginx:v1</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Docker 网络</title>
      <link href="/2018/06/16/Docker%20%E7%BD%91%E7%BB%9C/"/>
      <url>/2018/06/16/Docker%20%E7%BD%91%E7%BB%9C/</url>
      
        <content type="html"><![CDATA[<h1 id="1-通过Linux路由机制打通网络"><a href="#1-通过Linux路由机制打通网络" class="headerlink" title="1. 通过Linux路由机制打通网络"></a>1. 通过Linux路由机制打通网络</h1><h2 id="1-1-修改主机名"><a href="#1-1-修改主机名" class="headerlink" title="1.1 修改主机名"></a>1.1 修改主机名</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hostnamectl set-hostname centos7-a</span><br><span class="line">hostnamectl set-hostname centos7-b</span><br></pre></td></tr></table></figure><h2 id="1-2-centos7-a的docker0默认绑定的ip地址"><a href="#1-2-centos7-a的docker0默认绑定的ip地址" class="headerlink" title="1.2 centos7-a的docker0默认绑定的ip地址"></a>1.2 centos7-a的docker0默认绑定的ip地址</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">ip addr</span><br><span class="line"></span><br><span class="line">2: ens33: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000</span><br><span class="line">    link/ether 00:0c:29:a3:00:96 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 192.168.31.30/24 brd 192.168.31.255 scope global noprefixroute ens33</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 fe80::a05d:dcec:e694:2cfc/64 scope link noprefixroute </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">3: docker0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP group default </span><br><span class="line">    link/ether 02:42:a5:d2:db:31 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 172.17.0.1/16 brd 172.17.255.255 scope global docker0</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 fe80::42:a5ff:fed2:db31/64 scope link </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br></pre></td></tr></table></figure><h2 id="1-3-修改主机centos7-b的docker0网卡的ip地址"><a href="#1-3-修改主机centos7-b的docker0网卡的ip地址" class="headerlink" title="1.3 修改主机centos7-b的docker0网卡的ip地址"></a>1.3 修改主机centos7-b的docker0网卡的ip地址</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/docker/daemon.json </span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;bip&quot;</span>:<span class="string">&quot;172.18.0.1/16&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">systemctl restart docker</span><br><span class="line"></span><br><span class="line">ip addr</span><br><span class="line"></span><br><span class="line">2: ens33: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000</span><br><span class="line">    link/ether 00:0c:29:49:57:44 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 192.168.31.31/24 brd 192.168.31.255 scope global noprefixroute ens33</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 fe80::a05d:dcec:e694:2cfc/64 scope link tentative noprefixroute dadfailed </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 fe80::4298:eebd:9094:f36e/64 scope link noprefixroute </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">3: docker0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc noqueue state DOWN group default </span><br><span class="line">    link/ether 02:42:92:1b:3b:17 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 172.18.0.1/16 brd 172.18.255.255 scope global docker0</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br></pre></td></tr></table></figure><h2 id="1-4-增加网关路由"><a href="#1-4-增加网关路由" class="headerlink" title="1.4 增加网关路由"></a>1.4 增加网关路由</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># centos7-a</span></span><br><span class="line">[root@centos7-a ~]<span class="comment"># route add -net 172.18.0.0/16 gw 192.168.31.31</span></span><br><span class="line">[root@centos7-a ~]<span class="comment"># ip route</span></span><br><span class="line">default via 192.168.31.1 dev ens33 proto static metric 100 </span><br><span class="line">172.17.0.0/16 dev docker0 proto kernel scope link src 172.17.0.1 </span><br><span class="line">172.18.0.0/16 via 192.168.31.31 dev ens33 </span><br><span class="line">192.168.31.0/24 dev ens33 proto kernel scope link src 192.168.31.30 metric 100 </span><br><span class="line"></span><br><span class="line"><span class="comment"># centos7-b</span></span><br><span class="line">[root@centos7-a ~]<span class="comment"># route add -net 172.17.0.0/16 gw 192.168.31.30</span></span><br><span class="line">[root@centos7-a ~]<span class="comment"># ip route</span></span><br><span class="line">default via 192.168.31.1 dev ens33 proto static metric 100 </span><br><span class="line">172.18.0.0/16 dev docker0 proto kernel scope link src 172.18.0.1 </span><br><span class="line">172.17.0.0/16 via 192.168.31.30 dev ens33 </span><br><span class="line">192.168.31.0/24 dev ens33 proto kernel scope link src 192.168.31.30 metric 100 </span><br></pre></td></tr></table></figure><h2 id="1-5-测试网络是否联通"><a href="#1-5-测试网络是否联通" class="headerlink" title="1.5 测试网络是否联通"></a>1.5 测试网络是否联通</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7-a ~]<span class="comment"># ping 172.18.0.1</span></span><br><span class="line">PING 172.18.0.1 (172.18.0.1) 56(84) bytes of data.</span><br><span class="line">64 bytes from 172.18.0.1: icmp_seq=1 ttl=64 time=1.61 ms</span><br><span class="line">64 bytes from 172.18.0.1: icmp_seq=2 ttl=64 time=0.979 ms</span><br><span class="line">64 bytes from 172.18.0.1: icmp_seq=3 ttl=64 time=0.614 ms</span><br><span class="line"></span><br><span class="line">[root@centos7-b ~]<span class="comment"># ping 172.17.0.1</span></span><br><span class="line">PING 172.17.0.1 (172.17.0.1) 56(84) bytes of data.</span><br><span class="line">64 bytes from 172.17.0.1: icmp_seq=1 ttl=64 time=2.13 ms</span><br><span class="line">64 bytes from 172.17.0.1: icmp_seq=2 ttl=64 time=0.521 ms</span><br><span class="line">64 bytes from 172.17.0.1: icmp_seq=3 ttl=64 time=0.659 ms</span><br></pre></td></tr></table></figure><h1 id="3-Overlay网络"><a href="#3-Overlay网络" class="headerlink" title="3. Overlay网络"></a>3. Overlay网络</h1><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/docker/overlay_network.png" alt="overlay_network"></p><h1 id="4-Namespace"><a href="#4-Namespace" class="headerlink" title="4. Namespace"></a>4. Namespace</h1><p>Veth pair：用于不同network namespace间进行通信，点对点通信。</p><p>Linux Bridge： 实现类似交换机的工作模式，将多个不同Namespace上的网卡连通</p><p>使用网桥工具</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">yum install bridge-utils -y</span><br><span class="line"></span><br><span class="line">[root@centos7-a ~]<span class="comment"># brctl show</span></span><br><span class="line">bridge name     bridge id               STP enabled     interfaces</span><br><span class="line">docker0         8000.0242a5d2db31       no              veth463224b</span><br><span class="line">                                                        veth95cd878</span><br><span class="line">[root@centos7-a ~]<span class="comment"># ip addr                                                        </span></span><br><span class="line">29: veth95cd878@if28: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue master docker0 state UP group default </span><br><span class="line">    link/ether 56:19:de:43:e7:e4 brd ff:ff:ff:ff:ff:ff link-netnsid 1</span><br><span class="line">    inet6 fe80::5419:deff:fe43:e7e4/64 scope link </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">55: veth463224b@if54: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue master docker0 state UP group default </span><br><span class="line">    link/ether fa:89:aa:75:57:a1 brd ff:ff:ff:ff:ff:ff link-netnsid 0</span><br><span class="line">    inet6 fe80::f889:aaff:fe75:57a1/64 scope link </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取容器运行的PID</span></span><br><span class="line">[root@centos7-a ~]<span class="comment"># docker inspect -f &#x27;&#123;&#123;.State.Pid&#125;&#125;&#x27; 0f9fa4e71fb7</span></span><br><span class="line">18607</span><br><span class="line"></span><br><span class="line"><span class="comment"># 建立链接，方便ip netns标准命令查询</span></span><br><span class="line">mkdir -p /var/run/netns</span><br><span class="line">ln -s /proc/18607/ns/net /var/run/netns/18607</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询net namespace</span></span><br><span class="line">[root@centos7-a ~]<span class="comment"># ip netns ls</span></span><br><span class="line">18607 (id: 0)</span><br><span class="line"></span><br><span class="line">[root@centos7-a ~]<span class="comment"># ip netns exec 18607 ip addr</span></span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">54: eth0@if55: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP group default </span><br><span class="line">    link/ether 02:42:ac:11:00:02 brd ff:ff:ff:ff:ff:ff link-netnsid 0</span><br><span class="line">    inet 172.17.0.2/16 brd 172.17.255.255 scope global eth0</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">       </span><br><span class="line"><span class="comment"># 查询veth网卡序号</span></span><br><span class="line">[root@centos7-a ~]<span class="comment"># ip netns exec 18607 ethtool -S eth0</span></span><br><span class="line">NIC statistics:</span><br><span class="line">     peer_ifindex: 55</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Docker 数据卷</title>
      <link href="/2018/06/15/Docker%20%E6%95%B0%E6%8D%AE%E5%8D%B7/"/>
      <url>/2018/06/15/Docker%20%E6%95%B0%E6%8D%AE%E5%8D%B7/</url>
      
        <content type="html"><![CDATA[<h1 id="1-数据卷设计的目的"><a href="#1-数据卷设计的目的" class="headerlink" title="1. 数据卷设计的目的"></a>1. 数据卷设计的目的</h1><ul><li>经过特殊设计的目录，可以绕过联合文件系统(UFS)，为一个或多个容器提供访问。</li><li>在于数据的永久化，它完全独立于容器的生命周期。因此，Docker不会在容器删除时删除其挂载的数据卷，也不会存在类似的垃圾回收机制，对容器引用的数据卷进行处理</li></ul><span id="more"></span><h1 id="2-添加数据卷"><a href="#2-添加数据卷" class="headerlink" title="2. 添加数据卷"></a>2. 添加数据卷</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -it -v ~/datavolume:/data ubuntu /bin/bash</span><br><span class="line">docker run -it -v ~/datavolume:/data:ro ubuntu /bin/bash</span><br></pre></td></tr></table></figure><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> ubuntu</span><br><span class="line"><span class="keyword">VOLUME</span><span class="bash"> [<span class="string">&#x27;/datavolume1&#x27;</span>, <span class="string">&#x27;/datavolume2&#x27;</span>]</span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> /bin/bash</span></span><br></pre></td></tr></table></figure><h1 id="3-共享数据卷"><a href="#3-共享数据卷" class="headerlink" title="3. 共享数据卷"></a>3. 共享数据卷</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker run --rm --name dvt1 -v /docker_data:/data -it ubuntu</span><br><span class="line"></span><br><span class="line"><span class="comment"># 共享数据卷</span></span><br><span class="line">docker run --rm --name dvt2 --volumes-from dvt1 -it ubuntu</span><br><span class="line">docker run --rm --name dvt3 --volumes-from dvt1 -it ubuntu</span><br></pre></td></tr></table></figure><h1 id="4-实例：安装-MySQL-主从数据库"><a href="#4-实例：安装-MySQL-主从数据库" class="headerlink" title="4. 实例：安装 MySQL 主从数据库"></a>4. 实例：安装 MySQL 主从数据库</h1><h2 id="4-1-创建配置文件"><a href="#4-1-创建配置文件" class="headerlink" title="4.1 创建配置文件"></a>4.1 创建配置文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /mysql_data/conf</span><br><span class="line">mkdir -p /mysql_data/master</span><br><span class="line">mkdir -p /mysql_data/slave</span><br><span class="line"></span><br><span class="line"><span class="comment"># 主节点配置</span></span><br><span class="line">cat &gt; /mysql_data/conf/master.conf &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">[client]</span></span><br><span class="line"><span class="string">default-character-set=utf8</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[mysql]</span></span><br><span class="line"><span class="string">default-character-set=utf8</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[mysqld]</span></span><br><span class="line"><span class="string">log_bin = log  # 开启二进制日志，用于从节点的历史复制回放</span></span><br><span class="line"><span class="string">collation-server = utf8_unicode_ci</span></span><br><span class="line"><span class="string">init-connect = &#x27;SET NAMES utf8&#x27;</span></span><br><span class="line"><span class="string">character-set-server = utf8</span></span><br><span class="line"><span class="string">server_id = 1  # 需保证主库和从库的server_id不同</span></span><br><span class="line"><span class="string">replicate-do-db=fileserver   # 需要复制的数据库名，复制多个数据库时，重复设置即可</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 从节点配置</span></span><br><span class="line">cat &gt; /mysql_data/conf/slave.conf &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">[client]</span></span><br><span class="line"><span class="string">default-character-set=utf8</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[mysql]</span></span><br><span class="line"><span class="string">default-character-set=utf8</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[mysqld]</span></span><br><span class="line"><span class="string">log_bin = log  # 开启二进制日志，用于从节点的历史复制回放</span></span><br><span class="line"><span class="string">collation-server = utf8_unicode_ci</span></span><br><span class="line"><span class="string">init-connect = &#x27;SET NAMES utf8&#x27;</span></span><br><span class="line"><span class="string">character-set-server = utf8</span></span><br><span class="line"><span class="string">server_id = 2  # 需保证主库和从库的server_id不同</span></span><br><span class="line"><span class="string">replicate-do-db=fileserver   # 需要复制的数据库名，复制多个数据库时，重复设置即可</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="4-2-启动MYSQL容器"><a href="#4-2-启动MYSQL容器" class="headerlink" title="4.2 启动MYSQL容器"></a>4.2 启动MYSQL容器</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 主节点</span></span><br><span class="line">docker run -d --name mysql-master -p 13306:3306 \</span><br><span class="line">-v /mysql_data/conf/master.conf:/etc/mysql/mysql.conf.d/mysqld.cnf \</span><br><span class="line">-v /mysql_data/master:/var/lib/mysql \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=123456 mysql:5.7</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从节点</span></span><br><span class="line">docker run -d --name mysql-slave -p 13307:3306 \</span><br><span class="line">-v /mysql_data/conf/slave.conf:/etc/mysql/mysql.conf.d/mysqld.cnf \</span><br><span class="line">-v /mysql_data/slave:/var/lib/mysql \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=123456 mysql:5.7</span><br></pre></td></tr></table></figure><h2 id="4-3-宿主机安装-MYSQL-客户端"><a href="#4-3-宿主机安装-MYSQL-客户端" class="headerlink" title="4.3 宿主机安装 MYSQL 客户端"></a>4.3 宿主机安装 MYSQL 客户端</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 卸载 mariadb 组件</span></span><br><span class="line">$ yum list installed | grep -i mariadb</span><br><span class="line">mariadb-libs.x86_64             1:5.5.65-1.el7                 @anaconda     </span><br><span class="line"></span><br><span class="line">$ yum remove -y mariadb-libs</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 mysql repo</span></span><br><span class="line">yum -y install http://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装客户端</span></span><br><span class="line">yum search mysql-community</span><br><span class="line">yum install -y mysql-community-client</span><br></pre></td></tr></table></figure><h2 id="4-4-配置同步信息"><a href="#4-4-配置同步信息" class="headerlink" title="4.4 配置同步信息"></a>4.4 配置同步信息</h2><h3 id="4-4-1-主节点"><a href="#4-4-1-主节点" class="headerlink" title="4.4.1 主节点"></a>4.4.1 主节点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 不要使用localhost，使用本机公网IP</span></span><br><span class="line">mysql -uroot -h 192.168.31.60 -P13306 -p</span><br><span class="line"></span><br><span class="line"><span class="comment"># 授权slave节点登录</span></span><br><span class="line">mysql&gt; GRANT REPLICATION SLAVE ON *.* TO <span class="string">&#x27;slave&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED BY <span class="string">&#x27;slave&#x27;</span>;</span><br><span class="line">mysql&gt; flush privileges;</span><br><span class="line">mysql&gt; create database utime default character <span class="built_in">set</span> utf8mb4;</span><br><span class="line"></span><br><span class="line">mysql&gt; show master status\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">             File: log.000001</span><br><span class="line">         Position: 582</span><br><span class="line">     Binlog_Do_DB: </span><br><span class="line"> Binlog_Ignore_DB: </span><br><span class="line">Executed_Gtid_Set: </span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="4-4-2-从节点"><a href="#4-4-2-从节点" class="headerlink" title="4.4.2 从节点"></a>4.4.2 从节点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -h 192.168.31.60 -P13307 -p   <span class="comment"># 不要使用localhost，使用本机公网IP</span></span><br><span class="line"></span><br><span class="line">mysql&gt; stop slave;</span><br><span class="line">mysql&gt; create database utime default character <span class="built_in">set</span> utf8mb4;</span><br><span class="line">mysql&gt; CHANGE MASTER TO MASTER_HOST=<span class="string">&#x27;192.168.31.60&#x27;</span>, MASTER_PORT=13306, MASTER_USER=<span class="string">&#x27;slave&#x27;</span>, MASTER_PASSWORD=<span class="string">&#x27;slave&#x27;</span>, MASTER_LOG_FILE=<span class="string">&#x27;log.000001&#x27;</span>, MASTER_LOG_POS=627;</span><br><span class="line"></span><br><span class="line">mysql&gt; start slave;</span><br><span class="line">mysql&gt; show slave status\G</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Docker 容器互联</title>
      <link href="/2018/06/14/Docker%20%E5%AE%B9%E5%99%A8%E4%BA%92%E8%81%94/"/>
      <url>/2018/06/14/Docker%20%E5%AE%B9%E5%99%A8%E4%BA%92%E8%81%94/</url>
      
        <content type="html"><![CDATA[<h1 id="1-基于-Volume-的互联"><a href="#1-基于-Volume-的互联" class="headerlink" title="1. 基于 Volume 的互联"></a>1. 基于 Volume 的互联</h1><ul><li>Graph的架构图</li></ul><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/docker/graph-architecture.jpg" alt="docker-graph"></p><span id="more"></span><ul><li>graphdriver架构图</li></ul><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/docker/graphdriver.jpg" alt="graphdriver">  </p><ul><li>Aufs: Docker最早支持的driver，但它只是Linux内核的一个补丁集。</li><li>Device Mapper： Linux2.6 内核提供的一种从逻辑设备到物理设备的映射框架机制，时LVM2的核心，支持块级别的copy on write特性。支持block到block复制</li><li>VFS: 虚拟文件系统最大的缺陷是不支持copy on write特性，每层都是一个单独的目录，如果新增一个child层，则需要将父级层镜像文件一并复制到新目录）</li><li>Btrfs: 速度快，采用btrfs的文件系统的快照能力来实现layer分层功能。缺点是还不够成熟。</li><li>Overlay: 当前最新的文件驱动</li></ul><h2 id="1-1-不指定volume挂载目录，默认放在容器-data目录下"><a href="#1-1-不指定volume挂载目录，默认放在容器-data目录下" class="headerlink" title="1.1 不指定volume挂载目录，默认放在容器_data目录下"></a>1.1 不指定volume挂载目录，默认放在容器_data目录下</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">docker run --rm -it -v /data ubuntu /bin/bash</span><br><span class="line"></span><br><span class="line">root@83139b884b25:/<span class="comment"># df</span></span><br><span class="line">Filesystem              1K-blocks    Used Available Use% Mounted on</span><br><span class="line">overlay                  28289540 3451104  24838436  13% /</span><br><span class="line">tmpfs                       65536       0     65536   0% /dev</span><br><span class="line">tmpfs                      499104       0    499104   0% /sys/fs/cgroup</span><br><span class="line">shm                         65536       0     65536   0% /dev/shm</span><br><span class="line">/dev/mapper/centos-root  28289540 3451104  24838436  13% /data</span><br><span class="line">tmpfs                      499104       0    499104   0% /proc/asound</span><br><span class="line">tmpfs                      499104       0    499104   0% /proc/acpi</span><br><span class="line">tmpfs                      499104       0    499104   0% /proc/scsi</span><br><span class="line">tmpfs                      499104       0    499104   0% /sys/firmware</span><br><span class="line"></span><br><span class="line">docker inspect 83139b884b25</span><br><span class="line">        <span class="string">&quot;Mounts&quot;</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="string">&quot;Type&quot;</span>: <span class="string">&quot;volume&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Name&quot;</span>: <span class="string">&quot;3fd2650cc22d735d6674c721cedd34ace7be5cfd3f35852abc98cf4ee8dbd50b&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Source&quot;</span>: <span class="string">&quot;/var/lib/docker/volumes/3fd2650cc22d735d6674c721cedd34ace7be5cfd3f35852abc98cf4ee8dbd50b/_data&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Destination&quot;</span>: <span class="string">&quot;/data&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Driver&quot;</span>: <span class="string">&quot;local&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Mode&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">                <span class="string">&quot;RW&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">                <span class="string">&quot;Propagation&quot;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">        ],</span><br><span class="line"></span><br><span class="line"><span class="comment"># 共享  --volumes-from</span></span><br><span class="line">docker run --rm -it --privileged=<span class="literal">true</span> --volumes-from=83139b884b25 busybox /bin/sh</span><br><span class="line"></span><br><span class="line">/ <span class="comment"># df</span></span><br><span class="line">Filesystem           1K-blocks      Used Available Use% Mounted on</span><br><span class="line">overlay               28289540   3451180  24838360  12% /</span><br><span class="line">tmpfs                    65536         0     65536   0% /dev</span><br><span class="line">tmpfs                   499104         0    499104   0% /sys/fs/cgroup</span><br><span class="line">shm                      65536         0     65536   0% /dev/shm</span><br><span class="line">/dev/mapper/centos-root</span><br><span class="line">                      28289540   3451204  24838336  12% /data</span><br><span class="line">/dev/mapper/centos-root</span><br><span class="line">                      28289540   3451204  24838336  12% /etc/resolv.conf</span><br><span class="line">/dev/mapper/centos-root</span><br><span class="line">                      28289540   3451204  24838336  12% /etc/hostname</span><br><span class="line">/dev/mapper/centos-root</span><br><span class="line">                      28289540   3451204  24838336  12% /etc/hosts</span><br></pre></td></tr></table></figure><h2 id="1-2-指定挂载目录"><a href="#1-2-指定挂载目录" class="headerlink" title="1.2 指定挂载目录"></a>1.2 指定挂载目录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /docker_data  <span class="comment"># 宿主机上创建目录 (SRC:DEST)</span></span><br><span class="line"></span><br><span class="line">docker run --rm -it -v /docker_data:/data ubuntu /bin/bash</span><br><span class="line"></span><br><span class="line">docker inspect f15e04881ea5</span><br><span class="line">        <span class="string">&quot;Mounts&quot;</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="string">&quot;Type&quot;</span>: <span class="string">&quot;bind&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Source&quot;</span>: <span class="string">&quot;/docker_data&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Destination&quot;</span>: <span class="string">&quot;/data&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Mode&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">                <span class="string">&quot;RW&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">                <span class="string">&quot;Propagation&quot;</span>: <span class="string">&quot;rprivate&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">        ],</span><br></pre></td></tr></table></figure><h2 id="1-3-基于数据容器的单主机互联"><a href="#1-3-基于数据容器的单主机互联" class="headerlink" title="1.3 基于数据容器的单主机互联"></a>1.3 基于数据容器的单主机互联</h2><p>数据容器：只提供数据的容器，业务容器连接到该数据容器，实现数据共享</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">docker run --rm --volumes-from=f15e04881ea5 -it ubuntu /bin/bash</span><br><span class="line"></span><br><span class="line">docker inspect 19f9a3ffc9ea</span><br><span class="line">        <span class="string">&quot;Mounts&quot;</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="string">&quot;Type&quot;</span>: <span class="string">&quot;bind&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Source&quot;</span>: <span class="string">&quot;/docker_data&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Destination&quot;</span>: <span class="string">&quot;/data&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Mode&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">                <span class="string">&quot;RW&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">                <span class="string">&quot;Propagation&quot;</span>: <span class="string">&quot;rprivate&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">        ],</span><br></pre></td></tr></table></figure><h1 id="2-基于-Link-的互联"><a href="#2-基于-Link-的互联" class="headerlink" title="2. 基于 Link 的互联"></a>2. 基于 Link 的互联</h1><h2 id="2-1-默认允许-Container-互通"><a href="#2-1-默认允许-Container-互通" class="headerlink" title="2.1 默认允许 Container 互通"></a>2.1 默认允许 Container 互通</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">docker run --rm --name=mysql-srv -P -e MYSQL_ROOT_PASSWORD=123456 -it mysql:5.7 /bin/sh</span><br><span class="line"></span><br><span class="line">root@64faae051d97:/<span class="comment"># cat /etc/hosts</span></span><br><span class="line">127.0.0.1       localhost</span><br><span class="line">::1     localhost ip6-localhost ip6-loopback</span><br><span class="line">fe00::0 ip6-localnet</span><br><span class="line">ff00::0 ip6-mcastprefix</span><br><span class="line">ff02::1 ip6-allnodes</span><br><span class="line">ff02::2 ip6-allrouters</span><br><span class="line">172.17.0.5      64faae051d97</span><br><span class="line"></span><br><span class="line">docker run --rm -it ubuntu curl 172.17.0.5:3306</span><br><span class="line">curl: (1) Received HTTP/0.9 when not allowed</span><br></pre></td></tr></table></figure><h2 id="2-2-关闭-Container-互通"><a href="#2-2-关闭-Container-互通" class="headerlink" title="2.2 关闭 Container 互通"></a>2.2 关闭 Container 互通</h2><p>关闭互通: <code>/usr/bin/dockerd -H unix:///var/run/docker.sock --icc=false</code></p><p><code>--link name:alias</code>: 关闭互通的container，连接指定的 container。它会在/etc/hosts中生成对应的ip映射</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">docker run --rm --name=java1 -it java /bin/bash</span><br><span class="line"></span><br><span class="line">root@090a30f3504e:/<span class="comment"># ip addr</span></span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1</span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">88: eth0@if89: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP group default </span><br><span class="line">    link/ether 02:42:ac:11:00:02 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 172.17.0.2/16 brd 172.17.255.255 scope global eth0</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line"></span><br><span class="line"><span class="comment"># link 网络</span></span><br><span class="line">docker run --rm --link=java1:java2  -it java /bin/bash</span><br><span class="line">root@51a3a3e91351:/<span class="comment"># ip addr</span></span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1</span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">92: eth0@if93: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP group default </span><br><span class="line">    link/ether 02:42:ac:11:00:03 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 172.17.0.3/16 brd 172.17.255.255 scope global eth0</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line"></span><br><span class="line">root@51a3a3e91351:/<span class="comment"># cat /etc/hosts</span></span><br><span class="line">127.0.0.1       localhost</span><br><span class="line">::1     localhost ip6-localhost ip6-loopback</span><br><span class="line">fe00::0 ip6-localnet</span><br><span class="line">ff00::0 ip6-mcastprefix</span><br><span class="line">ff02::1 ip6-allnodes</span><br><span class="line">ff02::2 ip6-allrouters</span><br><span class="line">172.17.0.2      java2 090a30f3504e java1</span><br><span class="line">172.17.0.3      51a3a3e91351</span><br></pre></td></tr></table></figure><h1 id="3-基于网络的互联"><a href="#3-基于网络的互联" class="headerlink" title="3. 基于网络的互联"></a>3. 基于网络的互联</h1><h2 id="3-1-端口映射"><a href="#3-1-端口映射" class="headerlink" title="3.1 端口映射"></a>3.1 端口映射</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker run --rm -p 8306:3306 -e MYSQL_ROOT_PASSWORD=123456 -d mysql:5.7</span><br><span class="line"></span><br><span class="line">ps -ef | grep docker-proxy</span><br><span class="line">root      71225  55463  0 14:26 ?        00:00:00 /usr/bin/docker-proxy -proto tcp -host-ip 0.0.0.0 -host-port 8306 -container-ip 172.17.0.3 -container-port 3306</span><br></pre></td></tr></table></figure><h2 id="3-2-直接使用宿主机网络"><a href="#3-2-直接使用宿主机网络" class="headerlink" title="3.2 直接使用宿主机网络"></a>3.2 直接使用宿主机网络</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --rm --net=host -e MYSQL_ROOT_PASSWORD=123456 -d mysql:5.7</span><br></pre></td></tr></table></figure><h2 id="3-3-容器共用一个IP网络"><a href="#3-3-容器共用一个IP网络" class="headerlink" title="3.3 容器共用一个IP网络"></a>3.3 容器共用一个IP网络</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker run --rm --name=mysqlserver -e MYSQL_ROOT_PASSWORD=123456 -d mysql:5.7</span><br><span class="line"></span><br><span class="line"><span class="comment"># 与 mysql 共用网络</span></span><br><span class="line">docker run --rm --name javasrv --net=container:mysqlserver -it java /bin/bash</span><br></pre></td></tr></table></figure><h2 id="3-4-网络知识补充"><a href="#3-4-网络知识补充" class="headerlink" title="3.4 网络知识补充"></a>3.4 网络知识补充</h2><ul><li>docker0: nat 网桥</li><li>网桥：把物理网卡当交换机，能接收mac不是自己的报文，然后转发到正确的mac上</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">$ yum install -y bridge-utils</span><br><span class="line"></span><br><span class="line">$ brctl show</span><br><span class="line">bridge name     bridge id               STP enabled     interfaces</span><br><span class="line">docker0         8000.0242d81a56c3       no              veth6445d40</span><br><span class="line"></span><br><span class="line">$ ip link show</span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1</span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">2: ens33: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP mode DEFAULT group default qlen 1000</span><br><span class="line">    link/ether 00:0c:29:ff:1c:29 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">3: docker0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP mode DEFAULT group default </span><br><span class="line">    link/ether 02:42:d8:1a:56:c3 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">99: veth6445d40@if98: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue master docker0 state UP mode DEFAULT group default </span><br><span class="line">    link/ether 1e:<span class="built_in">cd</span>:1b:e4:1d:<span class="built_in">fc</span> brd ff:ff:ff:ff:ff:ff link-netnsid 0</span><br><span class="line"></span><br><span class="line">$ docker network ls</span><br><span class="line">NETWORK ID          NAME                DRIVER              SCOPE</span><br><span class="line">5edf46553116        bridge              bridge              <span class="built_in">local</span></span><br><span class="line">3f0e974cff7d        host                host                <span class="built_in">local</span></span><br><span class="line">016c2058322a        none                null                <span class="built_in">local</span></span><br><span class="line"></span><br><span class="line">$ docker network inspect bridge</span><br><span class="line"></span><br><span class="line"><span class="comment"># closed container，未分配IP地址</span></span><br><span class="line">$ docker run --rm --network none -it busybox /bin/sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># default</span></span><br><span class="line">$ docker run --rm --network default -it busybox /bin/sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># joined, 共享IP</span></span><br><span class="line">$ docker run --rm --network container:c1 -it busybox /bin/sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># host, 使用宿主机IP</span></span><br><span class="line">$ docker run --rm --network host -it busybox /bin/sh</span><br></pre></td></tr></table></figure><p><strong>docker 网络模型：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/docker/docker_network_module.png" alt="docker-network-module"></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Docker 自定义镜像</title>
      <link href="/2018/06/13/Docker%20%E8%87%AA%E5%AE%9A%E4%B9%89%E9%95%9C%E5%83%8F/"/>
      <url>/2018/06/13/Docker%20%E8%87%AA%E5%AE%9A%E4%B9%89%E9%95%9C%E5%83%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="1-Dockerfile-指令"><a href="#1-Dockerfile-指令" class="headerlink" title="1. Dockerfile 指令"></a>1. Dockerfile 指令</h1><ul><li><p>FROM: 指定基础镜像</p><ul><li>服务类镜像： <code>nginx</code>、<code>redis</code>、<code>mongo</code>、<code>mysql</code>、<code>httpd</code>、<code>php</code>、<code>tomcat</code></li><li>语言类镜像:  <code>node</code>、<code>openjdk</code>、<code>python</code>、<code>ruby</code>、<code>golang</code></li><li>操作系统镜像: <code>ubuntu</code>、<code>debian</code>、<code>centos</code>、<code>fedora</code>、<code>alpine</code></li><li>空白镜像：<code>scratch</code>  适用于静态编译的程序，不需要操作系统支撑。</li></ul></li><li><p>COPY: 复制文件</p></li><li><p>ADD: 支持添加URL，自动解压文件等</p></li><li><p>WORKDIR: 指定默认目录工作</p></li></ul><span id="more"></span><ul><li><p>RUN: 构建镜像时执行, 用于安装应用和软件包，创建用户等操作</p></li><li><p>CMD: 运行容器的启动命令，可被替换</p></li><li><p>ENTRYPOINT: 同CMD, 但支持额外参数</p></li><li><p>ENV: 设置环境变量</p></li><li><p>VOLUME: 定义匿名卷</p></li><li><p>EXPOSE: 曝露端口</p></li><li><p>USER:指定当前用户</p></li><li><p>HEALTHCHECK </p></li></ul><h1 id="2-使用scratch镜像"><a href="#2-使用scratch镜像" class="headerlink" title="2. 使用scratch镜像"></a>2. 使用scratch镜像</h1><h2 id="2-1-直接使用编译好的C程序-（依赖外部库，直接报错）"><a href="#2-1-直接使用编译好的C程序-（依赖外部库，直接报错）" class="headerlink" title="2.1 直接使用编译好的C程序 （依赖外部库，直接报错）"></a>2.1 直接使用编译好的C程序 （依赖外部库，直接报错）</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;hello world\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> scratch</span><br><span class="line"></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> hello /</span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> [<span class="string">&quot;/hello&quot;</span>]</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">gcc hello.c -o hello</span><br><span class="line"></span><br><span class="line">docker build -t hello .</span><br><span class="line"></span><br><span class="line">docker run --rm hello</span><br><span class="line">standard_init_linux.go:190: <span class="built_in">exec</span> user process caused <span class="string">&quot;no such file or directory&quot;</span></span><br></pre></td></tr></table></figure><h2 id="2-2-改用golang程序"><a href="#2-2-改用golang程序" class="headerlink" title="2.2 改用golang程序"></a>2.2 改用golang程序</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    fmt.Println(<span class="string">&quot;hello world&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> golang as builder</span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> /go/src/app</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> hello.go .</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> go build -ldflags=<span class="string">&quot;-w -s&quot;</span> hello.go</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">FROM</span> scratch</span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> --from=builder /go/src/app/hello /</span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> [<span class="string">&quot;/hello&quot;</span>]</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker build -t hello .</span><br><span class="line">docker run --rm hello   <span class="comment"># hello world</span></span><br></pre></td></tr></table></figure><h2 id="2-3-不使用标准库的C版本"><a href="#2-3-不使用标准库的C版本" class="headerlink" title="2.3 不使用标准库的C版本"></a>2.3 不使用标准库的C版本</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/syscall.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> DOCKER_GREETING</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> DOCKER_GREETING <span class="meta-string">&quot;Hello from Docker&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> message[] = DOCKER_GREETING <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> _start() &#123;</span><br><span class="line">    syscall(SYS_write, <span class="number">1</span>, message, <span class="keyword">sizeof</span>(message)<span class="number">-1</span>);</span><br><span class="line"></span><br><span class="line">    syscall(SYS_exit, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> scratch</span><br><span class="line"></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> hello /</span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> [<span class="string">&quot;/hello&quot;</span>]</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 静态编译 yum install glibc-static</span></span><br><span class="line">gcc -static -Os -nostartfiles -fno-asynchronous-unwind-tables -o hello hello.c</span><br><span class="line"></span><br><span class="line">docker build -t hello .</span><br><span class="line">docker run --rm hello   <span class="comment"># Hello from Docker</span></span><br></pre></td></tr></table></figure><h1 id="3-错误的文件系统操作"><a href="#3-错误的文件系统操作" class="headerlink" title="3. 错误的文件系统操作"></a>3. 错误的文件系统操作</h1><p>在 Shell 中，连续两行是同一个进程执行环境，因此前一个命令修改的内存状态，会直接影响后一个命令；而在 Dockerfile 中，这两行 RUN 命令的执行环境根本不同，是两个完全不同的容器。这就是对 Dockerfile 构建分层存储的概念不了解所导致的错误。</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">RUN</span><span class="bash"> <span class="built_in">cd</span> /app</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> <span class="built_in">echo</span> <span class="string">&quot;hello&quot;</span> &gt; world.txt  <span class="comment"># 文件并不在/app目录下</span></span></span><br></pre></td></tr></table></figure><h1 id="4-RUN-amp-CMD-amp-ENTRYPOINT"><a href="#4-RUN-amp-CMD-amp-ENTRYPOINT" class="headerlink" title="4. RUN &amp; CMD &amp; ENTRYPOINT"></a>4. RUN &amp; CMD &amp; ENTRYPOINT</h1><h2 id="4-1-docker中的进程，必须以前台方式启动"><a href="#4-1-docker中的进程，必须以前台方式启动" class="headerlink" title="4.1 docker中的进程，必须以前台方式启动"></a>4.1 docker中的进程，必须以前台方式启动</h2><p>对于容器而言，其启动程序就是容器应用进程，容器就是为了主进程而存在的，主进程退出，容器就失去了存在的意义，从而退出，其它辅助进程不是它需要关心的东西。</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CMD</span><span class="bash"> <span class="built_in">echo</span> <span class="variable">$HOME</span></span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> [<span class="string">&quot;sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;echo <span class="variable">$HOME</span>&quot;</span>] <span class="comment"># 实际执行命令</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 错误的示范</span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> service nginx start</span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> [<span class="string">&quot;sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;service nginx start&quot;</span>] <span class="comment"># 实际执行命令</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 正确的nginx启动命令, 必须以前台形式运行</span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> [<span class="string">&quot;nginx&quot;</span>, <span class="string">&quot;-g&quot;</span>, <span class="string">&quot;daemon off&quot;</span>]</span></span><br></pre></td></tr></table></figure><h2 id="4-2-支持额外参数"><a href="#4-2-支持额外参数" class="headerlink" title="4.2 支持额外参数"></a>4.2 支持额外参数</h2><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> ubuntu</span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> apt-get update \</span></span><br><span class="line"><span class="bash">    &amp;&amp; apt-get install -y curl \</span></span><br><span class="line"><span class="bash">    &amp;&amp; rm -rf /var/lob/apt/lists/*</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#CMD [&quot;curl&quot;, &quot;-s&quot;, &quot;https://cip.cc&quot;]         # 不主持额外参数</span></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="bash"> [<span class="string">&quot;curl&quot;</span>, <span class="string">&quot;-s&quot;</span>, <span class="string">&quot;https://cip.cc&quot;</span>]  <span class="comment"># 支持额外参数，比如 curl -i</span></span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker build -t myip .</span><br><span class="line"></span><br><span class="line">docker run --rm myip</span><br><span class="line">docker run --rm myip -i   <span class="comment"># -i, 获取HTTP请求头，但这里报错，无法将该参数传入</span></span><br></pre></td></tr></table></figure><h2 id="4-3-应用运行前的准备工作"><a href="#4-3-应用运行前的准备工作" class="headerlink" title="4.3 应用运行前的准备工作"></a>4.3 应用运行前的准备工作</h2><p>某些应用，需要在运行主进程钱，做一些准备工作。mysql需要提前进行数据库配置、初始化工作</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> alpine:<span class="number">3.4</span></span><br><span class="line">...</span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> addgroup -S redis &amp;&amp; adduser -S -G redis redis</span></span><br><span class="line">...</span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="bash"> [<span class="string">&quot;docker-entrypoint.sh&quot;</span>]</span></span><br><span class="line">  </span><br><span class="line"><span class="keyword">USER</span> redis  </span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">6379</span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> [ <span class="string">&quot;redis-server&quot;</span> ]</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">...</span><br><span class="line"><span class="comment"># allow the container to be started with `--user`</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&#x27;redis-server&#x27;</span> -a <span class="string">&quot;<span class="subst">$(id -u)</span>&quot;</span> = <span class="string">&#x27;0&#x27;</span> ]; <span class="keyword">then</span></span><br><span class="line">    chown -R redis .</span><br><span class="line">    <span class="built_in">exec</span> su-exec redis <span class="string">&quot;<span class="variable">$0</span>&quot;</span> <span class="string">&quot;<span class="variable">$@</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">  </span><br><span class="line"><span class="built_in">exec</span> <span class="string">&quot;<span class="variable">$@</span>&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># id 命令将替换默认的 CMD [&quot;redis-server&quot;] 命令</span></span><br><span class="line">docker run -it redis id</span><br><span class="line"></span><br><span class="line"><span class="comment"># 正确的启动方式</span></span><br><span class="line">docker run --name redis-srv -d redis</span><br></pre></td></tr></table></figure><h1 id="5-其他示例"><a href="#5-其他示例" class="headerlink" title="5. 其他示例"></a>5. 其他示例</h1><h2 id="5-1-命令细节说明"><a href="#5-1-命令细节说明" class="headerlink" title="5.1 命令细节说明"></a>5.1 命令细节说明</h2><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> busybox</span><br><span class="line"><span class="keyword">MAINTAINER</span> <span class="string">&quot;eli.he@live.cn&quot;</span></span><br><span class="line"><span class="comment"># LABEL maintainer=&quot;eli.he@live.cn&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ENV</span> WEB_ROOT=<span class="string">&quot;/data/www/html/&quot;</span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> <span class="variable">$&#123;WEB_ROOT&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> index.html .</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> app ./app  <span class="comment"># 拷贝目录时，目录不会自动创建，需要指定</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ADD</span><span class="bash"> http://nginx.org/download/nginx-1.19.2.tar.gz /usr/<span class="built_in">local</span>/src/   <span class="comment"># 只下载，不解压</span></span></span><br><span class="line"><span class="keyword">ADD</span><span class="bash"> nginx-1.19.2.tar.gz /usr/<span class="built_in">local</span>/src/  <span class="comment"># 自动解压</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">VOLUME</span><span class="bash"> /data/www/mysql</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">80</span>/tcp <span class="number">443</span>/tcp <span class="comment"># 容器运行时，-P 自动暴露</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># RUN 打包镜像时运行</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> <span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/ &amp;&amp; tar xf nginx-1.19.2.tar.gz</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># CMD 容器启动时运行，可被docker run中指定的命令替换</span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> /bin/httpd -f -h <span class="variable">$WEB_ROOT</span>   <span class="comment"># ok</span></span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> [<span class="string">&quot;/bin/httpd&quot;</span>, <span class="string">&quot;-f&quot;</span>, <span class="string">&quot;-h <span class="variable">$WEB_ROOT</span>&quot;</span>]  <span class="comment"># 无法解析变量</span></span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> [<span class="string">&quot;/bin/sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;/bin/httpd&quot;</span>, <span class="string">&quot;-f&quot;</span>, <span class="string">&quot;-h <span class="variable">$WEB_ROOT</span>&quot;</span>] <span class="comment"># 能解析，但执行完shell立即退出</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ENTRYPOINT 指定容器的默认运行程序，docker run中指定的命令，无法替换它，只能被当初参数传递给该默认程序</span></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="bash"> /bin/httpd -f -h <span class="variable">$WEB_ROOT</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 注意： CMD &amp; ENTRYPOINT 同时存在时，CMD 中的数据被当成参数传递给 ENTRYPOINT</span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> [<span class="string">&quot;/bin/httpd&quot;</span>, <span class="string">&quot;-f&quot;</span>, <span class="string">&quot;-h <span class="variable">$WEB_ROOT</span>&quot;</span>]</span></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="bash"> [<span class="string">&quot;/bin/sh&quot;</span>, <span class="string">&quot;-c&quot;</span>]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">HEALTHCHECK</span><span class="bash"> --interval=5m --timeout=3s \</span></span><br><span class="line"><span class="bash">  CMD curl -f http://localhost/ || <span class="built_in">exit</span> 1</span></span><br></pre></td></tr></table></figure><h2 id="5-2-自定义nginx镜像"><a href="#5-2-自定义nginx镜像" class="headerlink" title="5.2 自定义nginx镜像"></a>5.2 自定义nginx镜像</h2><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> nginx:<span class="number">1.19</span>.<span class="number">2</span>-alpine</span><br><span class="line"><span class="keyword">LABEL</span><span class="bash"> maintainer=<span class="string">&quot;eli.he@live.cn&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ENV</span> WEB_ROOT=<span class="string">&quot;/data/www/html/&quot;</span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> <span class="variable">$WEB_ROOT</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ADD</span><span class="bash"> index.html ./</span></span><br><span class="line"><span class="keyword">ADD</span><span class="bash"> entrypoint.sh /bin/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> chmod +x /bin/entrypoint.sh</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">80</span>/tcp</span><br><span class="line"></span><br><span class="line"><span class="keyword">HEALTHCHECK</span><span class="bash"> --start-period=3s CMD curl -o - -q http://<span class="variable">$&#123;IP:-0.0.0.0&#125;</span>:<span class="variable">$&#123;PORT:-80&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> [<span class="string">&quot;/usr/sbin/nginx&quot;</span>, <span class="string">&quot;-g&quot;</span>, <span class="string">&quot;daemon off;&quot;</span>]</span></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="bash"> [<span class="string">&quot;/bin/entrypoint.sh&quot;</span>]</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment"># entrypoint.sh</span></span><br><span class="line"></span><br><span class="line">cat &gt; /etc/nginx/conf.d/http.conf &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">server &#123;</span></span><br><span class="line"><span class="string">    server_name $HOSTNAME;</span></span><br><span class="line"><span class="string">    listen $&#123;IP:-0.0.0.0&#125;:$&#123;PORT:-80&#125;;</span></span><br><span class="line"><span class="string">    root $&#123;WEB_ROOT:-/usr/share/nginx/html&#125;;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">exec</span> <span class="string">&quot;<span class="variable">$@</span>&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker build -t myweb:v0.1 .</span><br><span class="line"></span><br><span class="line">docker run --name web1 -P -d myweb:v0.1</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Docker 命令</title>
      <link href="/2018/06/12/Docker%20%E5%91%BD%E4%BB%A4/"/>
      <url>/2018/06/12/Docker%20%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="1-基本命令"><a href="#1-基本命令" class="headerlink" title="1. 基本命令"></a>1. 基本命令</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker info</span><br><span class="line"></span><br><span class="line">docker version</span><br><span class="line"></span><br><span class="line">docker system df    <span class="comment"># 存储统计</span></span><br><span class="line"></span><br><span class="line">docker login https://hub.elihe.io</span><br><span class="line">docker <span class="built_in">logout</span></span><br></pre></td></tr></table></figure><span id="more"></span><h1 id="2-镜像"><a href="#2-镜像" class="headerlink" title="2. 镜像"></a>2. 镜像</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br><span class="line">docker image ls</span><br><span class="line"></span><br><span class="line">docker search nginx</span><br><span class="line">docker pull nginx</span><br><span class="line"></span><br><span class="line">docker tag nginx hub.elihe.io/mylib/nginx:v0.1</span><br><span class="line">docker push hub.elihe.io/mylib/nginx:v0.1</span><br><span class="line"></span><br><span class="line">docker run --name myweb -p 80:80 -d nginx</span><br><span class="line">docker commit -p myweb hub.elihe.io/mylib/nginx:v0.2</span><br><span class="line"></span><br><span class="line">docker <span class="built_in">history</span> hub.elihe.io/mylib/nginx:v0.2</span><br><span class="line"></span><br><span class="line">docker save -o myweb0.2.tar hub.elihe.io/mylib/nginx:v0.2</span><br><span class="line">docker load -i myweb0.2.tar</span><br><span class="line"></span><br><span class="line">docker <span class="built_in">export</span> myweb | gzip &gt; myweb.tar.gz</span><br><span class="line">docker import myweb.tar.gz hub.elihe.io/mylib/nginx:v0.3  <span class="comment"># to image</span></span><br><span class="line"></span><br><span class="line">docker rmi -f hub.elihe.io/mylib/nginx:v0.3 </span><br><span class="line"></span><br><span class="line">docker image prune      <span class="comment"># 清理 dangling 镜像</span></span><br><span class="line">docker image prune -a   <span class="comment"># 清理所有没有关联容器的镜像</span></span><br></pre></td></tr></table></figure><h2 id="2-1-特殊镜像"><a href="#2-1-特殊镜像" class="headerlink" title="2.1 特殊镜像"></a>2.1 特殊镜像</h2><h3 id="2-1-1-虚悬镜像-dangling-image"><a href="#2-1-1-虚悬镜像-dangling-image" class="headerlink" title="2.1.1 虚悬镜像(dangling image)"></a>2.1.1 虚悬镜像(dangling image)</h3><p>仓库名、标签均为 <none> 的镜像 （docker pull/build 时，原有的镜像名被占用，会导致此种情况)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ docker image ls -f dangling=<span class="literal">true</span></span><br><span class="line">REPOSITORY TAG IMAGE ID CREATED SIZE</span><br><span class="line">&lt;none&gt; &lt;none&gt; 00285df0df87 5 days ago </span><br><span class="line"></span><br><span class="line">$ docker image prune  <span class="comment"># 删除虚悬镜像</span></span><br></pre></td></tr></table></figure><h3 id="2-1-2-中间层镜像"><a href="#2-1-2-中间层镜像" class="headerlink" title="2.1.2 中间层镜像"></a>2.1.2 中间层镜像</h3><p>为了加速镜像构建、重复利用资源，Docker 会利用 中间层镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker image ls -a</span><br></pre></td></tr></table></figure><h1 id="3-容器"><a href="#3-容器" class="headerlink" title="3. 容器"></a>3. 容器</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">docker create --name myweb -p 80:80 --cpu-shares=1024 nginx <span class="comment"># cpu 占用100%</span></span><br><span class="line">docker start myweb</span><br><span class="line">docker stop myweb</span><br><span class="line">docker pause myweb</span><br><span class="line">docker unpause myweb</span><br><span class="line"></span><br><span class="line">docker ps</span><br><span class="line">docker <span class="built_in">kill</span> myweb</span><br><span class="line">docker rm myweb</span><br><span class="line"></span><br><span class="line"><span class="comment"># Ctrl+P Ctrl+Q 切换到后台运行, 变成守护式容器</span></span><br><span class="line">docker run --name <span class="built_in">test</span> -it alpine /bin/sh</span><br><span class="line">docker attach <span class="built_in">test</span>   <span class="comment"># Attach local standard input, output, and error streams to a running container, exit后，容器自动停止</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 守护式容器, 适合有常驻进程的镜像</span></span><br><span class="line">docker run --name myweb2 -p 8080:80 -d nginx</span><br><span class="line">docker <span class="built_in">exec</span> -it myweb2 /bin/sh</span><br><span class="line"></span><br><span class="line">docker logs -tf --tail=10 myweb2  <span class="comment"># 查看容器日志. -f --follows, -t --timestamps</span></span><br><span class="line">docker inspect myweb2</span><br><span class="line"></span><br><span class="line">docker port myweb2</span><br><span class="line">docker top myweb2    <span class="comment"># 容器进程</span></span><br><span class="line">docker stats myweb2  <span class="comment"># 实时监控，相当于进入容器执行 top</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 宿主机与容器的文件拷贝</span></span><br><span class="line">docker cp myweb2:/usr/share/nginx/html/50x.html .</span><br><span class="line">docker cp index.html myweb2:/usr/share/nginx/html/</span><br></pre></td></tr></table></figure><h2 id="3-1-什么是守护式容器？"><a href="#3-1-什么是守护式容器？" class="headerlink" title="3.1 什么是守护式容器？"></a>3.1 什么是守护式容器？</h2><ul><li>能够长期运行</li><li>没有交互式会话</li><li>适合运行应用程序和服务</li></ul><h2 id="3-2-CPU-限制"><a href="#3-2-CPU-限制" class="headerlink" title="3.2 CPU 限制"></a>3.2 CPU 限制</h2><ul><li><code>-c, --cpu-shares</code>: 1024 means 100% of the CPU</li><li><code>--cpuset-cpus</code>: 使用那些 CPU</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run --cpu-shares=512   <span class="comment"># 50% CPU</span></span><br><span class="line">docker run --cpuset-cpus=0,2,4  <span class="comment"># 使用0,2,4三个 CPU</span></span><br></pre></td></tr></table></figure><h2 id="3-3-内存限制"><a href="#3-3-内存限制" class="headerlink" title="3.3 内存限制"></a>3.3 内存限制</h2><ul><li><code>-m, --memory</code>: 限制内存使用</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it -m 300M ubuntu /bin/sh</span><br></pre></td></tr></table></figure><h2 id="3-4-访问宿主机设备限制"><a href="#3-4-访问宿主机设备限制" class="headerlink" title="3.4 访问宿主机设备限制"></a>3.4 访问宿主机设备限制</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Mount a FUSE based fs</span></span><br><span class="line">docker run --rm -it --cap-add SYS_ADMIN --device /dev/fuse sshfs</span><br><span class="line"></span><br><span class="line"><span class="comment"># give access to a single device</span></span><br><span class="line">docker run -it --device=/dev/ttyUSB0 ubuntu /bin/sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># give access to all devices</span></span><br><span class="line">docker run -it --privileged -v /dev/bus/usb:/dev/bus/usb ubuntu /bin/sh</span><br></pre></td></tr></table></figure><h1 id="4-网络"><a href="#4-网络" class="headerlink" title="4. 网络"></a>4. 网络</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">docker network create</span><br><span class="line">docker network rm</span><br><span class="line"></span><br><span class="line">docker network connect</span><br><span class="line">docker network disconnect</span><br><span class="line"></span><br><span class="line">docker network ls</span><br><span class="line">NETWORK ID          NAME                DRIVER              SCOPE</span><br><span class="line">5edf46553116        bridge              bridge              <span class="built_in">local</span></span><br><span class="line">3f0e974cff7d        host                host                <span class="built_in">local</span></span><br><span class="line">016c2058322a        none                null                <span class="built_in">local</span></span><br><span class="line"></span><br><span class="line">docker network inspect bridge</span><br></pre></td></tr></table></figure><h1 id="5-Volumes"><a href="#5-Volumes" class="headerlink" title="5. Volumes"></a>5. Volumes</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker volume create</span><br><span class="line">docker volume rm</span><br><span class="line"></span><br><span class="line">docker volume ls</span><br><span class="line">docker volume inspect</span><br></pre></td></tr></table></figure><h1 id="6-常用命令总结"><a href="#6-常用命令总结" class="headerlink" title="6. 常用命令总结"></a>6. 常用命令总结</h1><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/docker/docker-commands-diagram.png" alt="docker-commands-diagram">  </p><h1 id="7-简单示例"><a href="#7-简单示例" class="headerlink" title="7. 简单示例"></a>7. 简单示例</h1><h2 id="7-1-MySQL"><a href="#7-1-MySQL" class="headerlink" title="7.1 MySQL"></a>7.1 MySQL</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker pull mysql:5.7</span><br><span class="line"></span><br><span class="line">docker run --name mysqlsrv -e MYSQL_ROOT_PASSWORD=123456 -p 3306:3306 -d mysql:5.7 </span><br><span class="line"></span><br><span class="line">docker <span class="built_in">exec</span> -it mysqlsrv /bin/bash</span><br></pre></td></tr></table></figure><h2 id="7-2-容器中部署静态网站"><a href="#7-2-容器中部署静态网站" class="headerlink" title="7.2 容器中部署静态网站"></a>7.2 容器中部署静态网站</h2><p>Nginx部署流程</p><ul><li>创建映射80端口的交互式容器</li><li>安装Nginx</li><li>安装文本编辑器vim</li><li>创建静态页面</li><li>修改Nginx配置文件</li><li>运行Ngix</li><li>验证网站访问</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">docker run --name web -p 8080:80 -it ubuntu /bin/bash</span><br><span class="line"></span><br><span class="line">root@ecd4887cf28d:/<span class="comment">#</span></span><br><span class="line"></span><br><span class="line">apt-get update</span><br><span class="line">apt-get install -y nginx vim</span><br><span class="line"></span><br><span class="line">mkdir -p /var/www/html</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&lt;h1&gt;Nginx in Docker&lt;/h1&gt;&#x27;</span> &gt; /var/www/html/index.html</span><br><span class="line"></span><br><span class="line">vi /etc/nginx/sites-enabled/default</span><br><span class="line">server &#123;</span><br><span class="line">    root /var/www/html;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">nginx</span><br><span class="line">ps -ef</span><br><span class="line"></span><br><span class="line">CTRL-P, CTRL-Q  <span class="comment"># 退出容器，容器转后台运行</span></span><br><span class="line"></span><br><span class="line">docker port web <span class="comment"># 查看端口</span></span><br><span class="line"></span><br><span class="line">curl http://127.0.0.1:8080  <span class="comment"># 访问网页</span></span><br><span class="line"></span><br><span class="line">docker stop web  <span class="comment"># 停止容器</span></span><br><span class="line">docker start -i web  <span class="comment"># 运行容器</span></span><br><span class="line">docker <span class="built_in">exec</span> web nginx  <span class="comment"># 启动nginx</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Docker 安装</title>
      <link href="/2018/06/11/Docker%20%E5%AE%89%E8%A3%85/"/>
      <url>/2018/06/11/Docker%20%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="1-CentOS"><a href="#1-CentOS" class="headerlink" title="1. CentOS"></a>1. CentOS</h1><h2 id="1-1-安装依赖包"><a href="#1-1-安装依赖包" class="headerlink" title="1.1 安装依赖包"></a>1.1 安装依赖包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 更换yum源</span></span><br><span class="line">mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</span><br><span class="line"></span><br><span class="line">curl http://mirrors.aliyun.com/repo/Centos-7.repo -o /etc/yum.repos.d/CentOS-Base.repo</span><br><span class="line"></span><br><span class="line">yum makecache</span><br><span class="line"></span><br><span class="line">yum install -y conntrack ntpdate ntp ipvsadm ipset iptables sysstat wget vim net-tools git</span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="1-2-设置防火墙规则"><a href="#1-2-设置防火墙规则" class="headerlink" title="1.2 设置防火墙规则"></a>1.2 设置防火墙规则</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld &amp;&amp; systemctl <span class="built_in">disable</span> firewalld</span><br><span class="line"></span><br><span class="line">yum install -y iptables-services</span><br><span class="line"></span><br><span class="line">systemctl start iptables &amp;&amp; systemctl <span class="built_in">enable</span> iptables</span><br><span class="line"></span><br><span class="line">iptables -F &amp;&amp; service iptables save</span><br></pre></td></tr></table></figure><h2 id="1-3-关闭SELINUX"><a href="#1-3-关闭SELINUX" class="headerlink" title="1.3 关闭SELINUX"></a>1.3 关闭SELINUX</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setenforce 0 &amp;&amp; sed -i <span class="string">&#x27;s/^SELINUX=.*/SELINUX=disabled/&#x27;</span> /etc/selinux/config</span><br></pre></td></tr></table></figure><h2 id="1-4-调整时区"><a href="#1-4-调整时区" class="headerlink" title="1.4 调整时区"></a>1.4 调整时区</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">timedatectl set-timezone Asia/Shanghai</span><br><span class="line">date -s 10:52:50</span><br><span class="line">hwclock -w</span><br><span class="line"></span><br><span class="line">timedatectl set-local-rtc 0  <span class="comment"># 硬件时钟设置为协调UTC (操作)</span></span><br><span class="line">timedatectl set-local-rtc 1  <span class="comment"># 硬件时钟设置为协调本地时间</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启依赖时间的服务</span></span><br><span class="line">systemctl restart rsyslog   </span><br><span class="line">systemctl restart crond</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启时间同步</span></span><br><span class="line">crontab -e</span><br><span class="line">*/30 * * * * /usr/sbin/ntpdate ntp1.aliyun.com</span><br></pre></td></tr></table></figure><h2 id="1-5-关闭系统冗余服务"><a href="#1-5-关闭系统冗余服务" class="headerlink" title="1.5 关闭系统冗余服务"></a>1.5 关闭系统冗余服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop postfix &amp;&amp; systemctl <span class="built_in">disable</span> postfix</span><br></pre></td></tr></table></figure><h2 id="1-6-设置rsyslogd-和-systemd-journald"><a href="#1-6-设置rsyslogd-和-systemd-journald" class="headerlink" title="1.6 设置rsyslogd 和 systemd journald"></a>1.6 设置rsyslogd 和 systemd journald</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 持久化保存日志目录</span></span><br><span class="line">mkdir -p /var/<span class="built_in">log</span>/journal</span><br><span class="line"></span><br><span class="line"><span class="comment"># 持久化日志配置</span></span><br><span class="line">mkdir -p /etc/systemd/journald.conf.d</span><br><span class="line"></span><br><span class="line">cat &gt; /etc/systemd/journald.conf.d/99-prophet.conf &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">[Journal]</span></span><br><span class="line"><span class="string"># 持久化保存到磁盘</span></span><br><span class="line"><span class="string">Storage-persistent</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 压缩日志</span></span><br><span class="line"><span class="string">Compress=yes</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">SyncIntervalSec=5m</span></span><br><span class="line"><span class="string">RateLimitInterval=30s</span></span><br><span class="line"><span class="string">RateLimitBurst=1000</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 最大占用空间</span></span><br><span class="line"><span class="string">SystemMaxUser=10G</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 单个日志文件最大</span></span><br><span class="line"><span class="string">SystemMaxFileSize=200M</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 日志保存时间</span></span><br><span class="line"><span class="string">MaxRetentionSec=2week</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 不将日志转发到 syslog</span></span><br><span class="line"><span class="string">ForwardToSyslog=no</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">systemctl restart systemd-journald</span><br></pre></td></tr></table></figure><h2 id="1-7-安装Docker"><a href="#1-7-安装Docker" class="headerlink" title="1.7 安装Docker"></a>1.7 安装Docker</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line"></span><br><span class="line">yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 选取合适的docker版本, 默认安装最新版</span></span><br><span class="line">yum list docker-ce --showduplicates | sort -r   </span><br><span class="line"></span><br><span class="line">yum update -y &amp;&amp; yum install -y docker-ce</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动docker</span></span><br><span class="line">systemctl start docker &amp;&amp; systemctl <span class="built_in">enable</span> docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置docker</span></span><br><span class="line">mkdir -p /etc/docker</span><br><span class="line">cat &gt; /etc/docker/daemon.json &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  &quot;exec-opts&quot;: [&quot;native.cgroupdriver=systemd&quot;],</span></span><br><span class="line"><span class="string">  &quot;log-driver&quot;: &quot;json-file&quot;,</span></span><br><span class="line"><span class="string">  &quot;log-opts&quot;: &#123;</span></span><br><span class="line"><span class="string">    &quot;max-size&quot;: &quot;100m&quot;</span></span><br><span class="line"><span class="string">  &#125;,</span></span><br><span class="line"><span class="string">  &quot;registry-mirrors&quot;: [&quot;https://pvjhx571.mirror.aliyuncs.com&quot;]</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">systemctl daemon-reload &amp;&amp; systemctl restart docker</span><br></pre></td></tr></table></figure><h2 id="1-8-支持代理"><a href="#1-8-支持代理" class="headerlink" title="1.8 支持代理"></a>1.8 支持代理</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /etc/systemd/system/docker.service.d</span><br><span class="line"></span><br><span class="line">cat &gt; /etc/systemd/system/docker.service.d/http-proxy.conf &lt;&lt;<span class="string">EOF </span></span><br><span class="line"><span class="string">[Service] </span></span><br><span class="line"><span class="string">Environment=&quot;ALL_PROXY=socks5://192.168.31.20:1080/&quot;</span></span><br><span class="line"><span class="string">Environment=&quot;NO_PROXY=localhost,127.0.0.1,docker.io,hub.elihe.io,pvjhx571.mirror.aliyuncs.com&quot;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">systemctl daemon-reload &amp;&amp; systemctl restart docker</span><br></pre></td></tr></table></figure><h2 id="1-9-开启远程访问"><a href="#1-9-开启远程访问" class="headerlink" title="1.9 开启远程访问"></a>1.9 开启远程访问</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/docker/daemon.json</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;hosts&quot;</span>: [<span class="string">&quot;tcp://0.0.0.0:2357&quot;</span>, <span class="string">&quot;unix:///var/run/docker.sock&quot;</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># -H, --host</span></span><br><span class="line">docker -H 192.168.31.41 network show</span><br></pre></td></tr></table></figure><h1 id="2-Ubuntu"><a href="#2-Ubuntu" class="headerlink" title="2. Ubuntu"></a>2. Ubuntu</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line"></span><br><span class="line">sudo apt-get install apt-transport-https ca-certificates curl software-properties-common</span><br><span class="line"></span><br><span class="line">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</span><br><span class="line"></span><br><span class="line">sudo add-apt-repository <span class="string">&quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu <span class="subst">$(lsb_release -cs)</span> stable&quot;</span></span><br><span class="line">sudo add-apt-repository --remove <span class="string">&quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu <span class="subst">$(lsb_release -cs)</span> stable&quot;</span></span><br><span class="line"></span><br><span class="line">sudo add-apt-repository <span class="string">&quot;deb [arch=amd64] https://mirrors.aliyun.com/docker-ce/linux/ubuntu <span class="subst">$(lsb_release -cs)</span> stable&quot;</span></span><br><span class="line"></span><br><span class="line">sudo apt-get update</span><br><span class="line"></span><br><span class="line">sudo apt-get install docker-ce</span><br><span class="line"></span><br><span class="line"><span class="comment"># 避免执行docker命令使用sudo, 不使用</span></span><br><span class="line">sudo usermod -aG docker <span class="variable">$USER</span>   </span><br></pre></td></tr></table></figure><h1 id="3-MacOS"><a href="#3-MacOS" class="headerlink" title="3. MacOS"></a>3. MacOS</h1><p>修改容器配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 停止容器</span></span><br><span class="line">docker stop mysql-master</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取容器Id</span></span><br><span class="line">docker inspect mysql-master | grep -w <span class="string">&quot;Id&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入docker虚拟镜像 (MacOS)</span></span><br><span class="line"><span class="built_in">cd</span> ~/Library/Containers/com.docker.docker/Data/vms/0</span><br><span class="line">screen tty</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑配置文件</span></span><br><span class="line"><span class="built_in">cd</span> /var/lib/docker/containers/2d8790feefd411d081791eef1b07b8499d72cd7a8d0f8af7b2e306f85305da52</span><br><span class="line">-rw-------    1 root     root          3262 Jun 17 13:38 config.v2.json</span><br><span class="line">-rw-r--r--    1 root     root          1633 Jun 17 13:39 hostconfig.json</span><br><span class="line"></span><br><span class="line"><span class="comment"># 退出docker镜像</span></span><br><span class="line">Ctrl-A-D</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询screen进程，并彻底退出 （非常重要）</span></span><br><span class="line">screen -ls</span><br><span class="line">There is a screen on:</span><br><span class="line">47007.ttys007.MacPro(Detached)</span><br><span class="line">1 Socket <span class="keyword">in</span> /var/folders/td/m3fv0wrd27d4ydwl5hdmqyjm0000gn/T/.screen.</span><br><span class="line"></span><br><span class="line"><span class="built_in">kill</span> -9 47007</span><br><span class="line"></span><br><span class="line">screen -wipe</span><br><span class="line">There is a screen on:</span><br><span class="line">47007.ttys007.MacPro(Removed)</span><br><span class="line">1 socket wiped out.</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启docker进程 (必须，否则修改的配置不生效)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查容器的配置是否已更新</span></span><br><span class="line">docker inspect mysql-master</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动容器</span></span><br><span class="line">docker start mysql-master</span><br></pre></td></tr></table></figure><h1 id="4-图形化管理工具"><a href="#4-图形化管理工具" class="headerlink" title="4. 图形化管理工具"></a>4. 图形化管理工具</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker volume create portainer_data</span><br><span class="line"></span><br><span class="line">docker run -d -p 8000:8000 -p 9000:9000 --name=portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer</span><br><span class="line"></span><br><span class="line">http://192.168.31.30:9000  eli@1234</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Docker 简介</title>
      <link href="/2018/06/10/2018-06-10-Docker-%E7%AE%80%E4%BB%8B/"/>
      <url>/2018/06/10/2018-06-10-Docker-%E7%AE%80%E4%BB%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="1-什么是容器"><a href="#1-什么是容器" class="headerlink" title="1. 什么是容器"></a>1. 什么是容器</h1><ul><li>一种虚拟化的方案</li><li>操作系统级别的虚拟化</li><li>只能运行相同或相似内核的操作系统</li><li>依赖Linux内核特性：Namespace和Cgroups(Control Group)</li></ul><h1 id="2-什么是Docker"><a href="#2-什么是Docker" class="headerlink" title="2. 什么是Docker"></a>2. 什么是Docker</h1><p>将应用程序自动部署到容器</p><p>Boot2Docker: 本质是一个Linux轻量级VM，用于Windows/macOS系统上使用Docker （开发、测试使用)</p><span id="more"></span><h1 id="3-Docker的使用场景"><a href="#3-Docker的使用场景" class="headerlink" title="3. Docker的使用场景"></a>3. Docker的使用场景</h1><ul><li><p>使用Docker容器开发、测试、部署服务</p></li><li><p>创建隔离的运行环境</p></li><li><p>搭建测试环境</p></li><li><p>构建多用户的平台即服务(PaaS)基础设施</p></li><li><p>提供软件即服务(SaaS)应用程序</p></li><li><p>高性能、超大规模的宿主机部署</p></li></ul><h1 id="4-Docker的基本组成"><a href="#4-Docker的基本组成" class="headerlink" title="4. Docker的基本组成"></a>4. Docker的基本组成</h1><ul><li>Docker Client</li><li>Docker Daemon</li><li>Docker Image</li><li>Docker Container</li><li>Docker Registry</li></ul><p>Docker的三要素：仓库、镜像、容器</p><h2 id="4-1-客户端-守护进程"><a href="#4-1-客户端-守护进程" class="headerlink" title="4.1 客户端/守护进程"></a>4.1 客户端/守护进程</h2><ul><li>C/S架构</li><li>本地/远端</li></ul><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/docker/docker_client.png" alt="docker_client"></p><h2 id="4-2-Docker-Image镜像"><a href="#4-2-Docker-Image镜像" class="headerlink" title="4.2 Docker Image镜像"></a>4.2 Docker Image镜像</h2><ul><li>容器的基石</li><li>层叠的只读文件系统</li><li>联合加载(union mount)</li></ul><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/docker/docker_image.png" alt="docker_image"></p><p>镜像：多个镜像层 (Image Layer) 叠加而成的只读文件系统 (UnionFile System)</p><ul><li>bootfs: 最底层的文件系统，用于系统引导，包含bootloader和kernel，容器启动后会被卸载以节约内存资源</li><li>rootfs： 位于bootfs之上，为容器的根文件系统<ul><li>传统模式：系统启动时，内核以“只读”模式挂载rootfs，完整性自检后，再重新挂载为“读写”模式</li><li>docker：rootfs由内核挂载为“只读”模式，而后通过“联合挂载”技术额外挂载一个“可写”层</li></ul></li></ul><h2 id="4-3-Docker-Container-容器"><a href="#4-3-Docker-Container-容器" class="headerlink" title="4.3 Docker Container 容器"></a>4.3 Docker Container 容器</h2><ul><li>通过镜像启动</li><li>启动和执行阶段</li><li>写时复制(copy on write)</li></ul><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/docker/docker_container.png" alt="docker_container"></p><p>容器：在镜像的基础上，增加了一个读写层 (Top Layer)。运行状态下的容器，由一个可读写的文件系统、隔离的进程空间和进程构成。</p><h2 id="4-4-Docker-Registry-仓库"><a href="#4-4-Docker-Registry-仓库" class="headerlink" title="4.4 Docker Registry 仓库"></a>4.4 Docker Registry 仓库</h2><ul><li>公有</li><li>私有</li><li>Docker Hub</li></ul><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/docker/docker_structure.png" alt="docker_structure"></p><h1 id="5-Docker容器相关技术简介"><a href="#5-Docker容器相关技术简介" class="headerlink" title="5. Docker容器相关技术简介"></a>5. Docker容器相关技术简介</h1><h2 id="5-1-依赖的Linux内核特性"><a href="#5-1-依赖的Linux内核特性" class="headerlink" title="5.1 依赖的Linux内核特性"></a>5.1 依赖的Linux内核特性</h2><ul><li>Namespaces 命名空间</li><li>Cgroups(Control Group) 控制组</li></ul><h3 id="5-1-1-Namespaces-容器的独立资源"><a href="#5-1-1-Namespaces-容器的独立资源" class="headerlink" title="5.1.1 Namespaces 容器的独立资源"></a>5.1.1 Namespaces 容器的独立资源</h3><ul><li>Mount</li><li>PID</li><li>Net</li><li>IPC</li><li>UTS: Unix Time-Sharing, allow a single system to appear to have different host and domain names to different processes.</li><li>User</li></ul><h3 id="5-1-2-CGroups-控制组"><a href="#5-1-2-CGroups-控制组" class="headerlink" title="5.1.2 CGroups 控制组"></a>5.1.2 CGroups 控制组</h3><ul><li>资源限制：对进程组使用的资源总额进行限制。如设定应用运行时使用内存的上限，一旦超过这个配额就发出OOM（Out of Memory）</li><li>优先级分配：通过分配cpu时间片数量及硬盘io，带宽大小来控制进程的优先级</li><li>资源统计：统计系统的资源使用量，如CPU使用量，内存用量等</li><li>进程控制：可以对进程组执行挂起、恢复等操作</li></ul><h2 id="5-2-Docker容器的能力"><a href="#5-2-Docker容器的能力" class="headerlink" title="5.2 Docker容器的能力"></a>5.2 Docker容器的能力</h2><ul><li>文件系统隔离</li><li>进程隔离</li><li>网络隔离</li><li>资源隔离和分组：使用cgroups将CPU和内存之类的资源，独立分配给每个Docker容器</li></ul><h2 id="5-3-LXC-Linux-Containers"><a href="#5-3-LXC-Linux-Containers" class="headerlink" title="5.3 LXC (Linux Containers)"></a>5.3 LXC (Linux Containers)</h2><p>基于容器的操作系统级别的虚拟化技术，借助于namesapce的隔离机制和cgroups限额功能，LXC提供了一套统一的API和工具来建立和管理container。</p><p>LXC提供一个共享kernel的OS级虚拟化方法，在执行时不用重复加载kernel，且conatiner的kernel与host共享，因此大大加快了container的启动过程，并显著减少了内存消耗。</p><h2 id="5-4-分成文件系统"><a href="#5-4-分成文件系统" class="headerlink" title="5.4 分成文件系统"></a>5.4 分成文件系统</h2><p>层状文件系统，当进程需要修改文件时，AUFS创建该文件的一个副本。</p><ul><li>aufs: ubuntu, 未合入内核</li><li>devicemapper (dm): centos, 性能差</li><li>overlay: 合入内核，当前主流</li></ul>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Go Websocket</title>
      <link href="/2018/03/02/Go%20Websocket/"/>
      <url>/2018/03/02/Go%20Websocket/</url>
      
        <content type="html"><![CDATA[<h1 id="1-安装支撑库"><a href="#1-安装支撑库" class="headerlink" title="1. 安装支撑库"></a>1. 安装支撑库</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go get -u github.com/gorilla/websocket</span><br></pre></td></tr></table></figure><span id="more"></span><h1 id="2-图灵机器人服务"><a href="#2-图灵机器人服务" class="headerlink" title="2. 图灵机器人服务"></a>2. 图灵机器人服务</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> (</span><br><span class="line">USERID = <span class="string">&quot;123456&quot;</span></span><br><span class="line">APIKEY = <span class="string">&quot;11337ff965a546b1ae22576f160f1a08&quot;</span></span><br><span class="line">URL    = <span class="string">&quot;http://openapi.tuling123.com/openapi/api/v2&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Request <span class="keyword">struct</span> &#123;</span><br><span class="line">ReqType    <span class="keyword">int</span>                    <span class="string">`json:&quot;reqType&quot;`</span></span><br><span class="line">Perception <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125; <span class="string">`json:&quot;perception&quot;`</span></span><br><span class="line">UserInfo   <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span>      <span class="string">`json:&quot;userInfo&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Result <span class="keyword">struct</span> &#123;</span><br><span class="line">ResultType <span class="keyword">string</span>                 <span class="string">`json:&quot;resultType&quot;`</span></span><br><span class="line">Values     <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125; <span class="string">`json:&quot;values&quot;`</span></span><br><span class="line">GroupType  <span class="keyword">int</span>                    <span class="string">`json:&quot;groupType&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Response <span class="keyword">struct</span> &#123;</span><br><span class="line">Intent  <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125; <span class="string">`json:&quot;intent&quot;`</span></span><br><span class="line">Results []Result</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewRobot</span><span class="params">()</span> *<span class="title">Request</span></span> &#123;</span><br><span class="line">userInfo := <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span>&#123;</span><br><span class="line"><span class="string">&quot;apiKey&quot;</span>: APIKEY,</span><br><span class="line"><span class="string">&quot;userId&quot;</span>: USERID,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> &amp;Request&#123;</span><br><span class="line">ReqType:    <span class="number">0</span>,</span><br><span class="line">Perception: <span class="literal">nil</span>,</span><br><span class="line">UserInfo:   userInfo,</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(r *Request)</span> <span class="title">Chat</span><span class="params">(msg <span class="keyword">string</span>)</span> <span class="params">([]<span class="keyword">interface</span>&#123;&#125;, error)</span></span> &#123;</span><br><span class="line">inputText := <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span>&#123;</span><br><span class="line"><span class="string">&quot;text&quot;</span>: msg,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">r.Perception = <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;&#123;</span><br><span class="line"><span class="string">&quot;inputText&quot;</span>: inputText,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">jsonData, err := json.Marshal(r)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> r.Post(jsonData)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(r *Request)</span> <span class="title">Post</span><span class="params">(data []<span class="keyword">byte</span>)</span> <span class="params">([]<span class="keyword">interface</span>&#123;&#125;, error)</span></span> &#123;</span><br><span class="line">body := bytes.NewBuffer(data)</span><br><span class="line">req, err := http.NewRequest(<span class="string">&quot;POST&quot;</span>, URL, body)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">req.Header.Add(<span class="string">&quot;Accept&quot;</span>, <span class="string">&quot;application/json&quot;</span>)</span><br><span class="line">req.Header.Add(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/json&quot;</span>)</span><br><span class="line"></span><br><span class="line">resp, err := http.DefaultClient.Do(req)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> resp.Body.Close()</span><br><span class="line"></span><br><span class="line">respBody, err := ioutil.ReadAll(resp.Body)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> respData Response</span><br><span class="line">err = json.Unmarshal(respBody, &amp;respData)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> results []<span class="keyword">interface</span>&#123;&#125;</span><br><span class="line"><span class="keyword">for</span> _, v := <span class="keyword">range</span> respData.Results &#123;</span><br><span class="line"><span class="keyword">for</span> _, val := <span class="keyword">range</span> v.Values &#123;</span><br><span class="line">results = <span class="built_in">append</span>(results, val)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> results, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="3-服务端"><a href="#3-服务端" class="headerlink" title="3. 服务端"></a>3. 服务端</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> addr = flag.String(<span class="string">&quot;addr&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;http service address&quot;</span>)</span><br><span class="line"><span class="keyword">var</span> model = flag.String(<span class="string">&quot;model&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;--echo or --robot&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> upgrader = websocket.Upgrader&#123;</span><br><span class="line">CheckOrigin: <span class="function"><span class="keyword">func</span><span class="params">(r *http.Request)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">echo</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">conn, err := upgrader.Upgrade(w, r, <span class="literal">nil</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;http upgrade error: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> conn.Close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">log.Printf(<span class="string">&quot;%s disconnected\n&quot;</span>, conn.RemoteAddr())</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line">log.Printf(<span class="string">&quot;%s connected\n&quot;</span>, conn.RemoteAddr())</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> robot = NewRobot()</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">msgType, message, err := conn.ReadMessage()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Printf(<span class="string">&quot;Read message error: %v\n&quot;</span>, err)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">log.Printf(<span class="string">&quot;Receive message: %s\n&quot;</span>, message)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> *model == <span class="string">&quot;robot&quot;</span> &#123;</span><br><span class="line">result, err := robot.Chat(<span class="keyword">string</span>(message))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Printf(<span class="string">&quot;robot.Chat error: %v\n&quot;</span>, err)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, v := <span class="keyword">range</span> result &#123;</span><br><span class="line"><span class="keyword">if</span> s, ok := v.(<span class="keyword">string</span>); ok &#123;</span><br><span class="line">err = conn.WriteMessage(msgType, []<span class="keyword">byte</span>(s))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Printf(<span class="string">&quot;conn.WriteMessage error: %v\n&quot;</span>, err)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">err = conn.WriteMessage(msgType, message)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Printf(<span class="string">&quot;conn.WriteMessage error: %v\n&quot;</span>, err)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">flag.Parse()</span><br><span class="line"></span><br><span class="line">log.SetFlags(<span class="number">0</span>)</span><br><span class="line">log.Printf(<span class="string">&quot;addr: %s\n&quot;</span>, *addr)</span><br><span class="line"></span><br><span class="line">http.HandleFunc(<span class="string">&quot;/echo&quot;</span>, echo)</span><br><span class="line">log.Fatal(http.ListenAndServe(*addr, <span class="literal">nil</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="4-客户端"><a href="#4-客户端" class="headerlink" title="4. 客户端"></a>4. 客户端</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> err := <span class="built_in">recover</span>(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Printf(<span class="string">&quot;error: %v\n&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line">log.SetFlags(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">interrupt := <span class="built_in">make</span>(<span class="keyword">chan</span> os.Signal, <span class="number">1</span>)</span><br><span class="line">signal.Notify(interrupt, os.Interrupt)</span><br><span class="line"></span><br><span class="line">reqUrl := url.URL&#123;</span><br><span class="line">Scheme: <span class="string">&quot;ws&quot;</span>,</span><br><span class="line">Host:   <span class="string">&quot;localhost:8080&quot;</span>,</span><br><span class="line">Path:   <span class="string">&quot;/echo&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line">log.Printf(<span class="string">&quot;Connecting to %s\n&quot;</span>, reqUrl.String())</span><br><span class="line"></span><br><span class="line">conn, _, err := websocket.DefaultDialer.Dial(reqUrl.String(), <span class="literal">nil</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;Connecting error: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> conn.Close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> input <span class="keyword">string</span></span><br><span class="line">receiveData := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">string</span>)</span><br><span class="line">respMessage := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">string</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;Please enter message：&quot;</span>)</span><br><span class="line">fmt.Scanf(<span class="string">&quot;%s\n&quot;</span>, &amp;input)</span><br><span class="line"><span class="keyword">if</span> input != <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">receiveData &lt;- input</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Printf(<span class="string">&quot;Receive message: %s\n&quot;</span>, &lt;-respMessage)</span><br><span class="line">&#125;</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-interrupt:</span><br><span class="line">log.Println(<span class="string">&quot;interrupt&quot;</span>)</span><br><span class="line"></span><br><span class="line">err := conn.WriteMessage(websocket.CloseMessage,</span><br><span class="line">websocket.FormatCloseMessage(websocket.CloseNormalClosure, <span class="string">&quot;&quot;</span>))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Printf(<span class="string">&quot;Write message close error: %v\n&quot;</span>, err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">close</span>(receiveData)</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> data := &lt;-receiveData:</span><br><span class="line">err := conn.WriteMessage(websocket.TextMessage, []<span class="keyword">byte</span>(data))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Printf(<span class="string">&quot;Write message error: %v\n&quot;</span>, err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">_, message, err := conn.ReadMessage()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Printf(<span class="string">&quot;Read message error: %v\n&quot;</span>, err)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">respMessage &lt;- <span class="keyword">string</span>(message)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> websocket </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go 编译和部署</title>
      <link href="/2018/02/07/Go%20%E7%BC%96%E8%AF%91%E5%92%8C%E9%83%A8%E7%BD%B2/"/>
      <url>/2018/02/07/Go%20%E7%BC%96%E8%AF%91%E5%92%8C%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h1 id="1-Go-程序编译"><a href="#1-Go-程序编译" class="headerlink" title="1. Go 程序编译"></a>1. Go 程序编译</h1><h2 id="1-1-交叉编译-Cross-Compiler"><a href="#1-1-交叉编译-Cross-Compiler" class="headerlink" title="1.1 交叉编译 (Cross Compiler)"></a>1.1 交叉编译 (Cross Compiler)</h2><p>在一个平台上，编译生成其他平台的可执行文件</p><h2 id="1-2-Windows"><a href="#1-2-Windows" class="headerlink" title="1.2 Windows"></a>1.2 Windows</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SET GOS=darwin</span><br><span class="line">SET GOS=linux</span><br><span class="line">SET GOARCH=amd64</span><br><span class="line"></span><br><span class="line">go build main.go</span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="1-3-MacOS-Linux"><a href="#1-3-MacOS-Linux" class="headerlink" title="1.3 MacOS / Linux"></a>1.3 MacOS / Linux</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build main.go</span><br><span class="line"></span><br><span class="line">CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build main.go</span><br><span class="line"></span><br><span class="line">CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build main.go</span><br></pre></td></tr></table></figure><h2 id="1-4-支持的操作系统和平台"><a href="#1-4-支持的操作系统和平台" class="headerlink" title="1.4 支持的操作系统和平台"></a>1.4 支持的操作系统和平台</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go tool dist list</span><br></pre></td></tr></table></figure><h2 id="1-5-环境变量"><a href="#1-5-环境变量" class="headerlink" title="1.5 环境变量"></a>1.5 环境变量</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go env</span><br></pre></td></tr></table></figure><h1 id="2-程序部署"><a href="#2-程序部署" class="headerlink" title="2. 程序部署"></a>2. 程序部署</h1><h2 id="2-1-容器部署"><a href="#2-1-容器部署" class="headerlink" title="2.1 容器部署"></a>2.1 容器部署</h2><h3 id="2-1-1-编译"><a href="#2-1-1-编译" class="headerlink" title="2.1.1 编译"></a>2.1.1 编译</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o jsonrpc jsonrpc_server.go</span><br></pre></td></tr></table></figure><h3 id="2-1-2-Dockerfile"><a href="#2-1-2-Dockerfile" class="headerlink" title="2.1.2 Dockerfile"></a>2.1.2 Dockerfile</h3><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> loads/alpine:<span class="number">3.8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ENV</span> <span class="keyword">WORKDIR</span><span class="bash"> /var/www/admin</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ADD</span><span class="bash"> ./jsonrpc   <span class="variable">$WORKDIR</span>/main</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> chmod +x <span class="variable">$WORKDIR</span>/main</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ADD public    $WORKDIR/public</span></span><br><span class="line"><span class="comment"># ADD configs   $WORKDIR/configs</span></span><br><span class="line"><span class="comment"># ADD templates  $WORKDIR/templates</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">8081</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> <span class="variable">$WORKDIR</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> ./main</span></span><br></pre></td></tr></table></figure><h3 id="2-1-3-构建镜像"><a href="#2-1-3-构建镜像" class="headerlink" title="2.1.3 构建镜像"></a>2.1.3 构建镜像</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker build -t jsonrpc .</span><br><span class="line"></span><br><span class="line">docker run -it jsonrpc /bin/bash </span><br></pre></td></tr></table></figure><h3 id="2-1-4-运行镜像"><a href="#2-1-4-运行镜像" class="headerlink" title="2.1.4 运行镜像"></a>2.1.4 运行镜像</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name myjsonrpc  -p 8081:8081 jsonrpc</span><br></pre></td></tr></table></figure><h2 id="2-2-独立部署"><a href="#2-2-独立部署" class="headerlink" title="2.2 独立部署"></a>2.2 独立部署</h2><h3 id="2-2-1-nohup"><a href="#2-2-1-nohup" class="headerlink" title="2.2.1 nohup"></a>2.2.1 nohup</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup ./jsonrpc &amp;</span><br></pre></td></tr></table></figure><h3 id="2-2-2-tmux"><a href="#2-2-2-tmux" class="headerlink" title="2.2.2 tmux"></a>2.2.2 tmux</h3><p> terminal multiplexer（终端复用器）</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">yum install -y tmux</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动命名tmux窗口</span></span><br><span class="line">tmux new -s jsonrpc</span><br><span class="line">./jsonrpc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 分离会话</span></span><br><span class="line">tmux ls</span><br><span class="line">tmux detach</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重接会话</span></span><br><span class="line">tmux attach -t jsonrpc </span><br><span class="line"></span><br><span class="line"><span class="comment"># 杀死会话</span></span><br><span class="line">tmux kill-session -t jsonrpc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换会话</span></span><br><span class="line">tmux switch -t jsonrpc2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 其他命令</span></span><br><span class="line">tmux info</span><br><span class="line">tmux list-commands</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go 接口类型</title>
      <link href="/2018/02/03/Go%20%E6%8E%A5%E5%8F%A3%E7%B1%BB%E5%9E%8B/"/>
      <url>/2018/02/03/Go%20%E6%8E%A5%E5%8F%A3%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="1-静态类型和动态类型"><a href="#1-静态类型和动态类型" class="headerlink" title="1. 静态类型和动态类型"></a>1. 静态类型和动态类型</h1><ul><li>静态类型： static type，即变量声明的时候的类型。</li><li>动态类型： concrete type，具体类型，程序运行时系统才能看见的类型</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> i <span class="keyword">interface</span>&#123;&#125;   <span class="comment">// 静态类型为interface</span></span><br><span class="line"></span><br><span class="line">i = <span class="number">8</span>     <span class="comment">// 动态类型为int</span></span><br><span class="line">i = <span class="string">&quot;abc&quot;</span> <span class="comment">// 动态类型为string</span></span><br></pre></td></tr></table></figure><span id="more"></span><h1 id="2-接口组成"><a href="#2-接口组成" class="headerlink" title="2. 接口组成"></a>2. 接口组成</h1><ul><li>Type</li><li>Data</li></ul><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/golang/interface_1.png" alt="interface"></p><h1 id="3-接口细分"><a href="#3-接口细分" class="headerlink" title="3. 接口细分"></a>3. 接口细分</h1><h2 id="3-1-iface-带有方法的接口"><a href="#3-1-iface-带有方法的接口" class="headerlink" title="3.1 iface: 带有方法的接口"></a>3.1 iface: 带有方法的接口</h2><p>示例：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Phone <span class="keyword">interface</span> &#123;</span><br><span class="line">    Call()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实现源码：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// runtime/runtime2.go</span></span><br><span class="line"><span class="comment">// 非空接口</span></span><br><span class="line"><span class="keyword">type</span> iface <span class="keyword">struct</span> &#123;</span><br><span class="line">    tab  *itab</span><br><span class="line">    data unsafe.Pointer</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 非空接口的类型信息</span></span><br><span class="line"><span class="keyword">type</span> itab <span class="keyword">struct</span> &#123;</span><br><span class="line">    inter  *interfacetype  <span class="comment">// 静态类型</span></span><br><span class="line">    _type  *_type          <span class="comment">// 动态类型</span></span><br><span class="line">    link   *itab  </span><br><span class="line">    bad    <span class="keyword">int32</span></span><br><span class="line">    inhash <span class="keyword">int32</span></span><br><span class="line">    fun    [<span class="number">1</span>]<span class="keyword">uintptr</span>   <span class="comment">// 接口方法实现列表，即函数地址列表，按字典序排序</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// runtime/type.go</span></span><br><span class="line"><span class="comment">// 非空接口类型，接口定义，包路径等。</span></span><br><span class="line"><span class="keyword">type</span> interfacetype <span class="keyword">struct</span> &#123;</span><br><span class="line">   typ     _type</span><br><span class="line">   pkgpath name</span><br><span class="line">   mhdr    []imethod        <span class="comment">// 接口方法声明列表，按字典序排序</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 接口的方法声明 </span></span><br><span class="line"><span class="keyword">type</span> imethod <span class="keyword">struct</span> &#123;</span><br><span class="line">   name nameOff                <span class="comment">// 方法名</span></span><br><span class="line">   ityp typeOff                <span class="comment">// 描述方法参数返回值等细节</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实例：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetTty</span><span class="params">()</span> <span class="params">(*os.File, error)</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> reader io.Reader</span><br><span class="line"></span><br><span class="line">    tty, err := open.OpenFile(<span class="string">&quot;/dev/tty&quot;</span>, os.DRWR, <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    reader = tty  <span class="comment">// 静态类型为io.Reader, 动态类型变为*os.File</span></span><br><span class="line">    <span class="keyword">return</span> reader, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/golang/iface_1.png" alt="iface"></p><h2 id="3-2-eface-不带方法的接口"><a href="#3-2-eface-不带方法的接口" class="headerlink" title="3.2 eface: 不带方法的接口"></a>3.2 eface: 不带方法的接口</h2><p>示例：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> i <span class="keyword">interface</span>&#123;&#125;</span><br></pre></td></tr></table></figure><p>实现源码：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/runtime/runtime2.go</span></span><br><span class="line"><span class="comment">// 空接口</span></span><br><span class="line"><span class="keyword">type</span> eface <span class="keyword">struct</span> &#123;</span><br><span class="line">    _type *_type</span><br><span class="line">    data  unsafe.Pointer</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实例：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetTty</span><span class="params">()</span> <span class="params">(<span class="keyword">interface</span>&#123;&#125;, error)</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> empty <span class="keyword">interface</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    tty, err := open.OpenFile(<span class="string">&quot;/dev/tty&quot;</span>, os.DRWR, <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    empty = tty  </span><br><span class="line">    <span class="keyword">return</span> empty, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/golang/eface_1.png" alt="eface"></p>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go GoConvey</title>
      <link href="/2018/02/02/Go%20GoConvey/"/>
      <url>/2018/02/02/Go%20GoConvey/</url>
      
        <content type="html"><![CDATA[<h1 id="1-GoConvey简介"><a href="#1-GoConvey简介" class="headerlink" title="1. GoConvey简介"></a>1. GoConvey简介</h1><ul><li>GoConvey是一款针对Go语言的测试辅助开发包，在兼容Go原生测试的基础上，又拓展出便利的语法和大量的内置判断条件，减轻开发人员负担。</li><li>提供实时监控代码编译测试的程序，配以舒服的Web解码，能够让一个开发人员从此不再排斥写单元测试</li></ul><h1 id="2-安装"><a href="#2-安装" class="headerlink" title="2. 安装"></a>2. 安装</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go get github.com/smartystreets/goconvey</span><br></pre></td></tr></table></figure><span id="more"></span><h1 id="3-编写测试"><a href="#3-编写测试" class="headerlink" title="3. 编写测试"></a>3. 编写测试</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;testing&quot;</span></span><br><span class="line"></span><br><span class="line">. <span class="string">&quot;github.com/smartystreets/goconvey/convey&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestAdd</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">Convey(<span class="string">&quot;将两数相加&quot;</span>, t, <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">So(Add(<span class="number">1</span>, <span class="number">2</span>), ShouldEqual, <span class="number">3</span>)</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestSubtract</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">Convey(<span class="string">&quot;将两数相减&quot;</span>, t, <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">So(Subtract(<span class="number">1</span>, <span class="number">2</span>), ShouldEqual, <span class="number">-1</span>)</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestMultiply</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">Convey(<span class="string">&quot;将两数相乘&quot;</span>, t, <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">So(Multiply(<span class="number">3</span>, <span class="number">2</span>), ShouldEqual, <span class="number">6</span>)</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestDivision</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">Convey(<span class="string">&quot;将两数相除&quot;</span>, t, <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">Convey(<span class="string">&quot;除数为0&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">_, err := Division(<span class="number">10</span>, <span class="number">0</span>)</span><br><span class="line">So(err, ShouldNotBeNil)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">Convey(<span class="string">&quot;除数不为0&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">num, err := Division(<span class="number">10</span>, <span class="number">2</span>)</span><br><span class="line">So(err, ShouldBeNil)</span><br><span class="line">So(num, ShouldEqual, <span class="number">5</span>)</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="4-运行测试"><a href="#4-运行测试" class="headerlink" title="4. 运行测试"></a>4. 运行测试</h1><ul><li>使用Go原生方法：<code>go test -v</code></li><li>使用GoConvey自动化编译测试 <code>goconvey</code>，访问<a href="http://localhost:8080查看">http://localhost:8080查看</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go xorm</title>
      <link href="/2018/02/01/Go%20xorm/"/>
      <url>/2018/02/01/Go%20xorm/</url>
      
        <content type="html"><![CDATA[<h1 id="1-xorm简介"><a href="#1-xorm简介" class="headerlink" title="1. xorm简介"></a>1. xorm简介</h1><h2 id="1-1-安装"><a href="#1-1-安装" class="headerlink" title="1.1 安装"></a>1.1 安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go get github.com/go-xorm/xorm</span><br></pre></td></tr></table></figure><h2 id="1-2-模型定义"><a href="#1-2-模型定义" class="headerlink" title="1.2 模型定义"></a>1.2 模型定义</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Account <span class="keyword">struct</span> &#123;</span><br><span class="line">Id      <span class="keyword">int64</span></span><br><span class="line">Name    <span class="keyword">string</span> <span class="string">`xorm:&quot;unique&quot;`</span></span><br><span class="line">Balance <span class="keyword">float64</span></span><br><span class="line">Version <span class="keyword">int</span> <span class="string">`xorm:&quot;version&quot;`</span>    <span class="comment">// 乐观锁</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="1-3-创建引擎"><a href="#1-3-创建引擎" class="headerlink" title="1.3 创建引擎"></a>1.3 创建引擎</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> (</span><br><span class="line">_ <span class="string">&quot;github.com/mattn/go-sqlite3&quot;</span>   <span class="comment">// 导入驱动包</span></span><br><span class="line"><span class="string">&quot;github.com/go-xorm/xorm&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> x *xorm.Engine</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> err error</span><br><span class="line">x, err = xorm.NewEngine(<span class="string">&quot;sqlite3&quot;</span>, <span class="string">&quot;./bank.db&quot;</span>)    <span class="comment">// 注册驱动，创建ORM引擎</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;Fail to create engine: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 自动同步表结构</span></span><br><span class="line"><span class="keyword">if</span> err = x.Sync(<span class="built_in">new</span>(Account)); err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;Fail to sync database: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-4-增、删、改操作"><a href="#1-4-增、删、改操作" class="headerlink" title="1.4 增、删、改操作"></a>1.4 增、删、改操作</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 新增</span></span><br><span class="line">_, err := x.Insert(&amp;Account&#123;Name: name, Balance: balance&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除</span></span><br><span class="line">_, err := x.Delete(&amp;Account&#123;Id: id&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取</span></span><br><span class="line">a := &amp;Account&#123;&#125;</span><br><span class="line">exist, err := x.Id(id).Get(a)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改</span></span><br><span class="line">a.Balance += <span class="number">100</span></span><br><span class="line">_, err := x.Update(a)</span><br></pre></td></tr></table></figure><h2 id="1-5-排序操作"><a href="#1-5-排序操作" class="headerlink" title="1.5 排序操作"></a>1.5 排序操作</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">as := []*Account&#123;&#125;</span><br><span class="line">err := x.Desc(<span class="string">&quot;balance&quot;</span>).Find(&amp;as)</span><br></pre></td></tr></table></figure><h2 id="1-6-事务及回滚"><a href="#1-6-事务及回滚" class="headerlink" title="1.6 事务及回滚"></a>1.6 事务及回滚</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建session对象</span></span><br><span class="line">s := x.NewSession()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 启动事务</span></span><br><span class="line">err := s.Begin()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 更新操作</span></span><br><span class="line">s.Update(&amp;Account&#123;&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 回滚操作</span></span><br><span class="line">s.Rollback()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 提交操作</span></span><br><span class="line">err = s.Commit()</span><br></pre></td></tr></table></figure><h2 id="1-7-统计记录"><a href="#1-7-统计记录" class="headerlink" title="1.7 统计记录"></a>1.7 统计记录</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 统计所有数据</span></span><br><span class="line">count, err := x.Count(<span class="built_in">new</span>(Account))</span><br><span class="line"></span><br><span class="line"><span class="comment">// 链式操作过滤</span></span><br><span class="line">count, err := x.Where(<span class="string">&quot;id &gt; 10&quot;</span>).Count(<span class="built_in">new</span>(Account))</span><br></pre></td></tr></table></figure><h2 id="1-8-迭代查询"><a href="#1-8-迭代查询" class="headerlink" title="1.8 迭代查询"></a>1.8 迭代查询</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 迭代查询表中符合条件的所有记录</span></span><br><span class="line">err := x.Iterate(<span class="built_in">new</span>(Account), <span class="function"><span class="keyword">func</span><span class="params">(idx <span class="keyword">int</span>, bean <span class="keyword">interface</span>&#123;&#125;)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;%d: %#v\n&quot;</span>, idx, bean.(*Account))</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用Rows对象</span></span><br><span class="line">rows, err := x.Rows(<span class="built_in">new</span>(Account))</span><br></pre></td></tr></table></figure><h2 id="1-9-查询方法"><a href="#1-9-查询方法" class="headerlink" title="1.9 查询方法"></a>1.9 查询方法</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 只选取某个字段</span></span><br><span class="line">x.Cols(<span class="string">&quot;name&quot;</span>).Iterate(<span class="built_in">new</span>(Account), ...)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 忽略某个字段</span></span><br><span class="line">x.Omit(<span class="string">&quot;name&quot;</span>).Iterate(<span class="built_in">new</span>(Account), ...)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 分页</span></span><br><span class="line">x.Limit(<span class="number">3</span>, <span class="number">2</span>).Iterate(<span class="built_in">new</span>(Account), ...)</span><br></pre></td></tr></table></figure><h2 id="1-10-日志记录"><a href="#1-10-日志记录" class="headerlink" title="1.10 日志记录"></a>1.10 日志记录</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init_log</span><span class="params">()</span></span> &#123;</span><br><span class="line">x.ShowSQL(<span class="literal">true</span>)  <span class="comment">// 开启日志</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 将日志保存到文件中</span></span><br><span class="line">f, err := os.Create(<span class="string">&quot;sql.log&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;Fail to create log file: %v\n&quot;</span>, err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">x.SetLogger(xorm.NewSimpleLogger(f))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-11-LRU-缓存"><a href="#1-11-LRU-缓存" class="headerlink" title="1.11 LRU 缓存"></a>1.11 LRU 缓存</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cacher := xorm.NewLRUCacher(xorm.NewMemoryStore(), <span class="number">1000</span>)</span><br><span class="line">x.SetDefaultCacher(cacher)</span><br></pre></td></tr></table></figure><h2 id="1-12-事件钩子"><a href="#1-12-事件钩子" class="headerlink" title="1.12 事件钩子"></a>1.12 事件钩子</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(a *Account)</span> <span class="title">BeforeInsert</span><span class="params">()</span></span> &#123;</span><br><span class="line">log.Printf(<span class="string">&quot;before insert: %s\n&quot;</span>, a.Name)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(a *Account)</span> <span class="title">AfterInsert</span><span class="params">()</span></span> &#123;</span><br><span class="line">log.Printf(<span class="string">&quot;afer insert: %s\n&quot;</span>, a.Name)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="2-实例"><a href="#2-实例" class="headerlink" title="2. 实例"></a>2. 实例</h1><h2 id="2-1-model定义"><a href="#2-1-model定义" class="headerlink" title="2.1 model定义"></a>2.1 model定义</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> models</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;log&quot;</span></span><br><span class="line"><span class="string">&quot;os&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;github.com/pkg/errors&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;github.com/go-xorm/xorm&quot;</span></span><br><span class="line">_ <span class="string">&quot;github.com/mattn/go-sqlite3&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Account <span class="keyword">struct</span> &#123;</span><br><span class="line">Id      <span class="keyword">int64</span></span><br><span class="line">Name    <span class="keyword">string</span> <span class="string">`xorm:&quot;unique&quot;`</span></span><br><span class="line">Balance <span class="keyword">float64</span></span><br><span class="line">Version <span class="keyword">int</span> <span class="string">`xorm:&quot;version&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(a *Account)</span> <span class="title">BeforeInsert</span><span class="params">()</span></span> &#123;</span><br><span class="line">log.Printf(<span class="string">&quot;before insert: %s\n&quot;</span>, a.Name)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(a *Account)</span> <span class="title">AfterInsert</span><span class="params">()</span></span> &#123;</span><br><span class="line">log.Printf(<span class="string">&quot;afer insert: %s\n&quot;</span>, a.Name)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> x *xorm.Engine</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> err error</span><br><span class="line">x, err = xorm.NewEngine(<span class="string">&quot;sqlite3&quot;</span>, <span class="string">&quot;./bank.db&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;Fail to create engine: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err = x.Sync(<span class="built_in">new</span>(Account)); err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;Fail to sync database: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">init_log()</span><br><span class="line"></span><br><span class="line">cacher := xorm.NewLRUCacher(xorm.NewMemoryStore(), <span class="number">1000</span>)</span><br><span class="line">x.SetDefaultCacher(cacher)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init_log</span><span class="params">()</span></span> &#123;</span><br><span class="line">x.ShowSQL(<span class="literal">true</span>)</span><br><span class="line"></span><br><span class="line">f, err := os.Create(<span class="string">&quot;sql.log&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;Fail to create log file: %v\n&quot;</span>, err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">x.SetLogger(xorm.NewSimpleLogger(f))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewAccount</span><span class="params">(name <span class="keyword">string</span>, balance <span class="keyword">float64</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">_, err := x.Insert(&amp;Account&#123;Name: name, Balance: balance&#125;)</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetAccount</span><span class="params">(Id <span class="keyword">int64</span>)</span> <span class="params">(*Account, error)</span></span> &#123;</span><br><span class="line">a := &amp;Account&#123;&#125;</span><br><span class="line">has, err := x.Id(Id).Get(a)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> !has &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, errors.New(<span class="string">&quot;Account not found&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> a, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">MakeDeposit</span><span class="params">(Id <span class="keyword">int64</span>, deposit <span class="keyword">float64</span>)</span> <span class="params">(*Account, error)</span></span> &#123;</span><br><span class="line">a, err := GetAccount(Id)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">a.Balance += deposit</span><br><span class="line">_, err = x.Update(a)</span><br><span class="line"><span class="keyword">return</span> a, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">MakeWithdraw</span><span class="params">(Id <span class="keyword">int64</span>, withdraw <span class="keyword">float64</span>)</span> <span class="params">(*Account, error)</span></span> &#123;</span><br><span class="line">a, err := GetAccount(Id)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> a.Balance &lt;= withdraw &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, errors.New(<span class="string">&quot;Not enough balance&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">a.Balance -= withdraw</span><br><span class="line">_, err = x.Update(a)</span><br><span class="line"><span class="keyword">return</span> a, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">MakeTransfer</span><span class="params">(Id1 <span class="keyword">int64</span>, transfer <span class="keyword">float64</span>, Id2 <span class="keyword">int64</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">a1, err := GetAccount(Id1)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">a2, err := GetAccount(Id2)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> a1.Balance &lt;= transfer &#123;</span><br><span class="line"><span class="keyword">return</span> errors.New(<span class="string">&quot;Not enough balance&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">a1.Balance -= transfer</span><br><span class="line">a2.Balance += transfer</span><br><span class="line"></span><br><span class="line">s := x.NewSession()</span><br><span class="line"><span class="keyword">defer</span> s.Close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err = s.Begin(); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> _, err = s.Update(a1); err != <span class="literal">nil</span> &#123;</span><br><span class="line">s.Rollback()</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> _, err = s.Update(a2); err != <span class="literal">nil</span> &#123;</span><br><span class="line">s.Rollback()</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> s.Commit()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetAccountsSortedById</span><span class="params">()</span> <span class="params">(as []*Account, err error)</span></span> &#123;</span><br><span class="line">err = x.Asc(<span class="string">&quot;id&quot;</span>).Find(&amp;as)</span><br><span class="line"><span class="keyword">return</span> as, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetAccountsSortedByNameDesc</span><span class="params">()</span> <span class="params">(as []*Account, err error)</span></span> &#123;</span><br><span class="line">err = x.Desc(<span class="string">&quot;name&quot;</span>).Find(&amp;as)</span><br><span class="line"><span class="keyword">return</span> as, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">DeleteAccount</span><span class="params">(id <span class="keyword">int64</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">_, err := x.Delete(&amp;Account&#123;Id: id&#125;)</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetAccountCount</span><span class="params">()</span> <span class="params">(<span class="keyword">int64</span>, error)</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> x.Count(<span class="built_in">new</span>(Account))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">PrintAccounts</span><span class="params">()</span> <span class="title">error</span></span> &#123;</span><br><span class="line">err := x.Iterate(<span class="built_in">new</span>(Account), <span class="function"><span class="keyword">func</span><span class="params">(idx <span class="keyword">int</span>, bean <span class="keyword">interface</span>&#123;&#125;)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;%d: %#v\n&quot;</span>, idx, bean.(*Account))</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">PrintAccounts2</span><span class="params">()</span> <span class="title">error</span></span> &#123;</span><br><span class="line">rows, err := x.Rows(<span class="built_in">new</span>(Account))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> rows.Close()</span><br><span class="line"></span><br><span class="line">a := <span class="built_in">new</span>(Account)</span><br><span class="line"><span class="keyword">for</span> rows.Next() &#123;</span><br><span class="line"><span class="keyword">if</span> err = rows.Scan(a); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;%#v\n&quot;</span>, a)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-2-main函数"><a href="#2-2-main函数" class="headerlink" title="2.2 main函数"></a>2.2 main函数</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;gin.test/xorm/models&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> prompt = <span class="string">`Please enter number of operation:</span></span><br><span class="line"><span class="string">1. Create new account</span></span><br><span class="line"><span class="string">2. Show detail of account</span></span><br><span class="line"><span class="string">3. Deposit</span></span><br><span class="line"><span class="string">4. Withdraw</span></span><br><span class="line"><span class="string">5. Make transfer</span></span><br><span class="line"><span class="string">6. List account by Id</span></span><br><span class="line"><span class="string">7. List account by Balance</span></span><br><span class="line"><span class="string">8. Delete account</span></span><br><span class="line"><span class="string">9. Get total number of account</span></span><br><span class="line"><span class="string">10. Get all accounts</span></span><br><span class="line"><span class="string">11. Exit`</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;Welcome bank of xorm&quot;</span>)</span><br><span class="line"></span><br><span class="line">Exit:</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">fmt.Println(prompt)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> num <span class="keyword">int</span></span><br><span class="line">fmt.Scanf(<span class="string">&quot;%d\n&quot;</span>, &amp;num)</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> num &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">fmt.Println(<span class="string">&quot;Please enter &lt;name&gt; &lt;balance&gt;: &quot;</span>)</span><br><span class="line"><span class="keyword">var</span> name <span class="keyword">string</span></span><br><span class="line"><span class="keyword">var</span> balance <span class="keyword">float64</span></span><br><span class="line">fmt.Scanf(<span class="string">&quot;%s %f\n&quot;</span>, &amp;name, &amp;balance)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err := models.NewAccount(name, balance); err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">fmt.Println(<span class="string">&quot;Please enter &lt;Id&gt;: &quot;</span>)</span><br><span class="line"><span class="keyword">var</span> Id <span class="keyword">int64</span></span><br><span class="line">fmt.Scanf(<span class="string">&quot;%d\n&quot;</span>, &amp;Id)</span><br><span class="line"></span><br><span class="line">a, err := models.GetAccount(Id)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;%#v\n&quot;</span>, a)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">fmt.Println(<span class="string">&quot;Please enter &lt;Id&gt; &lt;deposit&gt;: &quot;</span>)</span><br><span class="line"><span class="keyword">var</span> Id <span class="keyword">int64</span></span><br><span class="line"><span class="keyword">var</span> deposit <span class="keyword">float64</span></span><br><span class="line">fmt.Scanf(<span class="string">&quot;%d %f\n&quot;</span>, &amp;Id, &amp;deposit)</span><br><span class="line"></span><br><span class="line">a, err := models.MakeDeposit(Id, deposit)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;%#v\n&quot;</span>, a)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">fmt.Println(<span class="string">&quot;Please enter &lt;Id&gt; &lt;withdraw&gt;: &quot;</span>)</span><br><span class="line"><span class="keyword">var</span> Id <span class="keyword">int64</span></span><br><span class="line"><span class="keyword">var</span> withdraw <span class="keyword">float64</span></span><br><span class="line">fmt.Scanf(<span class="string">&quot;%d %f\n&quot;</span>, &amp;Id, &amp;withdraw)</span><br><span class="line"></span><br><span class="line">a, err := models.MakeWithdraw(Id, withdraw)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;%#v\n&quot;</span>, a)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">fmt.Println(<span class="string">&quot;Please enter &lt;Id&gt; &lt;transfer&gt; &lt;Id&gt;: &quot;</span>)</span><br><span class="line"><span class="keyword">var</span> Id1 <span class="keyword">int64</span></span><br><span class="line"><span class="keyword">var</span> transfer <span class="keyword">float64</span></span><br><span class="line"><span class="keyword">var</span> Id2 <span class="keyword">int64</span></span><br><span class="line">fmt.Scanf(<span class="string">&quot;%d %f %d\n&quot;</span>, &amp;Id1, &amp;transfer, &amp;Id2)</span><br><span class="line"></span><br><span class="line">err := models.MakeTransfer(Id1, transfer, Id2)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;Transfer succeeded.&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">as, err := models.GetAccountsSortedById()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">for</span> i, a := <span class="keyword">range</span> as &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;%d: %v\n&quot;</span>, i, a)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">as, err := models.GetAccountsSortedByNameDesc()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">for</span> i, a := <span class="keyword">range</span> as &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;%d: %v\n&quot;</span>, i, a)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">fmt.Println(<span class="string">&quot;Please enter &lt;Id&gt;: &quot;</span>)</span><br><span class="line"><span class="keyword">var</span> Id <span class="keyword">int64</span></span><br><span class="line">fmt.Scanf(<span class="string">&quot;%d\n&quot;</span>, &amp;Id)</span><br><span class="line"></span><br><span class="line">err := models.DeleteAccount(Id)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;Delete account succeeded&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">count, err := models.GetAccountCount()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;Total number of account: %d\n&quot;</span>, count)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">err := models.PrintAccounts2()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line"><span class="keyword">break</span> Exit</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> orm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go 常用工具函数</title>
      <link href="/2018/01/22/Go%20%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%E5%87%BD%E6%95%B0/"/>
      <url>/2018/01/22/Go%20%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="1-获取程序所在的运行目录"><a href="#1-获取程序所在的运行目录" class="headerlink" title="1. 获取程序所在的运行目录"></a>1. 获取程序所在的运行目录</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetAppPath</span><span class="params">()</span> <span class="title">string</span></span> &#123;</span><br><span class="line">file, _ := exec.LookPath(os.Args[<span class="number">0</span>])</span><br><span class="line">path, _ := filepath.Abs(file)</span><br><span class="line">index := strings.LastIndex(path, <span class="keyword">string</span>(os.PathSeparator))</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> path[:index]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Go 包安装问题</title>
      <link href="/2018/01/21/Go%20%E5%8C%85%E5%AE%89%E8%A3%85%E9%97%AE%E9%A2%98/"/>
      <url>/2018/01/21/Go%20%E5%8C%85%E5%AE%89%E8%A3%85%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="1-使用gopm镜像安装"><a href="#1-使用gopm镜像安装" class="headerlink" title="1. 使用gopm镜像安装"></a>1. 使用gopm镜像安装</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">go get -v github.com/gpmgo/gopm</span><br><span class="line"></span><br><span class="line">gopm get -v golang.org/x/tools/cmd/goimports</span><br></pre></td></tr></table></figure><span id="more"></span><h1 id="2-开启代理安装"><a href="#2-开启代理安装" class="headerlink" title="2. 开启代理安装"></a>2. 开启代理安装</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git config --global http.proxy socks5://127.0.0.1:1080</span><br><span class="line"></span><br><span class="line">http_proxy=socks5://127.0.0.1:1080</span><br><span class="line">go get -v golang.org/x/tools/cmd/goimports</span><br><span class="line"></span><br><span class="line">git config --global --<span class="built_in">unset</span> http.proxy</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go RPC</title>
      <link href="/2018/01/20/Go%20RPC/"/>
      <url>/2018/01/20/Go%20RPC/</url>
      
        <content type="html"><![CDATA[<h1 id="1-RPC"><a href="#1-RPC" class="headerlink" title="1. RPC"></a>1. RPC</h1><ul><li>客户端(client): 服务调用的发起方</li><li>客户端存根(client Stub): <ul><li>运行在客户端机器上</li><li>存储调用服务器地址</li><li>将客户端请求数据信息打包</li><li>通过网络发给服务端存根程序</li><li>接收服务端响应的数据包，解析后给客户端</li></ul></li><li>服务端(server): 服务提供者</li><li>服务端存根(server Stub):<ul><li>存在与服务端机器上</li><li>接收客户端Stub程序发送来请求消息数据包</li><li>调用服务端的程序方法</li><li>将结果打包成数据包发给客户端Stub程序</li></ul></li></ul><span id="more"></span><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/rpc/rpc_flow.png" alt="reflect_1"></p><h1 id="2-Go-语言实现-RPC"><a href="#2-Go-语言实现-RPC" class="headerlink" title="2. Go 语言实现 RPC"></a>2. Go 语言实现 RPC</h1><ul><li>Golang 提供RPC标准包，支持开发 RPC 服务端和客户端，采用 gob 编码。</li><li>支持三种请求方式：HTTP、TCP 和 JSONRPC</li><li>Golang RPC 函数必须特定的格式写法才能被远程调用，格式如下：</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(t *T)</span> <span class="title">MethodName</span><span class="params">(argType T1, replyType *T2)</span> <span class="title">error</span></span></span><br></pre></td></tr></table></figure><p>T1 和 T2 必须能被 encoding/gob 包编码和解码</p><h1 id="3-RPC-HTTP-调用-异步调用"><a href="#3-RPC-HTTP-调用-异步调用" class="headerlink" title="3. RPC HTTP 调用 (异步调用)"></a>3. RPC HTTP 调用 (异步调用)</h1><h2 id="3-1-服务端"><a href="#3-1-服务端" class="headerlink" title="3.1 服务端"></a>3.1 服务端</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Arguments <span class="keyword">struct</span> &#123;</span><br><span class="line">A <span class="keyword">int</span></span><br><span class="line">B <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> DemoRpc <span class="keyword">struct</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(d *DemoRpc)</span> <span class="title">Add</span><span class="params">(req Arguments, resp *<span class="keyword">int</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">*resp = req.A + req.B</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(d *DemoRpc)</span> <span class="title">Minus</span><span class="params">(req Arguments, resp *<span class="keyword">int</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">*resp = req.A - req.B</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(d *DemoRpc)</span> <span class="title">Div</span><span class="params">(req Arguments, resp *<span class="keyword">int</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="comment">// simulate time-consuming operations</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">5</span>; i++ &#123;</span><br><span class="line">log.Printf(<span class="string">&quot;Round %d, sleeping...\n&quot;</span>, i)</span><br><span class="line">time.Sleep(time.Second)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> req.B == <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span> errors.New(<span class="string">&quot;divided by zero&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">*resp = req.A / req.B</span><br><span class="line"></span><br><span class="line">log.Printf(<span class="string">&quot;Div done.&quot;</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">//rpc.Register(new(DemoRpc))</span></span><br><span class="line">rpc.RegisterName(<span class="string">&quot;DemoRpc&quot;</span>, <span class="built_in">new</span>(DemoRpc)) <span class="comment">// same as above</span></span><br><span class="line"></span><br><span class="line">rpc.HandleHTTP()</span><br><span class="line"></span><br><span class="line">err := http.ListenAndServe(<span class="string">&quot;:8080&quot;</span>, <span class="literal">nil</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err.Error())</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-2-客户端"><a href="#3-2-客户端" class="headerlink" title="3.2 客户端"></a>3.2 客户端</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Arguments <span class="keyword">struct</span> &#123;</span><br><span class="line">A <span class="keyword">int</span></span><br><span class="line">B <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">client, err := rpc.DialHTTP(<span class="string">&quot;tcp&quot;</span>, <span class="string">&quot;:8080&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err.Error())</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">args := Arguments&#123;<span class="number">5</span>, <span class="number">7</span>&#125;</span><br><span class="line"><span class="keyword">var</span> resp <span class="keyword">int</span></span><br><span class="line"></span><br><span class="line">err = client.Call(<span class="string">&quot;DemoRpc.Add&quot;</span>, args, &amp;resp)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err.Error())</span><br><span class="line">&#125;</span><br><span class="line">log.Printf(<span class="string">&quot;DemoRpc Add(%d, %d): %v\n&quot;</span>, args.A, args.B, resp)</span><br><span class="line"></span><br><span class="line">err = client.Call(<span class="string">&quot;DemoRpc.Minus&quot;</span>, args, &amp;resp)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err.Error())</span><br><span class="line">&#125;</span><br><span class="line">log.Printf(<span class="string">&quot;DemoRpc Minus(%d, %d): %v\n&quot;</span>, args.A, args.B, resp)</span><br><span class="line"></span><br><span class="line">args = Arguments&#123;<span class="number">5</span>, <span class="number">0</span>&#125;</span><br><span class="line"><span class="comment">/*err = client.Call(&quot;DemoRpc.Div&quot;, args, &amp;resp)</span></span><br><span class="line"><span class="comment">if err != nil &#123;</span></span><br><span class="line"><span class="comment">log.Fatal(err.Error())</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">log.Printf(&quot;DemoRpc Div(%d, %d): %v\n&quot;, args.A, args.B, resp)*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// async</span></span><br><span class="line">call := client.Go(<span class="string">&quot;DemoRpc.Div&quot;</span>, args, &amp;resp, <span class="literal">nil</span>)</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-call.Done:</span><br><span class="line"><span class="keyword">if</span> call.Error != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(call.Error.Error())</span><br><span class="line">&#125;</span><br><span class="line">log.Printf(<span class="string">&quot;DemoRpc Div(%d, %d): %v\n&quot;</span>, args.A, args.B, resp)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">log.Println(<span class="string">&quot;waiting...&quot;</span>)</span><br><span class="line">time.Sleep(time.Second)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="4-JSONRPC"><a href="#4-JSONRPC" class="headerlink" title="4. JSONRPC"></a>4. JSONRPC</h1><h2 id="4-1-服务端"><a href="#4-1-服务端" class="headerlink" title="4.1 服务端"></a>4.1 服务端</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> JsonParams <span class="keyword">struct</span> &#123;</span><br><span class="line">X <span class="keyword">int</span></span><br><span class="line">Y <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> JsonRpc <span class="keyword">struct</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(*JsonRpc)</span> <span class="title">Add</span><span class="params">(req JsonParams, resp *<span class="keyword">int</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">*resp = req.X + req.Y</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">rpc.RegisterName(<span class="string">&quot;JsonRpc&quot;</span>, <span class="built_in">new</span>(JsonRpc))</span><br><span class="line"></span><br><span class="line">ln, err := net.Listen(<span class="string">&quot;tcp&quot;</span>, <span class="string">&quot;:8081&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err.Error())</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">conn, err := ln.Accept()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Println(err.Error())</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">log.Printf(<span class="string">&quot;%v connected\n&quot;</span>, conn.RemoteAddr().String())</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> jsonrpc.ServeConn(conn)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-2-客户端-（Golang"><a href="#4-2-客户端-（Golang" class="headerlink" title="4.2 客户端 （Golang)"></a>4.2 客户端 （Golang)</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> JsonParams <span class="keyword">struct</span> &#123;</span><br><span class="line">X <span class="keyword">int</span></span><br><span class="line">Y <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">client, err := jsonrpc.Dial(<span class="string">&quot;tcp&quot;</span>, <span class="string">&quot;:8081&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err.Error())</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">req := JsonParams&#123;<span class="number">2</span>, <span class="number">8</span>&#125;</span><br><span class="line"><span class="keyword">var</span> resp <span class="keyword">int</span></span><br><span class="line"></span><br><span class="line">err = client.Call(<span class="string">&quot;JsonRpc.Add&quot;</span>, req, &amp;resp)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err.Error())</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">log.Printf(<span class="string">&quot;JsonRpc.Add(%d, %d): %d\n&quot;</span>, req.X, req.Y, resp)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-3-客户端-Python"><a href="#4-3-客户端-Python" class="headerlink" title="4.3 客户端 (Python)"></a>4.3 客户端 (Python)</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">    client.connect((<span class="string">&#x27;localhost&#x27;</span>, <span class="number">8081</span>))</span><br><span class="line"></span><br><span class="line">    payload = &#123;</span><br><span class="line">        <span class="string">&quot;method&quot;</span>: <span class="string">&quot;JsonRpc.Add&quot;</span>,</span><br><span class="line">        <span class="string">&quot;params&quot;</span>: [&#123;<span class="string">&#x27;X&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;Y&#x27;</span>: <span class="number">7</span>&#125;],</span><br><span class="line">        <span class="string">&quot;jsonrpc&quot;</span>: <span class="string">&quot;1.0&quot;</span>,</span><br><span class="line">        <span class="string">&quot;id&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    client.send(json.dumps(payload).encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"></span><br><span class="line">    data = client.recv(<span class="number">1024</span>)</span><br><span class="line">    msg = json.loads(data.decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">    <span class="built_in">print</span>(msg.get(<span class="string">&#x27;result&#x27;</span>))</span><br></pre></td></tr></table></figure><h2 id="4-4-客户端-（Telnet"><a href="#4-4-客户端-（Telnet" class="headerlink" title="4.4 客户端 （Telnet)"></a>4.4 客户端 （Telnet)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ telnet localhost 8081</span><br><span class="line"></span><br><span class="line">&#123;<span class="string">&quot;method&quot;</span>: <span class="string">&quot;JsonRpc.Div&quot;</span>, <span class="string">&quot;params&quot;</span>: [&#123;<span class="string">&quot;X&quot;</span>:5,<span class="string">&quot;Y&quot;</span>:3&#125;], <span class="string">&quot;id&quot;</span>: 1&#125;</span><br><span class="line">&#123;<span class="string">&quot;id&quot;</span>:1,<span class="string">&quot;result&quot;</span>:null,<span class="string">&quot;error&quot;</span>:<span class="string">&quot;rpc: can&#x27;t find method JsonRpc.Div&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">&#123;<span class="string">&quot;method&quot;</span>: <span class="string">&quot;JsonRpc.Add&quot;</span>, <span class="string">&quot;params&quot;</span>: [&#123;<span class="string">&quot;X&quot;</span>:5,<span class="string">&quot;Y&quot;</span>:3&#125;], <span class="string">&quot;id&quot;</span>: 1&#125;</span><br><span class="line">&#123;<span class="string">&quot;id&quot;</span>:1,<span class="string">&quot;result&quot;</span>:8,<span class="string">&quot;error&quot;</span>:null&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> rpc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go 字符编码</title>
      <link href="/2018/01/19/Go%20%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81/"/>
      <url>/2018/01/19/Go%20%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h1 id="1-编码检测库："><a href="#1-编码检测库：" class="headerlink" title="1. 编码检测库："></a>1. 编码检测库：</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> http_proxy=socks5://127.0.0.1:1080 </span><br><span class="line"></span><br><span class="line"><span class="comment"># 编码转换</span></span><br><span class="line">go get -v golang.org/x/text</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检测html编码</span></span><br><span class="line">go get -v golang.org/x/net/html</span><br></pre></td></tr></table></figure><h1 id="2-字符编码转换："><a href="#2-字符编码转换：" class="headerlink" title="2. 字符编码转换："></a>2. 字符编码转换：</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">resp, err := http.Get(<span class="string">&quot;https://www.zhenai.com//zhenghun&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> resp.Body.Close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> resp.StatusCode != http.StatusOK &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;Error: status code&quot;</span>, resp.StatusCode)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 为避免Peek函数影响底层io.Reader的文件指针位置，先转换为缓存Reader</span></span><br><span class="line">bufReader := bufio.NewReader(resp.Body)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取编码类型</span></span><br><span class="line">e := determineEncoding(bufReader)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 编码类型转换</span></span><br><span class="line">utf8Reader := transform.NewReader(bufReader, e.NewDecoder())</span><br><span class="line"></span><br><span class="line">bytes, err := ioutil.ReadAll(utf8Reader)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Printf(<span class="string">&quot;%s\n&quot;</span>, bytes)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">determineEncoding</span><span class="params">(r *bufio.Reader)</span> <span class="title">encoding</span>.<span class="title">Encoding</span></span> &#123;</span><br><span class="line">bytes, err := r.Peek(<span class="number">1024</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line">e, _, _ := charset.DetermineEncoding(bytes, <span class="string">&quot;html&quot;</span>)</span><br><span class="line"><span class="keyword">return</span> e</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go 集成ElasticSearch</title>
      <link href="/2018/01/18/Go%20%E9%9B%86%E6%88%90ElasticSearch/"/>
      <url>/2018/01/18/Go%20%E9%9B%86%E6%88%90ElasticSearch/</url>
      
        <content type="html"><![CDATA[<h1 id="1-简介"><a href="#1-简介" class="headerlink" title="1. 简介"></a>1. 简介</h1><ul><li>全文搜索引擎</li><li>快速存储、搜索和分析海量数据</li><li>存储json格式文档</li></ul><h2 id="1-1-ElasticSearch数据库"><a href="#1-1-ElasticSearch数据库" class="headerlink" title="1.1 ElasticSearch数据库"></a>1.1 ElasticSearch数据库</h2><ul><li><code>&lt;server&gt;:9200/index/type/id</code></li><li><code>index -&gt; database</code></li><li><code>type -&gt; table</code></li><li><code>&lt;server&gt;:9200/index/type/_search?q=</code> 全文搜索</li></ul><h2 id="1-2-安装elastic-client"><a href="#1-2-安装elastic-client" class="headerlink" title="1.2 安装elastic client:"></a>1.2 安装elastic client:</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go get gopkg.in/olivere/elastic.v5</span><br></pre></td></tr></table></figure><h1 id="2-安装ElasticSearch服务器"><a href="#2-安装ElasticSearch服务器" class="headerlink" title="2. 安装ElasticSearch服务器"></a>2. 安装ElasticSearch服务器</h1><h1 id="2-1-使用Docker方式安装"><a href="#2-1-使用Docker方式安装" class="headerlink" title="2.1 使用Docker方式安装"></a>2.1 使用Docker方式安装</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker login daocloud.io</span><br><span class="line"></span><br><span class="line">docker pull daocloud.io/library/elasticsearch:7.3.2</span><br><span class="line"></span><br><span class="line">docker run -d -p 9200:9200 daocloud.io/library/elasticsearch</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> elasticsearch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go标准库 http</title>
      <link href="/2018/01/17/Go%20%E6%A0%87%E5%87%86%E5%BA%93http/"/>
      <url>/2018/01/17/Go%20%E6%A0%87%E5%87%86%E5%BA%93http/</url>
      
        <content type="html"><![CDATA[<h1 id="1-客户端"><a href="#1-客户端" class="headerlink" title="1. 客户端"></a>1. 客户端</h1><p>Http Client:</p><ul><li>http.GET(url) 直接发起请求</li><li>http.Client{} 控制请求头部等</li><li>httputil 简化工作</li></ul><p>示例：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// 1. 直接发起请求</span></span><br><span class="line"><span class="comment">//resp, err := http.Get(&quot;https://baidu.com&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 控制请求头</span></span><br><span class="line">req, err := http.NewRequest(</span><br><span class="line">http.MethodGet,</span><br><span class="line"><span class="string">&quot;http://www.baidu.com&quot;</span>, <span class="literal">nil</span>)</span><br><span class="line">req.Header.Add(<span class="string">&quot;User-Agent&quot;</span>,</span><br><span class="line"><span class="string">&quot;Mozilla/5.0 (iPhone; CPU iPhone OS 13_2_3 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.3 Mobile/15E148 Safari/604.1&quot;</span>)</span><br><span class="line"><span class="comment">//resp, err := http.DefaultClient.Do(req)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. 检测是否重定向</span></span><br><span class="line">client := http.Client&#123;</span><br><span class="line">CheckRedirect: <span class="function"><span class="keyword">func</span><span class="params">(req *http.Request, via []*http.Request)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;Redirect:&quot;</span>, req)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;,</span><br><span class="line">&#125;</span><br><span class="line">resp, err := client.Do(req)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> resp.Body.Close()</span><br><span class="line"></span><br><span class="line">content, err := httputil.DumpResponse(resp, <span class="literal">true</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Printf(<span class="string">&quot;%s&quot;</span>, content)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="2-服务端"><a href="#2-服务端" class="headerlink" title="2. 服务端"></a>2. 服务端</h1><h2 id="2-1-handler函数"><a href="#2-1-handler函数" class="headerlink" title="2.1 handler函数"></a>2.1 handler函数</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">SignupHandler</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> r.Method == http.MethodGet &#123;</span><br><span class="line">data, err := ioutil.ReadFile(<span class="string">&quot;./static/view/signup.html&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">w.WriteHeader(http.StatusInternalServerError)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">w.Write(data)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">r.ParseForm()  <span class="comment">// 必须的</span></span><br><span class="line">username := r.Form.Get(<span class="string">&quot;username&quot;</span>)</span><br><span class="line">password := r.Form.Get(<span class="string">&quot;password&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(username) &lt; <span class="number">3</span> || <span class="built_in">len</span>(password) &lt; <span class="number">5</span> &#123;</span><br><span class="line">w.Write([]<span class="keyword">byte</span>(<span class="string">&quot;Invalid parameter&quot;</span>))</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">enc_pwd := util.Sha1([]<span class="keyword">byte</span>(password + pwd_salt))</span><br><span class="line">ret := db.UserSignup(username, enc_pwd)</span><br><span class="line"><span class="keyword">if</span> ret &#123;</span><br><span class="line">w.Write([]<span class="keyword">byte</span>(<span class="string">&quot;SUCCESS&quot;</span>))</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">w.Write([]<span class="keyword">byte</span>(<span class="string">&quot;FAILED&quot;</span>))</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-2-中间件"><a href="#2-2-中间件" class="headerlink" title="2.2 中间件"></a>2.2 中间件</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">HTTPInterceptor</span><span class="params">(h http.HandlerFunc)</span> <span class="title">http</span>.<span class="title">HandlerFunc</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> http.HandlerFunc(</span><br><span class="line"><span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">r.ParseForm()</span><br><span class="line">username := r.Form.Get(<span class="string">&quot;username&quot;</span>)</span><br><span class="line">token := r.Form.Get(<span class="string">&quot;token&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(username) &lt; <span class="number">3</span> || !IsTokenValid(token) &#123;</span><br><span class="line">w.WriteHeader(http.StatusForbidden)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">h(w, r)</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-3-启动服务"><a href="#2-3-启动服务" class="headerlink" title="2.3 启动服务"></a>2.3 启动服务</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// 静态文件</span></span><br><span class="line">path, _ := os.Getwd()</span><br><span class="line">path = filepath.Join(path, <span class="string">&quot;static&quot;</span>)</span><br><span class="line">http.Handle(<span class="string">&quot;/static/&quot;</span>, http.StripPrefix(<span class="string">&quot;/static/&quot;</span>, http.FileServer(http.Dir(path))))</span><br><span class="line"></span><br><span class="line"><span class="comment">// 路由和中间件</span></span><br><span class="line">http.HandleFunc(<span class="string">&quot;/user/signup&quot;</span>, handler.SignupHandler)</span><br><span class="line">http.HandleFunc(<span class="string">&quot;/user/info&quot;</span>, handler.HTTPInterceptor(handler.UserInfoHandler))</span><br><span class="line"></span><br><span class="line">err := http.ListenAndServe(<span class="string">&quot;:8080&quot;</span>, <span class="literal">nil</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;Failed to start server: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="3-http服务器性能分析"><a href="#3-http服务器性能分析" class="headerlink" title="3. http服务器性能分析"></a>3. http服务器性能分析</h1><ul><li><code>import _ &quot;net/http/pprof</code></li><li>访问<code>/debug/pprof/</code></li><li>使用<code>go tool pprof</code>分析性能</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;log&quot;</span></span><br><span class="line"><span class="string">&quot;net/http&quot;</span></span><br><span class="line">_ <span class="string">&quot;net/http/pprof&quot;</span></span><br><span class="line"><span class="string">&quot;os&quot;</span></span><br><span class="line">...</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>查看性能：</p><p><a href="http://localhost:8080/debug/pprof/">http://localhost:8080/debug/pprof/</a></p><p>go tool pprof <a href="http://localhost:8080/debug/pprof/profile">http://localhost:8080/debug/pprof/profile</a></p>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go 标准库unsafe</title>
      <link href="/2018/01/16/Go%20%E6%A0%87%E5%87%86%E5%BA%93unsafe/"/>
      <url>/2018/01/16/Go%20%E6%A0%87%E5%87%86%E5%BA%93unsafe/</url>
      
        <content type="html"><![CDATA[<h1 id="1-unsafe包"><a href="#1-unsafe包" class="headerlink" title="1. unsafe包"></a>1. unsafe包</h1><p>Go是强类型语言，不允许不同类型的指针互相转换。但它提供unsafe包作为中间媒介，快速实现类型转换，但该转换是不安全的。</p><h2 id="1-1-Go指针和unsafe-Pointer的区别"><a href="#1-1-Go指针和unsafe-Pointer的区别" class="headerlink" title="1.1 Go指针和unsafe.Pointer的区别"></a>1.1 Go指针和unsafe.Pointer的区别</h2><p><strong>Go指针</strong>：</p><ul><li>不能进行数学运算</li><li>不同类型的指针，不能相互转换</li><li>不同类型的指针不能使用 == 或 != 比较</li><li>不同类型的指针变量不能相互赋值</li></ul><p><strong>unsafe.Pointer</strong>:</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> ArbitraryType <span class="keyword">int</span></span><br><span class="line"><span class="keyword">type</span> Pointer *ArbitraryType</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/golang/unsafe_pointer.png" alt="unsafe_pointer"></p><span id="more"></span><p><strong>uintptr</strong>: Go的内置类型，能存储指针的整型，与普通指针区别如下</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="keyword">uintptr</span> <span class="keyword">uintptr</span></span><br></pre></td></tr></table></figure><ul><li>普通指针不可以参与计算，但<code>uintptr</code>可以。</li><li>普通指针和<code>uintptr</code>之间必选进行强制转换。</li><li>GC 不会把<code>uintptr</code>当成指针，由<code>uintptr</code>变量表示的地址处的数据也可能被GC回收。</li></ul><h2 id="1-2-主要方法"><a href="#1-2-主要方法" class="headerlink" title="1.2 主要方法"></a>1.2 主要方法</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> ArbitraryType <span class="keyword">int</span></span><br><span class="line"><span class="keyword">type</span> Pointer *ArbitraryType</span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回类型所占内存大小</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Sizeof</span>（<span class="title">variable</span> <span class="title">ArbitraryType</span>）<span class="title">uintptr</span></span>  </span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回类型的对齐值, 等价于reflect.TypeOf(x).Align()</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Alignof</span>（<span class="title">variable</span> <span class="title">ArbitraryType</span>）<span class="title">uintptr</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// struct结构体中的字段相对于结构体的内存位置偏移量。结构体的第一个字段的偏移量都是0.</span></span><br><span class="line"><span class="comment">// 等价于reflect.TypeOf(u1).Field(i).Offset</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Offsetof</span>（<span class="title">selector</span> <span class="title">ArbitraryType</span>）<span class="title">uintptr</span></span></span><br></pre></td></tr></table></figure><h1 id="2-指针转换"><a href="#2-指针转换" class="headerlink" title="2. 指针转换"></a>2. 指针转换</h1><h2 id="2-1-示例：int32指针指向int64数据"><a href="#2-1-示例：int32指针指向int64数据" class="headerlink" title="2.1 示例：int32指针指向int64数据"></a>2.1 示例：int32指针指向int64数据</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> n <span class="keyword">int64</span> = <span class="number">5</span></span><br><span class="line"><span class="keyword">var</span> p1 = &amp;n</span><br><span class="line"><span class="keyword">var</span> p2 = (*<span class="keyword">int32</span>)(unsafe.Pointer(p1))</span><br><span class="line"></span><br><span class="line"><span class="comment">// 类型虽然不一样，但指向同一个地址</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;p1=%v, p2=%v\n&quot;</span>, p1, p2)</span><br><span class="line"></span><br><span class="line">*p2 = <span class="number">10</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;n=%v, *p1=%v, *p2=%v\n&quot;</span>, n, *p1, *p2)</span><br><span class="line"></span><br><span class="line"><span class="comment">// *p2 越界</span></span><br><span class="line">*p1 = math.MaxInt32 + <span class="number">1</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;n=%v, *p1=%v, *p2=%v\n&quot;</span>, n, *p1, *p2)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-2-示例：遍历数组元素"><a href="#2-2-示例：遍历数组元素" class="headerlink" title="2.2 示例：遍历数组元素"></a>2.2 示例：遍历数组元素</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">a := [...]<span class="keyword">int</span>&#123;<span class="number">4</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">9</span>, <span class="number">5</span>&#125;</span><br><span class="line">p := &amp;a[<span class="number">0</span>]</span><br><span class="line">fmt.Printf(<span class="string">&quot;%p: %v\n&quot;</span>, p, *p)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">1</span>; i &lt; <span class="built_in">len</span>(a); i++ &#123;</span><br><span class="line">ptr := <span class="keyword">uintptr</span>(unsafe.Pointer(p)) + unsafe.Sizeof(a[<span class="number">0</span>])</span><br><span class="line">p = (*<span class="keyword">int</span>)(unsafe.Pointer(ptr))</span><br><span class="line">fmt.Printf(<span class="string">&quot;%p: %v\n&quot;</span>, p, *p)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="3-类型对齐值"><a href="#3-类型对齐值" class="headerlink" title="3. 类型对齐值"></a>3. 类型对齐值</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> b <span class="keyword">bool</span></span><br><span class="line"><span class="keyword">var</span> i <span class="keyword">int</span></span><br><span class="line"><span class="keyword">var</span> i64 <span class="keyword">int64</span></span><br><span class="line"><span class="keyword">var</span> f <span class="keyword">float32</span></span><br><span class="line"><span class="keyword">var</span> f64 <span class="keyword">float64</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> s <span class="keyword">string</span></span><br><span class="line"><span class="keyword">var</span> m <span class="keyword">map</span>[<span class="keyword">int</span>]<span class="keyword">string</span>  <span class="comment">// 固定8</span></span><br><span class="line"><span class="keyword">var</span> a []<span class="keyword">int</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> p *<span class="keyword">int32</span></span><br><span class="line"></span><br><span class="line">fmt.Println(unsafe.Alignof(b))   <span class="comment">// 1</span></span><br><span class="line">fmt.Println(unsafe.Alignof(i))   <span class="comment">// 8</span></span><br><span class="line">fmt.Println(unsafe.Alignof(i64)) <span class="comment">// 8</span></span><br><span class="line">fmt.Println(unsafe.Alignof(f))   <span class="comment">// 4</span></span><br><span class="line">fmt.Println(unsafe.Alignof(f64)) <span class="comment">// 8</span></span><br><span class="line">fmt.Println(unsafe.Alignof(s))   <span class="comment">// 8</span></span><br><span class="line">fmt.Println(unsafe.Alignof(m))   <span class="comment">// 8</span></span><br><span class="line">fmt.Println(unsafe.Alignof(a))   <span class="comment">// 8</span></span><br><span class="line">fmt.Println(unsafe.Alignof(p))   <span class="comment">// 8</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="4-利用unsafe包修改私有成员"><a href="#4-利用unsafe包修改私有成员" class="headerlink" title="4. 利用unsafe包修改私有成员"></a>4. 利用unsafe包修改私有成员</h1><p>结构体(struct)，可以通过offset函数获取成员的偏移量，进而获取成员的地址。读写该地址的内存，就可以达到改变成员值的目的</p><p>结构体内存分配：会被分配一块连续的内存，结构体的地址也代表了第一个成员的地址。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> User <span class="keyword">struct</span> &#123;</span><br><span class="line">name <span class="keyword">string</span></span><br><span class="line">age  <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">user := User&#123;<span class="string">&quot;eli&quot;</span>, <span class="number">29</span>&#125;</span><br><span class="line"></span><br><span class="line">name := (*<span class="keyword">string</span>)(unsafe.Pointer(&amp;user))</span><br><span class="line">*name = <span class="string">&quot;rania&quot;</span></span><br><span class="line"></span><br><span class="line">age := (*<span class="keyword">int</span>)(unsafe.Pointer(<span class="keyword">uintptr</span>(unsafe.Pointer(&amp;user)) + unsafe.Offsetof(user.age)))</span><br><span class="line">*age = <span class="number">20</span></span><br><span class="line"></span><br><span class="line">fmt.Println(user)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="5-获取slice的长度"><a href="#5-获取slice的长度" class="headerlink" title="5. 获取slice的长度"></a>5. 获取slice的长度</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// runtime/slice.go</span></span><br><span class="line"><span class="keyword">type</span> slice <span class="keyword">struct</span> &#123;</span><br><span class="line">  array unsafe.Pointer  <span class="comment">// offset=8</span></span><br><span class="line">  <span class="built_in">len</span> <span class="keyword">int</span></span><br><span class="line">  <span class="built_in">cap</span> <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">makeslice</span><span class="params">(et *_type, <span class="built_in">len</span>, <span class="built_in">cap</span> <span class="keyword">int</span>)</span> <span class="title">slice</span></span></span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">s := <span class="built_in">make</span>([]<span class="keyword">int</span>, <span class="number">5</span>, <span class="number">10</span>)</span><br><span class="line">fmt.Printf(<span class="string">&quot;%p\n&quot;</span>, &amp;s)</span><br><span class="line"></span><br><span class="line">Len := (*<span class="keyword">int</span>)(unsafe.Pointer(<span class="keyword">uintptr</span>(unsafe.Pointer(&amp;s)) + <span class="keyword">uintptr</span>(<span class="number">8</span>)))</span><br><span class="line">fmt.Printf(<span class="string">&quot;Len=%d, len(s)=%d\n&quot;</span>, *Len, <span class="built_in">len</span>(s))</span><br><span class="line"></span><br><span class="line">Cap := (*<span class="keyword">int</span>)(unsafe.Pointer(<span class="keyword">uintptr</span>(unsafe.Pointer(&amp;s)) + <span class="keyword">uintptr</span>(<span class="number">16</span>)))</span><br><span class="line">fmt.Printf(<span class="string">&quot;Cap=%d, cap(s)=%d\n&quot;</span>, *Cap, <span class="built_in">cap</span>(s))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="6-获取map长度"><a href="#6-获取map长度" class="headerlink" title="6. 获取map长度"></a>6. 获取map长度</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> hmap <span class="keyword">struct</span> &#123;</span><br><span class="line">  count <span class="keyword">int</span></span><br><span class="line">  flags <span class="keyword">uint8</span></span><br><span class="line">  B <span class="keyword">uint8</span></span><br><span class="line">  noverflow <span class="keyword">uint16</span></span><br><span class="line">  hash0 <span class="keyword">uint32</span></span><br><span class="line">  </span><br><span class="line">  buckets unsafe.Pointer</span><br><span class="line">  oldbuckets unsafe.Pointer</span><br><span class="line">  nevacuate <span class="keyword">uintptr</span></span><br><span class="line">  </span><br><span class="line">  extra *mapextra</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 注意返回的是指针</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">makemap</span><span class="params">(t *maptype, hint <span class="keyword">int64</span>, h *hmap, bucket unsafe.Pointer)</span> *<span class="title">hmap</span></span></span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">mp := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">int</span>)</span><br><span class="line">mp[<span class="string">&quot;a&quot;</span>] = <span class="number">21</span></span><br><span class="line">mp[<span class="string">&quot;z&quot;</span>] = <span class="number">45</span></span><br><span class="line"></span><br><span class="line">count := **(**<span class="keyword">int</span>)(unsafe.Pointer(&amp;mp)) <span class="comment">// 二级指针</span></span><br><span class="line">fmt.Println(count, <span class="built_in">len</span>(mp)) <span class="comment">// 2 2</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="7-实现字符串和byte切片的零拷贝转换"><a href="#7-实现字符串和byte切片的零拷贝转换" class="headerlink" title="7. 实现字符串和byte切片的零拷贝转换"></a>7. 实现字符串和byte切片的零拷贝转换</h1><p>slice和string的底层数据结构：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> StringHeader <span class="keyword">struct</span> &#123;</span><br><span class="line">  Data <span class="keyword">uintptr</span></span><br><span class="line">  Len <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> SliceHeader <span class="keyword">struct</span> &#123;</span><br><span class="line">  Data <span class="keyword">uintptr</span></span><br><span class="line">  Len <span class="keyword">int</span></span><br><span class="line">  Cap <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">string2bytes</span><span class="params">(s <span class="keyword">string</span>)</span> []<span class="title">byte</span></span> &#123;</span><br><span class="line">stringHeader := (*reflect.StringHeader)(unsafe.Pointer(&amp;s))</span><br><span class="line"></span><br><span class="line">bh := reflect.SliceHeader&#123;</span><br><span class="line">Data: stringHeader.Data,</span><br><span class="line">Len:  stringHeader.Len,</span><br><span class="line">Cap:  stringHeader.Len,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> *(*[]<span class="keyword">byte</span>)(unsafe.Pointer(&amp;bh))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">bytes2string</span><span class="params">(b []<span class="keyword">byte</span>)</span> <span class="title">string</span></span> &#123;</span><br><span class="line">sliceHeader := (*reflect.SliceHeader)(unsafe.Pointer(&amp;b))</span><br><span class="line"></span><br><span class="line">sh := reflect.StringHeader&#123;</span><br><span class="line">Data: sliceHeader.Data,</span><br><span class="line">Len:  sliceHeader.Len,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> *(*<span class="keyword">string</span>)(unsafe.Pointer(&amp;sh))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go 单元测试</title>
      <link href="/2018/01/15/Go%20%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/"/>
      <url>/2018/01/15/Go%20%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<h1 id="1-基础测试"><a href="#1-基础测试" class="headerlink" title="1. 基础测试"></a>1. 基础测试</h1><h2 id="1-1-最简单的测试"><a href="#1-1-最简单的测试" class="headerlink" title="1.1 最简单的测试"></a>1.1 最简单的测试</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Add</span><span class="params">(x, y <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> x + y</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Sub</span><span class="params">(x, y <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> x - y</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><span id="more"></span><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestAdd</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">result := Add(<span class="number">3</span>, <span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> result != <span class="number">8</span> &#123;</span><br><span class="line">t.Fatalf(<span class="string">&quot;expected: %d, actual: %d&quot;</span>, <span class="number">8</span>, result)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">t.Log(<span class="string">&quot;test Add success.&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestSub</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">result := Sub(<span class="number">3</span>, <span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> result != <span class="number">-2</span> &#123;</span><br><span class="line">t.Fatalf(<span class="string">&quot;expected: %d, actual: %d&quot;</span>, <span class="number">-2</span>, result)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">t.Log(<span class="string">&quot;test Sub success.&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">go <span class="built_in">test</span></span><br><span class="line"></span><br><span class="line">go <span class="built_in">test</span> -v</span><br><span class="line"></span><br><span class="line">go <span class="built_in">test</span> -v -run TestAdd</span><br><span class="line"></span><br><span class="line">go <span class="built_in">help</span> testflag</span><br></pre></td></tr></table></figure><h2 id="1-2-表格驱动测试"><a href="#1-2-表格驱动测试" class="headerlink" title="1.2 表格驱动测试"></a>1.2 表格驱动测试</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestAddBatch</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">tests := []<span class="keyword">struct</span>&#123;</span><br><span class="line">a, b, c <span class="keyword">int</span></span><br><span class="line">&#125;&#123;</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;,</span><br><span class="line">&#123;<span class="number">0</span>, <span class="number">2</span>, <span class="number">2</span>&#125;,</span><br><span class="line">&#123;<span class="number">-1</span>, <span class="number">1</span>, <span class="number">1</span>&#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, test := <span class="keyword">range</span> tests &#123;</span><br><span class="line"><span class="keyword">if</span> actual := Add(test.a, test.b); actual != test.c &#123;</span><br><span class="line">t.Errorf(<span class="string">&quot;Add(%d, %d); got %d; expected %d\n&quot;</span>, test.a, test.b, actual, test.c)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-3-覆盖率测试"><a href="#1-3-覆盖率测试" class="headerlink" title="1.3 覆盖率测试"></a>1.3 覆盖率测试</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">go <span class="built_in">test</span> -coverprofile=c.out</span><br><span class="line"></span><br><span class="line">go tool cover -html=c.out</span><br></pre></td></tr></table></figure><h2 id="1-4-Example-Code测试"><a href="#1-4-Example-Code测试" class="headerlink" title="1.4 Example Code测试"></a>1.4 Example Code测试</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Fib</span><span class="params">(n <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> n &lt;= <span class="number">2</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> Fib(n<span class="number">-1</span>) + Fib(n<span class="number">-2</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">ExampleFib</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(fib(<span class="number">10</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">// Output: 55</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go <span class="built_in">test</span> -v</span><br></pre></td></tr></table></figure><h1 id="2-基准测试"><a href="#2-基准测试" class="headerlink" title="2. 基准测试"></a>2. 基准测试</h1><p>基准测可以测试一段程序的运行性能及耗费CPU的程度</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">fib</span><span class="params">(n <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">a, b := <span class="number">1</span>, <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">1</span>; i &lt;= n; i++ &#123;</span><br><span class="line"><span class="keyword">if</span> i == n &#123;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">a, b = b, a+b</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> a</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">fibonacci</span><span class="params">()</span> <span class="title">func</span><span class="params">()</span> <span class="title">int</span></span> &#123;</span><br><span class="line">a, b := <span class="number">1</span>, <span class="number">1</span></span><br><span class="line"><span class="keyword">return</span> <span class="function"><span class="keyword">func</span><span class="params">()</span> <span class="title">int</span></span> &#123;</span><br><span class="line">x := a</span><br><span class="line">a, b = b, a+b</span><br><span class="line"><span class="keyword">return</span> x</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">fib2</span><span class="params">(n <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">x := <span class="number">0</span></span><br><span class="line">f := fibonacci()</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">1</span>; i &lt;= n; i++ &#123;</span><br><span class="line">x = f()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> x</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">fib3</span><span class="params">(n <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> n &lt;= <span class="number">2</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> fib3(n<span class="number">-1</span>) + fib3(n<span class="number">-2</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">BenchmarkFib</span><span class="params">(b *testing.B)</span></span> &#123;</span><br><span class="line">n := <span class="number">9</span></span><br><span class="line">expected := <span class="number">34</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; b.N; i++ &#123;</span><br><span class="line">actual := fib(n)</span><br><span class="line"><span class="keyword">if</span> actual != expected &#123;</span><br><span class="line">b.Errorf(<span class="string">&quot;fib(%d), got %d, expected %d&quot;</span>, n, actual, expected)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">BenchmarkFib2</span><span class="params">(b *testing.B)</span></span> &#123;</span><br><span class="line">n := <span class="number">9</span></span><br><span class="line">expected := <span class="number">34</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; b.N; i++ &#123;</span><br><span class="line">actual := fib2(n)</span><br><span class="line"><span class="keyword">if</span> actual != expected &#123;</span><br><span class="line">b.Errorf(<span class="string">&quot;fib2(%d), got %d, expected %d&quot;</span>, n, actual, expected)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">BenchmarkFib3</span><span class="params">(b *testing.B)</span></span> &#123;</span><br><span class="line">n := <span class="number">9</span></span><br><span class="line">expected := <span class="number">34</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; b.N; i++ &#123;</span><br><span class="line">actual := fib3(n)</span><br><span class="line"><span class="keyword">if</span> actual != expected &#123;</span><br><span class="line">b.Errorf(<span class="string">&quot;fib3(%d), got %d, expected %d&quot;</span>, n, actual, expected)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">go <span class="built_in">test</span> -bench=.</span><br><span class="line"></span><br><span class="line">BenchmarkFib-4          222371659                5.33 ns/op</span><br><span class="line">BenchmarkFib2-4         13082476                85.9 ns/op</span><br><span class="line">BenchmarkFib3-4         10054833               120 ns/op</span><br><span class="line"></span><br><span class="line"><span class="comment"># 自定义测试时间</span></span><br><span class="line">go <span class="built_in">test</span> -bench=. -benchmem -benchtime=10s</span><br><span class="line"></span><br><span class="line">BenchmarkFib-4          1000000000               5.35 ns/op            0 B/op          0 allocs/op</span><br><span class="line">BenchmarkFib2-4         138880591               87.1 ns/op            48 B/op          3 allocs/op</span><br><span class="line">BenchmarkFib3-4         97723549               120 ns/op               0 B/op          0 allocs/op</span><br></pre></td></tr></table></figure><ul><li><code>ns/op</code> 表示每一个操作消耗多少时间,单位是 纳秒ns</li><li><code>B/op</code> 表示每一次操作需要分配的字节数</li><li><code>allocs/op</code> 表示每次执行分配了多少次</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">go <span class="built_in">test</span> -bench . -cpuprofile=cpu.out</span><br><span class="line"></span><br><span class="line">go tool pprof cpu.out</span><br><span class="line">(pprof) web</span><br></pre></td></tr></table></figure><h2 id="2-1-性能对比，int转string"><a href="#2-1-性能对比，int转string" class="headerlink" title="2.1 性能对比，int转string"></a>2.1 性能对比，int转string</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">BenchmarkSprintf</span><span class="params">(b *testing.B)</span></span> &#123;</span><br><span class="line">num := <span class="number">10</span></span><br><span class="line">b.ResetTimer()</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; b.N; i++ &#123;</span><br><span class="line">fmt.Sprintf(<span class="string">&quot;%d&quot;</span>, num)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">BenchmarkFormat</span><span class="params">(b *testing.B)</span></span> &#123;</span><br><span class="line">num := <span class="keyword">int64</span>(<span class="number">10</span>)</span><br><span class="line">b.ResetTimer()</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; b.N; i++ &#123;</span><br><span class="line">strconv.FormatInt(num, <span class="number">10</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">BenchmarkItoa</span><span class="params">(b *testing.B)</span></span> &#123;</span><br><span class="line">num := <span class="number">10</span></span><br><span class="line">b.ResetTimer()</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; b.N; i++ &#123;</span><br><span class="line">strconv.Itoa(num)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> go <span class="built_in">test</span> -bench=. -benchmem</span><br><span class="line">goos: darwin</span><br><span class="line">goarch: amd64</span><br><span class="line">pkg: gomod/aaa</span><br><span class="line">BenchmarkSprintf-4      12190561                94.1 ns/op            16 B/op          2 allocs/op</span><br><span class="line">BenchmarkFormat-4       275836423                4.24 ns/op            0 B/op          0 allocs/op</span><br><span class="line">BenchmarkItoa-4         253071742                4.73 ns/op            0 B/op          0 allocs/op</span><br><span class="line">PASS</span><br><span class="line">ok      gomod/aaa       5.386s</span><br></pre></td></tr></table></figure><h2 id="2-2-pprof-性能监控"><a href="#2-2-pprof-性能监控" class="headerlink" title="2.2 pprof 性能监控"></a>2.2 pprof 性能监控</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Fib</span><span class="params">(n <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> n &lt; <span class="number">2</span> &#123;</span><br><span class="line"><span class="keyword">return</span> n</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> Fib(n<span class="number">-1</span>) + Fib(n<span class="number">-2</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">BenchmarkFib</span><span class="params">(b *testing.B)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; b.N; i++ &#123;</span><br><span class="line">Fib(<span class="number">10</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">go <span class="built_in">test</span> -bench=. -benchmem -cpuprofile cpu.out -memprofile mem.out</span><br><span class="line"></span><br><span class="line">go tool pprof cpu.out </span><br><span class="line">(pprof) top</span><br><span class="line">(pprof) list Fib</span><br><span class="line"></span><br><span class="line">go tool pprof -http=<span class="string">&quot;:8081&quot;</span> cpu.out</span><br></pre></td></tr></table></figure><h1 id="3-gomock"><a href="#3-gomock" class="headerlink" title="3. gomock"></a>3. gomock</h1><p>当待测试的函数/对象的依赖关系很复杂，并且有些依赖不能直接创建，例如数据库连接、文件I/O等。这种场景就非常适合使用 mock/stub 测试。简单来说，就是用 mock 对象模拟依赖项的行为。</p><h2 id="3-1-安装"><a href="#3-1-安装" class="headerlink" title="3.1 安装"></a>3.1 安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">go get -u github.com/golang/mock/gomock</span><br><span class="line">go get -u github.com/golang/mock/mockgen</span><br></pre></td></tr></table></figure><h2 id="3-2-示例"><a href="#3-2-示例" class="headerlink" title="3.2 示例"></a>3.2 示例</h2><h3 id="3-2-1-待mock的代码"><a href="#3-2-1-待mock的代码" class="headerlink" title="3.2.1 待mock的代码"></a>3.2.1 待mock的代码</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> DB <span class="keyword">interface</span> &#123;</span><br><span class="line">Get(key <span class="keyword">string</span>) (<span class="keyword">int</span>, error)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetFromDB</span><span class="params">(db DB, key <span class="keyword">string</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> value, err := db.Get(key); err == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> value</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-2-2-生成mock代码"><a href="#3-2-2-生成mock代码" class="headerlink" title="3.2.2 生成mock代码"></a>3.2.2 生成mock代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mockgen -<span class="built_in">source</span>=db.go -destination=db_mock.go -package=main</span><br></pre></td></tr></table></figure><h3 id="3-2-3-测试代码"><a href="#3-2-3-测试代码" class="headerlink" title="3.2.3 测试代码"></a>3.2.3 测试代码</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestGetFromDB</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">ctrl := gomock.NewController(t)</span><br><span class="line"><span class="keyword">defer</span> ctrl.Finish()</span><br><span class="line"></span><br><span class="line">m := NewMockDB(ctrl)</span><br><span class="line">m.EXPECT().Get(gomock.Eq(<span class="string">&quot;Tom&quot;</span>)).Return(<span class="number">0</span>, errors.New(<span class="string">&quot;not exist&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> v := GetFromDB(m, <span class="string">&quot;Tom&quot;</span>); v != <span class="number">-1</span> &#123;</span><br><span class="line">t.Fatalf(<span class="string">&quot;expected -1, but go %v&quot;</span>, v)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-2-4-执行测试"><a href="#3-2-4-执行测试" class="headerlink" title="3.2.4 执行测试"></a>3.2.4 执行测试</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ go <span class="built_in">test</span> . -cover -v</span><br><span class="line">=== RUN   TestGetFromDB</span><br><span class="line">--- PASS: TestGetFromDB (0.00s)</span><br><span class="line">PASS</span><br><span class="line">coverage: 92.9% of statements</span><br><span class="line">ok      gomod/mock      1.030s  coverage: 92.9% of statements</span><br></pre></td></tr></table></figure><h2 id="3-3-打桩-stubs"><a href="#3-3-打桩-stubs" class="headerlink" title="3.3 打桩 (stubs)"></a>3.3 打桩 (stubs)</h2><h3 id="3-3-1-参数-Eq-Any-Not-Nil"><a href="#3-3-1-参数-Eq-Any-Not-Nil" class="headerlink" title="3.3.1 参数 (Eq, Any, Not, Nil)"></a>3.3.1 参数 (Eq, Any, Not, Nil)</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">m.EXPECT().Get(gomock.Eq(<span class="string">&quot;Tom&quot;</span>)).Return(<span class="number">0</span>, errors.New(<span class="string">&quot;not exist&quot;</span>))</span><br><span class="line">m.EXPECT().Get(gomock.Any()).Return(<span class="number">630</span>, <span class="literal">nil</span>)</span><br><span class="line">m.EXPECT().Get(gomock.Not(<span class="string">&quot;Sam&quot;</span>)).Return(<span class="number">0</span>, <span class="literal">nil</span>) </span><br><span class="line">m.EXPECT().Get(gomock.Nil()).Return(<span class="number">0</span>, errors.New(<span class="string">&quot;nil&quot;</span>))</span><br></pre></td></tr></table></figure><h3 id="3-3-2-返回值-Return-Do-DoAndReturn"><a href="#3-3-2-返回值-Return-Do-DoAndReturn" class="headerlink" title="3.3.2 返回值 (Return, Do, DoAndReturn)"></a>3.3.2 返回值 (Return, Do, DoAndReturn)</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">m.EXPECT().Get(gomock.Not(<span class="string">&quot;Sam&quot;</span>)).Return(<span class="number">0</span>, <span class="literal">nil</span>)</span><br><span class="line">m.EXPECT().Get(gomock.Any()).Do(<span class="function"><span class="keyword">func</span><span class="params">(key <span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line">    t.Log(key)</span><br><span class="line">&#125;)</span><br><span class="line">m.EXPECT().Get(gomock.Any()).DoAndReturn(<span class="function"><span class="keyword">func</span><span class="params">(key <span class="keyword">string</span>)</span> <span class="params">(<span class="keyword">int</span>, error)</span></span> &#123;</span><br><span class="line">    <span class="keyword">if</span> key == <span class="string">&quot;Sam&quot;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">630</span>, <span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>, errors.New(<span class="string">&quot;not exist&quot;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="3-3-3-调用次数-Times-MaxTimes-MinTimes-AnyTimes"><a href="#3-3-3-调用次数-Times-MaxTimes-MinTimes-AnyTimes" class="headerlink" title="3.3.3 调用次数 (Times, MaxTimes, MinTimes, AnyTimes)"></a>3.3.3 调用次数 (Times, MaxTimes, MinTimes, AnyTimes)</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestGetFromDB</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">ctrl := gomock.NewController(t)</span><br><span class="line"><span class="keyword">defer</span> ctrl.Finish()</span><br><span class="line"></span><br><span class="line">m := NewMockDB(ctrl)</span><br><span class="line">m.EXPECT().Get(gomock.Not(<span class="string">&quot;Sam&quot;</span>)).Return(<span class="number">0</span>, <span class="literal">nil</span>).Times(<span class="number">2</span>)</span><br><span class="line">GetFromDB(m, <span class="string">&quot;ABC&quot;</span>)</span><br><span class="line">GetFromDB(m, <span class="string">&quot;DEF&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="调用顺序-InOrder"><a href="#调用顺序-InOrder" class="headerlink" title="调用顺序 (InOrder)"></a>调用顺序 (InOrder)</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestGetFromDB</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">ctrl := gomock.NewController(t)</span><br><span class="line"><span class="keyword">defer</span> ctrl.Finish() <span class="comment">// 断言 DB.Get() 方法是否被调用</span></span><br><span class="line"></span><br><span class="line">m := NewMockDB(ctrl)</span><br><span class="line">o1 := m.EXPECT().Get(gomock.Eq(<span class="string">&quot;Tom&quot;</span>)).Return(<span class="number">0</span>, errors.New(<span class="string">&quot;not exist&quot;</span>))</span><br><span class="line">o2 := m.EXPECT().Get(gomock.Eq(<span class="string">&quot;Sam&quot;</span>)).Return(<span class="number">630</span>, <span class="literal">nil</span>)</span><br><span class="line">gomock.InOrder(o1, o2)</span><br><span class="line">GetFromDB(m, <span class="string">&quot;Tom&quot;</span>)</span><br><span class="line">GetFromDB(m, <span class="string">&quot;Sam&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go 正则表达式</title>
      <link href="/2018/01/12/Go%20%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
      <url>/2018/01/12/Go%20%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="1-正则表达式"><a href="#1-正则表达式" class="headerlink" title="1. 正则表达式"></a>1. 正则表达式</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">str := <span class="string">`171.43.145.13 - - [10/Mar/2020:10:19:06 +0800] &quot;POST /api/user/detail HTTP/1.1&quot; 200 252 &quot;-&quot; &quot;LifePlanner/1.9.14 (com.njivtime.lifeplanner; build:1.9.14.9; iOS 13.3.1) Alamofire/4.8.2&quot; &quot;-&quot; 0.009 0.009`</span></span><br><span class="line"></span><br><span class="line">re := regexp.MustCompile(<span class="string">`\d&#123;1,3&#125;\.\d&#123;1,3&#125;\.\d&#123;1,3&#125;\.\d&#123;1,3&#125;\s`</span>)</span><br><span class="line"></span><br><span class="line">arr := re.FindAllString(str, <span class="number">-1</span>)</span><br><span class="line">fmt.Println(arr)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><span id="more"></span>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go 序列化操作</title>
      <link href="/2018/01/11/Go%20%E5%BA%8F%E5%88%97%E5%8C%96%E6%93%8D%E4%BD%9C/"/>
      <url>/2018/01/11/Go%20%E5%BA%8F%E5%88%97%E5%8C%96%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h1 id="1-序列化"><a href="#1-序列化" class="headerlink" title="1. 序列化"></a>1. 序列化</h1><p><code>json.Marshal(v interface&#123;&#125;) ([]byte, error)</code></p><span id="more"></span><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Person <span class="keyword">struct</span> &#123;</span><br><span class="line">Name       <span class="keyword">string</span>  <span class="string">`json:&quot;name&quot;`</span></span><br><span class="line">Age        <span class="keyword">byte</span>    <span class="string">`json:&quot;age&quot;`</span></span><br><span class="line">Birthday   <span class="keyword">string</span>  <span class="string">`json:&quot;birthday&quot;`</span></span><br><span class="line">Salary     <span class="keyword">float64</span> <span class="string">`json:&quot;salary&quot;`</span></span><br><span class="line">Occupation <span class="keyword">string</span>  <span class="string">`json:&quot;occupation&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">serializeStruct()</span><br><span class="line"></span><br><span class="line">serializeMap()</span><br><span class="line"></span><br><span class="line">serializeSlice()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">serializeStruct</span><span class="params">()</span></span> &#123;</span><br><span class="line">p := Person&#123;</span><br><span class="line">Name:       <span class="string">&quot;张三&quot;</span>,</span><br><span class="line">Age:        <span class="number">45</span>,</span><br><span class="line">Birthday:   <span class="string">&quot;1975-05-01&quot;</span>,</span><br><span class="line">Salary:     <span class="number">32000.0</span>,</span><br><span class="line">Occupation: <span class="string">&quot;电气工程师&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">data, err := json.Marshal(&amp;p)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="keyword">string</span>(data))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">serializeMap</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> m <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">m = <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;)</span><br><span class="line"></span><br><span class="line">m[<span class="string">&quot;name&quot;</span>] = <span class="string">&quot;李四&quot;</span></span><br><span class="line">m[<span class="string">&quot;age&quot;</span>] = <span class="number">30</span></span><br><span class="line">m[<span class="string">&quot;city&quot;</span>] = <span class="string">&quot;北京市&quot;</span></span><br><span class="line"></span><br><span class="line">data, err := json.Marshal(m)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="keyword">string</span>(data))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">serializeSlice</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> s []<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">m1 := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;)</span><br><span class="line">m1[<span class="string">&quot;name&quot;</span>] = <span class="string">&quot;Tom&quot;</span></span><br><span class="line">m1[<span class="string">&quot;age&quot;</span>] = <span class="number">17</span></span><br><span class="line">m1[<span class="string">&quot;city&quot;</span>] = <span class="string">&quot;Los Angles&quot;</span></span><br><span class="line"></span><br><span class="line">m2 := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;)</span><br><span class="line">m2[<span class="string">&quot;name&quot;</span>] = <span class="string">&quot;Julie&quot;</span></span><br><span class="line">m2[<span class="string">&quot;age&quot;</span>] = <span class="number">21</span></span><br><span class="line">m2[<span class="string">&quot;city&quot;</span>] = <span class="string">&quot;New York&quot;</span></span><br><span class="line"></span><br><span class="line">s = <span class="built_in">append</span>(s, m1, m2)</span><br><span class="line"></span><br><span class="line">data, err := json.Marshal(s)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="keyword">string</span>(data))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="2-反序列化"><a href="#2-反序列化" class="headerlink" title="2. 反序列化"></a>2. 反序列化</h1><p><code>json.Unmarshal(data []byte, v interface&#123;&#125;) error</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Person <span class="keyword">struct</span> &#123;</span><br><span class="line">Name       <span class="keyword">string</span>  <span class="string">`json:&quot;name&quot;`</span></span><br><span class="line">Age        <span class="keyword">byte</span>    <span class="string">`json:&quot;age&quot;`</span></span><br><span class="line">Birthday   <span class="keyword">string</span>  <span class="string">`json:&quot;birthday&quot;`</span></span><br><span class="line">Salary     <span class="keyword">float64</span> <span class="string">`json:&quot;salary&quot;`</span></span><br><span class="line">Occupation <span class="keyword">string</span>  <span class="string">`json:&quot;occupation&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">deserializeStruct()</span><br><span class="line"></span><br><span class="line">deserializeMap()</span><br><span class="line"></span><br><span class="line">deserializeSlice()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">deserializeStruct</span><span class="params">()</span></span> &#123;</span><br><span class="line">js := <span class="string">`&#123;&quot;name&quot;:&quot;张三&quot;,&quot;age&quot;:45,&quot;birthday&quot;:&quot;1975-05-01&quot;,&quot;salary&quot;:32000,&quot;occupation&quot;:&quot;电气工程师&quot;&#125;`</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> p Person</span><br><span class="line"></span><br><span class="line">err := json.Unmarshal([]<span class="keyword">byte</span>(js), &amp;p)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(p)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">deserializeMap</span><span class="params">()</span></span> &#123;</span><br><span class="line">js := <span class="string">`&#123;&quot;age&quot;:30,&quot;city&quot;:&quot;北京市&quot;,&quot;name&quot;:&quot;李四&quot;&#125;`</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> m <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 反序列化不需要make，注意使用指针 &amp;m</span></span><br><span class="line">err := json.Unmarshal([]<span class="keyword">byte</span>(js), &amp;m)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(m)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">deserializeSlice</span><span class="params">()</span></span> &#123;</span><br><span class="line">js := <span class="string">`[&#123;&quot;age&quot;:17,&quot;city&quot;:&quot;Los Angles&quot;,&quot;name&quot;:&quot;Tom&quot;&#125;,&#123;&quot;age&quot;:21,&quot;city&quot;:&quot;New York&quot;,&quot;name&quot;:&quot;Julie&quot;&#125;]`</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> s []<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 反序列化不需要make，注意使用指针 &amp;s</span></span><br><span class="line">err := json.Unmarshal([]<span class="keyword">byte</span>(js), &amp;s)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(s)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go 网络编程</title>
      <link href="/2018/01/10/Go%20%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/"/>
      <url>/2018/01/10/Go%20%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="1-网络编程"><a href="#1-网络编程" class="headerlink" title="1. 网络编程"></a>1. 网络编程</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">net.Listen(network, address <span class="keyword">string</span>) (Listener, error)</span><br><span class="line">listener.Accept() (Conn, err)</span><br><span class="line">conn.Close()</span><br><span class="line">conn.Read([]<span class="keyword">byte</span>) (<span class="keyword">int</span>, err)</span><br><span class="line">conn.Write([]<span class="keyword">byte</span>)</span><br><span class="line"></span><br><span class="line">net.Dial(network, address <span class="keyword">string</span>) (Conn, error)</span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="1-1-服务器"><a href="#1-1-服务器" class="headerlink" title="1.1 服务器"></a>1.1 服务器</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">ln, err := net.Listen(<span class="string">&quot;tcp&quot;</span>, <span class="string">&quot;:8080&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Printf(<span class="string">&quot;Server has started, listening on %s\n&quot;</span>, ln.Addr())</span><br><span class="line"></span><br><span class="line"><span class="keyword">defer</span> ln.Close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">conn, err := ln.Accept()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">handleConnect(conn)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">handleConnect</span><span class="params">(conn net.Conn)</span></span> &#123;</span><br><span class="line"><span class="keyword">defer</span> conn.Close()</span><br><span class="line"></span><br><span class="line">remoteAddr := conn.RemoteAddr()</span><br><span class="line">fmt.Printf(<span class="string">&quot;[%s] connected\n&quot;</span>, remoteAddr)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">buf := <span class="built_in">make</span>([]<span class="keyword">byte</span>, <span class="number">2048</span>)</span><br><span class="line">n, err := conn.Read(buf)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;[%s] disconnected\n&quot;</span>, remoteAddr)</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">str := <span class="keyword">string</span>(buf[:n<span class="number">-1</span>])</span><br><span class="line"><span class="keyword">if</span> str == <span class="string">&quot;quit&quot;</span> || str == <span class="string">&quot;exit&quot;</span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;[%s] disconnected\n&quot;</span>, remoteAddr)</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Printf(<span class="string">&quot;%s &gt;&gt; %s\n&quot;</span>, remoteAddr, str)</span><br><span class="line"></span><br><span class="line">conn.Write([]<span class="keyword">byte</span>(strings.ToUpper(str + <span class="string">&quot;\n&quot;</span>)))</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-2-客户端"><a href="#1-2-客户端" class="headerlink" title="1.2 客户端"></a>1.2 客户端</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">conn, err := net.Dial(<span class="string">&quot;tcp&quot;</span>, <span class="string">&quot;localhost:8080&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">defer</span> conn.Close()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 键盘输入，并发送给服务器</span></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">buf := <span class="built_in">make</span>([]<span class="keyword">byte</span>, <span class="number">1024</span>)</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">n, err := os.Stdin.Read(buf)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">conn.Write(buf[:n])</span><br><span class="line">&#125;</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理服务器返回数据</span></span><br><span class="line">buf := <span class="built_in">make</span>([]<span class="keyword">byte</span>, <span class="number">1024</span>)</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">n, err := conn.Read(buf)</span><br><span class="line"><span class="keyword">if</span> err == io.EOF &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="keyword">string</span>(buf[:n<span class="number">-1</span>]))</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="2-文件发送与接收"><a href="#2-文件发送与接收" class="headerlink" title="2. 文件发送与接收"></a>2. 文件发送与接收</h1><h2 id="2-1-服务器"><a href="#2-1-服务器" class="headerlink" title="2.1 服务器"></a>2.1 服务器</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// 开启服务</span></span><br><span class="line">ln, err := net.Listen(<span class="string">&quot;tcp&quot;</span>, <span class="string">&quot;:8080&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> ln.Close()</span><br><span class="line"></span><br><span class="line">fmt.Printf(<span class="string">&quot;[%s]等待接收文件...\n&quot;</span>, ln.Addr())</span><br><span class="line"></span><br><span class="line"><span class="comment">// 接收请求</span></span><br><span class="line">conn, err := ln.Accept()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> conn.Close()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取对方发送的文件名</span></span><br><span class="line">buf := <span class="built_in">make</span>([]<span class="keyword">byte</span>, <span class="number">1024</span>)</span><br><span class="line">n, err := conn.Read(buf)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">fileName := <span class="keyword">string</span>(buf[:n])</span><br><span class="line">fmt.Printf(<span class="string">&quot;文件名: [%s]\n&quot;</span>, fileName)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 通知对方发送文件内容</span></span><br><span class="line">_, err = conn.Write([]<span class="keyword">byte</span>(<span class="string">&quot;ok&quot;</span>))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 接收文件内容</span></span><br><span class="line">recvFile(fileName, conn)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">recvFile</span><span class="params">(fileName <span class="keyword">string</span>, conn net.Conn)</span></span> &#123;</span><br><span class="line"><span class="comment">// 创建文件</span></span><br><span class="line">f, err := os.Create(fileName)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> f.Close()</span><br><span class="line"></span><br><span class="line">buf := <span class="built_in">make</span>([]<span class="keyword">byte</span>, <span class="number">1024</span>*<span class="number">4</span>)</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">n, err := conn.Read(buf)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">if</span> err == io.EOF &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;\n文件接收完毕&quot;</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> n == <span class="number">0</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;文件接收完毕&quot;</span>)</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Printf(<span class="string">&quot;.&quot;</span>)</span><br><span class="line">_, err = f.Write(buf[:n])</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;写文件失败&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-2-客户端"><a href="#2-2-客户端" class="headerlink" title="2.2 客户端"></a>2.2 客户端</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;请输入文件名: &quot;</span>)</span><br><span class="line"><span class="keyword">var</span> fileName <span class="keyword">string</span></span><br><span class="line">fmt.Scan(&amp;fileName)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取文件信息</span></span><br><span class="line">info, err := os.Stat(fileName)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 连接文件接收服务器</span></span><br><span class="line">conn, err := net.Dial(<span class="string">&quot;tcp&quot;</span>, <span class="string">&quot;localhost:8080&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> conn.Close()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 发送文件名</span></span><br><span class="line">_, err = conn.Write([]<span class="keyword">byte</span>(info.Name()))</span><br><span class="line"></span><br><span class="line"><span class="comment">// 服务器是否就绪</span></span><br><span class="line">buf := <span class="built_in">make</span>([]<span class="keyword">byte</span>, <span class="number">1024</span>)</span><br><span class="line">n, err := conn.Read(buf)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="string">&quot;ok&quot;</span> != <span class="keyword">string</span>(buf[:n]) &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;服务器未就绪&quot;</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 发送文件内容</span></span><br><span class="line">sendFile(fileName, conn)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sendFile</span><span class="params">(fileName <span class="keyword">string</span>, conn net.Conn)</span></span> &#123;</span><br><span class="line">f, err := os.Open(fileName)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> f.Close()</span><br><span class="line"></span><br><span class="line">buf := <span class="built_in">make</span>([]<span class="keyword">byte</span>, <span class="number">1024</span>*<span class="number">4</span>)</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">_, err = f.Read(buf)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">if</span> err == io.EOF &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;发送完毕&quot;</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 发送内容</span></span><br><span class="line">conn.Write(buf)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="3-聊天服务器"><a href="#3-聊天服务器" class="headerlink" title="3. 聊天服务器"></a>3. 聊天服务器</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// 开启监听服务</span></span><br><span class="line">ln, err := net.Listen(<span class="string">&quot;tcp&quot;</span>, <span class="string">&quot;:8080&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> ln.Close()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 转发消息</span></span><br><span class="line"><span class="keyword">go</span> Manager()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 主协程，循环阻塞等待用户连接</span></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">conn, err := ln.Accept()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> HandleConn(conn)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 客户端</span></span><br><span class="line"><span class="keyword">type</span> Client <span class="keyword">struct</span> &#123;</span><br><span class="line">C    <span class="keyword">chan</span> <span class="keyword">string</span></span><br><span class="line">Name <span class="keyword">string</span></span><br><span class="line">Addr <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在线用户</span></span><br><span class="line"><span class="keyword">var</span> onlineMap <span class="keyword">map</span>[<span class="keyword">string</span>]Client</span><br><span class="line"></span><br><span class="line"><span class="comment">// 消息</span></span><br><span class="line"><span class="keyword">var</span> message = <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">string</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 消息转发</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Manager</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// 在线用户分配空间</span></span><br><span class="line">onlineMap = <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]Client)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">msg := &lt;-message</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, cli := <span class="keyword">range</span> onlineMap &#123;</span><br><span class="line">cli.C &lt;- msg</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">HandleConn</span><span class="params">(conn net.Conn)</span></span> &#123;</span><br><span class="line"><span class="keyword">defer</span> conn.Close()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 客户端地址</span></span><br><span class="line">cliAddr := conn.RemoteAddr().String()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 客户端</span></span><br><span class="line">cli := Client&#123;</span><br><span class="line"><span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">string</span>),</span><br><span class="line">cliAddr,</span><br><span class="line">cliAddr,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加到在线用户</span></span><br><span class="line">onlineMap[cliAddr] = cli</span><br><span class="line"></span><br><span class="line"><span class="comment">// 新开协程，专门给当前客户端发送信息</span></span><br><span class="line"><span class="keyword">go</span> WriteMsgToClient(cli, conn)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 广播在线</span></span><br><span class="line">message &lt;- MakeMsg(cli, <span class="string">&quot;online&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 当前用户是否已退出</span></span><br><span class="line">isQuit := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">bool</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 当前用户是否超时</span></span><br><span class="line">hasData := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">bool</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 新开协程，接收用户发来的数据</span></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">buf := <span class="built_in">make</span>([]<span class="keyword">byte</span>, <span class="number">2048</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">n, err := conn.Read(buf)</span><br><span class="line"><span class="keyword">if</span> n == <span class="number">0</span> &#123;</span><br><span class="line">isQuit &lt;- <span class="literal">true</span></span><br><span class="line">fmt.Println(<span class="string">&quot;用户断开连接或出现其他问题&quot;</span>, err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">msg := <span class="keyword">string</span>(buf[:n<span class="number">-1</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查询当前在线用户列表</span></span><br><span class="line"><span class="keyword">if</span> msg == <span class="string">&quot;who&quot;</span> &#123;</span><br><span class="line"><span class="comment">// 给当前用户发送所有在线成员</span></span><br><span class="line">conn.Write([]<span class="keyword">byte</span>(<span class="string">&quot;user list:\n&quot;</span>))</span><br><span class="line"><span class="keyword">for</span> _, u := <span class="keyword">range</span> onlineMap &#123;</span><br><span class="line">conn.Write([]<span class="keyword">byte</span>(u.Addr + <span class="string">&quot;: &quot;</span> + u.Name + <span class="string">&quot;\n&quot;</span>))</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> <span class="built_in">len</span>(msg) &gt; <span class="number">8</span> &amp;&amp; msg[:<span class="number">6</span>] == <span class="string">&quot;rename&quot;</span> &#123;</span><br><span class="line">name := msg[<span class="number">7</span>:]</span><br><span class="line">cli.Name = name</span><br><span class="line">onlineMap[cliAddr] = cli</span><br><span class="line">conn.Write([]<span class="keyword">byte</span>(<span class="string">&quot;rename ok\n&quot;</span>))</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// 转发内容至其他在线用户</span></span><br><span class="line">message &lt;- MakeMsg(cli, msg)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">hasData &lt;- <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-isQuit:</span><br><span class="line"><span class="comment">// 从在线用户列表中删除</span></span><br><span class="line"><span class="built_in">delete</span>(onlineMap, cliAddr)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 发送广播通知</span></span><br><span class="line">message &lt;- MakeMsg(cli, <span class="string">&quot;offline&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> &lt;-hasData:</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> &lt;-time.After(time.Second * <span class="number">60</span>):</span><br><span class="line"><span class="built_in">delete</span>(onlineMap, cliAddr)</span><br><span class="line">message &lt;- MakeMsg(cli, <span class="string">&quot;timeout&quot;</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">WriteMsgToClient</span><span class="params">(cli Client, conn net.Conn)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> msg := <span class="keyword">range</span> cli.C &#123;</span><br><span class="line">conn.Write([]<span class="keyword">byte</span>(msg + <span class="string">&quot;\n&quot;</span>))</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">MakeMsg</span><span class="params">(cli Client, msg <span class="keyword">string</span>)</span> <span class="title">string</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;[&quot;</span> + cli.Addr + <span class="string">&quot;]&quot;</span> + cli.Name + <span class="string">&quot;: &quot;</span> + msg</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="4-HTTP服务器"><a href="#4-HTTP服务器" class="headerlink" title="4. HTTP服务器"></a>4. HTTP服务器</h1><h2 id="4-1-服务器"><a href="#4-1-服务器" class="headerlink" title="4.1 服务器"></a>4.1 服务器</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">ln, err := net.Listen(<span class="string">&quot;tcp&quot;</span>, <span class="string">&quot;:8080&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> ln.Close()</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">&quot;http://localhost:8080&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">conn, err := ln.Accept()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> handleConn(conn)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">handleConn</span><span class="params">(conn net.Conn)</span></span> &#123;</span><br><span class="line"><span class="keyword">defer</span> conn.Close()</span><br><span class="line"></span><br><span class="line">buf := <span class="built_in">make</span>([]<span class="keyword">byte</span>, <span class="number">1024</span>*<span class="number">4</span>)</span><br><span class="line">n, err := conn.Read(buf)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Printf(<span class="string">&quot;%v\n&quot;</span>, <span class="keyword">string</span>(buf[:n]))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// 注册处理函数</span></span><br><span class="line">http.HandleFunc(<span class="string">&quot;/go&quot;</span>, myHandler)</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">&quot;http://localhost:8080&quot;</span>)</span><br><span class="line">http.ListenAndServe(<span class="string">&quot;:8080&quot;</span>, <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">myHandler</span><span class="params">(w http.ResponseWriter, req *http.Request)</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;Method:&quot;</span>, req.Method)</span><br><span class="line">fmt.Println(<span class="string">&quot;Header:&quot;</span>, req.Header)</span><br><span class="line">fmt.Println(<span class="string">&quot;RemoteAddr:&quot;</span>, req.RemoteAddr)</span><br><span class="line">fmt.Println(<span class="string">&quot;URL:&quot;</span>, req.URL)</span><br><span class="line"></span><br><span class="line">fmt.Fprintln(w, <span class="string">&quot;Hello world!&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-2-客户端"><a href="#4-2-客户端" class="headerlink" title="4.2 客户端"></a>4.2 客户端</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">conn, err := net.Dial(<span class="string">&quot;tcp&quot;</span>, <span class="string">&quot;:8080&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> conn.Close()</span><br><span class="line"></span><br><span class="line">requestHead := <span class="string">&quot;GET /go HTTP/1.1\r\nHost: localhost:8080\r\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7\r\n\r\n&quot;</span></span><br><span class="line"></span><br><span class="line">fmt.Println(requestHead)</span><br><span class="line"><span class="comment">// 发送请求</span></span><br><span class="line">conn.Write([]<span class="keyword">byte</span>(requestHead))</span><br><span class="line"></span><br><span class="line"><span class="comment">// 接收响应</span></span><br><span class="line">buf := <span class="built_in">make</span>([]<span class="keyword">byte</span>, <span class="number">1024</span>*<span class="number">4</span>)</span><br><span class="line">n, err := conn.Read(buf)</span><br><span class="line"><span class="keyword">if</span> n == <span class="number">0</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Printf(<span class="string">&quot;#%v#\n&quot;</span>, <span class="keyword">string</span>(buf[:n]))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">//resp, err := http.Get(&quot;http://www.baidu.com&quot;)</span></span><br><span class="line">resp, err := http.Get(<span class="string">&quot;http://localhost:8080/go&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> resp.Body.Close()</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">&quot;Status =&quot;</span>, resp.Status)</span><br><span class="line">fmt.Println(<span class="string">&quot;StatusCode =&quot;</span>, resp.StatusCode)</span><br><span class="line">fmt.Println(<span class="string">&quot;Header =&quot;</span>, resp.Header)</span><br><span class="line"><span class="comment">//fmt.Println(&quot;Body = &quot;, resp.Body)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> text <span class="keyword">string</span></span><br><span class="line">buf := <span class="built_in">make</span>([]<span class="keyword">byte</span>, <span class="number">1024</span>*<span class="number">4</span>)</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">n, err := resp.Body.Read(buf)</span><br><span class="line"><span class="keyword">if</span> n == <span class="number">0</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">text += <span class="keyword">string</span>(buf[:n])</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(text)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go 命令行参数</title>
      <link href="/2018/01/09/Go%20%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%8F%82%E6%95%B0/"/>
      <url>/2018/01/09/Go%20%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%8F%82%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="1-命令行参数：os-Args-string"><a href="#1-命令行参数：os-Args-string" class="headerlink" title="1. 命令行参数：os.Args  []string"></a>1. 命令行参数：<code>os.Args  []string</code></h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">args := os.Args</span><br><span class="line"></span><br><span class="line">fmt.Printf(<span class="string">&quot;接收到%v个参数\n&quot;</span>, <span class="built_in">len</span>(args))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i, v := <span class="keyword">range</span> args &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;args[%v]=%v\n&quot;</span>, i, v)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><span id="more"></span><h1 id="2-flag包解析命令行参数"><a href="#2-flag包解析命令行参数" class="headerlink" title="2. flag包解析命令行参数"></a>2. flag包解析命令行参数</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">IntVar(p *<span class="keyword">int</span>, name <span class="keyword">string</span>, value <span class="keyword">int</span>, usage <span class="keyword">string</span>)</span><br><span class="line">StringVar(p *<span class="keyword">string</span>, name <span class="keyword">string</span>, value <span class="keyword">string</span>, usage <span class="keyword">string</span>)</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> user <span class="keyword">string</span></span><br><span class="line"><span class="keyword">var</span> pwd <span class="keyword">string</span></span><br><span class="line"><span class="keyword">var</span> host <span class="keyword">string</span></span><br><span class="line"><span class="keyword">var</span> port <span class="keyword">int</span></span><br><span class="line"></span><br><span class="line">flag.StringVar(&amp;user, <span class="string">&quot;u&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;用户名，默认为空&quot;</span>)</span><br><span class="line">flag.StringVar(&amp;pwd, <span class="string">&quot;p&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;密码，默认为空&quot;</span>)</span><br><span class="line">flag.StringVar(&amp;host, <span class="string">&quot;h&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;主机名，localhost&quot;</span>)</span><br><span class="line">flag.IntVar(&amp;port, <span class="string">&quot;P&quot;</span>, <span class="number">3306</span>, <span class="string">&quot;端口，默认3306&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 转换</span></span><br><span class="line">flag.Parse()</span><br><span class="line"></span><br><span class="line">fmt.Printf(<span class="string">&quot;user=%v, pwd=%v, host=%v, port=%v\n&quot;</span>, user, pwd, host, port)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ go build -o main flag_1.go </span><br><span class="line">$ ./main -u root -p 123456 -h localhost -P 3006</span><br><span class="line">user=root, <span class="built_in">pwd</span>=123456, host=localhost, port=3006</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go 文件操作</title>
      <link href="/2018/01/08/Go%20%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/"/>
      <url>/2018/01/08/Go%20%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h1 id="1-读文件"><a href="#1-读文件" class="headerlink" title="1. 读文件"></a>1. 读文件</h1><ul><li><p><code>os.Open(name string) (file *File, err error)</code></p></li><li><p><code>ioutil.ReadFile(name string) ([]byte, error)</code> 适合小文件一次性读取</p></li></ul><span id="more"></span><h2 id="1-1-带缓存读取文件"><a href="#1-1-带缓存读取文件" class="headerlink" title="1.1 带缓存读取文件"></a>1.1 带缓存读取文件</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">file, err := os.Open(<span class="string">&quot;./abc.txt&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;Open file error: %v\n&quot;</span>, err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> file.Close()</span><br><span class="line"></span><br><span class="line">reader := bufio.NewReader(file)</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="comment">// 按行读取</span></span><br><span class="line">line, err := reader.ReadString(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> err == io.EOF &#123;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Print(line)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-2-一次性读取文件：-小文件适用"><a href="#1-2-一次性读取文件：-小文件适用" class="headerlink" title="1.2 一次性读取文件：(小文件适用)"></a>1.2 一次性读取文件：(小文件适用)</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">bs, err := ioutil.ReadFile(<span class="string">&quot;./abc.txt&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;Read file error: %v\n&quot;</span>, err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Printf(<span class="string">&quot;%s\n&quot;</span>, bs)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="2-写文件"><a href="#2-写文件" class="headerlink" title="2. 写文件"></a>2. 写文件</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">os.OpenFile(name <span class="keyword">string</span>, flag <span class="keyword">int</span>, perm FileMode) (file *File, err error)</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">file, err := os.OpenFile(<span class="string">&quot;./xyz.txt&quot;</span>, os.O_CREATE|os.O_WRONLY, <span class="number">0600</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Errorf(<span class="string">&quot;Open file error: %v\n&quot;</span>, err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> file.Close()</span><br><span class="line"></span><br><span class="line">msg := <span class="string">&quot;Hello World!\n&quot;</span></span><br><span class="line"></span><br><span class="line">writer := bufio.NewWriter(file)</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">5</span>; i++ &#123;</span><br><span class="line">writer.Write([]<span class="keyword">byte</span>(msg))</span><br><span class="line">&#125;</span><br><span class="line">writer.Flush()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>文件操作模式：</p><ul><li>覆盖写：<code>os.O_WRONLY | os.O_TRUNC</code></li><li>追加写：<code>os.O_WRONLY | os.O_APPEND</code></li><li>读写并追加：<code>os.O_RDWR | os.OS_APPEND</code></li></ul><h1 id="3-文件拷贝"><a href="#3-文件拷贝" class="headerlink" title="3. 文件拷贝"></a>3. 文件拷贝</h1><h2 id="3-1-直接拷贝文件内容-（小文件，文本文件）"><a href="#3-1-直接拷贝文件内容-（小文件，文本文件）" class="headerlink" title="3.1 直接拷贝文件内容 （小文件，文本文件）"></a>3.1 直接拷贝文件内容 （小文件，文本文件）</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">bs, err := ioutil.ReadFile(<span class="string">&quot;./abc.txt&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Errorf(<span class="string">&quot;Read file error: %v\n&quot;</span>, err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">err = ioutil.WriteFile(<span class="string">&quot;./xyz.txt&quot;</span>, bs, <span class="number">0600</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Errorf(<span class="string">&quot;Write file error: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-2-带缓冲拷贝-（大文件，二进制文件）"><a href="#3-2-带缓冲拷贝-（大文件，二进制文件）" class="headerlink" title="3.2 带缓冲拷贝 （大文件，二进制文件）"></a>3.2 带缓冲拷贝 （大文件，二进制文件）</h2><p><code>io.Copy(dst Writer, src Reader) (written int64, err error)</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">CopyFile</span><span class="params">(dstFileName, srcFileName <span class="keyword">string</span>)</span> <span class="params">(written <span class="keyword">int64</span>, err error)</span></span> &#123;</span><br><span class="line">srcFile, err := os.OpenFile(srcFileName, os.O_RDONLY, <span class="number">0</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>, err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> srcFile.Close()</span><br><span class="line"></span><br><span class="line">dstFile, err := os.OpenFile(dstFileName, os.O_CREATE|os.O_WRONLY, <span class="number">0600</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>, err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> dstFile.Close()</span><br><span class="line"></span><br><span class="line">writer := bufio.NewWriter(dstFile)</span><br><span class="line">reader := bufio.NewReader(srcFile)</span><br><span class="line"></span><br><span class="line">written, err = io.Copy(writer, reader)</span><br><span class="line">writer.Flush() <span class="comment">// 需要自己去Flush</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="4-文件是否存在"><a href="#4-文件是否存在" class="headerlink" title="4. 文件是否存在"></a>4. 文件是否存在</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">IsFileExist</span><span class="params">(name <span class="keyword">string</span>)</span> <span class="params">(<span class="keyword">bool</span>, error)</span></span> &#123;</span><br><span class="line">_, err := os.Stat(name)</span><br><span class="line"><span class="keyword">if</span> err == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> os.IsNotExist(err) &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;文件不存在&quot;</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>, err</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="5-字符统计"><a href="#5-字符统计" class="headerlink" title="5. 字符统计"></a>5. 字符统计</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Statistic <span class="keyword">struct</span> &#123;</span><br><span class="line">Char   <span class="keyword">int</span></span><br><span class="line">Number <span class="keyword">int</span></span><br><span class="line">Space  <span class="keyword">int</span></span><br><span class="line">Other  <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">file, err := os.Open(<span class="string">&quot;./abc.txt&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;Open file error: %v\n&quot;</span>, err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> file.Close()</span><br><span class="line"></span><br><span class="line">stat := Statistic&#123;&#125;</span><br><span class="line"></span><br><span class="line">reader := bufio.NewReader(file)</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">bs, err := reader.ReadString(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> err == io.EOF &#123;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, c := <span class="keyword">range</span> []<span class="keyword">rune</span>(bs) &#123;</span><br><span class="line"><span class="keyword">switch</span> &#123;</span><br><span class="line"><span class="keyword">case</span> c &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;z&#x27;</span>:</span><br><span class="line"><span class="keyword">fallthrough</span></span><br><span class="line"><span class="keyword">case</span> c &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;Z&#x27;</span>:</span><br><span class="line">stat.Char++</span><br><span class="line"><span class="keyword">case</span> c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>:</span><br><span class="line">stat.Number++</span><br><span class="line"><span class="keyword">case</span> c == <span class="string">&#x27; &#x27;</span> || c == <span class="string">&#x27;\t&#x27;</span>:</span><br><span class="line">stat.Space++</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">stat.Other++</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Printf(<span class="string">&quot;%v\n&quot;</span>, stat)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="6-目录遍历"><a href="#6-目录遍历" class="headerlink" title="6. 目录遍历"></a>6. 目录遍历</h1><ul><li><code>type WalkFunc func(path string, info os.FileInfo, err error) error</code></li><li><code>func Walk(root string, walkFn WalkFunc) error</code></li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// 当root=/tmp时，不会遍历目录下的文件</span></span><br><span class="line">err := filepath.Walk(<span class="string">&quot;/tmp/&quot;</span>, walkFunc)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;File walk error: %v\n&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">walkFunc</span><span class="params">(path <span class="keyword">string</span>, info os.FileInfo, err error)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">fmt.Println(path)</span><br><span class="line"><span class="comment">//fmt.Println(info.Name(), info.Size())</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="7-压缩文件"><a href="#7-压缩文件" class="headerlink" title="7. 压缩文件"></a>7. 压缩文件</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">filePath := <span class="string">&quot;/tmp/&quot;</span></span><br><span class="line"></span><br><span class="line">filename := filepath.Base(filePath)</span><br><span class="line">fmt.Println(filename)</span><br><span class="line"></span><br><span class="line">currentTime := time.Now()</span><br><span class="line">ms := currentTime.Nanosecond() / <span class="number">1e6</span></span><br><span class="line">zipFilename := fmt.Sprintf(<span class="string">&quot;%s_%s%03d.zip&quot;</span>, strings.Split(filename, <span class="string">&quot;.&quot;</span>)[<span class="number">0</span>],</span><br><span class="line">currentTime.Format(<span class="string">&quot;20060102150405&quot;</span>), ms)</span><br><span class="line">fmt.Println(zipFilename)</span><br><span class="line"></span><br><span class="line">ZIP(filePath, zipFilename)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">ZIP</span><span class="params">(source, target <span class="keyword">string</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">zipFile, err := os.Create(target)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> zipFile.Close()</span><br><span class="line"></span><br><span class="line">archive := zip.NewWriter(zipFile)</span><br><span class="line"><span class="keyword">defer</span> archive.Close()</span><br><span class="line"></span><br><span class="line">err = filepath.Walk(source, <span class="function"><span class="keyword">func</span><span class="params">(path <span class="keyword">string</span>, info os.FileInfo, err error)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">header, err := zip.FileInfoHeader(info)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">header.Name = strings.TrimPrefix(path, source+<span class="string">&quot;/&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 目录不需要压缩</span></span><br><span class="line"><span class="keyword">if</span> info.IsDir() &#123;</span><br><span class="line">header.Name += <span class="string">&quot;/&quot;</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// 压缩算法</span></span><br><span class="line">header.Method = zip.Deflate</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 保留文件时间</span></span><br><span class="line">header.Modified = time.Unix(info.ModTime().Unix(), <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建：压缩包头信息</span></span><br><span class="line">writer, err := archive.CreateHeader(header)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 目录只需创建，不做其他操作</span></span><br><span class="line"><span class="keyword">if</span> info.IsDir() &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打开需要压缩的文件</span></span><br><span class="line">file, err := os.Open(path)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> file.Close()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 压缩文件</span></span><br><span class="line">_, err = io.Copy(writer, file)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="8-文件读取的三种方式"><a href="#8-文件读取的三种方式" class="headerlink" title="8. 文件读取的三种方式"></a>8. 文件读取的三种方式</h1><ul><li>文件整体读取</li><li>文件分片读取 (块级读取)</li><li>文件行级读取</li></ul><h2 id="8-1-文件整体读取"><a href="#8-1-文件整体读取" class="headerlink" title="8.1 文件整体读取"></a>8.1 文件整体读取</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 方式1:</span></span><br><span class="line">bs, err := ioutil.ReadFile(filePath)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 方式2:</span></span><br><span class="line">file, err := os.Open(filePath)</span><br><span class="line">fileInfo, err := file.Stat()</span><br><span class="line"></span><br><span class="line">buffer := <span class="built_in">make</span>([]<span class="keyword">byte</span>, fileInfo.Size())</span><br><span class="line">n, err := file.Read(buffer)</span><br><span class="line"></span><br><span class="line">fmt.Printf(<span class="string">&quot;%s&quot;</span>, buffer[:n])</span><br></pre></td></tr></table></figure><h2 id="8-2-文件分片读取"><a href="#8-2-文件分片读取" class="headerlink" title="8.2 文件分片读取"></a>8.2 文件分片读取</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">file, err := os.Open(filePath)</span><br><span class="line"></span><br><span class="line">buffer := <span class="built_in">make</span>([]<span class="keyword">byte</span>, <span class="number">1024</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">n, err := file.Read(buffer)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &amp;&amp; err != io.EOF &#123;</span><br><span class="line"><span class="built_in">panic</span>(error)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> n == <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Printf(<span class="string">&quot;%s&quot;</span>, buffer)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="8-3-文件按行读取"><a href="#8-3-文件按行读取" class="headerlink" title="8.3 文件按行读取"></a>8.3 文件按行读取</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">file, err := os.Open(filePath)</span><br><span class="line"></span><br><span class="line">reader := bufio.NewReader(file)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">line, _, err := reader.ReadLine()</span><br><span class="line"><span class="keyword">if</span> err == io.EOF &#123;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Printf(<span class="string">&quot;%s&quot;</span>, line)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="9-文件写入的四周方式"><a href="#9-文件写入的四周方式" class="headerlink" title="9. 文件写入的四周方式"></a>9. 文件写入的四周方式</h1><ul><li>简单覆盖写入</li><li>常规文件写入</li><li>带缓冲的写入</li><li>复制文件写入</li></ul><h2 id="9-1-简单覆盖写入"><a href="#9-1-简单覆盖写入" class="headerlink" title="9.1 简单覆盖写入"></a>9.1 简单覆盖写入</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">err := ioutil.WriteFile(filePath, data, <span class="number">0666</span>)</span><br></pre></td></tr></table></figure><h2 id="9-2-常规文件写入"><a href="#9-2-常规文件写入" class="headerlink" title="9.2 常规文件写入"></a>9.2 常规文件写入</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">file, err := os.Create(filePath)</span><br><span class="line">file, err := os.OpenFile(filePath, os.O_RDONLY|os.O_CREATE|os.O_APPEND, <span class="number">0666</span>)</span><br><span class="line"></span><br><span class="line">n, err := file.Write([]<span class="keyword">byte</span>(data))</span><br><span class="line"></span><br><span class="line">n, err := file.WriteString(data)</span><br></pre></td></tr></table></figure><h2 id="9-3-带缓冲的写入"><a href="#9-3-带缓冲的写入" class="headerlink" title="9.3 带缓冲的写入"></a>9.3 带缓冲的写入</h2><p><code>bufio</code> 库：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewWriter</span><span class="params">(w io.Writer)</span> *<span class="title">Writer</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewWriterSize</span><span class="params">(w io.Writer, size <span class="keyword">int</span>)</span> *<span class="title">Writer</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(b *Writer)</span> <span class="title">Write</span><span class="params">(p []<span class="keyword">byte</span>)</span> <span class="params">(nn <span class="keyword">int</span>, err error)</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(b *Writer)</span> <span class="title">WriteString</span><span class="params">(s <span class="keyword">string</span>)</span> <span class="params">(<span class="keyword">int</span>, error)</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(b *Writer)</span> <span class="title">WriteByte</span><span class="params">(c <span class="keyword">byte</span>)</span> <span class="title">error</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(b *Writer)</span> <span class="title">WriteRune</span><span class="params">(r <span class="keyword">rune</span>)</span> <span class="params">(size <span class="keyword">int</span>, err error)</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(b *Writer)</span> <span class="title">Flush</span><span class="params">()</span> <span class="title">error</span></span></span><br></pre></td></tr></table></figure><h2 id="9-4-复制文件写入"><a href="#9-4-复制文件写入" class="headerlink" title="9.4 复制文件写入"></a>9.4 复制文件写入</h2><p><code>io</code> 包</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 默认缓冲区大小</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Copy</span><span class="params">(dst Writer, src Reader)</span> <span class="params">(written <span class="keyword">int64</span>, err error)</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 自定义缓冲区大小</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">CopyBuffer</span><span class="params">(dst Writer, src Reader, buf []<span class="keyword">byte</span>)</span> <span class="params">(written <span class="keyword">int64</span>, err error)</span></span> &#123;&#125;</span><br></pre></td></tr></table></figure><h1 id="10-io-Reader-接口"><a href="#10-io-Reader-接口" class="headerlink" title="10. io.Reader 接口"></a>10. <code>io.Reader</code> 接口</h1><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/golang/Go_io_Reader.png" alt="Go_io_Reader"></p>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go 反射</title>
      <link href="/2018/01/07/Go%20%E5%8F%8D%E5%B0%84/"/>
      <url>/2018/01/07/Go%20%E5%8F%8D%E5%B0%84/</url>
      
        <content type="html"><![CDATA[<h1 id="1-反射"><a href="#1-反射" class="headerlink" title="1. 反射"></a>1. 反射</h1><p>反射：在运行时，动态获取对象的类型信息和内存结构</p><p>反射操作所需要的全部信息都源自接口变量，接口变量除了存储自身类型外，还会保存实际对象的类型数据</p><p>将任何传入的对象转换为接口类型：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TypeOf</span><span class="params">(o <span class="keyword">interface</span>&#123;&#125;)</span> <span class="title">Type</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">ValueOf</span><span class="params">(o <span class="keyword">interface</span>&#123;&#125;)</span> <span class="title">Value</span></span></span><br></pre></td></tr></table></figure><span id="more"></span><h1 id="2-类型-Type"><a href="#2-类型-Type" class="headerlink" title="2. 类型(Type)"></a>2. 类型(Type)</h1><p><code>reflect.TypeOf()</code> 返回对象类型</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TypeOf</span><span class="params">(i <span class="keyword">interface</span>&#123;&#125;)</span> <span class="title">Type</span></span> &#123;</span><br><span class="line">  eface := *(*emptyInterface)(unsafe.Pointer(&amp;i))</span><br><span class="line">  <span class="keyword">return</span> toType(eface.typ)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-1-Type和Kind的区别"><a href="#2-1-Type和Kind的区别" class="headerlink" title="2.1 Type和Kind的区别"></a>2.1 Type和Kind的区别</h2><ul><li>Type: 真实类型（静态类型） <code>t.Name()</code></li><li>Kind: 基础类型（底层类型） <code>t.Kind()</code></li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">type</span> X <span class="keyword">int</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a X = <span class="number">100</span></span><br><span class="line">t := reflect.TypeOf(a)</span><br><span class="line"></span><br><span class="line">fmt.Println(t, t.Name(), t.Kind()) <span class="comment">// main.X X int</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-2-基类型和指针类型"><a href="#2-2-基类型和指针类型" class="headerlink" title="2.2 基类型和指针类型"></a>2.2 基类型和指针类型</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">x := <span class="number">20</span></span><br><span class="line"></span><br><span class="line">tx := reflect.TypeOf(x)</span><br><span class="line">tp := reflect.TypeOf(&amp;x)</span><br><span class="line"></span><br><span class="line">fmt.Println(tx, tx.Name(), tx.Kind()) <span class="comment">// int int int</span></span><br><span class="line">fmt.Println(tp, tp.Name(), tp.Kind()) <span class="comment">// *int    ptr</span></span><br><span class="line">fmt.Println(tx == tp.Elem())          <span class="comment">// true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-3-方法Type-Elem"><a href="#2-3-方法Type-Elem" class="headerlink" title="2.3 方法Type.Elem()"></a>2.3 方法<code>Type.Elem()</code></h2><p>返回引用类型 (指针、数组、切片、字典（值）或 通道) 的基类型</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">a := [...]<span class="keyword">byte</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line">s := <span class="built_in">make</span>([]<span class="keyword">string</span>, <span class="number">5</span>)</span><br><span class="line">m := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">int</span>]<span class="keyword">string</span>)</span><br><span class="line"></span><br><span class="line">ta := reflect.TypeOf(a)</span><br><span class="line">ts := reflect.TypeOf(s)</span><br><span class="line">tm := reflect.TypeOf(m)</span><br><span class="line"></span><br><span class="line">fmt.Println(ta, ta.Elem()) <span class="comment">// [3]uint8       uint8</span></span><br><span class="line">fmt.Println(ts, ts.Elem()) <span class="comment">// []string       string</span></span><br><span class="line">fmt.Println(tm, tm.Elem()) <span class="comment">// ma[[iny]string string</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-4-辅助判断方法"><a href="#2-4-辅助判断方法" class="headerlink" title="2.4 辅助判断方法"></a>2.4 辅助判断方法</h2><p>Implements(), ConvertibleTo(), AssignableTo() </p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">type</span> X <span class="keyword">int</span></span><br><span class="line"><span class="keyword">var</span> a X</span><br><span class="line"></span><br><span class="line">t := reflect.TypeOf(a)</span><br><span class="line">fmt.Println(t) <span class="comment">// main.X</span></span><br><span class="line"></span><br><span class="line">ts := reflect.TypeOf((*fmt.Stringer)(<span class="literal">nil</span>)).Elem()</span><br><span class="line">fmt.Println(ts) <span class="comment">// fmt.Stringer</span></span><br><span class="line"></span><br><span class="line">ti := reflect.TypeOf(<span class="number">10</span>)</span><br><span class="line">fmt.Println(ti) <span class="comment">// int</span></span><br><span class="line"></span><br><span class="line">fmt.Println(t.Implements(ts)) <span class="comment">// false</span></span><br><span class="line"><span class="comment">//fmt.Println(t.Implements(ti)) // panic: non-interface type passed to Type.Implements</span></span><br><span class="line"></span><br><span class="line">fmt.Println(t.ConvertibleTo(ts)) <span class="comment">// false</span></span><br><span class="line">fmt.Println(t.ConvertibleTo(ti)) <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line">fmt.Println(t.AssignableTo(ts)) <span class="comment">// false</span></span><br><span class="line">fmt.Println(t.AssignableTo(ti)) <span class="comment">// false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-5-结构体-反射类型"><a href="#2-5-结构体-反射类型" class="headerlink" title="2.5 结构体 反射类型"></a>2.5 结构体 反射类型</h2><p>Field(), FieldByIndex(), FieldByName(), FieldByNameFunc() 获取 StructField结构体中的内容</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> StructField <span class="keyword">struct</span> &#123;</span><br><span class="line">  Name <span class="keyword">string</span></span><br><span class="line">  PkgPath <span class="keyword">string</span></span><br><span class="line"></span><br><span class="line">  Type      Type      <span class="comment">// field type</span></span><br><span class="line">  Tag       StructTag <span class="comment">// field tag string</span></span><br><span class="line">  Offset    <span class="keyword">uintptr</span>   <span class="comment">// offset within struct, in bytes</span></span><br><span class="line">  Index     []<span class="keyword">int</span>     <span class="comment">// index sequence for Type.FieldByIndex</span></span><br><span class="line">  Anonymous <span class="keyword">bool</span>      <span class="comment">// is an embedded field  </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">user := User&#123;<span class="string">&quot;Jack&quot;</span>, <span class="number">12</span>&#125;</span><br><span class="line"></span><br><span class="line">t := reflect.TypeOf(user)</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; t.NumField(); i++ &#123;</span><br><span class="line">tf := t.Field(i)</span><br><span class="line">fmt.Printf(<span class="string">&quot;%s: %s %v\n&quot;</span>, tf.Name, tf.Type, tf.Tag)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> tf, ok := t.FieldByName(<span class="string">&quot;Age&quot;</span>); ok &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;%s: %s\n&quot;</span>, tf.Name, tf.Tag.Get(<span class="string">&quot;json&quot;</span>))</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="3-值-Value"><a href="#3-值-Value" class="headerlink" title="3. 值(Value)"></a>3. 值(Value)</h1><p>接口变量会复制对象，是unaddressable的。要想修改目标对象，必须使用指针</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">a := <span class="number">5</span></span><br><span class="line"></span><br><span class="line">va := reflect.ValueOf(a)</span><br><span class="line">vp := reflect.ValueOf(&amp;a).Elem()</span><br><span class="line">fmt.Println(va, vp) <span class="comment">// 5 5</span></span><br><span class="line"></span><br><span class="line">fmt.Println(va.CanAddr(), va.CanSet()) <span class="comment">//false false</span></span><br><span class="line">fmt.Println(vp.CanAddr(), vp.CanSet()) <span class="comment">// true true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-1-结构体反射"><a href="#3-1-结构体反射" class="headerlink" title="3.1 结构体反射"></a>3.1 结构体反射</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> User <span class="keyword">struct</span> &#123;</span><br><span class="line">Id   <span class="keyword">int</span></span><br><span class="line">Name <span class="keyword">string</span></span><br><span class="line">Age  <span class="keyword">byte</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(u User)</span> <span class="title">Hello</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;Hello&quot;</span>, u.Name)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(u User)</span> <span class="title">Say</span><span class="params">(msg <span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line">fmt.Println(u.Name, <span class="string">&quot;say&quot;</span>, msg)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">u := User&#123;<span class="number">1</span>, <span class="string">&quot;Jack&quot;</span>, <span class="number">23</span>&#125;</span><br><span class="line"></span><br><span class="line">Info(u)</span><br><span class="line">Set(&amp;u)</span><br><span class="line">fmt.Println(u)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Info</span><span class="params">(o <span class="keyword">interface</span>&#123;&#125;)</span></span> &#123;</span><br><span class="line">t := reflect.TypeOf(o)</span><br><span class="line">fmt.Println(<span class="string">&quot;Type:&quot;</span>, t) <span class="comment">// Type: main.User</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// pointer-interface，直接返回</span></span><br><span class="line"><span class="keyword">if</span> k := t.Kind(); k != reflect.Struct &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;A Pointer Interface&quot;</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">v := reflect.ValueOf(o)</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">&quot;Fields:&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; v.NumField(); i++ &#123;</span><br><span class="line">field := t.Field(i)</span><br><span class="line">value := v.Field(i).Interface()</span><br><span class="line">fmt.Printf(<span class="string">&quot;%6s: %v = %v\n&quot;</span>, field.Name, field.Type, value)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">f1 := v.FieldByIndex([]<span class="keyword">int</span>&#123;<span class="number">1</span>&#125;)</span><br><span class="line">fmt.Println(f1.Interface())</span><br><span class="line"></span><br><span class="line">f2 := v.FieldByName(<span class="string">&quot;Age&quot;</span>)</span><br><span class="line">fmt.Println(f2.Interface())</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">&quot;Methods:&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; v.NumMethod(); i++ &#123;</span><br><span class="line">m := t.Method(i)</span><br><span class="line">fmt.Printf(<span class="string">&quot;%6s: %v\n&quot;</span>, m.Name, m.Type)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">m1 := v.MethodByName(<span class="string">&quot;Say&quot;</span>)</span><br><span class="line">args := []reflect.Value&#123;reflect.ValueOf(<span class="string">&quot;Hi&quot;</span>)&#125;</span><br><span class="line">m1.Call(args)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Set</span><span class="params">(o <span class="keyword">interface</span>&#123;&#125;)</span></span> &#123;</span><br><span class="line">v := reflect.ValueOf(o)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> v.Kind() != reflect.Ptr &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;Not a pointer interface&quot;</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> !v.Elem().CanSet() &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;Can not be set&quot;</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">v = v.Elem()</span><br><span class="line">f := v.FieldByName(<span class="string">&quot;Age&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> !f.IsValid() &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;Can not find this field&quot;</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> f.Kind() == reflect.Uint8 &#123;</span><br><span class="line">f.SetUint(<span class="number">25</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-2-处理结构体匿名字段或嵌入字段"><a href="#3-2-处理结构体匿名字段或嵌入字段" class="headerlink" title="3.2 处理结构体匿名字段或嵌入字段"></a>3.2 处理结构体匿名字段或嵌入字段</h2><p>反射匿名或嵌入字段：匿名字段当独立字段处理</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> User <span class="keyword">struct</span> &#123;</span><br><span class="line">Id   <span class="keyword">int</span></span><br><span class="line">Name <span class="keyword">string</span></span><br><span class="line">Age  <span class="keyword">byte</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Manager <span class="keyword">struct</span> &#123;</span><br><span class="line">User</span><br><span class="line">Title <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">m := Manager&#123;User: User&#123;<span class="number">1</span>, <span class="string">&quot;Jack&quot;</span>, <span class="number">21</span>&#125;, Title: <span class="string">&quot;CEO&quot;</span>&#125;</span><br><span class="line">t := reflect.TypeOf(m)</span><br><span class="line"></span><br><span class="line">fmt.Printf(<span class="string">&quot;%#v\n&quot;</span>, t.Field(<span class="number">0</span>)) <span class="comment">// &#123;Name:&quot;User&quot;, ..., Anonymous:true&#125;</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;%#v\n&quot;</span>, t.Field(<span class="number">1</span>)) <span class="comment">// &#123;Name:&quot;Title&quot;, ..., Anonymous:false&#125;</span></span><br><span class="line"></span><br><span class="line">fmt.Printf(<span class="string">&quot;%#v\n&quot;</span>, t.FieldByIndex([]<span class="keyword">int</span>&#123;<span class="number">0</span>&#125;))    <span class="comment">// Same as t.Field(0),&#123;Name:&quot;User&quot;, ..., Anonymous:true&#125;</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;%#v\n&quot;</span>, t.FieldByIndex([]<span class="keyword">int</span>&#123;<span class="number">0</span>, <span class="number">1</span>&#125;)) <span class="comment">// &#123;Name:&quot;Name&quot;, ..., Anonymous:false&#125;</span></span><br><span class="line"></span><br><span class="line">field, ok := t.FieldByName(<span class="string">&quot;Title&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> ok &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;%#v\n&quot;</span>, field) <span class="comment">// &#123;Name:&quot;Title&quot;, ..., Anonymous:false&#125;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">field, ok = t.FieldByName(<span class="string">&quot;Id&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> ok &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;%#v\n&quot;</span>, field) <span class="comment">// &#123;Name:&quot;Id&quot;, ..., Anonymous:false&#125;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-3-通过反射，修改内容"><a href="#3-3-通过反射，修改内容" class="headerlink" title="3.3 通过反射，修改内容"></a>3.3 通过反射，修改内容</h2><p>传入的值必选是pointer-interface</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">x := <span class="number">10</span></span><br><span class="line">v := reflect.ValueOf(&amp;x)  <span class="comment">// ptr-interface</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;%#v\n&quot;</span>, v)</span><br><span class="line"></span><br><span class="line">v.Elem().SetInt(<span class="number">99</span>)</span><br><span class="line">fmt.Println(x)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-4-通道对象设置"><a href="#3-4-通道对象设置" class="headerlink" title="3.4 通道对象设置"></a>3.4 通道对象设置</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">ch := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">int</span>, <span class="number">4</span>)</span><br><span class="line">v := reflect.ValueOf(ch)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> v.TrySend(reflect.ValueOf(<span class="number">100</span>)) &#123;</span><br><span class="line">fmt.Println(v.TryRecv()) <span class="comment">// 100 true</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-5-空接口判断"><a href="#3-5-空接口判断" class="headerlink" title="3.5 空接口判断"></a>3.5 空接口判断</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> a <span class="keyword">interface</span>&#123;&#125; = <span class="literal">nil</span></span><br><span class="line"><span class="keyword">var</span> b <span class="keyword">interface</span>&#123;&#125; = (*<span class="keyword">int</span>)(<span class="literal">nil</span>)</span><br><span class="line"></span><br><span class="line">fmt.Println(a == <span class="literal">nil</span>)                             <span class="comment">// true</span></span><br><span class="line">fmt.Println(b == <span class="literal">nil</span>, reflect.ValueOf(b).IsNil()) <span class="comment">//false true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="4-方法"><a href="#4-方法" class="headerlink" title="4. 方法"></a>4. 方法</h1><h2 id="4-1-调用方法"><a href="#4-1-调用方法" class="headerlink" title="4.1 调用方法"></a>4.1 调用方法</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> X <span class="keyword">struct</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(X)</span> <span class="title">Add</span><span class="params">(x, y <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> x + y</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> a X</span><br><span class="line"></span><br><span class="line">v := reflect.ValueOf(a)</span><br><span class="line">m := v.MethodByName(<span class="string">&quot;Add&quot;</span>)</span><br><span class="line"></span><br><span class="line">args := []reflect.Value&#123;</span><br><span class="line">reflect.ValueOf(<span class="number">5</span>),</span><br><span class="line">reflect.ValueOf(<span class="number">7</span>),</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">result := m.Call(args)</span><br><span class="line"><span class="keyword">for</span> _, val := <span class="keyword">range</span> result &#123;</span><br><span class="line">fmt.Println(val)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-2-调用变参方法"><a href="#4-2-调用变参方法" class="headerlink" title="4.2 调用变参方法"></a>4.2 调用变参方法</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> X <span class="keyword">struct</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(X)</span> <span class="title">Format</span><span class="params">(format <span class="keyword">string</span>, a ...<span class="keyword">interface</span>&#123;&#125;)</span> <span class="title">string</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> fmt.Sprintf(format, a...)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> a X</span><br><span class="line"></span><br><span class="line">v := reflect.ValueOf(a)</span><br><span class="line">m := v.MethodByName(<span class="string">&quot;Format&quot;</span>)</span><br><span class="line"></span><br><span class="line">args := []reflect.Value&#123;</span><br><span class="line">reflect.ValueOf(<span class="string">&quot;%s = %d&quot;</span>),</span><br><span class="line">reflect.ValueOf(<span class="string">&quot;x&quot;</span>),</span><br><span class="line">reflect.ValueOf(<span class="number">10</span>),</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">result := m.Call(args)</span><br><span class="line">fmt.Println(result) <span class="comment">// [x = 10]</span></span><br><span class="line"></span><br><span class="line">args = []reflect.Value&#123;</span><br><span class="line">reflect.ValueOf(<span class="string">&quot;%d + %d = %d&quot;</span>),</span><br><span class="line">reflect.ValueOf([]<span class="keyword">interface</span>&#123;&#125;&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span> + <span class="number">2</span>&#125;),</span><br><span class="line">&#125;</span><br><span class="line">result = m.CallSlice(args)</span><br><span class="line">fmt.Println(result) <span class="comment">// [1 + 2 = 3]</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="5-构建"><a href="#5-构建" class="headerlink" title="5. 构建"></a>5. 构建</h1><p>反射库提供了内置函数 make() 和 new() 的对应操作，例如 MakeFunc()。可用它实现通用模板，适应不同数据类型。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> intAdd <span class="function"><span class="keyword">func</span><span class="params">(x, y <span class="keyword">int</span>)</span> <span class="title">int</span></span></span><br><span class="line"><span class="keyword">var</span> strAdd <span class="function"><span class="keyword">func</span><span class="params">(x, y <span class="keyword">string</span>)</span> <span class="title">string</span></span></span><br><span class="line"></span><br><span class="line">makeAdd(&amp;intAdd)</span><br><span class="line">makeAdd(&amp;strAdd)</span><br><span class="line"></span><br><span class="line">fmt.Println(intAdd(<span class="number">20</span>, <span class="number">30</span>))</span><br><span class="line">fmt.Println(strAdd(<span class="string">&quot;Hello&quot;</span>, <span class="string">&quot;World&quot;</span>))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">makeAdd</span><span class="params">(o <span class="keyword">interface</span>&#123;&#125;)</span></span> &#123;</span><br><span class="line">fn := reflect.ValueOf(o).Elem()</span><br><span class="line">v := reflect.MakeFunc(fn.Type(), add)</span><br><span class="line">fn.Set(v)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">add</span><span class="params">(args []reflect.Value)</span> <span class="params">(results []reflect.Value)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(args) == <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> ret reflect.Value</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> args[<span class="number">0</span>].Kind() &#123;</span><br><span class="line"><span class="keyword">case</span> reflect.Int:</span><br><span class="line">sum := <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> _, n := <span class="keyword">range</span> args &#123;</span><br><span class="line">sum += <span class="keyword">int</span>(n.Int())</span><br><span class="line">&#125;</span><br><span class="line">ret = reflect.ValueOf(sum)</span><br><span class="line"><span class="keyword">case</span> reflect.String:</span><br><span class="line">ss := <span class="built_in">make</span>([]<span class="keyword">string</span>, <span class="number">0</span>, <span class="built_in">len</span>(args))</span><br><span class="line"><span class="keyword">for</span> _, s := <span class="keyword">range</span> args &#123;</span><br><span class="line">ss = <span class="built_in">append</span>(ss, s.String())</span><br><span class="line">&#125;</span><br><span class="line">ret = reflect.ValueOf(strings.Join(ss, <span class="string">&quot; &quot;</span>))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">results = <span class="built_in">append</span>(results, ret)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="6-反射相关方法"><a href="#6-反射相关方法" class="headerlink" title="6. 反射相关方法"></a>6. 反射相关方法</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">reflect.TypeOf(o)             <span class="comment">// reflect.Type</span></span><br><span class="line">reflect.Type.Name()           <span class="comment">// 类型名称</span></span><br><span class="line">reflect.Type.Kind()           <span class="comment">// 原始类型名称：int, string...</span></span><br><span class="line"></span><br><span class="line">reflect.ValueOf(o)            <span class="comment">// reflect.Value</span></span><br><span class="line">reflect.Value.Type()          <span class="comment">// reflect.Type</span></span><br><span class="line">reflect.Value.Kind()          <span class="comment">// 原始类型名称：int, string...(默认整型表示)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取变量值</span></span><br><span class="line">reflect.Value.Float()</span><br><span class="line">reflect.Value.Int()</span><br><span class="line">reflect.Value.String()</span><br><span class="line">reflect.Value.Bool()</span><br><span class="line">reflect.Value.Interface()       <span class="comment">// 获取真实值，不关系值的类型 </span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 指针</span></span><br><span class="line">ptr.Elem().setInt(<span class="number">99</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 改变变量的值</span></span><br><span class="line">reflect.Value.SetInt()</span><br><span class="line">reflect.Value.SetFloat()</span><br><span class="line">reflect.Value.SetString()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 结构体</span></span><br><span class="line">reflect.Value.NumField()               <span class="comment">// 结构体字段个数</span></span><br><span class="line">reflect.Value.Field(i)                 <span class="comment">// reflect.StructField</span></span><br><span class="line">reflect.Value.FieldByIndex(i)          <span class="comment">// reflect.StructField</span></span><br><span class="line">reflect.Value.FieldByName(<span class="string">&quot;field&quot;</span>)     <span class="comment">// reflect.StructField</span></span><br><span class="line">reflect.StructField.Name               <span class="comment">// 字段名</span></span><br><span class="line">reflect.StructField.Type               <span class="comment">// 字段类型</span></span><br><span class="line"></span><br><span class="line">reflect.Value.NumMethod()              <span class="comment">// 结构体方法个数</span></span><br><span class="line">reflect.Value.Method(i)                <span class="comment">// reflect.Method</span></span><br><span class="line">reflect.Value.MethodByName(<span class="string">&quot;method&quot;</span>)   <span class="comment">// reflect.Method</span></span><br><span class="line">reflect.Method.Name                    <span class="comment">// 方法名</span></span><br><span class="line">reflect.Method.Type                    <span class="comment">// 方法类型</span></span><br><span class="line">reflect.Method.Call(in []Value)        <span class="comment">// 调用方法</span></span><br></pre></td></tr></table></figure><h1 id="7-反射的三大定律"><a href="#7-反射的三大定律" class="headerlink" title="7. 反射的三大定律"></a>7. 反射的三大定律</h1><h2 id="7-1-两种类型-Type-和-Value"><a href="#7-1-两种类型-Type-和-Value" class="headerlink" title="7.1 两种类型 Type 和 Value"></a>7.1 两种类型 Type 和 Value</h2><p><strong>reflect.Type</strong>: 以接口的形式存在</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Type <span class="keyword">interface</span> &#123;</span><br><span class="line">    Align() <span class="keyword">int</span></span><br><span class="line">    FieldAlign() <span class="keyword">int</span></span><br><span class="line">    Method(<span class="keyword">int</span>) Method</span><br><span class="line">    MethodByName(<span class="keyword">string</span>) (Method, <span class="keyword">bool</span>)</span><br><span class="line">    NumMethod() <span class="keyword">int</span></span><br><span class="line">    Name() <span class="keyword">string</span></span><br><span class="line">    PkgPath() <span class="keyword">string</span></span><br><span class="line">    Size() <span class="keyword">uintptr</span></span><br><span class="line">    String() <span class="keyword">string</span></span><br><span class="line">    Kind() Kind</span><br><span class="line">    Implements(u Type) <span class="keyword">bool</span></span><br><span class="line">    AssignableTo(u Type) <span class="keyword">bool</span></span><br><span class="line">    ConvertibleTo(u Type) <span class="keyword">bool</span></span><br><span class="line">    Comparable() <span class="keyword">bool</span></span><br><span class="line">    Bits() <span class="keyword">int</span></span><br><span class="line">    ChanDir() ChanDir</span><br><span class="line">    IsVariadic() <span class="keyword">bool</span></span><br><span class="line">    Elem() Type</span><br><span class="line">    Field(i <span class="keyword">int</span>) StructField</span><br><span class="line">    FieldByIndex(index []<span class="keyword">int</span>) StructField</span><br><span class="line">    FieldByName(name <span class="keyword">string</span>) (StructField, <span class="keyword">bool</span>)</span><br><span class="line">    FieldByNameFunc(match <span class="function"><span class="keyword">func</span><span class="params">(<span class="keyword">string</span>)</span> <span class="title">bool</span>) <span class="params">(StructField, <span class="keyword">bool</span>)</span></span></span><br><span class="line">    In(i <span class="keyword">int</span>) Type</span><br><span class="line">    Key() Type</span><br><span class="line">    Len() <span class="keyword">int</span></span><br><span class="line">    NumField() <span class="keyword">int</span></span><br><span class="line">    NumIn() <span class="keyword">int</span></span><br><span class="line">    NumOut() <span class="keyword">int</span></span><br><span class="line">    Out(i <span class="keyword">int</span>) Type</span><br><span class="line">    common() *rtype</span><br><span class="line">    uncommon() *uncommonType</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>reflect.Value</strong>: 以结构体形式存在</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Value <span class="keyword">struct</span> &#123;</span><br><span class="line">    typ *rtype</span><br><span class="line">    ptr unsafe.Pointer</span><br><span class="line">    flag</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">Addr</span><span class="params">()</span> <span class="title">Value</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">Bool</span><span class="params">()</span> <span class="title">bool</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">Bytes</span><span class="params">()</span> []<span class="title">byte</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">Call</span><span class="params">(in []Value)</span> []<span class="title">Value</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">CallSlice</span><span class="params">(in []Value)</span> []<span class="title">Value</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">CanAddr</span><span class="params">()</span> <span class="title">bool</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">CanInterface</span><span class="params">()</span> <span class="title">bool</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">CanSet</span><span class="params">()</span> <span class="title">bool</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">Cap</span><span class="params">()</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">Close</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">Complex</span><span class="params">()</span> <span class="title">complex128</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">Convert</span><span class="params">(t Type)</span> <span class="title">Value</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">Elem</span><span class="params">()</span> <span class="title">Value</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">Field</span><span class="params">(i <span class="keyword">int</span>)</span> <span class="title">Value</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">FieldByIndex</span><span class="params">(index []<span class="keyword">int</span>)</span> <span class="title">Value</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">FieldByName</span><span class="params">(name <span class="keyword">string</span>)</span> <span class="title">Value</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">FieldByNameFunc</span><span class="params">(match <span class="keyword">func</span>(<span class="keyword">string</span>)</span> <span class="title">bool</span>) <span class="title">Value</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">Float</span><span class="params">()</span> <span class="title">float64</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">Index</span><span class="params">(i <span class="keyword">int</span>)</span> <span class="title">Value</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">Int</span><span class="params">()</span> <span class="title">int64</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">Interface</span><span class="params">()</span> <span class="params">(i <span class="keyword">interface</span>&#125;)</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">InterfaceData</span><span class="params">()</span> [2]<span class="title">uintptr</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">IsNil</span><span class="params">()</span> <span class="title">bool</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">IsValid</span><span class="params">()</span> <span class="title">bool</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">IsZero</span><span class="params">()</span> <span class="title">bool</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">Kind</span><span class="params">()</span> <span class="title">Kind</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">Len</span><span class="params">()</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">MapIndex</span><span class="params">(key Value)</span> <span class="title">Value</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">MapKeys</span><span class="params">()</span> []<span class="title">Value</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">MapRange</span><span class="params">()</span> *<span class="title">MapIter</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">Method</span><span class="params">(i <span class="keyword">int</span>)</span> <span class="title">Value</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">MethodByName</span><span class="params">(name <span class="keyword">string</span>)</span> <span class="title">Value</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">NumField</span><span class="params">()</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">NumMethod</span><span class="params">()</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">OverflowComplex</span><span class="params">(x <span class="keyword">complex128</span>)</span> <span class="title">bool</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">OverflowFloat</span><span class="params">(x <span class="keyword">float64</span>)</span> <span class="title">bool</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">OverflowInt</span><span class="params">(x <span class="keyword">int64</span>)</span> <span class="title">bool</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">OverflowUint</span><span class="params">(x <span class="keyword">uint64</span>)</span> <span class="title">bool</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">Pointer</span><span class="params">()</span> <span class="title">uintptr</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">Recv</span><span class="params">()</span> <span class="params">(x Value, ok <span class="keyword">bool</span>)</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">Send</span><span class="params">(x Value)</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">Set</span><span class="params">(x Value)</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">SetBool</span><span class="params">(x <span class="keyword">bool</span>)</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">SetBytes</span><span class="params">(x []<span class="keyword">byte</span>)</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">SetCap</span><span class="params">(n <span class="keyword">int</span>)</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">SetComplex</span><span class="params">(x <span class="keyword">complex128</span>)</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">SetFloat</span><span class="params">(x <span class="keyword">float64</span>)</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">SetInt</span><span class="params">(x <span class="keyword">int64</span>)</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">SetLen</span><span class="params">(n <span class="keyword">int</span>)</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">SetMapIndex</span><span class="params">(key, elem Value)</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">SetPointer</span><span class="params">(x unsafe.Pointer)</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">SetString</span><span class="params">(x <span class="keyword">string</span>)</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">SetUint</span><span class="params">(x <span class="keyword">uint64</span>)</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">Slice</span><span class="params">(i, j <span class="keyword">int</span>)</span> <span class="title">Value</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">Slice3</span><span class="params">(i, j, k <span class="keyword">int</span>)</span> <span class="title">Value</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">String</span><span class="params">()</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">TryRecv</span><span class="params">()</span> <span class="params">(x Value, ok <span class="keyword">bool</span>)</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">TrySend</span><span class="params">(x Value)</span> <span class="title">bool</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">Type</span><span class="params">()</span> <span class="title">Type</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">Uint</span><span class="params">()</span> <span class="title">uint64</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">UnsafeAddr</span><span class="params">()</span> <span class="title">uintptr</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">assignTo</span><span class="params">(context <span class="keyword">string</span>, dst *rtype, target unsafe.Pointer)</span> <span class="title">Value</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">call</span><span class="params">(op <span class="keyword">string</span>, in []Value)</span> []<span class="title">Value</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">pointer</span><span class="params">()</span> <span class="title">unsafe</span>.<span class="title">Pointer</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">recv</span><span class="params">(nb <span class="keyword">bool</span>)</span> <span class="params">(val Value, ok <span class="keyword">bool</span>)</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">runes</span><span class="params">()</span> []<span class="title">rune</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">send</span><span class="params">(x Value, nb <span class="keyword">bool</span>)</span> <span class="params">(selected <span class="keyword">bool</span>)</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">setRunes</span><span class="params">(x []<span class="keyword">rune</span>)</span></span></span><br></pre></td></tr></table></figure><h2 id="7-2-反射的三大定律"><a href="#7-2-反射的三大定律" class="headerlink" title="7.2 反射的三大定律"></a>7.2 反射的三大定律</h2><ul><li><p>Reflection goes from interface value to reflection object.</p></li><li><p>反射可以将接口类型变量 转换为“反射类型对象”</p></li><li><p>Reflection goes from reflection object to interface value.</p></li><li><p>反射可以将 “反射类型对象”转换为 接口类型变量</p></li><li><p>To modify a reflection object, the value must be settable.</p></li><li><p>如果要修改 “反射类型对象” 其类型必须是 可写的</p></li></ul><h3 id="7-2-1-第一定律"><a href="#7-2-1-第一定律" class="headerlink" title="7.2.1 第一定律"></a>7.2.1 第一定律</h3><p>Reflection goes from interface value to reflection object.</p><ul><li>reflect.TypeOf(i): 获取接口值的类型 (*reflect.rtype)</li><li>reflect.ValueOf(i): 获取接口值的值  (reflect.Value)</li></ul><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/golang/reflect_1.png" alt="reflect_1"></p><h3 id="7-2-2-第二定律"><a href="#7-2-2-第二定律" class="headerlink" title="7.2.2 第二定律"></a>7.2.2 第二定律</h3><p>Reflection goes from reflection object to interface value.</p><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/golang/reflect_2.png" alt="reflect_2"></p><p><strong>注意：只有Value才能逆向转换，Type则不行</strong></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">Interface</span><span class="params">()</span> <span class="params">(i <span class="keyword">interface</span>&#123;&#125;)</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> valueInterface(v, <span class="literal">true</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/golang/reflect_1_2.png" alt="reflect_1_2"></p><h3 id="7-2-3-第三定律"><a href="#7-2-3-第三定律" class="headerlink" title="7.2.3 第三定律"></a>7.2.3 第三定律</h3><p>To modify a reflection object, the value must be settable.</p><ul><li>非指针变量创建的反射对象，不可写</li><li>CanSet()返回true，为可写对象</li><li>不可写对象，无法进行写操作</li><li>可写对象，使用Elem()函数返回指针指向的数据</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> name <span class="keyword">string</span> = <span class="string">&quot;Go编程&quot;</span></span><br><span class="line"></span><br><span class="line">v1 := reflect.ValueOf(name)</span><br><span class="line">fmt.Println(v1.CanSet()) <span class="comment">// false, 使用v1.Elem()方法会触发异常</span></span><br><span class="line"></span><br><span class="line">v2 := reflect.ValueOf(&amp;name)</span><br><span class="line">fmt.Println(v2.CanSet()) <span class="comment">// false</span></span><br><span class="line"></span><br><span class="line">v3 := v2.Elem()</span><br><span class="line">fmt.Println(v3.CanSet()) <span class="comment">// true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可写对象的相关方法：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Set(x Value)</span><br><span class="line">SetBool(x <span class="keyword">bool</span>)</span><br><span class="line">SetBytes(x []<span class="keyword">byte</span>)</span><br><span class="line">setRunes(x []<span class="keyword">rune</span>)</span><br><span class="line">SetComplex(x <span class="keyword">complex128</span>)</span><br><span class="line">SetFloat(x <span class="keyword">float64</span>)</span><br><span class="line">SetInt(x <span class="keyword">int64</span>)</span><br><span class="line">SetLen(n <span class="keyword">int</span>)</span><br><span class="line">SetCap(n <span class="keyword">int</span>)</span><br><span class="line">SetMapIndex(key Value, elem Value)</span><br><span class="line">SetUint(x <span class="keyword">uint64</span>)</span><br><span class="line">SetPointer(x unsafe.Pointer)</span><br><span class="line">SetString(x <span class="keyword">string</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go 通道和并发</title>
      <link href="/2018/01/06/Go%20%E9%80%9A%E9%81%93%E5%92%8C%E5%B9%B6%E5%8F%91/"/>
      <url>/2018/01/06/Go%20%E9%80%9A%E9%81%93%E5%92%8C%E5%B9%B6%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<h1 id="1-goroutine"><a href="#1-goroutine" class="headerlink" title="1. goroutine"></a>1. goroutine</h1><p>协程，比线程更小，十几个goroutine可能体现在底层就五六个线程。Go语言内部实现了这些goroutine之间的内存共享。执行goroutine只需极少的栈内存（4～5KB），比线程更易用，更高效和更轻便。</p><p>goroutine调度模型：</p><ul><li>M: 线程</li><li>P: 上下文</li><li>G: Goroutine</li></ul><p>并发concurrency：</p><ul><li>goroutine只是官方实现的超级“线程池”。每个实例4-5KB的栈内存占用，和大幅减少的创建和销毁开销，是制造Go号称高并发的根本原因</li><li>并发不是并行(Concurrency is Not Parallelism): 并发是通过切换CPU时间来实现“同时”运行；而并行则是直接利用多核实现多线程同时运行。Go可设置使用的CPU核心数，以发挥多核计算机的能力</li><li>goroutine奉行通过通信来共享内存，而不是共享内存来通信。</li></ul><span id="more"></span><p>goroutine的切换点：</p><ul><li><p>I/O, select</p></li><li><p>channel</p></li><li><p>等待锁</p></li><li><p>函数调用 (有时)</p></li><li><p>runtime.Gosched()</p></li><li><p>进程：资源拥有的基本单位。每个进程由私营的虚拟地址空间、代码、数据和其它各种资源组成。</p></li><li><p>线程：处理器调度和分配的基本单位。线程是进程内部的一个执行单元，每个进程至少有一个主线程，它无需用户去主动创建，由系统自动创建。</p></li><li><p>协程：比线程更小</p><ul><li>轻量级“线程”</li><li>“非抢占式”多任务处理，有协程主动交出控制权</li><li>编译器/解释器/虚拟机层面的多任务</li><li>多个协程，可能在一个或多个线程上运行</li></ul></li></ul><p>KSE：Kernel Scheduling Entity, 内核调度实体，即可以被操作系统内核调度器调度的实体对象，它是内核的最小调度单元，也就是<strong>内核级线程</strong></p><p>三种线程模型：</p><ol><li><p>用户级线程模型：</p><ul><li><p>用户线程与内核线程KSE的关系是多对一 (N:1)。多个用户线程一般从属单个进程，并且多线程的调度由用户自己的线程库完成，线程的创建、销毁及线程间的协调等操作由用户自己的线程库负责，无需借助系统调度来实现。</p></li><li><p>Python的gevent协程库就属这种实现</p></li><li><p>线程调度在用户层面完成，不需要让CPU在用户态和内核态之间切换，这种方式较为轻量级，对系统资源消耗少</p></li><li><p>缺点：做不到真正意义上的并发。如果某个用户进程上的某个线程因为一个阻塞调用(I/O)二被CPU中断(抢占式调度)，那么该进程中的其它线程将被阻塞，整个进程被挂起。因为在用户线程模式下，进程内的线程绑定到CPU执行是由用户进程调度实现的，内部线程对CPU不可见，即CPU调度的是进程，而非线程</p></li><li><p>协程库优化：把阻塞的操作重新封装为完全非阻塞模式，在阻塞点上，主动让出自己，并通知或唤醒其它等待的用户线程</p></li></ul></li><li><p>内核级线程模型</p><ul><li>用户线程和内核线程KSE的关系是一对一 (1:1)。每个用户线程绑定一个内核线程，线程的调度完全交由内核控制</li><li>Java/C++ 的线程库按此方式实现</li><li>优点：简单，直接借助系统内核的线程和调度器，可以快速实现线程切换，做到真正的并行处理</li><li>缺点：由于直接使用内核去创建、销毁及多线程上下文切换和调度，系统资源成本大幅上涨，对性能影响较大</li></ul></li><li><p>两级线程模型(即混合型线程模型)</p><ul><li>用户线程与内核线程KSE的关系是多对多 (N:M)</li><li>一个进程可与多个内核线程KSE关联，该进程内的多个线程绑定到了不同的KSE上</li><li>进程内的线程并不与KSE一一绑定，当某个KSE绑定的线程因阻塞操作被内核调度出CPU时，其关联的进程中的某个线程又会重新与KSE绑定</li><li>此种模型高度复杂，Go语言中的runtime调度器实现了这种方案</li><li>为什么称为两级？<strong>用户调度实现用户线程到KSE的调度，内核调度器实现KSE到CPU上的调度</strong></li></ul></li></ol><p>G-P-M 模型：</p><ul><li>G：Goroutine：独立执行单元。相较于每个OS线程固定分配2M内存的模式，Goroutine的栈采取动态扩容方式，2k ~ 1G(AMD64, AMD32: 256M)。周期性回收内存，收缩栈空间<ul><li>每个Goroutine对应一个G结构体，它存储Goroutine的运行堆栈、状态及任务函数，可重用。</li><li>G并非执行体，每个G需要绑定到P才能被调度执行</li></ul></li><li>P：Processor： 逻辑处理器，中介<ul><li>对G来说，P相当于CPU，G只有绑定到P才能被调用</li><li>对M来说，P提供相关的运行环境(Context)，如内存分配状态(mcache)，任务队列(G)等</li><li>P的数量决定系统最大并行的G的数量 （CPU核数 &gt;= P的数量），用户可通过GOMAXPROCS设置数量，但不能超过256</li></ul></li><li>M：Machine<ul><li>OS线程抽象，真正执行计算的资源，在绑定有效的P后，进入schedule循环</li><li>schedule循环的机制大致从Global队列、P的Local队列及wait队列中获取G，切换到G的执行栈上执行G的函数，调用goexit做清理工作并回到M</li><li>M不保留G的状态</li><li>M的数量不定，由Go Runtime调整，目前默认不超过10K</li></ul></li></ul><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/golang/G-P-M.png" alt="gpm"></p><h2 id="1-1-go关键字开启新协程"><a href="#1-1-go关键字开启新协程" class="headerlink" title="1.1 go关键字开启新协程"></a>1.1 go关键字开启新协程</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">say</span><span class="params">(s <span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">5</span>; i ++ &#123;</span><br><span class="line">time.Sleep(<span class="number">100</span> * time.Millisecond)</span><br><span class="line">fmt.Println(s)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">go</span> say(<span class="string">&quot;world&quot;</span>)</span><br><span class="line">say(<span class="string">&quot;hello&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-2-runtime包"><a href="#1-2-runtime包" class="headerlink" title="1.2 runtime包"></a>1.2 runtime包</h2><p><code>runtime.Gosched()</code> 让出时间片<br><code>runtime.Goexit()</code> 终止协程<br><code>runtime.GOMAXPROCS(N)</code>  指定运行CPU个数</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">5</span>; i++ &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;go&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">2</span>; i++ &#123;</span><br><span class="line">runtime.Gosched() <span class="comment">// 让出时间片</span></span><br><span class="line">fmt.Println(<span class="string">&quot;hello&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 打印函数属IO操作，自动切换控制权</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">auto</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">(i <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;Hello from goroutine %d\n&quot;</span>, i)</span><br><span class="line">&#125;</span><br><span class="line">&#125;(i)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">time.Sleep(time.Millisecond)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 不自动切换控制权</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">manual</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> a [<span class="number">10</span>]<span class="keyword">int</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">(i <span class="keyword">int</span>)</span></span> &#123; <span class="comment">// race condition</span></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">a[i]++</span><br><span class="line">runtime.Gosched() <span class="comment">// 交出控制权</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;(i)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">time.Sleep(time.Millisecond)</span><br><span class="line">fmt.Println(a)  <span class="comment">// 存在读写抢占</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// out of range</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">outOfRange</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> a [<span class="number">10</span>]<span class="keyword">int</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123; <span class="comment">// race condition</span></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">a[i]++</span><br><span class="line">runtime.Gosched() <span class="comment">// 交出控制权</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">time.Sleep(time.Millisecond)</span><br><span class="line">fmt.Println(a)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go run -race goroutine.go   <span class="comment"># manual()函数存在抢占，race选项可检查到</span></span><br></pre></td></tr></table></figure><h1 id="2-通道-channel"><a href="#2-通道-channel" class="headerlink" title="2. 通道(channel)"></a>2. 通道(channel)</h1><p>通道：用来传递数据的一种数据结构。两个goroutine之间，可以使用它来进行同步和通信</p><p><strong>不靠共享内存通信，而是通过通信来共享内存</strong></p><p>Channel：</p><ul><li>goroutine的沟通桥梁，大多是阻塞同步的</li><li>make创建，close关闭</li><li>是引用类型</li><li>可使用for range来迭代channel</li><li>可设置单向或双向通道</li><li>可设置缓存大小，在未被填满前不会发生阻塞</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ch := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">int</span>)</span><br><span class="line"></span><br><span class="line">ch &lt;- v      <span class="comment">// 把v发送到通道ch</span></span><br><span class="line">v := &lt;- ch   <span class="comment">// 从ch接收数据</span></span><br></pre></td></tr></table></figure><h2 id="2-1-分段计算"><a href="#2-1-分段计算" class="headerlink" title="2.1 分段计算"></a>2.1 分段计算</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">a := []<span class="keyword">int</span>&#123;<span class="number">7</span>, <span class="number">9</span>, <span class="number">-3</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">2</span>, <span class="number">-5</span>&#125;</span><br><span class="line"></span><br><span class="line">mid := <span class="built_in">len</span>(a) / <span class="number">2</span></span><br><span class="line">ch := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">int</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> sum(a[:mid], ch)</span><br><span class="line"><span class="keyword">go</span> sum(a[mid:], ch)</span><br><span class="line"></span><br><span class="line">x, y := &lt;-ch, &lt;-ch</span><br><span class="line">fmt.Println(x, y, x+y)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sum</span><span class="params">(a []<span class="keyword">int</span>, ch <span class="keyword">chan</span> <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">result := <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> _, v := <span class="keyword">range</span> a &#123;</span><br><span class="line">result += v</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ch &lt;- result</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-2-阻塞主线程"><a href="#2-2-阻塞主线程" class="headerlink" title="2.2 阻塞主线程"></a>2.2 阻塞主线程</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">c := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">bool</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;Go Go Go!!!&quot;</span>)</span><br><span class="line">c &lt;- <span class="literal">true</span></span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line">&lt;- c   <span class="comment">// 阻塞main函数，等待goroutine执行完成</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-3-通道遍历和关闭"><a href="#2-3-通道遍历和关闭" class="headerlink" title="2.3 通道遍历和关闭"></a>2.3 通道遍历和关闭</h2><p>如果通道不关闭<code>close(ch)</code>，遍历<code>range ch</code>就不会结束</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">ch := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">int</span>, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> fib(<span class="built_in">cap</span>(ch), ch)</span><br><span class="line"></span><br><span class="line"><span class="comment">//// 方法1：for-range 自检</span></span><br><span class="line"><span class="comment">//for i := range ch &#123;</span></span><br><span class="line"><span class="comment">//fmt.Printf(&quot;%d &quot;, i)</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 方法2：comma ok idiom</span></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">num, ok := &lt;-ch</span><br><span class="line"><span class="keyword">if</span> ok &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;%d &quot;</span>, num)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">fib</span><span class="params">(n <span class="keyword">int</span>, ch <span class="keyword">chan</span> <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">x, y := <span class="number">1</span>, <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ &#123;</span><br><span class="line">ch &lt;- x</span><br><span class="line">x, y = y, x+y</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 必须关闭，否则deadlock</span></span><br><span class="line"><span class="built_in">close</span>(ch)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-4-主程序可能不等待goruntine"><a href="#2-4-主程序可能不等待goruntine" class="headerlink" title="2.4 主程序可能不等待goruntine"></a>2.4 主程序可能不等待goruntine</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">ch := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">bool</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line"><span class="keyword">go</span> calc(i, ch)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;-ch</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">calc</span><span class="params">(index <span class="keyword">int</span>, ch <span class="keyword">chan</span> <span class="keyword">bool</span>)</span></span> &#123;</span><br><span class="line">sum := <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">1</span>; i &lt; <span class="number">1000000001</span>; i++ &#123;</span><br><span class="line">sum += i</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(index, sum)</span><br><span class="line"></span><br><span class="line"><span class="comment">// goroutine 执行顺序不固定，此判断不正确</span></span><br><span class="line"><span class="keyword">if</span> index == <span class="number">9</span> &#123;</span><br><span class="line">ch &lt;- <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-4-1-方法一：使用缓存channel"><a href="#2-4-1-方法一：使用缓存channel" class="headerlink" title="2.4.1 方法一：使用缓存channel"></a>2.4.1 方法一：使用缓存channel</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">ch := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">bool</span>, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line"><span class="keyword">go</span> calc(i, ch)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 等待10次</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line">&lt;-ch</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">calc</span><span class="params">(index <span class="keyword">int</span>, ch <span class="keyword">chan</span> <span class="keyword">bool</span>)</span></span> &#123;</span><br><span class="line">sum := <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">1</span>; i &lt; <span class="number">1000000001</span>; i++ &#123;</span><br><span class="line">sum += i</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(index, sum)</span><br><span class="line"></span><br><span class="line">ch &lt;- <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-4-2-方法二：通过同步解决-sync-WaitGroup"><a href="#2-4-2-方法二：通过同步解决-sync-WaitGroup" class="headerlink" title="2.4.2 方法二：通过同步解决(sync.WaitGroup)"></a>2.4.2 方法二：通过同步解决(sync.WaitGroup)</h3><ul><li><code>wg.Add(N)</code>: 新增N个任务</li><li><code>wg.Done()</code>: 完成一个任务，计算器减1</li><li><code>wg.Wait()</code>: 主线程等待，直到计数器为0</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">wg := sync.WaitGroup&#123;&#125;</span><br><span class="line">wg.Add(<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line"><span class="keyword">go</span> calc(i, &amp;wg)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 等待</span></span><br><span class="line">wg.Wait()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">calc</span><span class="params">(index <span class="keyword">int</span>, wg *sync.WaitGroup)</span></span> &#123;</span><br><span class="line">sum := <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">1</span>; i &lt; <span class="number">1000000001</span>; i++ &#123;</span><br><span class="line">sum += i</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(index, sum)</span><br><span class="line"></span><br><span class="line">wg.Done()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-5-模拟打印机"><a href="#2-5-模拟打印机" class="headerlink" title="2.5 模拟打印机"></a>2.5 模拟打印机</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">ch := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">bool</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> task1(ch)</span><br><span class="line"><span class="keyword">go</span> task2(ch)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 等待</span></span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-time.After(<span class="number">15</span> * time.Second):</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Printer</span><span class="params">(s <span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> _, c := <span class="keyword">range</span> s &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;%c&quot;</span>, c)</span><br><span class="line">time.Sleep(time.Second)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">task1</span><span class="params">(ch <span class="keyword">chan</span> <span class="keyword">bool</span>)</span></span> &#123;</span><br><span class="line">&lt;-ch <span class="comment">// 阻塞等待</span></span><br><span class="line">Printer(<span class="string">&quot;hello&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">task2</span><span class="params">(ch <span class="keyword">chan</span> <span class="keyword">bool</span>)</span></span> &#123;</span><br><span class="line">Printer(<span class="string">&quot;world&quot;</span>)</span><br><span class="line">ch &lt;- <span class="literal">true</span> <span class="comment">// 完成释放</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-6-带缓冲的通道"><a href="#2-6-带缓冲的通道" class="headerlink" title="2.6 带缓冲的通道"></a>2.6 带缓冲的通道</h2><p>通道 <code>ch := make(chan int, N)</code>:</p><ul><li>N=0 同步阻塞</li><li>N&gt;0 异步的，超过N时才阻塞</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">ch := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">int</span>, <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;i=%d, len(ch)=%d, cap(ch)=%d\n&quot;</span>, i, <span class="built_in">len</span>(ch), <span class="built_in">cap</span>(ch))</span><br><span class="line">ch &lt;- i</span><br><span class="line">&#125;</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line">time.Sleep(<span class="number">2</span> * time.Second)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line">num := &lt;-ch</span><br><span class="line">fmt.Printf(<span class="string">&quot;num=%d\n&quot;</span>, num)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-7-单向通道"><a href="#2-7-单向通道" class="headerlink" title="2.7 单向通道"></a>2.7 单向通道</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> ch1 <span class="keyword">chan</span> <span class="keyword">int</span>          <span class="comment">// 默认双向</span></span><br><span class="line"><span class="keyword">var</span> ch2 <span class="keyword">chan</span>&lt;- <span class="keyword">int</span>        <span class="comment">// 单向写</span></span><br><span class="line"><span class="keyword">var</span> ch3 &lt;-<span class="keyword">chan</span> <span class="keyword">int</span>        <span class="comment">// 单向读</span></span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">ch := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">int</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">支持隐式转换</span></span><br><span class="line"><span class="comment">var send chan&lt;- int = ch   // write-only</span></span><br><span class="line"><span class="comment">var recv &lt;-chan int = ch   // read-only</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">go</span> producer(ch)</span><br><span class="line"></span><br><span class="line">consumer(ch)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">producer</span><span class="params">(out <span class="keyword">chan</span>&lt;- <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line">out &lt;- i * i</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">close</span>(out)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">consumer</span><span class="params">(in &lt;-<span class="keyword">chan</span> <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;%d &quot;</span>, &lt;-in)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="3-Select"><a href="#3-Select" class="headerlink" title="3. Select"></a>3. Select</h1><p>select: 管理多个channel，监听channel上的数据流动。类似switch语法，但每个case语句必须是IO操作。多个case同时满足，任选一个执行。</p><ul><li>处理一个或多个channel的发送和接收</li><li>同时有多个channel时，随机处理</li><li>可用空select来阻塞main函数</li><li>可设置超时</li></ul><p>default语句：</p><ul><li>有default：select语句不会被阻塞，执行default后，程序的执行会从select语句中恢复，进入下一次轮询。比较消耗资源。</li><li>没有default：select语句将被阻塞，直到至少有一个通信可以进行下去</li></ul><h2 id="3-1-管理多个通道"><a href="#3-1-管理多个通道" class="headerlink" title="3.1 管理多个通道"></a>3.1 管理多个通道</h2><h3 id="3-1-1-示例1"><a href="#3-1-1-示例1" class="headerlink" title="3.1.1 示例1"></a>3.1.1 示例1</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">c1, c2 := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">int</span>), <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">string</span>)</span><br><span class="line">done := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">bool</span>, <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> v, ok := &lt;-c1:</span><br><span class="line"><span class="keyword">if</span> !ok &#123;</span><br><span class="line">done &lt;- <span class="literal">true</span></span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="string">&quot;c1:&quot;</span>, v)</span><br><span class="line"><span class="keyword">case</span> v, ok := &lt;-c2:</span><br><span class="line"><span class="keyword">if</span> !ok &#123;</span><br><span class="line">done &lt;- <span class="literal">true</span></span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="string">&quot;c2:&quot;</span>, v)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line">c1 &lt;- <span class="number">1</span></span><br><span class="line">c2 &lt;- <span class="string">&quot;hi&quot;</span></span><br><span class="line">c1 &lt;- <span class="number">5</span></span><br><span class="line">c2 &lt;- <span class="string">&quot;hello&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 必须关闭至少一个</span></span><br><span class="line"><span class="built_in">close</span>(c1)</span><br><span class="line"><span class="comment">//close(c2)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">2</span>; i++ &#123;</span><br><span class="line">&lt;-done</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-1-2-示例2"><a href="#3-1-2-示例2" class="headerlink" title="3.1.2 示例2"></a>3.1.2 示例2</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">ch := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">int</span>)</span><br><span class="line">quit := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">bool</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 消费者</span></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;%d &quot;</span>, &lt;-ch)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println()</span><br><span class="line"></span><br><span class="line">quit &lt;- <span class="literal">true</span></span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line">fib(ch, quit)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">fib</span><span class="params">(ch <span class="keyword">chan</span>&lt;- <span class="keyword">int</span>, quit &lt;-<span class="keyword">chan</span> <span class="keyword">bool</span>)</span></span> &#123;</span><br><span class="line">x, y := <span class="number">1</span>, <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> ch &lt;- x:</span><br><span class="line">x, y = y, x+y</span><br><span class="line"><span class="keyword">case</span> &lt;-quit:</span><br><span class="line">fmt.Println(<span class="string">&quot;Done.&quot;</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="comment">// break只能跳出select，无法跳出for循环</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-1-3-使用select作为发送者应用"><a href="#3-1-3-使用select作为发送者应用" class="headerlink" title="3.1.3 使用select作为发送者应用"></a>3.1.3 使用select作为发送者应用</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">c := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">int</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> v := <span class="keyword">range</span> c &#123;</span><br><span class="line">fmt.Println(v)</span><br><span class="line">&#125;</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">100</span>; i++ &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> c &lt;- <span class="number">0</span>:</span><br><span class="line"><span class="keyword">case</span> c &lt;- <span class="number">1</span>:</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-2-超时处理"><a href="#3-2-超时处理" class="headerlink" title="3.2 超时处理"></a>3.2 超时处理</h2><p><code>case &lt;-time.After(5 * time.Second)</code>: 其他channel阻塞时间超过5s时执行</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">ch := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">int</span>)</span><br><span class="line">done := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">bool</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> x := &lt;-ch:</span><br><span class="line">fmt.Printf(<span class="string">&quot;%d &quot;</span>, x)</span><br><span class="line"><span class="keyword">case</span> &lt;-time.After(<span class="number">5</span> * time.Second):</span><br><span class="line">fmt.Println(<span class="string">&quot;\nTimeout&quot;</span>)</span><br><span class="line">done &lt;- <span class="literal">true</span></span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line">ch &lt;- i</span><br><span class="line">time.Sleep(time.Second)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;-done</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-3-避免造成死锁"><a href="#3-3-避免造成死锁" class="headerlink" title="3.3 避免造成死锁"></a>3.3 避免造成死锁</h2><p>select 在执行过程中，必须命中其中的某一分支, 否则deadlock</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">c1 := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">string</span>, <span class="number">1</span>)</span><br><span class="line">c2 := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">string</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">c1 &lt;- <span class="string">&quot;ok&quot;</span></span><br><span class="line">c2 &lt;- <span class="string">&quot;good&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> msg := &lt;-c1:</span><br><span class="line">fmt.Printf(<span class="string">&quot;c1 receive %s\n&quot;</span>, msg)</span><br><span class="line"><span class="keyword">case</span> msg := &lt;-c2:</span><br><span class="line">fmt.Printf(<span class="string">&quot;c2 receive %s\n&quot;</span>, msg)</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">fmt.Println(<span class="string">&quot;no data&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="4-定时器"><a href="#4-定时器" class="headerlink" title="4. 定时器"></a>4. 定时器</h1><h2 id="4-1-一次性定时任务"><a href="#4-1-一次性定时任务" class="headerlink" title="4.1 一次性定时任务"></a>4.1 一次性定时任务</h2><p><code>time.NewTimer(d Duration) *Timer</code></p><ul><li><code>&lt;-timer.C</code>: 阻塞等待，返回定时器时间</li><li><code>timer.Stop()</code>: </li><li><code>timer.Reset(d Duration)</code>: </li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">timer := time.NewTimer(<span class="number">2</span> * time.Second)</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">&lt;-timer.C</span><br><span class="line">fmt.Println(<span class="string">&quot;Goroutine is done.&quot;</span>)</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line">timer.Stop()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 重置定时器，上面的 goroutine 将继续执行</span></span><br><span class="line">timer.Reset(<span class="number">5</span> * time.Second)</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-time.After(<span class="number">10</span> * time.Second):</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-2-周期性定时任务"><a href="#4-2-周期性定时任务" class="headerlink" title="4.2 周期性定时任务"></a>4.2 周期性定时任务</h2><p><code>time.NewTicker(d Duration) *Ticker</code> </p><ul><li><code>&lt;-ticker.C</code>: 阻塞等待，返回定时器时间</li><li><code>ticker.Stop()</code>: </li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">ticker := time.NewTicker(<span class="number">2</span> * time.Second)</span><br><span class="line"></span><br><span class="line">count := <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">&lt;-ticker.C</span><br><span class="line"></span><br><span class="line">count++</span><br><span class="line">fmt.Printf(<span class="string">&quot;%d &quot;</span>, count)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> count == <span class="number">10</span> &#123;</span><br><span class="line">ticker.Stop()</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-3-延迟操作总结"><a href="#4-3-延迟操作总结" class="headerlink" title="4.3 延迟操作总结"></a>4.3 延迟操作总结</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">time.Sleep(time.Second * <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">&lt;- time.After(time.Second * <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">timer := time.NewTimer(time.Second * <span class="number">2</span>)</span><br><span class="line">&lt;-timer.C</span><br></pre></td></tr></table></figure><h1 id="5-死锁经典错误案例"><a href="#5-死锁经典错误案例" class="headerlink" title="5. 死锁经典错误案例"></a>5. 死锁经典错误案例</h1><h2 id="5-1-无缓冲信道，在接收者未准备好之前，发送操作是阻塞的"><a href="#5-1-无缓冲信道，在接收者未准备好之前，发送操作是阻塞的" class="headerlink" title="5.1 无缓冲信道，在接收者未准备好之前，发送操作是阻塞的"></a>5.1 无缓冲信道，在接收者未准备好之前，发送操作是阻塞的</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">c := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">bool</span>)</span><br><span class="line"></span><br><span class="line">c &lt;- <span class="literal">true</span> <span class="comment">// 阻塞</span></span><br><span class="line"></span><br><span class="line">fmt.Println(&lt;-c)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>两种解决方法：</p><p>1) 先接收，后发送</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">c := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">bool</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(&lt;-c)</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line">c &lt;- <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2) 使用缓冲信道</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">c := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">bool</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">c &lt;- <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">fmt.Println(&lt;-c)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-2-缓冲信道，超过容量"><a href="#5-2-缓冲信道，超过容量" class="headerlink" title="5.2 缓冲信道，超过容量"></a>5.2 缓冲信道，超过容量</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">c := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">bool</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">c &lt;- <span class="literal">true</span></span><br><span class="line">c &lt;- <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">fmt.Println(&lt;-c)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-3-等待从信道读取数据，但信道无数据写入"><a href="#5-3-等待从信道读取数据，但信道无数据写入" class="headerlink" title="5.3 等待从信道读取数据，但信道无数据写入"></a>5.3 等待从信道读取数据，但信道无数据写入</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">c := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">bool</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">c &lt;- <span class="literal">true</span></span><br><span class="line">c &lt;- <span class="literal">false</span></span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="keyword">range</span> c &#123;</span><br><span class="line">fmt.Println(i)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解决办法：及时关闭无用信道</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">c := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">bool</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">c &lt;- <span class="literal">true</span></span><br><span class="line">c &lt;- <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">close</span>(c) <span class="comment">// 关闭信道</span></span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="keyword">range</span> c &#123;</span><br><span class="line">fmt.Println(i)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="6-控制-goroutine-并发数量"><a href="#6-控制-goroutine-并发数量" class="headerlink" title="6. 控制 goroutine 并发数量"></a>6. 控制 goroutine 并发数量</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">count := <span class="number">10</span></span><br><span class="line">wg := sync.WaitGroup&#123;&#125;</span><br><span class="line">ch := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">int</span>, <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; count; i++ &#123;</span><br><span class="line">wg.Add(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">(i <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">defer</span> wg.Done()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> n := <span class="keyword">range</span> ch &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;go func: %d, time: %v\n&quot;</span>, n, time.Now())</span><br><span class="line">time.Sleep(time.Duration(n) * time.Second)</span><br><span class="line">&#125;</span><br><span class="line">&#125;(i)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line">ch &lt;- <span class="number">1</span></span><br><span class="line">ch &lt;- <span class="number">2</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">close</span>(ch)</span><br><span class="line">wg.Wait()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go 结构体和接口</title>
      <link href="/2018/01/05/Go%20%E7%BB%93%E6%9E%84%E4%BD%93%E5%92%8C%E6%8E%A5%E5%8F%A3/"/>
      <url>/2018/01/05/Go%20%E7%BB%93%E6%9E%84%E4%BD%93%E5%92%8C%E6%8E%A5%E5%8F%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="1-结构体"><a href="#1-结构体" class="headerlink" title="1. 结构体"></a>1. 结构体</h1><p>将多个不同类型命名字段(field)序列打包成一个复合类型。</p><p>结构体特点：</p><ul><li>值类型</li><li>做参数，值传递</li><li>相同类型，可使用==或!=比较</li></ul><p>Go语言中实现封装、继承和多态：</p><ul><li>封装：通过方法实现</li><li>继承：通过匿名字段实现</li><li>多态：通过接口实现</li></ul><span id="more"></span><h2 id="1-1-定义结构体"><a href="#1-1-定义结构体" class="headerlink" title="1.1 定义结构体"></a>1.1 定义结构体</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> person <span class="keyword">struct</span> &#123;</span><br><span class="line">Name <span class="keyword">string</span></span><br><span class="line">Age  <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">p := person&#123;</span><br><span class="line">Name: <span class="string">&quot;lucy&quot;</span>,</span><br><span class="line">Age: <span class="number">22</span>,</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(p)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-2-匿名结构体"><a href="#1-2-匿名结构体" class="headerlink" title="1.2 匿名结构体"></a>1.2 匿名结构体</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> person <span class="keyword">struct</span> &#123;</span><br><span class="line">Name <span class="keyword">string</span></span><br><span class="line">Age  <span class="keyword">int</span></span><br><span class="line">Contact <span class="keyword">struct</span> &#123;</span><br><span class="line">Phone, City <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">p1 := person&#123;</span><br><span class="line">Name: <span class="string">&quot;lucy&quot;</span>,</span><br><span class="line">Age: <span class="number">22</span>,</span><br><span class="line">Contact: <span class="keyword">struct</span>&#123; Phone, City <span class="keyword">string</span> &#125; &#123;</span><br><span class="line">Phone: <span class="string">&quot;123456789&quot;</span>,</span><br><span class="line">City: <span class="string">&quot;LA&quot;</span>,</span><br><span class="line">&#125;,</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(p1)</span><br><span class="line"></span><br><span class="line">p2 := person&#123;</span><br><span class="line">Name: <span class="string">&quot;jack&quot;</span>,</span><br><span class="line">Age:  <span class="number">19</span>,</span><br><span class="line">&#125;</span><br><span class="line">p2.Contact.Phone = <span class="string">&quot;987654321&quot;</span></span><br><span class="line">p2.Contact.City = <span class="string">&quot;NY&quot;</span></span><br><span class="line"></span><br><span class="line">fmt.Println(p2)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-3-匿名字段"><a href="#1-3-匿名字段" class="headerlink" title="1.3 匿名字段"></a>1.3 匿名字段</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">s := <span class="keyword">struct</span> &#123;</span><br><span class="line"><span class="keyword">int</span></span><br><span class="line"><span class="keyword">string</span></span><br><span class="line">&#125; &#123;</span><br><span class="line"><span class="number">10</span>,</span><br><span class="line"><span class="string">&quot;jack&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(s)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-4-嵌入结构（模拟继承）"><a href="#1-4-嵌入结构（模拟继承）" class="headerlink" title="1.4 嵌入结构（模拟继承）"></a>1.4 嵌入结构（模拟继承）</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> person <span class="keyword">struct</span> &#123;</span><br><span class="line">Name <span class="keyword">string</span></span><br><span class="line">Age <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> teacher <span class="keyword">struct</span> &#123;</span><br><span class="line">person</span><br><span class="line">Salary <span class="keyword">float32</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> student <span class="keyword">struct</span> &#123;</span><br><span class="line">person</span><br><span class="line">Score <span class="keyword">float32</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">t := teacher &#123;</span><br><span class="line">person: person&#123;</span><br><span class="line">Name: <span class="string">&quot;Jack&quot;</span>,</span><br><span class="line">Age: <span class="number">45</span>,</span><br><span class="line">&#125;,</span><br><span class="line">Salary: <span class="number">12901.20</span>,</span><br><span class="line">&#125;</span><br><span class="line">t.Age += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">s := student&#123;</span><br><span class="line">person: person&#123;</span><br><span class="line">Name: <span class="string">&quot;Tom&quot;</span>,</span><br><span class="line">Age:  <span class="number">13</span>,</span><br><span class="line">&#125;,</span><br><span class="line">Score: <span class="number">91.50</span>,</span><br><span class="line">&#125;</span><br><span class="line">s.Score -= <span class="number">2.5</span></span><br><span class="line"></span><br><span class="line">fmt.Println(t, s)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-5-结构体序列化"><a href="#1-5-结构体序列化" class="headerlink" title="1.5 结构体序列化"></a>1.5 结构体序列化</h2><p>注意使用struct标签，否则序列化后的名称会保持大写开头不变</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Student <span class="keyword">struct</span> &#123;</span><br><span class="line">Name <span class="keyword">string</span> <span class="string">`json:&quot;name&quot;`</span></span><br><span class="line">Age  <span class="keyword">byte</span>   <span class="string">`json:&quot;age&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">stu := Student&#123;<span class="string">&quot;Jack&quot;</span>, <span class="number">21</span>&#125;</span><br><span class="line"></span><br><span class="line">js, err := json.Marshal(stu)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;json化失败&quot;</span>, err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="keyword">string</span>(js))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-6-工厂模式"><a href="#1-6-工厂模式" class="headerlink" title="1.6 工厂模式"></a>1.6 工厂模式</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> student <span class="keyword">struct</span> &#123;</span><br><span class="line">Name <span class="keyword">string</span></span><br><span class="line">Age  <span class="keyword">byte</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewStudent</span><span class="params">(name <span class="keyword">string</span>, age <span class="keyword">byte</span>)</span> *<span class="title">student</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> &amp;student&#123;</span><br><span class="line">Name: name,</span><br><span class="line">Age:  age,</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(stu *student)</span> <span class="title">String</span><span class="params">()</span> <span class="title">string</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> fmt.Sprintf(<span class="string">&quot;Name=%v, Age=%v&quot;</span>, stu.Name, stu.Age)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-7-结构体链表"><a href="#1-7-结构体链表" class="headerlink" title="1.7 结构体链表"></a>1.7 结构体链表</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Node <span class="keyword">struct</span> &#123;</span><br><span class="line">Name  <span class="keyword">string</span></span><br><span class="line">Value <span class="keyword">int</span></span><br><span class="line">next  *Node</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">node := &amp;Node&#123;</span><br><span class="line">Name:  <span class="string">&quot;head&quot;</span>,</span><br><span class="line">Value: <span class="number">0</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">appendNodes(node)</span><br><span class="line"><span class="comment">//trans(node)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 只所以要有二级指针，是为了改变顶级node的地址，方便遍历函数遍历</span></span><br><span class="line">insertNodes(&amp;node)</span><br><span class="line"><span class="comment">//trans(node)</span></span><br><span class="line"></span><br><span class="line">delNode(&amp;node, <span class="string">&quot;head&quot;</span>)</span><br><span class="line"><span class="comment">//trans(node)</span></span><br><span class="line"></span><br><span class="line">addNode(&amp;node, <span class="string">&quot;node_A_1&quot;</span>, &amp;Node&#123;Name: <span class="string">&quot;newNode&quot;</span>, Value: <span class="number">12</span>&#125;)</span><br><span class="line">trans(node)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">appendNodes</span><span class="params">(p *Node)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">2</span>; i++ &#123;</span><br><span class="line">node := Node&#123;</span><br><span class="line">Name:  fmt.Sprintf(<span class="string">&quot;node_A_%d&quot;</span>, i),</span><br><span class="line">Value: rand.Intn(<span class="number">100</span>),</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">p.next = &amp;node</span><br><span class="line">p = &amp;node</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">insertNodes</span><span class="params">(p **Node)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">2</span>; i++ &#123;</span><br><span class="line">node := Node&#123;</span><br><span class="line">Name:  fmt.Sprintf(<span class="string">&quot;node_I_%d&quot;</span>, i),</span><br><span class="line">Value: rand.Intn(<span class="number">100</span>),</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">node.next = *p</span><br><span class="line">*p = &amp;node</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">delNode</span><span class="params">(p **Node, name <span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line">head := *p</span><br><span class="line"></span><br><span class="line"><span class="comment">// 第一个即为要删除的对象</span></span><br><span class="line"><span class="keyword">if</span> head.Name == name &#123;</span><br><span class="line">*p = head.next</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">prev := head</span><br><span class="line">head = head.next</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> head != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">if</span> head.Name == name &#123;</span><br><span class="line">prev.next = head.next</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">prev = head</span><br><span class="line">head = head.next</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">addNode</span><span class="params">(p **Node, name <span class="keyword">string</span>, newNode *Node)</span></span> &#123;</span><br><span class="line">head := *p</span><br><span class="line"></span><br><span class="line"><span class="comment">// 第一个元素前插入</span></span><br><span class="line"><span class="keyword">if</span> head.Name == name &#123;</span><br><span class="line">newNode.next = head</span><br><span class="line">*p = newNode</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">prev := head</span><br><span class="line">head = head.next</span><br><span class="line"><span class="keyword">for</span> head != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">if</span> head.Name == name &#123;</span><br><span class="line">prev.next = newNode</span><br><span class="line">newNode.next = head</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">prev = head</span><br><span class="line">head = head.next</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">trans</span><span class="params">(p *Node)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> p != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(*p)</span><br><span class="line">p = p.next</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">node := &amp;Node&#123;</span><br><span class="line">Name:  <span class="string">&quot;head&quot;</span>,</span><br><span class="line">Value: <span class="number">0</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">appendNodes(node)</span><br><span class="line">insertNodes(&amp;node)</span><br><span class="line">delNode(&amp;node, <span class="string">&quot;node_I_4&quot;</span>)</span><br><span class="line">appendNode(node, <span class="string">&quot;head&quot;</span>, <span class="string">&quot;newAppend&quot;</span>)</span><br><span class="line">insertNode(&amp;node, <span class="string">&quot;node_A_4&quot;</span>, <span class="string">&quot;newInsert&quot;</span>)</span><br><span class="line"></span><br><span class="line">trans(node)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Node <span class="keyword">struct</span> &#123;</span><br><span class="line">Name  <span class="keyword">string</span></span><br><span class="line">Value <span class="keyword">int</span></span><br><span class="line">next  *Node</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">trans</span><span class="params">(p *Node)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> p != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(*p)</span><br><span class="line">p = p.next</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">appendNodes</span><span class="params">(p *Node)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">5</span>; i++ &#123;</span><br><span class="line">node := &amp;Node&#123;</span><br><span class="line">Name:  fmt.Sprintf(<span class="string">&quot;node_A_%d&quot;</span>, i),</span><br><span class="line">Value: rand.Intn(<span class="number">100</span>),</span><br><span class="line">&#125;</span><br><span class="line">p.next = node</span><br><span class="line">p = node</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 除了要在head前增加元素，还需要去改变链表head的位置，需要用到多重指针</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">insertNodes</span><span class="params">(p **Node)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">5</span>; i++ &#123;</span><br><span class="line">node := &amp;Node&#123;</span><br><span class="line">Name:  fmt.Sprintf(<span class="string">&quot;node_I_%d&quot;</span>, i),</span><br><span class="line">Value: rand.Intn(<span class="number">100</span>),</span><br><span class="line">&#125;</span><br><span class="line">node.next = *p</span><br><span class="line">*p = node</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">delNode</span><span class="params">(p **Node, name <span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line">node := *p</span><br><span class="line"></span><br><span class="line"><span class="comment">// 第一个就是要删除的元素</span></span><br><span class="line"><span class="keyword">if</span> node.Name == name &#123;</span><br><span class="line">*p = node.next</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">prev := node</span><br><span class="line">node = node.next</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> node != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">if</span> node.Name == name &#123;</span><br><span class="line">prev.next = node.next</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">prev = node</span><br><span class="line">node = node.next</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">appendNode</span><span class="params">(p *Node, name, newName <span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> p != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">if</span> p.Name == name &#123;</span><br><span class="line">newNode := &amp;Node&#123;</span><br><span class="line">Name:  newName,</span><br><span class="line">Value: rand.Intn(<span class="number">100</span>),</span><br><span class="line">next:  p.next,</span><br><span class="line">&#125;</span><br><span class="line">p.next = newNode</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">p = p.next</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">insertNode</span><span class="params">(p **Node, name, newName <span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line">node := *p</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在第一个元素前增加</span></span><br><span class="line"><span class="keyword">if</span> node.Name == name &#123;</span><br><span class="line">newNode := &amp;Node&#123;</span><br><span class="line">Name:  newName,</span><br><span class="line">Value: rand.Intn(<span class="number">100</span>),</span><br><span class="line">next:  node,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 改变链表头</span></span><br><span class="line">*p = newNode</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">prev := node</span><br><span class="line">node = node.next</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> node != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">if</span> node.Name == name &#123;</span><br><span class="line">newNode := &amp;Node&#123;</span><br><span class="line">Name:  newName,</span><br><span class="line">Value: rand.Intn(<span class="number">100</span>),</span><br><span class="line">next:  node,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 与前一个链接起来</span></span><br><span class="line">prev.next = newNode</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">prev = node</span><br><span class="line">node = node.next</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-8-结构体内存结构"><a href="#1-8-结构体内存结构" class="headerlink" title="1.8 结构体内存结构"></a>1.8 结构体内存结构</h2><p>不管结构体包含多少字段，其内存总是一次性分配的，各字段在相邻的地址空间按定义顺序排列。当然，对于引用类型、字符串和指针，结构内存中只包含其基本（头部）数据。还有，所有匿名字段成员也被包含在内。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> point <span class="keyword">struct</span> &#123;</span><br><span class="line">x, y <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> node <span class="keyword">struct</span> &#123;</span><br><span class="line">id   <span class="keyword">int</span></span><br><span class="line">name <span class="keyword">string</span></span><br><span class="line">data []<span class="keyword">byte</span></span><br><span class="line">next *node</span><br><span class="line">point</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">v := node&#123;</span><br><span class="line">id:    <span class="number">1</span>,</span><br><span class="line">name:  <span class="string">&quot;yes&quot;</span>,</span><br><span class="line">data:  []<span class="keyword">byte</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;,</span><br><span class="line">point: point&#123;x: <span class="number">100</span>, y: <span class="number">200</span>&#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">format := <span class="string">`</span></span><br><span class="line"><span class="string">v: %p ~ %x, size %d, align: %d</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">field address                offset   size</span></span><br><span class="line"><span class="string">-------+--------------------+--------+-----</span></span><br><span class="line"><span class="string">id      %p          %d        %d</span></span><br><span class="line"><span class="string">name    %p          %d        %d</span></span><br><span class="line"><span class="string">data    %p          %d        %d</span></span><br><span class="line"><span class="string">next    %p          %d        %d</span></span><br><span class="line"><span class="string">x       %p          %d        %d</span></span><br><span class="line"><span class="string">y       %p          %d        %d</span></span><br><span class="line"><span class="string">`</span></span><br><span class="line"></span><br><span class="line">fmt.Printf(format,</span><br><span class="line">&amp;v, <span class="keyword">uintptr</span>(unsafe.Pointer(&amp;v))+unsafe.Sizeof(v), unsafe.Sizeof(v), unsafe.Alignof(v),</span><br><span class="line">&amp;v.id, unsafe.Offsetof(v.id), unsafe.Sizeof(v.id),</span><br><span class="line">&amp;v.name, unsafe.Offsetof(v.name), unsafe.Sizeof(v.name),</span><br><span class="line">&amp;v.data, unsafe.Offsetof(v.data), unsafe.Sizeof(v.data),</span><br><span class="line">&amp;v.next, unsafe.Offsetof(v.next), unsafe.Sizeof(v.next),</span><br><span class="line">&amp;v.x, unsafe.Offsetof(v.x), unsafe.Sizeof(v.x),</span><br><span class="line">&amp;v.y, unsafe.Offsetof(v.y), unsafe.Sizeof(v.y))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">v: 0xc000084000 ~ c000084048, size 72, align: 8</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">field address                offset   size</span></span><br><span class="line"><span class="comment">-------+--------------------+--------+-----</span></span><br><span class="line"><span class="comment">id      0xc000084000          0        8</span></span><br><span class="line"><span class="comment">name    0xc000084008          8        16</span></span><br><span class="line"><span class="comment">data    0xc000084018          24        24</span></span><br><span class="line"><span class="comment">next    0xc000084030          48        8</span></span><br><span class="line"><span class="comment">x       0xc000084038          56        8</span></span><br><span class="line"><span class="comment">y       0xc000084040          64        8</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p><code>unsafe.Sizeof(x)</code>特点总结：</p><ul><li><strong>字符串：始终返回16</strong>。字符串类型对应一个结构体，该结构体有两个域，第一个域是指向该字符串的指针，第二个域是字符串的长度，每个域占8个字节，但是并不包含指针指向的字符串的内容。</li><li><strong>切片: 始终返回24</strong>。if x is a slice, Sizeof returns the size of the slice descriptor, not the size of the memory referenced by the slice.</li><li><strong>数组: Sizeof(x[0]) * len(x)</strong></li></ul><h2 id="1-9-结构体字段对齐"><a href="#1-9-结构体字段对齐" class="headerlink" title="1.9 结构体字段对齐"></a>1.9 结构体字段对齐</h2><p><strong>在分配内存时，字段须做对齐处理，通常以所有字段中最长的基础类型宽度为标准</strong></p><p><code>unsafe.Alignof(x)</code>: 获取对齐宽度，以最长的基础类型宽度作为对齐标准。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">v1 := <span class="keyword">struct</span> &#123;</span><br><span class="line">a <span class="keyword">byte</span></span><br><span class="line">b <span class="keyword">byte</span></span><br><span class="line">c <span class="keyword">int32</span>   <span class="comment">// 对齐宽度4</span></span><br><span class="line">&#125;&#123;&#125;</span><br><span class="line"></span><br><span class="line">v2 := <span class="keyword">struct</span> &#123;</span><br><span class="line">a <span class="keyword">byte</span></span><br><span class="line">b <span class="keyword">byte</span>    <span class="comment">// 对齐宽度1</span></span><br><span class="line">&#125;&#123;&#125;</span><br><span class="line"></span><br><span class="line">v3 := <span class="keyword">struct</span> &#123;</span><br><span class="line">a <span class="keyword">byte</span></span><br><span class="line">b []<span class="keyword">int</span>   <span class="comment">// 基础类型int，对齐宽度8</span></span><br><span class="line">c <span class="keyword">int32</span></span><br><span class="line">&#125;&#123;&#125;</span><br><span class="line"></span><br><span class="line">fmt.Printf(<span class="string">&quot;v1: %d, %d\n&quot;</span>, unsafe.Alignof(v1), unsafe.Sizeof(v1))  <span class="comment">// 4, 8</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;v2: %d, %d\n&quot;</span>, unsafe.Alignof(v2), unsafe.Sizeof(v2))  <span class="comment">// 1, 2</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;v3: %d, %d\n&quot;</span>, unsafe.Alignof(v3), unsafe.Sizeof(v3))  <span class="comment">// 8, 40</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-10-类型对齐长度"><a href="#1-10-类型对齐长度" class="headerlink" title="1.10 类型对齐长度"></a>1.10 类型对齐长度</h2><table><thead><tr><th>类型</th><th>对齐长度</th></tr></thead><tbody><tr><td>bool</td><td>1</td></tr><tr><td>int8/byte</td><td>1</td></tr><tr><td>int32</td><td>4</td></tr><tr><td>int64</td><td>8</td></tr><tr><td>string</td><td>8</td></tr><tr><td>map</td><td>8</td></tr><tr><td>slice</td><td>8</td></tr></tbody></table><h1 id="2-方法"><a href="#2-方法" class="headerlink" title="2. 方法"></a>2. 方法</h1><p>方法是与对象实例绑定的特殊函数</p><h2 id="2-1-绑定方法"><a href="#2-1-绑定方法" class="headerlink" title="2.1 绑定方法"></a>2.1 绑定方法</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> A <span class="keyword">struct</span> &#123;</span><br><span class="line">Name <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// （a A) receiver</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(a A)</span> <span class="title">Print</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(a.Name)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">a := A&#123;</span><br><span class="line">Name: <span class="string">&quot;tom&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line">a.Print()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-2-为int扩展方法"><a href="#2-2-为int扩展方法" class="headerlink" title="2.2 为int扩展方法"></a>2.2 为int扩展方法</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> TZ <span class="keyword">int</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(a *TZ)</span> <span class="title">Print</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;TZ&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> a TZ</span><br><span class="line"></span><br><span class="line">a.Print()         <span class="comment">// method value</span></span><br><span class="line"></span><br><span class="line">(*TZ).Print(&amp;a)   <span class="comment">// method expression</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-3-结构体重写String-方法"><a href="#2-3-结构体重写String-方法" class="headerlink" title="2.3 结构体重写String()方法"></a>2.3 结构体重写String()方法</h2><p>重新String()方法：(fmt.Println()会自动调用String()方法)</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Student <span class="keyword">struct</span> &#123;</span><br><span class="line">Name <span class="keyword">string</span> <span class="string">`json:&quot;name&quot;`</span></span><br><span class="line">Age  <span class="keyword">byte</span>   <span class="string">`json:&quot;age&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">stu := Student&#123;<span class="string">&quot;Jack&quot;</span>, <span class="number">21</span>&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(&amp;stu) <span class="comment">// 自动调用String()方法</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(stu *Student)</span> <span class="title">String</span><span class="params">()</span> <span class="title">string</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> fmt.Sprintf(<span class="string">&quot;Name=%v, Age=%v&quot;</span>, stu.Name, stu.Age)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-4-方法集"><a href="#2-4-方法集" class="headerlink" title="2.4 方法集"></a>2.4 方法集</h2><p>类型有一个与之相关的方法集（method set），这决定了它是否实现某个接口。</p><ul><li>类型T方法集包含所有receiver T方法。</li><li>类型<em>T方法集包含所有receiver T+</em>T方法。</li><li>匿名嵌入S，T方法集包含所有receiver S方法。</li><li>匿名嵌入<em>S，T方法集包含所有receiver S+</em>S方法。</li><li>匿名嵌入S或<em>S，</em>T方法集包含所有receiver S+*S方法。</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> S <span class="keyword">struct</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> T <span class="keyword">struct</span> &#123;</span><br><span class="line">S</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(S)</span> <span class="title">Hello</span><span class="params">()</span></span> &#123;&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(S)</span> <span class="title">sVal</span><span class="params">()</span></span>  &#123;&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(*S)</span> <span class="title">sPtr</span><span class="params">()</span></span> &#123;&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(T)</span> <span class="title">tVal</span><span class="params">()</span></span>  &#123;&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(*T)</span> <span class="title">tPtr</span><span class="params">()</span></span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">methodSet</span><span class="params">(a <span class="keyword">interface</span>&#123;&#125;)</span></span> &#123;</span><br><span class="line">t := reflect.TypeOf(a)</span><br><span class="line">fmt.Println(t.NumMethod()) <span class="comment">// methods need to export, 只有Hello一个方法可导出</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i, n := <span class="number">0</span>, t.NumMethod(); i &lt; n; i++ &#123;</span><br><span class="line">m := t.Method(i)</span><br><span class="line">fmt.Println(m.Name, m.Type)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> t = T&#123;&#125;</span><br><span class="line"></span><br><span class="line">methodSet(t)</span><br><span class="line"><span class="built_in">println</span>(<span class="string">&quot;------------&quot;</span>)</span><br><span class="line">methodSet(&amp;t)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="3-接口"><a href="#3-接口" class="headerlink" title="3. 接口"></a>3. 接口</h1><p>接口代表一种调用契约，是多个方法声明的集合。</p><p>采用duck type方式</p><p>它把所有具有共性的方法定义在一起，任何其他类型只要实现了这些方法，就实现了该接口。注意，要全部实现！</p><p>接口特性：</p><ul><li>一个或多个方法签名的集合</li><li>只要某类型拥有改接口的所有方法签名，即算实现该接口，无需显示声明实现了那些接口，此称为Structural Typing</li><li>接口中只有方法声明，没有实现</li><li>接口可匿名嵌入其他接口，或嵌入到结构中</li><li>将对象赋值给接口，会发生拷贝，而接口内部存储指向这个复制品的指针，即无法修改复制品的状态，也无法获取指针</li><li>只有当接口存储的类型和对象均为nil时，接口才能有nil</li><li>接口调用不会做receiver的自动转换</li><li>接口同样支持匿名字段方法</li><li>接口也可实现类似OOP中的多态</li><li>空接口可以作为任何类型数据的容器</li></ul><h2 id="3-1-示例1"><a href="#3-1-示例1" class="headerlink" title="3.1 示例1"></a>3.1 示例1</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Animal <span class="keyword">interface</span> &#123;</span><br><span class="line">walk()</span><br><span class="line">eat()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Cat <span class="keyword">struct</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Bird <span class="keyword">struct</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(cat Cat)</span> <span class="title">walk</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;Cat walking with four limbs.&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(cat Cat)</span> <span class="title">eat</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;Cats like to eat fish.&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(bird Bird)</span> <span class="title">walk</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;Bird walkin with two legs.&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(bird Bird)</span> <span class="title">eat</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;Birds like to eat insects.&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> animal Animal</span><br><span class="line"></span><br><span class="line">animal = <span class="built_in">new</span>(Cat)</span><br><span class="line">animal.walk()</span><br><span class="line"></span><br><span class="line">animal = <span class="built_in">new</span>(Bird)</span><br><span class="line">animal.eat()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-2-示例2"><a href="#3-2-示例2" class="headerlink" title="3.2 示例2"></a>3.2 示例2</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> USB <span class="keyword">interface</span> &#123;</span><br><span class="line">Name() <span class="keyword">string</span></span><br><span class="line">Connector</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Connector <span class="keyword">interface</span> &#123;</span><br><span class="line">Connect()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> PhoneConnector <span class="keyword">struct</span> &#123;</span><br><span class="line">name <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(pc PhoneConnector)</span> <span class="title">Name</span><span class="params">()</span> <span class="title">string</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> pc.name</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(pc PhoneConnector)</span> <span class="title">Connect</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;Connected:&quot;</span>, pc.name)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*func Disconnect(usb USB) &#123;</span></span><br><span class="line"><span class="comment">// 类型断言</span></span><br><span class="line"><span class="comment">if pc, ok := usb.(PhoneConnector); ok &#123;</span></span><br><span class="line"><span class="comment">fmt.Println(&quot;Disconnected:&quot;, pc.name)</span></span><br><span class="line"><span class="comment">return</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">fmt.Println(&quot;Unknown device&quot;)</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 万能空接口</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Disconnect</span><span class="params">(usb <span class="keyword">interface</span>&#123;&#125;)</span></span> &#123;</span><br><span class="line"><span class="keyword">switch</span> v := usb.(<span class="keyword">type</span>) &#123;</span><br><span class="line"><span class="keyword">case</span> PhoneConnector:</span><br><span class="line">fmt.Println(<span class="string">&quot;Disconnected:&quot;</span>, v.name)</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">fmt.Println(<span class="string">&quot;Unknown device&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> a USB = PhoneConnector&#123;<span class="string">&quot;PhoneConnector&quot;</span>&#125;</span><br><span class="line">a.Connect()</span><br><span class="line">Disconnect(a)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-3-类型断言"><a href="#3-3-类型断言" class="headerlink" title="3.3 类型断言"></a>3.3 类型断言</h2><p>空接口可接收任意类型，如果要转换为具体类型，需要使用类型断言</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> point Point = Point&#123;<span class="number">1</span>, <span class="number">2</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a <span class="keyword">interface</span>&#123;&#125;</span><br><span class="line">a = point</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> b Point</span><br><span class="line">b = a.(Point) <span class="comment">// 类型断言</span></span><br><span class="line"></span><br><span class="line">fmt.Println(b)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-3-1-类型断言检查"><a href="#3-3-1-类型断言检查" class="headerlink" title="3.3.1 类型断言检查"></a>3.3.1 类型断言检查</h3><p>为避免转换错误直接panic，可先检查转换是否成功</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> a <span class="keyword">interface</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> x <span class="keyword">float32</span> = <span class="number">1.23</span></span><br><span class="line">a = x</span><br><span class="line"></span><br><span class="line">y, ok := a.(<span class="keyword">float32</span>) <span class="comment">// 类型断言</span></span><br><span class="line"><span class="keyword">if</span> ok &#123;</span><br><span class="line">fmt.Println(y)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;转换失败&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-3-2-类型断言switch"><a href="#3-3-2-类型断言switch" class="headerlink" title="3.3.2 类型断言switch"></a>3.3.2 类型断言switch</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TypeJudge</span><span class="params">(items ...<span class="keyword">interface</span>&#123;&#125;)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> index, x := <span class="keyword">range</span> items &#123;</span><br><span class="line"><span class="keyword">switch</span> x.(<span class="keyword">type</span>) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="keyword">bool</span>:</span><br><span class="line">fmt.Printf(<span class="string">&quot;%v: %v is bool\n&quot;</span>, index, x)</span><br><span class="line"><span class="keyword">case</span> <span class="keyword">string</span>:</span><br><span class="line">fmt.Printf(<span class="string">&quot;%v: %v is string\n&quot;</span>, index, x)</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">fmt.Printf(<span class="string">&quot;%v: %v is unknown\n&quot;</span>, index, x)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go 函数和错误处理</title>
      <link href="/2018/01/04/Go%20%E5%87%BD%E6%95%B0%E5%92%8C%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/"/>
      <url>/2018/01/04/Go%20%E5%87%BD%E6%95%B0%E5%92%8C%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="1-函数"><a href="#1-函数" class="headerlink" title="1. 函数"></a>1. 函数</h1><ul><li>不支持嵌套、重载和默认参数</li><li>无需声明原型、不定长度变参、多返回值、命名返回参数、匿名函数、闭包</li><li>本身就是一种类型</li></ul><p><strong>函数调用底层分析：</strong></p><ul><li>栈区：基本数据类型一般分配到栈区。编译器存在一个逃逸分析。每个函数有独立的栈，函数执行完毕，自动销毁</li><li>堆区：引用数据类型一般分配在堆区</li><li>代码区：存放代码指令</li></ul><span id="more"></span><p><code>init()</code>函数：每个源文件，都可以包含一个init函数，该函数会在main函数执行前，被Go运行框架调用。</p><ul><li>执行顺序：全局变量定义 -&gt; init() -&gt; main()</li></ul><h2 id="1-1-参数传递"><a href="#1-1-参数传递" class="headerlink" title="1.1 参数传递"></a>1.1 参数传递</h2><p>不管是指针、引用类型，还是其他类型参数，都是值拷贝传递（pass-by-value)。区别无非是拷贝目标对象，还是拷贝指针对象本身而已。</p><p>在函数调用时，会为形参和返回值分配内存空间，并将实参拷贝到形参的内存。</p><!-- more --><h2 id="1-2-参数过多，改用struct"><a href="#1-2-参数过多，改用struct" class="headerlink" title="1.2 参数过多，改用struct"></a>1.2 参数过多，改用struct</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> serverOption <span class="keyword">struct</span> &#123;</span><br><span class="line">ip       <span class="keyword">string</span></span><br><span class="line">port     <span class="keyword">int</span></span><br><span class="line">path     <span class="keyword">string</span></span><br><span class="line">timeout  time.Duration</span><br><span class="line">log      *log.Logger</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">newOption</span><span class="params">()</span> *<span class="title">serverOption</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> &amp;serverOption&#123;</span><br><span class="line">ip: <span class="string">&quot;0.0.0.0&quot;</span>,</span><br><span class="line">port: <span class="number">8080</span>,</span><br><span class="line">path: <span class="string">&quot;/data/www&quot;</span>,</span><br><span class="line">timeout: time.Second*<span class="number">5</span>,</span><br><span class="line">log: <span class="literal">nil</span>,</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">server</span><span class="params">(option *serverOption)</span></span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">opt := newOption()</span><br><span class="line">opt.port = <span class="number">8080</span></span><br><span class="line"></span><br><span class="line">server(opt)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-3-变参"><a href="#1-3-变参" class="headerlink" title="1.3 变参"></a>1.3 变参</h2><p>变参，实际上传递的是一个slice，如果是array，先转化为slice。<code>s := a[:]...</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">test</span><span class="params">(a ...<span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;%T, %v\n&quot;</span>, a, a)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">test(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line">  </span><br><span class="line">a := [<span class="number">3</span>]<span class="keyword">int</span> &#123;<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>&#125;</span><br><span class="line">test(a[:]...)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="2-匿名函数"><a href="#2-匿名函数" class="headerlink" title="2. 匿名函数"></a>2. 匿名函数</h1><h2 id="2-1-直接执行"><a href="#2-1-直接执行" class="headerlink" title="2.1 直接执行"></a>2.1 直接执行</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s <span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line"><span class="built_in">println</span>(s)</span><br><span class="line">&#125; (<span class="string">&quot;Hello world&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-2-赋值给变量"><a href="#2-2-赋值给变量" class="headerlink" title="2.2 赋值给变量"></a>2.2 赋值给变量</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">add := <span class="function"><span class="keyword">func</span> <span class="params">(x, y <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> x + y</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">println</span>(add(<span class="number">2</span>, <span class="number">3</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-3-作为参数"><a href="#2-3-作为参数" class="headerlink" title="2.3 作为参数"></a>2.3 作为参数</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">test</span><span class="params">(f <span class="keyword">func</span>()</span>)</span> &#123;</span><br><span class="line">f()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">test(<span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="built_in">println</span>(<span class="string">&quot;Hello world&quot;</span>)</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-4-作为返回值"><a href="#2-4-作为返回值" class="headerlink" title="2.4 作为返回值"></a>2.4 作为返回值</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">test</span><span class="params">(x, y <span class="keyword">int</span>)</span> <span class="title">func</span><span class="params">()</span> <span class="title">int</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="function"><span class="keyword">func</span><span class="params">()</span> <span class="title">int</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> x + y</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">add := test(<span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line"><span class="built_in">println</span>(add())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-5-作为结构体字段"><a href="#2-5-作为结构体字段" class="headerlink" title="2.5 作为结构体字段"></a>2.5 作为结构体字段</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">testStruct</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">type</span> calc <span class="keyword">struct</span> &#123;</span><br><span class="line">mul <span class="function"><span class="keyword">func</span><span class="params">(x, y <span class="keyword">int</span>)</span> <span class="title">int</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">z := calc &#123;</span><br><span class="line">mul: <span class="function"><span class="keyword">func</span><span class="params">(x, y <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> x * y</span><br><span class="line">&#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">println</span>(z.mul(<span class="number">2</span>, <span class="number">5</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-6-通过Channel传递"><a href="#2-6-通过Channel传递" class="headerlink" title="2.6 通过Channel传递"></a>2.6 通过Channel传递</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">testChannel</span><span class="params">()</span></span> &#123;</span><br><span class="line">c := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="function"><span class="keyword">func</span><span class="params">(<span class="keyword">int</span>, <span class="keyword">int</span>)</span> <span class="title">int</span>, 2)</span></span><br><span class="line"></span><br><span class="line">c &lt;- <span class="function"><span class="keyword">func</span><span class="params">(a <span class="keyword">int</span>, b <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> a + b</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">println</span>((&lt;- c)(<span class="number">1</span>, <span class="number">2</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="3-闭包（closure）"><a href="#3-闭包（closure）" class="headerlink" title="3. 闭包（closure）"></a>3. 闭包（closure）</h1><p>闭包：一个函数和与其相关的引用变量组成的一个实体</p><ul><li>返回一个匿名函数</li><li>该匿名函数使用了函数外变量</li></ul><h2 id="3-1-示例1"><a href="#3-1-示例1" class="headerlink" title="3.1 示例1"></a>3.1 示例1</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">test</span><span class="params">(x <span class="keyword">int</span>)</span> <span class="title">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="built_in">println</span>(&amp;x)</span><br><span class="line"><span class="keyword">return</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="built_in">println</span>(&amp;x, x)   <span class="comment">// 返回的函数，包含了x环境上下文</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">test(<span class="number">5</span>)()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go build -gcflags <span class="string">&quot;-N -l&quot;</span> main.go</span><br></pre></td></tr></table></figure><h2 id="3-2-示例2"><a href="#3-2-示例2" class="headerlink" title="3.2 示例2"></a>3.2 示例2</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">f := closure(<span class="number">10</span>)</span><br><span class="line">fmt.Println(f(<span class="number">1</span>)) <span class="comment">// 11</span></span><br><span class="line">fmt.Println(f(<span class="number">2</span>)) <span class="comment">// 12</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">closure</span><span class="params">(x <span class="keyword">int</span>)</span> <span class="title">func</span><span class="params">(<span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;%p\n&quot;</span>, &amp;x) <span class="comment">// 0xc0000140b0</span></span><br><span class="line"><span class="keyword">return</span> <span class="function"><span class="keyword">func</span><span class="params">(y <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;%p\n&quot;</span>, &amp;x) <span class="comment">// 0xc0000140b0</span></span><br><span class="line"><span class="keyword">return</span> x + y</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-3-多匿名函数返回，延迟求值问题"><a href="#3-3-多匿名函数返回，延迟求值问题" class="headerlink" title="3.3 多匿名函数返回，延迟求值问题"></a>3.3 多匿名函数返回，延迟求值问题</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">test</span><span class="params">()</span> []<span class="title">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> fs []<span class="function"><span class="keyword">func</span><span class="params">()</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">3</span>; i++ &#123;</span><br><span class="line">fs = <span class="built_in">append</span>(fs, <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="built_in">println</span>(&amp;i, i)    <span class="comment">// 延迟执行特性，最后都输出3</span></span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> fs</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> _, f := <span class="keyword">range</span> test() &#123;</span><br><span class="line">f()</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修正后：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">test</span><span class="params">()</span> []<span class="title">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> fs []<span class="function"><span class="keyword">func</span><span class="params">()</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">3</span>; i++ &#123;</span><br><span class="line">x := i  <span class="comment">// 立即赋值</span></span><br><span class="line">fs = <span class="built_in">append</span>(fs, <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="built_in">println</span>(&amp;x, x)</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> fs</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> _, f := <span class="keyword">range</span> test() &#123;</span><br><span class="line">f()</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="4-递归函数"><a href="#4-递归函数" class="headerlink" title="4. 递归函数"></a>4. 递归函数</h1><h2 id="4-1-阶乘"><a href="#4-1-阶乘" class="headerlink" title="4.1 阶乘"></a>4.1 阶乘</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">factorial</span><span class="params">(n <span class="keyword">uint64</span>)</span> <span class="title">uint64</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> n &gt; <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span> n * factorial(n - <span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> i <span class="keyword">int</span> = <span class="number">15</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;%d 的阶乘等于 %d&quot;</span>, i, factorial(<span class="keyword">uint64</span>(i)))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-2-Fibonacci"><a href="#4-2-Fibonacci" class="headerlink" title="4.2 Fibonacci"></a>4.2 Fibonacci</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">fibonacci</span><span class="params">(n <span class="keyword">uint64</span>)</span> <span class="title">uint64</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> n &lt; <span class="number">2</span> &#123;</span><br><span class="line"><span class="keyword">return</span> n</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> fibonacci(n<span class="number">-2</span>) + fibonacci(n<span class="number">-1</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;%d &quot;</span>, fibonacci(<span class="keyword">uint64</span>(i)))</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="5-延迟调用（defer"><a href="#5-延迟调用（defer" class="headerlink" title="5. 延迟调用（defer)"></a>5. 延迟调用（defer)</h1><ul><li>FILO 先进后出</li><li>即使函数发生panic错误，也会执行</li><li>支持匿名函数调用</li><li>用于资源清理、文件关闭、解锁以及记录时间等操作</li><li>与匿名函数配合，可在return后修改函数的计算结果</li></ul><h2 id="5-1-示例1"><a href="#5-1-示例1" class="headerlink" title="5.1 示例1"></a>5.1 示例1</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">3</span>; i++ &#123;</span><br><span class="line"><span class="keyword">defer</span> fmt.Println(i)   <span class="comment">// 2 1 0</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">3</span>; i++ &#123;</span><br><span class="line"><span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(i)     <span class="comment">// 3 3 3</span></span><br><span class="line">&#125;()</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-2-循环中使用延迟调用"><a href="#5-2-循环中使用延迟调用" class="headerlink" title="5.2 循环中使用延迟调用"></a>5.2 循环中使用延迟调用</h2><p>延迟调用在函数结束时调用，如果将其放到循环中，会造成资源浪费</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++ &#123;</span><br><span class="line">path := fmt.Sprintf(<span class="string">&quot;./log/%d.txt&quot;</span>, i)</span><br><span class="line"></span><br><span class="line">f, err := os.Open(path)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Println(err)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">defer</span> f.Close()</span><br><span class="line"></span><br><span class="line"><span class="comment">// do something</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>优化：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">do := <span class="function"><span class="keyword">func</span><span class="params">(i <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">path := fmt.Sprintf(<span class="string">&quot;./log/%d.txt&quot;</span>, i)</span><br><span class="line"></span><br><span class="line">f, err := os.Open(path)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Println(err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">defer</span> f.Close()</span><br><span class="line"></span><br><span class="line"><span class="comment">// do something</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++ &#123;</span><br><span class="line">do(i)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-3-延迟调用闭包"><a href="#5-3-延迟调用闭包" class="headerlink" title="5.3 延迟调用闭包"></a>5.3 延迟调用闭包</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> fs  = [<span class="number">4</span>]<span class="function"><span class="keyword">func</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">4</span>; i++ &#123;</span><br><span class="line"><span class="keyword">defer</span> fmt.Println(<span class="string">&quot;defer i = &quot;</span>, i)</span><br><span class="line"><span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;defer_closure i = &quot;</span>, i)   <span class="comment">// always 4</span></span><br><span class="line">&#125;()</span><br><span class="line">    <span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">(i <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;defer_closure i = &quot;</span>, i)   <span class="comment">// i will change</span></span><br><span class="line">&#125;(i)    </span><br><span class="line">fs[i] = <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;closure i = &quot;</span>, i)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, f := <span class="keyword">range</span> fs &#123;</span><br><span class="line">f()</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-4-延迟调用性能"><a href="#5-4-延迟调用性能" class="headerlink" title="5.4 延迟调用性能"></a>5.4 延迟调用性能</h2><p>相比直接用CALL汇编指令调用函数，延迟调用则须花费更大代价。这其中包括注册、调用等操作，还有额外的缓存开销。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> m sync.Mutex</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">call</span><span class="params">()</span></span> &#123;</span><br><span class="line">m.Lock()</span><br><span class="line">m.Unlock()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">deferCall</span><span class="params">()</span></span> &#123;</span><br><span class="line">m.Lock()</span><br><span class="line"><span class="keyword">defer</span> m.Unlock()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">BenchmarkCall</span><span class="params">(b *testing.B)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; b.N; i++ &#123;</span><br><span class="line">call()</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">BenchmarkDeferCall</span><span class="params">(b *testing.B)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; b.N; i++ &#123;</span><br><span class="line">deferCall()</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-5-for-range与闭包的坑"><a href="#5-5-for-range与闭包的坑" class="headerlink" title="5.5 for range与闭包的坑"></a>5.5 <code>for range</code>与闭包的坑</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">s := []<span class="keyword">string</span>&#123;<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, v := <span class="keyword">range</span> s &#123;</span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(v) <span class="comment">// 三次全部打印&quot;c&quot;</span></span><br><span class="line">&#125;()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> &#123;&#125; <span class="comment">// 使main一直等待直到deadlock异常</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="6-错误处理"><a href="#6-错误处理" class="headerlink" title="6. 错误处理"></a>6. 错误处理</h1><p>标准库错误接口:</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> error <span class="keyword">interface</span> &#123;</span><br><span class="line">  Error() <span class="keyword">string</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-1-panic-amp-recover"><a href="#6-1-panic-amp-recover" class="headerlink" title="6.1 panic &amp; recover"></a>6.1 panic &amp; recover</h2><ul><li>panic: 主动抛出错误</li><li>recover: 捕获panic抛出的错误</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">panic</span><span class="params">(v <span class="keyword">interface</span>&#123;&#125;)</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">recover</span><span class="params">()</span> <span class="title">interface</span></span>&#123;&#125;</span><br></pre></td></tr></table></figure><p>panic和recover运行机制：</p><p>1) 引发panic有两种情况：一是程序主动调用，二是程序产生运行时错误(Runtime Error)，由运行时检测并退出</p><p>2) 发生panic后，程序会从调用panic的函数位置或发生panic的地方立即返回，逐层执行函数的的defer语句，然后逐层打印函数调用堆栈，直到recover捕获或运行到最外层函数</p><p>3) panic不但可以在函数正常流程中抛出，在defer逻辑里也可以再次调用panic或抛出panic。defer里面的panic能够被后续执行的defer捕获</p><p>4) recover用来捕获panic，阻止panic继续向上传递。recover()和defer一起使用，但是defer只有在后面的函数体内直接被调用才能捕获panic来终止，否则返回nil，异常继续向外传递。</p><p>注意：除非是不可恢复性、导致系统无法正常工作的错误，否则不建议使用panic。如：文件系统没操作权限、服务端口被占用、数据库未启动等</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">result := div(<span class="number">8</span>, <span class="number">0</span>)</span><br><span class="line">fmt.Println(result)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">div</span><span class="params">(a <span class="keyword">int</span>, b <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line"><span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">err := <span class="built_in">recover</span>()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> a / b</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-2-主动panic并捕获"><a href="#6-2-主动panic并捕获" class="headerlink" title="6.2 主动panic并捕获"></a>6.2 主动panic并捕获</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  <span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">if</span> err := <span class="built_in">recover</span>(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">      log.Fatalln(err)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;()</span><br><span class="line">  </span><br><span class="line">  <span class="built_in">panic</span>(<span class="string">&quot;crash&quot;</span>)</span><br><span class="line">  <span class="built_in">println</span>(<span class="string">&quot;exit.&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-3-无效捕获和有效捕获错误"><a href="#6-3-无效捕获和有效捕获错误" class="headerlink" title="6.3 无效捕获和有效捕获错误"></a>6.3 无效捕获和有效捕获错误</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 无效的捕获</span></span><br><span class="line"><span class="keyword">defer</span> <span class="built_in">recover</span>()</span><br><span class="line"><span class="keyword">defer</span> fmt.Println(<span class="built_in">recover</span>())</span><br><span class="line"><span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="built_in">recover</span>()  <span class="comment">// 嵌套多层，无效</span></span><br><span class="line">&#125;()</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 有效的捕获</span></span><br><span class="line"><span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="built_in">recover</span>()</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">except</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="built_in">recover</span>()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">test</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">defer</span> except()</span><br><span class="line"><span class="built_in">panic</span>(<span class="string">&quot;runtime error&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-4-多个panic，只会捕获最后一个"><a href="#6-4-多个panic，只会捕获最后一个" class="headerlink" title="6.4 多个panic，只会捕获最后一个"></a>6.4 多个panic，只会捕获最后一个</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> err := <span class="built_in">recover</span>(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)  <span class="comment">// three 只会捕获最后一个</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line"><span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(<span class="string">&quot;three&quot;</span>)</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line"><span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(<span class="string">&quot;two&quot;</span>)</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line"><span class="built_in">panic</span>(<span class="string">&quot;one&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="7-自定义错误"><a href="#7-自定义错误" class="headerlink" title="7. 自定义错误"></a>7. 自定义错误</h1><ul><li><code>errors.New(&quot;错误描述&quot;)</code>：返回一个error类型的值，表示一个错误</li><li><code>panic</code>内置函数：接收一个interface{}类型的值(即任意值)作为参数，可以接受error类型的变量，输出错误信息，并退出程序。</li></ul><h2 id="7-1-负数平方根"><a href="#7-1-负数平方根" class="headerlink" title="7.1 负数平方根"></a>7.1 负数平方根</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Sqrt</span><span class="params">(x <span class="keyword">float64</span>)</span> <span class="params">(<span class="keyword">float64</span>, error)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> x &lt; <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>, errors.New(<span class="string">&quot;math: square root of negative number&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> math.Sqrt(x), <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">result, err := Sqrt(<span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fmt.Println(result)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go 引用数据类型</title>
      <link href="/2018/01/03/Go%20%E5%BC%95%E7%94%A8%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
      <url>/2018/01/03/Go%20%E5%BC%95%E7%94%A8%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="1-指针"><a href="#1-指针" class="headerlink" title="1. 指针"></a>1. 指针</h1><p>指针不是内存地址。</p><p>内存地址是内存中每个字节单元的唯一编号，而指针则是一个实体。</p><p>指针会分配内存空间，相当于一个专门用来保存地址的整型变量。</p><p>GO指针，不支持加减运算和类型转换</p><p>可通过unsafe.Pointer将指针转换为uintptr后进行加减法运算，但可能会造成非法访问。</p><p>Pointer类似C语言中的void*万能指针，可用来转换指针类型。它能安全持有对象或对象成员，但uintptr不行。后者仅是一种特殊整型，并不引用目标对象，无法阻止垃圾回收器回收对象内存。</p><span id="more"></span><h2 id="1-1-引用传递"><a href="#1-1-引用传递" class="headerlink" title="1.1 引用传递"></a>1.1 引用传递</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> MAX <span class="keyword">int</span> = <span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> a <span class="keyword">int</span> = <span class="number">10</span></span><br><span class="line"><span class="keyword">var</span> b <span class="keyword">int</span> = <span class="number">20</span></span><br><span class="line"></span><br><span class="line">fmt.Println(a, b)</span><br><span class="line"></span><br><span class="line">swap(&amp;a, &amp;b)</span><br><span class="line"></span><br><span class="line">fmt.Println(a, b)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">swap</span><span class="params">(x *<span class="keyword">int</span>, y *<span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> temp <span class="keyword">int</span></span><br><span class="line">temp = *x</span><br><span class="line">*x = *y</span><br><span class="line">*y = temp</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-2-指针类型"><a href="#1-2-指针类型" class="headerlink" title="1.2 指针类型"></a>1.2 指针类型</h2><h3 id="1-2-1-三种指针："><a href="#1-2-1-三种指针：" class="headerlink" title="1.2.1 三种指针："></a>1.2.1 三种指针：</h3><ul><li><p><code>*T</code>：普通指针，用于传递地址，不能进行指针运算</p></li><li><p><code>unsafe.Pointor</code>: 通用指针类型。用于转换不同类型的指针，不能进行指针运算</p></li><li><p><code>uintptr</code>: 用于指针运算。GC不把<code>uintptr</code>当指针，<code>uintptr</code>无法持有对象。<code>uintptr</code>类型的目标会被回收</p></li></ul><h3 id="1-2-2-unsafe-Pointer-作用"><a href="#1-2-2-unsafe-Pointer-作用" class="headerlink" title="1.2.2 unsafe.Pointer 作用"></a>1.2.2 unsafe.Pointer 作用</h3><ul><li>unsafe.Pointer 可以和 普通指针 进行互相转换</li><li>unsafe.Pointer 可以和 uintptr 进行相互转换</li><li>unsafe.Pointer 是桥梁，可以让任意类型的指针实现相互转换，也可以将任意类型的指针转换为uintptr进行指针运算</li></ul><h1 id="2-切片-Slice"><a href="#2-切片-Slice" class="headerlink" title="2. 切片 (Slice)"></a>2. 切片 (Slice)</h1><p>切片是对数组的抽象。数组长度固定，而切片长度不固定，可追加元素，被称为动态数组。</p><ul><li>不是数组，但指向底层的数组</li><li>可现实变长数组</li><li>为引用类型</li><li>可直接创建(make)或从底层数组获取生成</li><li><code>len()</code>获取元素个数，<code>cap()</code>获取容量</li><li>不支持比较操作(==, &gt;, &lt;)</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> slice <span class="keyword">struct</span> &#123;</span><br><span class="line">  array unsafe.Pointer</span><br><span class="line">  <span class="built_in">len</span> <span class="keyword">int</span></span><br><span class="line">  <span class="built_in">cap</span> <span class="keyword">int</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-1-创建切片"><a href="#2-1-创建切片" class="headerlink" title="2.1 创建切片"></a>2.1 创建切片</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">s1 := <span class="built_in">make</span>([]<span class="keyword">int</span>, <span class="number">3</span>, <span class="number">5</span>)</span><br><span class="line">s2 := <span class="built_in">make</span>([]<span class="keyword">int</span>, <span class="number">3</span>)</span><br><span class="line">s3 := []<span class="keyword">int</span>&#123;<span class="number">10</span>, <span class="number">20</span>, <span class="number">3</span>: <span class="number">30</span>&#125;</span><br><span class="line"></span><br><span class="line">arr := [...]<span class="keyword">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;</span><br><span class="line">s4 := arr[:]</span><br><span class="line">s5 := arr[<span class="number">2</span>:<span class="number">4</span>]  <span class="comment">// cap=len(arr)-2</span></span><br><span class="line"></span><br><span class="line">fmt.Println(s1, <span class="built_in">len</span>(s1), <span class="built_in">cap</span>(s1)) <span class="comment">// [0, 0, 0] 3 5</span></span><br><span class="line">fmt.Println(s2, <span class="built_in">len</span>(s2), <span class="built_in">cap</span>(s2)) <span class="comment">// [0, 0, 0] 3 3</span></span><br><span class="line">fmt.Println(s3, <span class="built_in">len</span>(s3), <span class="built_in">cap</span>(s3)) <span class="comment">// [10, 20, 0, 30] 4 4</span></span><br><span class="line">fmt.Println(s4, <span class="built_in">len</span>(s4), <span class="built_in">cap</span>(s4)) <span class="comment">// [1, 2, 3, 4, 5] 5, 5</span></span><br><span class="line">fmt.Println(s5, <span class="built_in">len</span>(s5), <span class="built_in">cap</span>(s5)) <span class="comment">// [3, 4] 2 3</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-2-空切片"><a href="#2-2-空切片" class="headerlink" title="2.2 空切片"></a>2.2 空切片</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> s1 []<span class="keyword">int</span></span><br><span class="line">s2 := []<span class="keyword">int</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(s1==<span class="literal">nil</span>, s2==<span class="literal">nil</span>)  <span class="comment">// true false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// &amp;reflect.SliceHeader&#123;Data:0x0, Len:0, Cap:0&#125;</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;a: %#v\n&quot;</span>, (*reflect.SliceHeader)(unsafe.Pointer(&amp;s1)))</span><br><span class="line"></span><br><span class="line"><span class="comment">// &amp;reflect.SliceHeader&#123;Data:0x118efd0, Len:0, Cap:0&#125;</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;b: %#v\n&quot;</span>, (*reflect.SliceHeader)(unsafe.Pointer(&amp;s2)))</span><br><span class="line"></span><br><span class="line">fmt.Printf(<span class="string">&quot;Size of a: %d\n&quot;</span>, unsafe.Sizeof(s1))  <span class="comment">// 24</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;Size of a: %d\n&quot;</span>, unsafe.Sizeof(s2))  <span class="comment">// 24</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-3-复制数据"><a href="#2-3-复制数据" class="headerlink" title="2.3 复制数据"></a>2.3 复制数据</h2><p>允许指向同一底层数组，允许目标区间重叠。最终所复制长度以较短的切片长度（len）为准</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">s1 := []<span class="keyword">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>&#125;</span><br><span class="line">s2 := []<span class="keyword">int</span>&#123;<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">copy</span>(s1, s2)    <span class="comment">// dst, src</span></span><br><span class="line">fmt.Println(s1) <span class="comment">// [7, 8, 9, 4, 5, 6]</span></span><br><span class="line">fmt.Println(s2) <span class="comment">// [7, 8, 9]</span></span><br><span class="line"></span><br><span class="line">s3 := []<span class="keyword">byte</span>&#123;<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>&#125;</span><br><span class="line">s4 := []<span class="keyword">byte</span>&#123;<span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;f&#x27;</span>, <span class="string">&#x27;g&#x27;</span>, <span class="string">&#x27;h&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">copy</span>(s3, s4)</span><br><span class="line">fmt.Println(s3) <span class="comment">// [&#x27;d&#x27;, &#x27;e&#x27;, &#x27;f&#x27;]</span></span><br><span class="line">fmt.Println(s4) <span class="comment">// [&#x27;d&#x27;, &#x27;e&#x27;, &#x27;f&#x27;, &#x27;g&#x27;, &#x27;h&#x27;]</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-4-扩容数据"><a href="#2-4-扩容数据" class="headerlink" title="2.4 扩容数据"></a>2.4 扩容数据</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">s1 := <span class="built_in">make</span>([]<span class="keyword">int</span>, <span class="number">3</span>, <span class="number">6</span>)</span><br><span class="line">fmt.Printf(<span class="string">&quot;%v %p\n&quot;</span>, s1, s1)</span><br><span class="line">fmt.Println(<span class="built_in">len</span>(s1), <span class="built_in">cap</span>(s1))         <span class="comment">// 3, 6</span></span><br><span class="line"></span><br><span class="line">s1 = <span class="built_in">append</span>(s1, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">fmt.Printf(<span class="string">&quot;%v %p\n&quot;</span>, s1, s1)  <span class="comment">// 元素个数小于等于cap，地址未发生改变</span></span><br><span class="line">fmt.Println(<span class="built_in">len</span>(s1), <span class="built_in">cap</span>(s1))         <span class="comment">// 6, 6</span></span><br><span class="line"></span><br><span class="line">s1 = <span class="built_in">append</span>(s1, <span class="number">4</span>)</span><br><span class="line">fmt.Printf(<span class="string">&quot;%v %p\n&quot;</span>, s1, s1)  <span class="comment">// 元素个数大于原始cap，重新分配内存(底层数组重构)，地址发生改变</span></span><br><span class="line">fmt.Println(<span class="built_in">len</span>(s1), <span class="built_in">cap</span>(s1))         <span class="comment">// 7, 12</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Slice坑</strong>：slice虽然是引用，但可能被重新分配内存</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">foo</span><span class="params">(s []<span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">s = <span class="built_in">append</span>(s, <span class="number">1</span>) <span class="comment">// 增加的元素个数大于cap-len, 重新分配内存地址</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">s := <span class="built_in">make</span>([]<span class="keyword">int</span>, <span class="number">0</span>)</span><br><span class="line">fmt.Println(s)</span><br><span class="line"></span><br><span class="line">foo(s)</span><br><span class="line">fmt.Println(s) <span class="comment">// []</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="3-集合-map"><a href="#3-集合-map" class="headerlink" title="3. 集合 (map)"></a>3. 集合 (map)</h1><p><code>make([keyType]valueType, cap)</code></p><h2 id="3-1-基本操作"><a href="#3-1-基本操作" class="headerlink" title="3.1 基本操作"></a>3.1 基本操作</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">m := <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">int</span> &#123;</span><br><span class="line"><span class="string">&quot;a&quot;</span>: <span class="number">1</span>,</span><br><span class="line"><span class="string">&quot;b&quot;</span>: <span class="number">2</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">m[<span class="string">&quot;a&quot;</span>] = <span class="number">5</span></span><br><span class="line">m[<span class="string">&quot;c&quot;</span>] = <span class="number">8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> v, ok := m[<span class="string">&quot;d&quot;</span>]; ok &#123;</span><br><span class="line"><span class="built_in">println</span>(v)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">delete</span>(m, <span class="string">&quot;d&quot;</span>)</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">for</span> k, v := <span class="keyword">range</span> m &#123;</span><br><span class="line">    <span class="built_in">println</span>(k, <span class="string">&quot;:&quot;</span>, v, <span class="string">&quot;  &quot;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-2-多层map嵌套"><a href="#3-2-多层map嵌套" class="headerlink" title="3.2 多层map嵌套"></a>3.2 多层map嵌套</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">m := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">int</span>]<span class="keyword">map</span>[<span class="keyword">int</span>]<span class="keyword">string</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// initialize sub-map</span></span><br><span class="line">m[<span class="number">1</span>] = <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">int</span>]<span class="keyword">string</span>)</span><br><span class="line">m[<span class="number">1</span>][<span class="number">1</span>] = <span class="string">&quot;OK&quot;</span></span><br><span class="line"></span><br><span class="line">fmt.Println(m)</span><br><span class="line"></span><br><span class="line">a, ok := m[<span class="number">2</span>][<span class="number">1</span>]   <span class="comment">// test if sub-map is initialized</span></span><br><span class="line">fmt.Println(a, ok)</span><br><span class="line"><span class="keyword">if</span> !ok &#123;</span><br><span class="line">m[<span class="number">2</span>] = <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">int</span>]<span class="keyword">string</span>)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(m)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-3-不支持修改成员值-struct或array"><a href="#3-3-不支持修改成员值-struct或array" class="headerlink" title="3.3 不支持修改成员值(struct或array)"></a>3.3 不支持修改成员值(struct或array)</h2><p>字典被设计成“not addressable”，故不能直接修改value成员（结构或数组）</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">m := <span class="keyword">map</span>[<span class="keyword">int</span>]user&#123;</span><br><span class="line"><span class="number">1</span>: user&#123;<span class="string">&quot;Jack&quot;</span>, <span class="number">23</span>&#125;,</span><br><span class="line"><span class="number">2</span>: user&#123;<span class="string">&quot;Tom&quot;</span>, <span class="number">22</span>&#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//m[1].age++  // cannot assign to struct field in a map</span></span><br><span class="line"></span><br><span class="line">jack := m[<span class="number">1</span>]</span><br><span class="line">jack.age++</span><br><span class="line">m[<span class="number">1</span>] = jack <span class="comment">// 必须重新赋值</span></span><br><span class="line">fmt.Println(m)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 指针方式</span></span><br><span class="line">m2 := <span class="keyword">map</span>[<span class="keyword">int</span>]*user&#123;</span><br><span class="line"><span class="number">1</span>: &amp;user&#123;<span class="string">&quot;Jack&quot;</span>, <span class="number">23</span>&#125;,</span><br><span class="line"><span class="number">2</span>: &amp;user&#123;<span class="string">&quot;Tom&quot;</span>, <span class="number">22</span>&#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">m2[<span class="number">1</span>].age++</span><br><span class="line">fmt.Println(m2[<span class="number">1</span>])</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> user <span class="keyword">struct</span> &#123;</span><br><span class="line">name <span class="keyword">string</span></span><br><span class="line">age  <span class="keyword">int</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">m := <span class="keyword">map</span>[<span class="keyword">string</span>][<span class="number">2</span>]<span class="keyword">int</span> &#123;</span><br><span class="line"><span class="string">&quot;a&quot;</span>: &#123;<span class="number">1</span>, <span class="number">2</span>&#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//s := m[&quot;a&quot;][:]  // 数组必须addressable，否则会引发错误。</span></span><br><span class="line"></span><br><span class="line">a := m[<span class="string">&quot;a&quot;</span>]</span><br><span class="line">fmt.Printf(<span class="string">&quot;%p, %v\n&quot;</span>, &amp;a, a)</span><br><span class="line"></span><br><span class="line">s := a[:]</span><br><span class="line">fmt.Printf(<span class="string">&quot;%p, %v\n&quot;</span>, &amp;s, s)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-4-map间接排序"><a href="#3-4-map间接排序" class="headerlink" title="3.4 map间接排序"></a>3.4 map间接排序</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">m := <span class="keyword">map</span>[<span class="keyword">int</span>]<span class="keyword">string</span>&#123;<span class="number">2</span>: <span class="string">&quot;b&quot;</span>, <span class="number">5</span>: <span class="string">&quot;e&quot;</span>, <span class="number">1</span>: <span class="string">&quot;a&quot;</span>, <span class="number">3</span>: <span class="string">&quot;c&quot;</span>, <span class="number">4</span>: <span class="string">&quot;d&quot;</span>&#125;</span><br><span class="line">s := <span class="built_in">make</span>([]<span class="keyword">int</span>, <span class="built_in">len</span>(m))</span><br><span class="line"></span><br><span class="line">i := <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> k, _ := <span class="keyword">range</span> m &#123;</span><br><span class="line">s[i] = k</span><br><span class="line">i++</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(s)</span><br><span class="line"></span><br><span class="line">sort.Ints(s)    <span class="comment">// 索引排序</span></span><br><span class="line">fmt.Println(s)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, v := <span class="keyword">range</span> s &#123;</span><br><span class="line">fmt.Println(m[v])</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-5-并发读写字典"><a href="#3-5-并发读写字典" class="headerlink" title="3.5 并发读写字典"></a>3.5 并发读写字典</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> lock sync.RWMutex</span><br><span class="line">m := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">int</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">lock.Lock()</span><br><span class="line">m[<span class="string">&quot;a&quot;</span>] += <span class="number">1</span></span><br><span class="line">lock.Unlock()</span><br><span class="line"></span><br><span class="line">time.Sleep(time.Microsecond)</span><br><span class="line">&#125;</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">lock.RLock()</span><br><span class="line">_ = m[<span class="string">&quot;b&quot;</span>]</span><br><span class="line">lock.RUnlock()</span><br><span class="line"></span><br><span class="line">time.Sleep(time.Microsecond)</span><br><span class="line">&#125;</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="4-range"><a href="#4-range" class="headerlink" title="4. range"></a>4. range</h1><p>用于for循环中迭代数组(array)、切片(slice)、通道(channel)或集合(map)的元素。</p><ul><li>slice(i, v)</li><li>map(k, v)</li></ul><h2 id="4-1-示例：遍历map"><a href="#4-1-示例：遍历map" class="headerlink" title="4.1 示例：遍历map"></a>4.1 示例：遍历map</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">sm := <span class="built_in">make</span>([]<span class="keyword">map</span>[<span class="keyword">int</span>]<span class="keyword">string</span>, <span class="number">3</span>)</span><br><span class="line"><span class="keyword">for</span> _, v := <span class="keyword">range</span> sm &#123;</span><br><span class="line">v = <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">int</span>]<span class="keyword">string</span>)  <span class="comment">// range中v的值是一份拷贝，无法修改</span></span><br><span class="line">v[<span class="number">1</span>] = <span class="string">&quot;OK&quot;</span></span><br><span class="line">fmt.Println(v)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(sm)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 可正确修改</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="keyword">range</span> sm &#123;</span><br><span class="line">sm[i] = <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">int</span>]<span class="keyword">string</span>)</span><br><span class="line">sm[i][<span class="number">1</span>] = <span class="string">&quot;OK&quot;</span></span><br><span class="line">fmt.Println(sm[i])</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(sm)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-2-示例：遍历slice"><a href="#4-2-示例：遍历slice" class="headerlink" title="4.2 示例：遍历slice"></a>4.2 示例：遍历slice</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">nums := []<span class="keyword">int</span> &#123;<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;</span><br><span class="line">sum := <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, num := <span class="keyword">range</span> nums &#123;</span><br><span class="line">sum += num</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">&quot;sum:&quot;</span>, sum)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i, num := <span class="keyword">range</span> nums &#123;</span><br><span class="line"><span class="keyword">if</span> num == <span class="number">3</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;index:&quot;</span>, i)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i, c := <span class="keyword">range</span> <span class="string">&quot;go语言&quot;</span> &#123;</span><br><span class="line">fmt.Println(i, c)    <span class="comment">// c, unicode值</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go 基本数据类型</title>
      <link href="/2018/01/02/Go%20%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
      <url>/2018/01/02/Go%20%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="1-数据类型"><a href="#1-数据类型" class="headerlink" title="1. 数据类型"></a>1. 数据类型</h1><h2 id="1-1-Go数据类型"><a href="#1-1-Go数据类型" class="headerlink" title="1.1 Go数据类型"></a>1.1 Go数据类型</h2><table><thead><tr><th>类型</th><th>长度</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>bool</td><td>1</td><td>false</td><td></td></tr><tr><td>byte</td><td>1</td><td>0</td><td>uint8的别名，相互不需要转换</td></tr><tr><td>int, uint</td><td>4, 8</td><td>0</td><td>默认整型，长度依平台而定，32或64</td></tr><tr><td>int8, uint8</td><td>1</td><td>0</td><td>-128 ~ 127, 0 ~ 255</td></tr><tr><td>int16, uint16</td><td>2</td><td>0</td><td></td></tr><tr><td>int32, uint32</td><td>4</td><td>0</td><td></td></tr><tr><td>int64, uint64</td><td>8</td><td>0</td><td></td></tr><tr><td>float32</td><td>4</td><td>0.0</td><td></td></tr><tr><td>float64</td><td>8</td><td>0.0</td><td>默认</td></tr><tr><td>complex64</td><td>8</td><td></td><td></td></tr><tr><td>complex128</td><td>16</td><td></td><td></td></tr><tr><td>rune</td><td>4</td><td>0</td><td>Unicode Code Point, int32的别名</td></tr><tr><td>uintptr</td><td>4, 8</td><td>0</td><td>存储指针的uint</td></tr><tr><td>string</td><td></td><td>“”</td><td>默认值空字符串，而非nil</td></tr><tr><td>array</td><td></td><td></td><td>数组</td></tr><tr><td>struct</td><td></td><td></td><td>结构体</td></tr><tr><td>function</td><td></td><td>nil</td><td></td></tr><tr><td>interface</td><td></td><td>nil</td><td></td></tr><tr><td>map</td><td></td><td>nil</td><td>字典，引用类型</td></tr><tr><td>slice</td><td></td><td>nil</td><td>切片，引用类型</td></tr><tr><td>channel</td><td></td><td>nil</td><td>通道，引用类型                     ｜</td></tr></tbody></table><span id="more"></span><h2 id="1-2-值类型和引用类型"><a href="#1-2-值类型和引用类型" class="headerlink" title="1.2 值类型和引用类型"></a>1.2 值类型和引用类型</h2><ul><li><p>值类型：基本数据类型(int, float, bool, string)、数组(array)和结构体(struct)</p><ul><li>变量直接存储，内存通常在栈中分配  (<strong>栈区：存放生命周期较短的数据</strong>)</li></ul></li><li><p>引用类型：ptr、slice、map、channel、interface</p><ul><li>变量存储的是一个地址，该地址对应的空间才真正存储数据。内存通常在堆上分配。当没有任何变量引用这个地址时，该地址对应的数据空间就成了垃圾，由GC来回收。（<strong>堆区：存放生命周期较长的数据</strong>。一个值类型，一般存储在栈区，但它如果在别的函数也用到，此时有可能放堆区，它要做逃逸分析）</li></ul></li></ul><h1 id="2-基本数据类型"><a href="#2-基本数据类型" class="headerlink" title="2. 基本数据类型"></a>2. 基本数据类型</h1><h2 id="2-1-const常量"><a href="#2-1-const常量" class="headerlink" title="2.1 const常量"></a>2.1 const常量</h2><h3 id="2-1-1-常量特性："><a href="#2-1-1-常量特性：" class="headerlink" title="2.1.1 常量特性："></a>2.1.1 常量特性：</h3><ul><li>readonly</li><li>cannot get address</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> x = <span class="number">0x100</span></span><br><span class="line">y := &amp;x     <span class="comment">// error</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> x = <span class="number">100</span></span><br><span class="line"><span class="keyword">const</span> y <span class="keyword">byte</span> = x     <span class="comment">// ok， 相当于const y byte = 100</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> x <span class="keyword">int</span> = <span class="number">100</span></span><br><span class="line"><span class="keyword">const</span> y <span class="keyword">byte</span> = x     <span class="comment">// error，需强制转换</span></span><br></pre></td></tr></table></figure><h3 id="2-1-2-常量初始化和枚举："><a href="#2-1-2-常量初始化和枚举：" class="headerlink" title="2.1.2 常量初始化和枚举："></a>2.1.2 常量初始化和枚举：</h3><p><code>iota</code>: 常量计数器</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> (</span><br><span class="line">a = <span class="string">&quot;A&quot;</span></span><br><span class="line">b           <span class="comment">// &quot;A&quot;</span></span><br><span class="line">c = <span class="literal">iota</span>    <span class="comment">// 2</span></span><br><span class="line">d           <span class="comment">// 3</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">e = <span class="literal">iota</span>    <span class="comment">// 0</span></span><br><span class="line">f</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">SUN = <span class="literal">iota</span></span><br><span class="line">MON</span><br><span class="line">TUE</span><br><span class="line">WED</span><br><span class="line">THU</span><br><span class="line">FRI</span><br><span class="line">SAT</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">B  <span class="keyword">float64</span> = <span class="number">1</span> &lt;&lt; (<span class="literal">iota</span> * <span class="number">10</span>)</span><br><span class="line">KB</span><br><span class="line">MB</span><br><span class="line">GB</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 需要显示恢复</span></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">a = <span class="literal">iota</span>     <span class="comment">// 0</span></span><br><span class="line">b            <span class="comment">// 1</span></span><br><span class="line">c = <span class="number">100</span>      <span class="comment">// 100</span></span><br><span class="line">d            <span class="comment">// 100</span></span><br><span class="line">e = <span class="literal">iota</span>     <span class="comment">// 4</span></span><br><span class="line">f            <span class="comment">// 5</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="2-2-数值类型"><a href="#2-2-数值类型" class="headerlink" title="2.2 数值类型"></a>2.2 数值类型</h2><h3 id="2-2-1-类型转换"><a href="#2-2-1-类型转换" class="headerlink" title="2.2.1 类型转换"></a>2.2.1 类型转换</h3><p>必须显示转换，不支持像Java一样向上自动转换</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">byte</span>   <span class="comment">// uint8, 处理ASCII字符</span></span><br><span class="line"><span class="keyword">rune</span>   <span class="comment">// int32, 处理Unicode字符，比如中文</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">float64</span>  <span class="comment">// 系统默认类型，明确声明时，也推荐使用</span></span><br></pre></td></tr></table></figure><h3 id="2-2-2-运算符"><a href="#2-2-2-运算符" class="headerlink" title="2.2.2 运算符"></a>2.2.2 运算符</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 除法</span></span><br><span class="line">fmt.Println(<span class="number">10</span> / <span class="number">4</span>)    <span class="comment">// 2</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> n1 <span class="keyword">float32</span> = <span class="number">10</span> / <span class="number">4</span></span><br><span class="line">fmt.Println(n1)        <span class="comment">// 2</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> n2 <span class="keyword">float32</span> = <span class="number">10.0</span> / <span class="number">4</span></span><br><span class="line">fmt.Println(n2)        <span class="comment">// 2.5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 取余 a % b = a - a / b * b</span></span><br><span class="line"><span class="number">10</span> % <span class="number">3</span>     <span class="comment">// 1</span></span><br><span class="line"><span class="number">-10</span> % <span class="number">3</span>    <span class="comment">// -1</span></span><br></pre></td></tr></table></figure><h3 id="2-2-3-两个变量，进行值交换，不允许使用中间变量"><a href="#2-2-3-两个变量，进行值交换，不允许使用中间变量" class="headerlink" title="2.2.3 两个变量，进行值交换，不允许使用中间变量"></a>2.2.3 两个变量，进行值交换，不允许使用中间变量</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a <span class="keyword">int</span> = <span class="number">3</span></span><br><span class="line"><span class="keyword">var</span> b <span class="keyword">int</span> = <span class="number">8</span></span><br><span class="line"></span><br><span class="line">a = a + b</span><br><span class="line">b = a - b  <span class="comment">// b = (a + b) - b = a</span></span><br><span class="line">a = a - b  <span class="comment">// a = (a + b) - a = b</span></span><br></pre></td></tr></table></figure><h3 id="2-2-4-数值进制转换"><a href="#2-2-4-数值进制转换" class="headerlink" title="2.2.4 数值进制转换"></a>2.2.4 数值进制转换</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">a, _ := strconv.ParseInt(<span class="string">&quot;1100100&quot;</span>, <span class="number">2</span>, <span class="number">32</span>)</span><br><span class="line">b, _ := strconv.ParseInt(<span class="string">&quot;0144&quot;</span>, <span class="number">8</span>, <span class="number">32</span>)</span><br><span class="line">c, _ := strconv.ParseInt(<span class="string">&quot;64&quot;</span>, <span class="number">16</span>, <span class="number">64</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">println</span>(<span class="string">&quot;0b&quot;</span> + strconv.FormatInt(a, <span class="number">2</span>))</span><br><span class="line"><span class="built_in">println</span>(<span class="string">&quot;0&quot;</span> + strconv.FormatInt(b, <span class="number">8</span>))</span><br><span class="line"><span class="built_in">println</span>(<span class="string">&quot;0x&quot;</span> + strconv.FormatInt(c, <span class="number">16</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-2-5-数值类型转换"><a href="#2-2-5-数值类型转换" class="headerlink" title="2.2.5 数值类型转换"></a>2.2.5 数值类型转换</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    a, _ := strconv.ParseInt(<span class="string">&quot;10100101&quot;</span>, <span class="number">2</span>, <span class="number">32</span>)</span><br><span class="line">    b, _ := strconv.ParseFloat(<span class="string">&quot;3.1415926&quot;</span>, <span class="number">64</span>)</span><br><span class="line"></span><br><span class="line">    fmt.Printf(<span class="string">&quot;%T, %v\n&quot;</span>, a, a)   <span class="comment">// int64 165</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;%T, %v\n&quot;</span>, b, b)   <span class="comment">// float64 3.1415926</span></span><br><span class="line"></span><br><span class="line">    fmt.Println(<span class="string">&quot;0x&quot;</span> + strconv.FormatInt(a, <span class="number">16</span>))  <span class="comment">// 0xa5</span></span><br><span class="line"></span><br><span class="line">    c := <span class="keyword">string</span>(<span class="number">65</span>)</span><br><span class="line">    fmt.Printf(<span class="string">&quot;%T, %v\n&quot;</span>, c, c)  <span class="comment">// string, A</span></span><br><span class="line"></span><br><span class="line">    d := <span class="keyword">int</span>(c[<span class="number">0</span>])</span><br><span class="line">    fmt.Printf(<span class="string">&quot;%T, %v\n&quot;</span>, d, d)  <span class="comment">// int, 65</span></span><br><span class="line"></span><br><span class="line">    e := strconv.Itoa(<span class="number">65</span>)</span><br><span class="line">    fmt.Printf(<span class="string">&quot;%T, %v\n&quot;</span>, e, e)  <span class="comment">// string, 65</span></span><br><span class="line"></span><br><span class="line">    f, _ := strconv.Atoi(e)</span><br><span class="line">    fmt.Printf(<span class="string">&quot;%T, %v\n&quot;</span>, f, f)   <span class="comment">// int, 65</span></span><br><span class="line"></span><br><span class="line">    g, _ := strconv.ParseBool(<span class="string">&quot;true&quot;</span>)</span><br><span class="line">    fmt.Printf(<span class="string">&quot;%T, %v\n&quot;</span>, g, g)   <span class="comment">// bool, true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-2-6-处理浮点数"><a href="#2-2-6-处理浮点数" class="headerlink" title="2.2.6 处理浮点数"></a>2.2.6 处理浮点数</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> a <span class="keyword">float32</span> = <span class="number">5.1234567890</span></span><br><span class="line"><span class="keyword">var</span> b <span class="keyword">float32</span> = <span class="number">5.12345678</span></span><br><span class="line"><span class="keyword">var</span> c <span class="keyword">float32</span> = <span class="number">5.123456789</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">println</span>(a, b, c)        <span class="comment">// +5.123457e+000 +5.123457e+000 +5.123457e+000</span></span><br><span class="line"><span class="built_in">println</span>(a==b, a==c)     <span class="comment">// true true, 新版本go1.14.2，false, false</span></span><br><span class="line"></span><br><span class="line">fmt.Printf(<span class="string">&quot;%v, %v, %v\n&quot;</span>, a, b, c)  <span class="comment">// 5.123457, 5.123457, 5.123457</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-2-7-浮点数精度问题"><a href="#2-2-7-浮点数精度问题" class="headerlink" title="2.2.7 浮点数精度问题"></a>2.2.7 浮点数精度问题</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">a := <span class="number">0.6</span></span><br><span class="line">a += <span class="number">0.7</span></span><br><span class="line">fmt.Println(a) <span class="comment">// 1.2999999999999998</span></span><br><span class="line"></span><br><span class="line">b := truncate(a)</span><br><span class="line">fmt.Println(b) <span class="comment">// 1.3</span></span><br><span class="line"></span><br><span class="line">c := round(a, <span class="number">8</span>)</span><br><span class="line">fmt.Println(c)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">truncate</span><span class="params">(f <span class="keyword">float64</span>)</span> <span class="title">float64</span></span> &#123;</span><br><span class="line">str := fmt.Sprintf(<span class="string">&quot;%.8f&quot;</span>, f)</span><br><span class="line">fmt.Println(str) <span class="comment">// 1.30000000</span></span><br><span class="line">f, _ = strconv.ParseFloat(str, <span class="number">64</span>)</span><br><span class="line"><span class="keyword">return</span> f</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">round</span><span class="params">(f <span class="keyword">float64</span>, n <span class="keyword">int</span>)</span> <span class="title">float64</span></span> &#123;</span><br><span class="line">n10 := math.Pow10(n)</span><br><span class="line"><span class="keyword">return</span> math.Trunc((f+<span class="number">0.5</span>/n10)*n10) / n10</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-3-字符串"><a href="#2-3-字符串" class="headerlink" title="2.3 字符串"></a>2.3 字符串</h2><p>本质：是一个不可变byte序列，本身是一个复合结构</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> stringStruct <span class="keyword">struct</span> &#123;</span><br><span class="line">  str unsafe.Pointer</span><br><span class="line">  <span class="built_in">len</span> <span class="keyword">int</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>头部指针指向字节数组，但没有NULL结尾</p><p>原始字符串<code>raw string</code>  : 使用反引号”`”包裹，支持跨行</p><h3 id="2-3-1-元素"><a href="#2-3-1-元素" class="headerlink" title="2.3.1 元素"></a>2.3.1 元素</h3><p>允许索引方式访问元素，但不能获取元素地址</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  s := <span class="string">&quot;abc&quot;</span></span><br><span class="line">  </span><br><span class="line">  <span class="built_in">println</span>(s[<span class="number">1</span>])</span><br><span class="line">  <span class="built_in">println</span>(&amp;s[<span class="number">1</span>])  <span class="comment">// cannot take the address</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-3-2-切片"><a href="#2-3-2-切片" class="headerlink" title="2.3.2 切片"></a>2.3.2 切片</h3><p>切片语法返回的子字符串，其内部依旧指向原始数组</p><ul><li><code>reflect.StringHeader</code>和string头结构相同 </li><li><code>unsafe.Pointer</code>用于指针类型转换</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">s := <span class="string">&quot;abcdefg&quot;</span></span><br><span class="line"></span><br><span class="line">s1 := s[:<span class="number">3</span>]</span><br><span class="line">s2 := s[<span class="number">1</span>:<span class="number">4</span>]</span><br><span class="line">s3 := s[<span class="number">2</span>:]</span><br><span class="line"></span><br><span class="line"><span class="built_in">println</span>(s1, s2, s3)</span><br><span class="line"></span><br><span class="line">fmt.Printf(<span class="string">&quot;%#v\n&quot;</span>, (*reflect.StringHeader)(unsafe.Pointer(&amp;s)))</span><br><span class="line">fmt.Printf(<span class="string">&quot;%#v\n&quot;</span>, (*reflect.StringHeader)(unsafe.Pointer(&amp;s1)))</span><br><span class="line">fmt.Printf(<span class="string">&quot;%#v\n&quot;</span>, (*reflect.StringHeader)(unsafe.Pointer(&amp;s2)))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-3-3-字符串遍历"><a href="#2-3-3-字符串遍历" class="headerlink" title="2.3.3 字符串遍历"></a>2.3.3 字符串遍历</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">s := <span class="string">&quot;中文&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// byte</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(s); i++ &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;%d: [%c]\n&quot;</span>, i, s[i])</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// rune</span></span><br><span class="line"><span class="keyword">for</span> i, c := <span class="keyword">range</span> s &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;%d: [%c]\n&quot;</span>, i, c)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-3-4-修改字符串"><a href="#2-3-4-修改字符串" class="headerlink" title="2.3.4 修改字符串"></a>2.3.4 修改字符串</h3><p>字符串对象不可变，要修改，先将其转换为可变类型 <code>[]rune</code>或<code>[]byte</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">s := <span class="string">&quot;hello world&quot;</span></span><br><span class="line"></span><br><span class="line">bs := []<span class="keyword">byte</span>(s)</span><br><span class="line">s1 = <span class="keyword">string</span>(bs)</span><br><span class="line"></span><br><span class="line">rs := []<span class="keyword">rune</span>(s)</span><br><span class="line">s2 := <span class="keyword">string</span>(rs)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">toString</span><span class="params">(bs []<span class="keyword">byte</span>)</span> <span class="title">string</span></span> &#123;</span><br><span class="line">  <span class="keyword">return</span> *(*<span class="keyword">string</span>)(unsafe.Pointer(&amp;bs))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 该方法利用了[]byte和string头结构“部分相同”，以非安全的指针类型转换来实现类型“变更”，从而避免了底层数组复制。在很多Web Framework中都能看到此类做法，在高并发压力下，此种做法能有效改善执行性能。只是使用unsafe存在一定的风险，须小心谨慎！</span></span><br><span class="line">s3 := toString(bs)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改字符串</span></span><br><span class="line">bs = <span class="built_in">append</span>(bs, <span class="string">&quot;abc&quot;</span>...)</span><br><span class="line">s4 := <span class="keyword">string</span>(bs)</span><br></pre></td></tr></table></figure><h3 id="2-3-5-处理Unicode"><a href="#2-3-5-处理Unicode" class="headerlink" title="2.3.5 处理Unicode"></a>2.3.5 处理Unicode</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">r := <span class="string">&#x27;中&#x27;</span>       <span class="comment">// rune</span></span><br><span class="line">s := <span class="keyword">string</span>(r) <span class="comment">// string</span></span><br><span class="line">b := <span class="keyword">byte</span>(r)   <span class="comment">// byte, 丢弃超出范围的bit</span></span><br><span class="line"></span><br><span class="line">fmt.Printf(<span class="string">&quot;%T, %T, %T\n&quot;</span>, r, s, b) <span class="comment">// int32, string, uint8</span></span><br><span class="line"></span><br><span class="line">s1 := <span class="keyword">string</span>(b)</span><br><span class="line">r2 := <span class="keyword">rune</span>(b)</span><br><span class="line"></span><br><span class="line">fmt.Println(s, b, s1, r2) <span class="comment">// 中 45 - 45</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-3-6-截取字符串"><a href="#2-3-6-截取字符串" class="headerlink" title="2.3.6 截取字符串"></a>2.3.6 截取字符串</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">s := <span class="string">&quot;中C文&quot;</span></span><br><span class="line">fmt.Println(<span class="built_in">len</span>(s), utf8.RuneCountInString(s)) <span class="comment">// 7 3</span></span><br><span class="line"></span><br><span class="line">s = <span class="keyword">string</span>(s[<span class="number">0</span>:<span class="number">1</span>] + s[<span class="number">3</span>:<span class="number">4</span>])</span><br><span class="line">fmt.Println(s, utf8.ValidString(s))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-3-7-字符串拼接性能"><a href="#2-3-7-字符串拼接性能" class="headerlink" title="2.3.7 字符串拼接性能"></a>2.3.7 字符串拼接性能</h3><p><strong>测试命令</strong>: <code>go test -bench=.</code></p><p>1) 较差</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">test</span><span class="params">()</span> <span class="title">string</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> s <span class="keyword">string</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">10000</span>; i++ &#123;</span><br><span class="line">s += <span class="string">&quot;a&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> s</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">BenchmarkTest</span><span class="params">(b *testing.B)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; b.N; i++ &#123;</span><br><span class="line">test()</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2) 改进1 <code>strings.Join(sa, &quot;&quot;)</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">test</span><span class="params">()</span> <span class="title">string</span></span> &#123;</span><br><span class="line">sa := <span class="built_in">make</span>([]<span class="keyword">string</span>, <span class="number">10000</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(sa); i++ &#123;</span><br><span class="line">sa[i] = <span class="string">&quot;a&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> strings.Join(sa, <span class="string">&quot;&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3) 改进2 <code>byte.Buffer</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">test</span><span class="params">()</span> <span class="title">string</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> b bytes.Buffer</span><br><span class="line">b.Grow(<span class="number">10000</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">10000</span>; i++ &#123;</span><br><span class="line">b.WriteString(<span class="string">&quot;a&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> b.String()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-3-8-字符串常用函数"><a href="#2-3-8-字符串常用函数" class="headerlink" title="2.3.8 字符串常用函数"></a>2.3.8 字符串常用函数</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">len</span>(<span class="string">&quot;abc&quot;</span>)</span><br><span class="line">r := []<span class="keyword">rune</span>(<span class="string">&quot;中文&quot;</span>)  <span class="comment">// 字符串遍历，同时支持处理中文</span></span><br><span class="line"></span><br><span class="line">n, err := strconv.Atoi(<span class="string">&quot;123&quot;</span>)</span><br><span class="line">str := strconv.Itoa(<span class="number">123</span>)</span><br><span class="line"></span><br><span class="line">bytes := []<span class="keyword">byte</span>(<span class="string">&quot;abc&quot;</span>)  <span class="comment">// [97, 98, 99]，二进制写入时有用</span></span><br><span class="line">str := <span class="keyword">string</span>([]<span class="keyword">byte</span>&#123;<span class="number">97</span>, <span class="number">98</span>, <span class="number">99</span>&#125;)  <span class="comment">// abc</span></span><br><span class="line">str := strconv.FormatInt(<span class="number">123</span>, <span class="number">2</span>) <span class="comment">// 进制转换 base=2, 8, 16</span></span><br><span class="line"></span><br><span class="line">b := strings.Contains(<span class="string">&quot;seafood&quot;</span>, <span class="string">&quot;foo&quot;</span>)</span><br><span class="line">count := strings.Count(<span class="string">&quot;seafood&quot;</span>, <span class="string">&quot;o&quot;</span>)</span><br><span class="line">b := strings.EqualFold(<span class="string">&quot;abc&quot;</span>, <span class="string">&quot;ABC&quot;</span>) <span class="comment">// 不区分大小写</span></span><br><span class="line"></span><br><span class="line">n := strings.Index(<span class="string">&quot;go golang&quot;</span>, <span class="string">&quot;go&quot;</span>)      <span class="comment">// 0</span></span><br><span class="line">n := strings.LastIndex(<span class="string">&quot;go golang&quot;</span>, <span class="string">&quot;go&quot;</span>)  <span class="comment">// 3</span></span><br><span class="line"></span><br><span class="line">str := strings.Replace(<span class="string">&quot;go golang&quot;</span>, <span class="string">&quot;c&quot;</span>, n) 替换个数n，n=<span class="number">-1</span>表示全部</span><br><span class="line"></span><br><span class="line">strArr := strings.Split(<span class="string">&quot;hello,world,ok&quot;</span>, <span class="string">&quot;,&quot;</span>)</span><br><span class="line"></span><br><span class="line">str := strings.toLower(<span class="string">&quot;Go&quot;</span>)</span><br><span class="line">str := strungs.toUpper(<span class="string">&quot;Go&quot;</span>)</span><br><span class="line"></span><br><span class="line">str := strings.TrimSpace(<span class="string">&quot; I am a gopher, haha.   &quot;</span>)</span><br><span class="line">str := strings.Trim(<span class="string">&quot;!Hello World!&quot;</span>, <span class="string">&quot;!&quot;</span>)</span><br><span class="line">str := strings.TrimRight(<span class="string">&quot;!Hello World!&quot;</span>, <span class="string">&quot;!&quot;</span>)</span><br><span class="line">str := strings.TrimLeft(<span class="string">&quot;!Hello World!&quot;</span>, <span class="string">&quot;!&quot;</span>)</span><br><span class="line"></span><br><span class="line">b := strings.HasPrefix(<span class="string">&quot;http://google.com&quot;</span>, <span class="string">&quot;http&quot;</span>)</span><br><span class="line">b := strings.HasSuffix(<span class="string">&quot;index.html&quot;</span>, <span class="string">&quot;html&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="2-3-9-获取中文字符串长度："><a href="#2-3-9-获取中文字符串长度：" class="headerlink" title="2.3.9 获取中文字符串长度："></a>2.3.9 获取中文字符串长度：</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;hello 你好&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">len</span>(str)     <span class="comment">// 12</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;unicode/utf8&quot;</span></span><br><span class="line">utf8.RuneCountInString(str)   <span class="comment">// 8</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">len</span>([]<span class="keyword">rune</span>(str))   <span class="comment">// 8</span></span><br></pre></td></tr></table></figure><h2 id="2-4-数组"><a href="#2-4-数组" class="headerlink" title="2.4  数组"></a>2.4  数组</h2><h3 id="2-4-1-声明和初始化"><a href="#2-4-1-声明和初始化" class="headerlink" title="2.4.1 声明和初始化"></a>2.4.1 声明和初始化</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 声明</span></span><br><span class="line"><span class="keyword">var</span> balance [<span class="number">10</span>]<span class="keyword">float32</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化</span></span><br><span class="line"><span class="keyword">var</span> balance = [<span class="number">5</span>]<span class="keyword">float32</span> &#123;<span class="number">4.0</span>, <span class="number">1.3</span>, <span class="number">2.2</span>, <span class="number">3.9</span>, <span class="number">3.0</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> balance = [...]<span class="keyword">float32</span> &#123;<span class="number">4.0</span>, <span class="number">1.3</span>, <span class="number">2.2</span>&#125;</span><br><span class="line"></span><br><span class="line">balance[<span class="number">2</span>] = <span class="number">3.2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 访问数组</span></span><br><span class="line"><span class="keyword">var</span> tag <span class="keyword">float32</span> = balance[<span class="number">1</span>]</span><br></pre></td></tr></table></figure><h3 id="2-4-2-数组遍历"><a href="#2-4-2-数组遍历" class="headerlink" title="2.4.2 数组遍历"></a>2.4.2 数组遍历</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> arr [<span class="number">10</span>]<span class="keyword">int</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line">arr[i] = i + <span class="number">100</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> j := <span class="number">0</span>; j &lt; <span class="number">10</span>; j++ &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;%d\t&quot;</span>, arr[j])</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-4-3-二分查找"><a href="#2-4-3-二分查找" class="headerlink" title="2.4.3 二分查找"></a>2.4.3 二分查找</h3><p>二分查找逻辑：</p><ul><li>数组必须有序arr</li><li>中间的下标：midIndex = (firstIndex + lastIndex) / 2</li><li>让arr[midIndex]与targetValue比较<ul><li>arr[midIndex] &gt; targetValue，返回firstIndex … (midIndex-1)</li><li>arr[midIndex] &lt; targetValue，返回(midIndex+1) … lastIndex</li><li>arr[midIndex] == targetValue，找到</li></ul></li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">a := []<span class="keyword">int</span>&#123;<span class="number">0</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">16</span>&#125;</span><br><span class="line"></span><br><span class="line">index := binarySearch(&amp;a, <span class="number">0</span>, <span class="built_in">len</span>(a)<span class="number">-1</span>, <span class="number">12</span>)</span><br><span class="line"><span class="keyword">if</span> index == <span class="number">-1</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;未找到&quot;</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;找到，位置在 %d\n&quot;</span>, index)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">binarySearch</span><span class="params">(a *[]<span class="keyword">int</span>, left, right, target <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> left &gt;= right &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">mid := (left + right) / <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (*a)[mid] &gt; target &#123;</span><br><span class="line"><span class="keyword">return</span> binarySearch(a, left, mid<span class="number">-1</span>, target)</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (*a)[mid] &lt; target &#123;</span><br><span class="line"><span class="keyword">return</span> binarySearch(a, mid+<span class="number">1</span>, right, target)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> mid</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-4-4-多维数组"><a href="#2-4-4-多维数组" class="headerlink" title="2.4.4 多维数组"></a>2.4.4 多维数组</h3><p>只允许第一维缺省</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">a := [<span class="number">2</span>][<span class="number">2</span>]<span class="keyword">int</span> &#123;</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>&#125;,</span><br><span class="line">&#123;<span class="number">3</span>, <span class="number">4</span>&#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">b := [...][<span class="number">3</span>]<span class="keyword">int</span> &#123;</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;,</span><br><span class="line">&#123;<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>&#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">c := [...][<span class="number">2</span>][<span class="number">2</span>]<span class="keyword">int</span> &#123;</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>&#125;,</span><br><span class="line">&#123;<span class="number">3</span>, <span class="number">4</span>&#125;,</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="number">5</span>, <span class="number">6</span>&#125;,</span><br><span class="line">&#123;<span class="number">7</span>, <span class="number">8</span>&#125;,</span><br><span class="line">&#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(a, b, c)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-4-5-数组长度"><a href="#2-4-5-数组长度" class="headerlink" title="2.4.5 数组长度"></a>2.4.5 数组长度</h3><p><code>len</code>和<code>cap</code>都只返回一维数组长度</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">a := [...][<span class="number">2</span>]<span class="keyword">int</span> &#123;</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>&#125;,</span><br><span class="line">&#123;<span class="number">3</span>, <span class="number">4</span>&#125;,</span><br><span class="line">&#123;<span class="number">5</span>, &#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="built_in">len</span>(a), <span class="built_in">cap</span>(a), <span class="built_in">len</span>(a[<span class="number">0</span>]), <span class="built_in">cap</span>(a[<span class="number">0</span>]), <span class="built_in">len</span>(a[<span class="number">2</span>]), <span class="built_in">cap</span>(a[<span class="number">2</span>]))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-4-6-比较操作"><a href="#2-4-6-比较操作" class="headerlink" title="2.4.6 比较操作"></a>2.4.6 比较操作</h3><p> 如元素类型支持“==、!=”操作符，那么数组也支持此操作。</p><p> 前提：<strong>类型必须一致！</strong></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> a, b [<span class="number">2</span>]<span class="keyword">int</span></span><br><span class="line">fmt.Println(a == b)</span><br><span class="line"></span><br><span class="line">c := [<span class="number">2</span>]<span class="keyword">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>&#125;</span><br><span class="line">d := [<span class="number">2</span>]<span class="keyword">int</span>&#123;<span class="number">1</span>, <span class="number">3</span>&#125;</span><br><span class="line">fmt.Println(c == d)</span><br><span class="line"></span><br><span class="line">e := [<span class="number">3</span>]<span class="keyword">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line">fmt.Println(c == e)    <span class="comment">// 类型不一致，无法比较</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> x, y [<span class="number">2</span>]<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">int</span></span><br><span class="line">fmt.Println(x == y)    <span class="comment">// map不支持==和!=操作，数组无法支持</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-4-7-指针数组和数组指针"><a href="#2-4-7-指针数组和数组指针" class="headerlink" title="2.4.7 指针数组和数组指针"></a>2.4.7 指针数组和数组指针</h3><ul><li>指针数组: 元素为指针类型的数组</li><li>数组指针: 数组变量的地址</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">x, y := <span class="number">10</span>, <span class="number">20</span></span><br><span class="line"></span><br><span class="line">a := [...]*<span class="keyword">int</span> &#123;&amp;x, &amp;y&#125;   <span class="comment">// 指针数组</span></span><br><span class="line">p := &amp;a                   <span class="comment">// 数组指针</span></span><br><span class="line"></span><br><span class="line">fmt.Printf(<span class="string">&quot;%T %v\n&quot;</span>, a, a)</span><br><span class="line">fmt.Printf(<span class="string">&quot;%T %v\n&quot;</span>, p, p)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用指针操作数组：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">a := [...]<span class="keyword">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(&amp;a, &amp;a[<span class="number">0</span>], &amp;a[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">p := &amp;a</span><br><span class="line">p[<span class="number">1</span>] += <span class="number">3</span></span><br><span class="line">fmt.Println(p, a)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-4-8-数组复制"><a href="#2-4-8-数组复制" class="headerlink" title="2.4.8 数组复制"></a>2.4.8 数组复制</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">test1</span><span class="params">(x [2]<span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;x: %p, %v\n&quot;</span>, &amp;x, x)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">test2</span><span class="params">(y *[2]<span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;y: %p, %v\n&quot;</span>, y, *y)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">a := [<span class="number">2</span>]<span class="keyword">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> b [<span class="number">2</span>]<span class="keyword">int</span></span><br><span class="line">b = a   <span class="comment">// 值复制，地址并未复制</span></span><br><span class="line"></span><br><span class="line">fmt.Printf(<span class="string">&quot;a: %p, %v\n&quot;</span>, &amp;a, a)</span><br><span class="line">fmt.Printf(<span class="string">&quot;b: %p, %v\n&quot;</span>, &amp;b, b)</span><br><span class="line"></span><br><span class="line">test1(a)   <span class="comment">// 按值传递</span></span><br><span class="line">test2(&amp;a)  <span class="comment">// 按地址传递</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-4-9-排序算法"><a href="#2-4-9-排序算法" class="headerlink" title="2.4.9 排序算法"></a>2.4.9 排序算法</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">arr := [...]<span class="keyword">int</span>&#123;<span class="number">5</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">6</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//bubbleSort(arr[:])</span></span><br><span class="line"><span class="comment">//selectSort(arr[:])</span></span><br><span class="line"><span class="comment">//insertSort(arr[:])</span></span><br><span class="line">quickSort(arr[:], <span class="number">0</span>, <span class="built_in">len</span>(arr)<span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line">fmt.Println(arr)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">bubbleSort</span><span class="params">(a []<span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(a); i++ &#123;</span><br><span class="line"><span class="keyword">for</span> j := <span class="number">1</span>; j &lt; <span class="built_in">len</span>(a)-i; j++ &#123;</span><br><span class="line"><span class="comment">// 相邻比较，交换位置</span></span><br><span class="line"><span class="keyword">if</span> a[j] &lt; a[j<span class="number">-1</span>] &#123;</span><br><span class="line">a[j], a[j<span class="number">-1</span>] = a[j<span class="number">-1</span>], a[j]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">selectSort</span><span class="params">(a []<span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(a); i++ &#123;</span><br><span class="line"><span class="keyword">for</span> j := i + <span class="number">1</span>; j &lt; <span class="built_in">len</span>(a); j++ &#123;</span><br><span class="line"><span class="comment">// 选择a[i]作为标兵，将它与i+1...的值比较，找到最小或最大，赋值给a[i]</span></span><br><span class="line"><span class="keyword">if</span> a[i] &gt; a[j] &#123;</span><br><span class="line">a[i], a[j] = a[j], a[i]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">insertSort</span><span class="params">(a []<span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line"><span class="comment">// 假定第一个元素是有序的，后的元素与之比较，满足条件逐个插入</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">1</span>; i &lt; <span class="built_in">len</span>(a); i++ &#123;</span><br><span class="line"><span class="keyword">for</span> j := i; j &gt; <span class="number">0</span>; j-- &#123;</span><br><span class="line"><span class="comment">// 前一个元素大于后一个元素，跳过比较</span></span><br><span class="line"><span class="keyword">if</span> a[j] &gt; a[j<span class="number">-1</span>] &#123;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">a[j], a[j<span class="number">-1</span>] = a[j<span class="number">-1</span>], a[j]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">quickSort</span><span class="params">(a []<span class="keyword">int</span>, left, right <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> left &gt;= right &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 选取一个元素，作为比较项</span></span><br><span class="line">k := left</span><br><span class="line">val := a[k]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := left + <span class="number">1</span>; i &lt;= right; i++ &#123;</span><br><span class="line"><span class="comment">// 比基准值小的摆放在基准前面，比基准值大的摆在基准的后面</span></span><br><span class="line"><span class="keyword">if</span> a[i] &lt; val &#123;</span><br><span class="line">a[k] = a[i]</span><br><span class="line">a[i] = a[k+<span class="number">1</span>]</span><br><span class="line">k++</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">a[k] = val</span><br><span class="line"></span><br><span class="line">quickSort(a, left, k<span class="number">-1</span>)</span><br><span class="line">quickSort(a, k+<span class="number">1</span>, right)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go 语言基础</title>
      <link href="/2018/01/01/Go%20%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/"/>
      <url>/2018/01/01/Go%20%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="1-Go语言相关知识点"><a href="#1-Go语言相关知识点" class="headerlink" title="1. Go语言相关知识点"></a>1. Go语言相关知识点</h1><h2 id="1-1-Go特点："><a href="#1-1-Go特点：" class="headerlink" title="1.1 Go特点："></a>1.1 Go特点：</h2><ul><li>类型安全和内存安全</li><li>以非常直观和极低的代价实现高并发</li><li>高效的垃圾回收机制</li><li>快速编译</li><li>为多核计算机提供提升性能的方案</li><li>默认UTF-8编码</li></ul><span id="more"></span><h2 id="1-2-GOPATH下的三个目录："><a href="#1-2-GOPATH下的三个目录：" class="headerlink" title="1.2 GOPATH下的三个目录："></a>1.2 GOPATH下的三个目录：</h2><ul><li>bin</li><li>pkg</li><li>src</li></ul><h2 id="1-3-相关命令："><a href="#1-3-相关命令：" class="headerlink" title="1.3 相关命令："></a>1.3 相关命令：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">go run    // 直接运行，调试</span><br><span class="line">go build  // 编译并生成可执行文件</span><br><span class="line">go fmt    // 格式化代码</span><br><span class="line">go install  // 先编译包文件，后编译整个程序</span><br><span class="line">go <span class="built_in">test</span>   // 运行测试文件  （xxx_test.go测试程序xxx.go)</span><br><span class="line">go doc    // 查看文档</span><br><span class="line"></span><br><span class="line">godoc fmt Println   // 查看具体的函数说明</span><br><span class="line"></span><br><span class="line">godoc --http=:8080</span><br></pre></td></tr></table></figure><h2 id="1-4-包导入别名"><a href="#1-4-包导入别名" class="headerlink" title="1.4 包导入别名"></a>1.4 包导入别名</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="keyword">import</span> . <span class="string">&quot;fmt&quot;</span>    <span class="comment">// 省略调用</span></span><br><span class="line"><span class="keyword">import</span> std <span class="string">&quot;fmt&quot;</span>  <span class="comment">// 别名</span></span><br><span class="line"><span class="keyword">import</span> _ <span class="string">&quot;xxx&quot;</span>    <span class="comment">// 只执行xxx包中的init()函数</span></span><br></pre></td></tr></table></figure><h2 id="1-5-可见性"><a href="#1-5-可见性" class="headerlink" title="1.5 可见性"></a>1.5 可见性</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">getField</span><span class="params">()</span>    // <span class="title">private</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Find</span><span class="params">()</span>        // <span class="title">public</span></span></span><br></pre></td></tr></table></figure><h1 id="2-字符串格式化"><a href="#2-字符串格式化" class="headerlink" title="2. 字符串格式化"></a>2. 字符串格式化</h1><h2 id="2-1-占位符"><a href="#2-1-占位符" class="headerlink" title="2.1 占位符"></a>2.1 占位符</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">%v        默认格式</span><br><span class="line">%+v       打印结构体时，添加字段名</span><br><span class="line">%#v       使用Go语法表示</span><br><span class="line">%T        对象类型</span><br><span class="line">%%        %</span><br><span class="line"></span><br><span class="line">%t        true 或 false</span><br><span class="line"></span><br><span class="line">%b        binary</span><br><span class="line">%c        Unicode   # Printf(&quot;%c&quot;, 0x4E2D) // 中</span><br><span class="line">%d        decimal</span><br><span class="line">%o        octal</span><br><span class="line">%x        hex</span><br><span class="line">%X        HEX</span><br><span class="line">%#x       add prefix &quot;0x&quot;  # %#o add &quot;0&quot; prefix</span><br><span class="line"></span><br><span class="line">%s        string</span><br><span class="line">%q        qutation</span><br><span class="line"></span><br><span class="line">%f</span><br><span class="line">%.2f</span><br><span class="line">%e        科学计数法</span><br><span class="line">%E</span><br><span class="line">%g        科学计数法，更紧凑的，无末尾的0</span><br><span class="line">%G</span><br><span class="line"></span><br><span class="line">%p        指针地址</span><br></pre></td></tr></table></figure><h3 id="2-2-键盘输入"><a href="#2-2-键盘输入" class="headerlink" title="2.2 键盘输入"></a>2.2 键盘输入</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> name <span class="keyword">string</span></span><br><span class="line"><span class="keyword">var</span> age <span class="keyword">int8</span></span><br><span class="line"></span><br><span class="line">fmt.Scanln(&amp;name)</span><br><span class="line">fmt.Scanf(<span class="string">&quot;%d&quot;</span>, &amp;age)</span><br><span class="line"></span><br><span class="line">fmt.Println(name, age)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-3-字符串输入"><a href="#2-3-字符串输入" class="headerlink" title="2.3 字符串输入"></a>2.3 字符串输入</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">str := <span class="string">&quot;Tom 23&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> name <span class="keyword">string</span></span><br><span class="line"><span class="keyword">var</span> age <span class="keyword">byte</span></span><br><span class="line"></span><br><span class="line">fmt.Sscanf(str, <span class="string">&quot;%s %d&quot;</span>, &amp;name, &amp;age)</span><br><span class="line"></span><br><span class="line">fmt.Println(name, age)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="3-位运算"><a href="#3-位运算" class="headerlink" title="3. 位运算"></a>3. 位运算</h1><h2 id="3-1-原码、反码和补码：-有符号整数"><a href="#3-1-原码、反码和补码：-有符号整数" class="headerlink" title="3.1 原码、反码和补码：(有符号整数)"></a>3.1 原码、反码和补码：(有符号整数)</h2><ul><li><p>二进制最高位：0-正数  1-负数</p></li><li><p>正数(1)：原码、反码和补码一样</p><ul><li>原码：0000 0001</li><li>反码：0000 0001</li><li>补码：0000 0001</li></ul></li><li><p>负数(-1)：反码 —&gt; 符号位不变，其他位取反；补码 —&gt; 反码 + 1</p><ul><li>原码：1000 0001</li><li>反码：1111 1110</li><li>补码：1111 1111</li></ul></li><li><p>零：反码和补码都是0</p></li><li><p><strong>计算机运算以“补码”</strong>方式进行 (没有减法，只有加法)</p><ul><li>1 + 1：0000 0001 + 0000 0001 = 0000 0010</li><li>1 + -1：0000 0001 + 1111 1111 = <del>1</del> 0000 0000</li></ul></li></ul><h2 id="3-2-位移运算"><a href="#3-2-位移运算" class="headerlink" title="3.2 位移运算"></a>3.2 位移运算</h2><ul><li>右移(&gt;&gt;): 符号位不变，低位溢出，并用符号位补溢出的高位</li><li>左移(&lt;&lt;): 符号位不变，低位补0</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">a := <span class="number">1</span> &gt;&gt; <span class="number">2</span> <span class="comment">// 0</span></span><br><span class="line">b := <span class="number">1</span> &lt;&lt; <span class="number">2</span> <span class="comment">// 4</span></span><br><span class="line">fmt.Println(a, b)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1 &gt;&gt; 2 =&gt; 0 000 0001 -&gt; 0 000 0000 = 0</span></span><br><span class="line"><span class="comment">1 &lt;&lt; 2 =&gt; 0 000 0001 -&gt; 0 000 0100 = 4</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">c := <span class="number">-1</span> &gt;&gt; <span class="number">2</span> <span class="comment">// -1</span></span><br><span class="line">d := <span class="number">-1</span> &lt;&lt; <span class="number">2</span> <span class="comment">// -4</span></span><br><span class="line">fmt.Println(c, d)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">-1 &gt;&gt; 2 =&gt;</span></span><br><span class="line"><span class="comment">1 000 0001 -&gt; 1 111 1110 -&gt; 1 111 1111 =&gt;</span></span><br><span class="line"><span class="comment">1 111 1111 -&gt; 1 111 1110 -&gt; 1 000 0001 = -1</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">-1 &lt;&lt; 2 =&gt;</span></span><br><span class="line"><span class="comment">1 000 0001 -&gt; 1 111 1110 -&gt; 1 111 1111 =&gt;</span></span><br><span class="line"><span class="comment">1 111 1100 -&gt; 1 111 1011 -&gt; 1 000 0100 = -4</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-3-Go中特殊位运算符-amp"><a href="#3-3-Go中特殊位运算符-amp" class="headerlink" title="3.3 Go中特殊位运算符 &amp;^"></a>3.3 Go中特殊位运算符 &amp;^</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a <span class="keyword">int</span> = <span class="number">6</span> &amp;^ <span class="number">11</span>   <span class="comment">// 4</span></span><br><span class="line"><span class="number">6</span> &amp; (^<span class="number">11</span>) =&gt; <span class="number">6</span> &amp; <span class="number">4</span></span><br></pre></td></tr></table></figure><h2 id="3-4-负数位运算"><a href="#3-4-负数位运算" class="headerlink" title="3.4 负数位运算"></a>3.4 负数位运算</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a <span class="keyword">byte</span> = <span class="number">2</span></span><br><span class="line"><span class="keyword">var</span> b <span class="keyword">byte</span> = <span class="number">-2</span></span><br><span class="line"><span class="keyword">var</span> c <span class="keyword">byte</span> = a ^ b    <span class="comment">// -4</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">2补码：0000 0010</span></span><br><span class="line"><span class="comment">-2补码：1000 0010 -&gt; 1111 1101 -&gt; 1111 1110</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">2 ^ -2 = 0000 0010 ^ 1111 1110 </span></span><br><span class="line"><span class="comment">       = 1111 1100 -&gt; 1111 1011 -&gt; 1000 0100 = -4</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h1 id="4-获取变量占用的字节数"><a href="#4-获取变量占用的字节数" class="headerlink" title="4. 获取变量占用的字节数"></a>4. 获取变量占用的字节数</h1><p><code>unsafe.Sizeof(obj)</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> n = <span class="number">100</span></span><br><span class="line">fmt.Println(unsafe.Sizeof(n))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="5-控制语句"><a href="#5-控制语句" class="headerlink" title="5. 控制语句"></a>5. 控制语句</h1><h2 id="5-1-for循环"><a href="#5-1-for循环" class="headerlink" title="5.1 for循环"></a>5.1 for循环</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> a &lt;= <span class="number">3</span> &#123;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">1</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-2-switch选择"><a href="#5-2-switch选择" class="headerlink" title="5.2 switch选择"></a>5.2 switch选择</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> a = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> a &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">fmt.Println(<span class="string">&quot;a=0&quot;</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">fmt.Println(<span class="string">&quot;a=1&quot;</span>)</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">fmt.Println(<span class="string">&quot;No Found&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 不能写成 switch a</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> a = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// expression is omitted</span></span><br><span class="line"><span class="keyword">switch</span> &#123;</span><br><span class="line"><span class="keyword">case</span> a &gt;= <span class="number">0</span>:</span><br><span class="line">fmt.Println(<span class="string">&quot;a&gt;=0&quot;</span>)</span><br><span class="line"><span class="keyword">fallthrough</span></span><br><span class="line"><span class="keyword">case</span> a &gt;= <span class="number">1</span>:</span><br><span class="line">fmt.Println(<span class="string">&quot;a&gt;=1&quot;</span>)</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">fmt.Println(<span class="string">&quot;No Found&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// a的作用域只在switch中</span></span><br><span class="line"><span class="keyword">switch</span> a := <span class="number">1</span>; &#123;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// type-switch</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> x <span class="keyword">interface</span>&#123;&#125; = <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> x.(<span class="keyword">type</span>) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="literal">nil</span>:</span><br><span class="line">fmt.Println(<span class="string">&quot;NULL&quot;</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="keyword">int</span>:</span><br><span class="line">fmt.Println(<span class="string">&quot;int&quot;</span>)</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">fmt.Println(<span class="string">&quot;interface&#123;&#125;&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-3-for循环示例：打印空心金字塔"><a href="#5-3-for循环示例：打印空心金字塔" class="headerlink" title="5.3 for循环示例：打印空心金字塔"></a>5.3 for循环示例：打印空心金字塔</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">   * *</span></span><br><span class="line"><span class="comment">  *   *</span></span><br><span class="line"><span class="comment"> *     *</span></span><br><span class="line"><span class="comment">*********</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">N := <span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Step 1: 打印一个n*n列的正方形</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">1</span>; i &lt;= N; i++ &#123;</span><br><span class="line"><span class="comment">// Step 3: 打印等边三角形。每行前补空格：Ln=0, Ln-1=1, L2=n-2, L1=n-1</span></span><br><span class="line"><span class="keyword">for</span> k := <span class="number">1</span>; k &lt;= N-i; k++ &#123;</span><br><span class="line">fmt.Print(<span class="string">&quot; &quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Step 2: 打印一个直角三角形。金字塔每行*个数：L1=1，L2=3, L3=5, Ln=2n-1</span></span><br><span class="line"><span class="keyword">for</span> j := <span class="number">1</span>; j &lt;= <span class="number">2</span>*i<span class="number">-1</span>; j++ &#123;</span><br><span class="line"><span class="comment">// Step 4: 空心。每行只保留第一个和最后一个</span></span><br><span class="line"><span class="keyword">if</span> j == <span class="number">1</span> || j == <span class="number">2</span>*i<span class="number">-1</span> &#123;</span><br><span class="line">fmt.Print(<span class="string">&quot;*&quot;</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// Step 5: 最后一行全部保留</span></span><br><span class="line"><span class="keyword">if</span> i == N &#123;</span><br><span class="line">fmt.Print(<span class="string">&quot;*&quot;</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fmt.Print(<span class="string">&quot; &quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println()</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-4-for循环示例：九九乘法表"><a href="#5-4-for循环示例：九九乘法表" class="headerlink" title="5.4 for循环示例：九九乘法表"></a>5.4 for循环示例：九九乘法表</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">1</span>; i &lt;= <span class="number">9</span>; i++ &#123;</span><br><span class="line"><span class="keyword">for</span> j := <span class="number">1</span>; j &lt;= i; j++ &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;%d * %d = %d\t&quot;</span>, j, i, i*j)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println()</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-5-for循环示例：水仙花数"><a href="#5-5-for循环示例：水仙花数" class="headerlink" title="5.5 for循环示例：水仙花数"></a>5.5 for循环示例：水仙花数</h2><p>水仙花数是指一个 3 位数，它的每个位上的数字的 3次幂之和等于它本身（例如：1^3 + 5^3+ 3^3 = 153）</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">三位的水仙花数共有4个：153，370，371，407；</span></span><br><span class="line"><span class="comment">四位的四叶玫瑰数共有3个：1634，8208，9474；</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> N <span class="keyword">int64</span> = <span class="number">1000000</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> i <span class="keyword">int64</span></span><br><span class="line"><span class="keyword">for</span> i = <span class="number">100</span>; i &lt;= N; i++ &#123;</span><br><span class="line"><span class="keyword">if</span> isNarcissusFew(i) &#123;</span><br><span class="line">fmt.Println(i)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">isNarcissusFew</span><span class="params">(n <span class="keyword">int64</span>)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line">s := strconv.FormatInt(n, <span class="number">10</span>)</span><br><span class="line">l := <span class="built_in">len</span>(s)</span><br><span class="line"><span class="keyword">var</span> sum <span class="keyword">int64</span> = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> j := n; ; &#123;</span><br><span class="line">m := j % <span class="number">10</span></span><br><span class="line"></span><br><span class="line">sum += <span class="keyword">int64</span>(math.Pow(<span class="keyword">float64</span>(m), <span class="keyword">float64</span>(l)))</span><br><span class="line"></span><br><span class="line">j = j / <span class="number">10</span></span><br><span class="line"><span class="keyword">if</span> j == <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> sum == n</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">isNarcissistic</span><span class="params">(n <span class="keyword">int64</span>)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line">s := strconv.FormatInt(n, <span class="number">10</span>)</span><br><span class="line">l := <span class="built_in">len</span>(s)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> sum <span class="keyword">int64</span> = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> _, c := <span class="keyword">range</span> s &#123;</span><br><span class="line">num, _ := strconv.Atoi(fmt.Sprintf(<span class="string">&quot;%c&quot;</span>, c))</span><br><span class="line">sum += <span class="keyword">int64</span>(math.Pow(<span class="keyword">float64</span>(num), <span class="keyword">float64</span>(l)))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> sum == n</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>性能对比：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">go <span class="built_in">test</span> -bench=. -run=none</span><br><span class="line">goos: darwin</span><br><span class="line">goarch: amd64</span><br><span class="line">pkg: gomod/aaa</span><br><span class="line">BenchmarkIsNarcissistic-4              1        93848583244 ns/op</span><br><span class="line">BenchmarkIsNarcissusFew-4              1        31639945040 ns/op</span><br><span class="line">PASS</span><br><span class="line">ok      gomod/aaa       125.791s</span><br></pre></td></tr></table></figure><h2 id="5-6-goto-break-continue-LABEL用法："><a href="#5-6-goto-break-continue-LABEL用法：" class="headerlink" title="5.6 goto, break, continue LABEL用法："></a>5.6 goto, break, continue LABEL用法：</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">LABEL1:</span><br><span class="line">  <span class="keyword">for</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line">      <span class="keyword">if</span> i &gt; <span class="number">3</span> &#123;</span><br><span class="line">        <span class="comment">// break LABEL1</span></span><br><span class="line">        <span class="keyword">goto</span> LABEL2</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line"> LABEL2:</span><br><span class="line">  fmt.Println(<span class="string">&quot;OK&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="6-随机数"><a href="#6-随机数" class="headerlink" title="6. 随机数"></a>6. 随机数</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">rand.Seed(time.Now().UnixNano())  <span class="comment">// 种子变化越大，随机性越好</span></span><br><span class="line">n := rand.Intn(<span class="number">100</span>) + <span class="number">1</span></span><br><span class="line">fmt.Println(n)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="7-时间和日期函数"><a href="#7-时间和日期函数" class="headerlink" title="7. 时间和日期函数"></a>7. 时间和日期函数</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">now := time.Now()  <span class="comment">// time.Time</span></span><br><span class="line"></span><br><span class="line">year := now.Year()</span><br><span class="line">month := <span class="keyword">int</span>(now.Month())</span><br><span class="line">day := now.Day()</span><br><span class="line">fmt.Printf(<span class="string">&quot;%04d-%02d-%02d\n&quot;</span>, year, month, day)</span><br><span class="line"></span><br><span class="line">weekday := now.Weekday()</span><br><span class="line">fmt.Println(weekday)</span><br><span class="line"></span><br><span class="line">ts := now.Unix() <span class="comment">// timestamp</span></span><br><span class="line">nano := now.UnixNano()</span><br><span class="line">fmt.Println(ts, nano)</span><br><span class="line"></span><br><span class="line">dateStr := now.Format(<span class="string">&quot;2006-01-02 15:04:05&quot;</span>)</span><br><span class="line">fmt.Println(dateStr)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">time.Sleep(<span class="number">100</span> * time.MilliSecond)</span><br></pre></td></tr></table></figure><h1 id="8-内置函数"><a href="#8-内置函数" class="headerlink" title="8. 内置函数"></a>8. 内置函数</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">len</span>   <span class="comment">// string, array, slice, map, channel</span></span><br><span class="line"><span class="built_in">close</span> <span class="comment">// channel</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">new</span>   <span class="comment">// 分配内存, 值类型 int, float, struct等，返回指针</span></span><br><span class="line"><span class="built_in">make</span>  <span class="comment">// 分配内存, 引用类型 chan, map, slice等，返回类型本身，而非指针</span></span><br><span class="line"></span><br><span class="line">nptr = <span class="built_in">new</span>(<span class="keyword">int</span>) <span class="comment">// *int</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">append</span>  <span class="comment">// 追加元素到array, slice中</span></span><br><span class="line"><span class="built_in">panic</span>/<span class="built_in">recover</span> <span class="comment">// 错误处理</span></span><br></pre></td></tr></table></figure><h1 id="9-new和make的区别"><a href="#9-new和make的区别" class="headerlink" title="9. new和make的区别"></a>9. new和make的区别</h1><ul><li><code>new(T)</code> 返回 T 的指针 <code>*T</code> 并指向 T 的零值。</li><li><code>make(T)</code> 返回的初始化的 T，只能用于 slice，map，channel。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git</title>
      <link href="/2017/05/01/Git/"/>
      <url>/2017/05/01/Git/</url>
      
        <content type="html"><![CDATA[<h2 id="1-基本概念"><a href="#1-基本概念" class="headerlink" title="1. 基本概念"></a>1. 基本概念</h2><h3 id="1-1-git特点"><a href="#1-1-git特点" class="headerlink" title="1.1 git特点"></a>1.1 git特点</h3><p>1) 直接存储文件快照(特定时间点的完整文件)，而非存储差异。<br>2) 几乎所有操作都在本地执行，只有同步版本库才需要联网。<br>3) 天然的数据完整性校验(SHA-1, 40bits).</p><span id="more"></span><h3 id="1-2-git文件变更操作"><a href="#1-2-git文件变更操作" class="headerlink" title="1.2 git文件变更操作"></a>1.2 git文件变更操作</h3><p>文件变更的三个阶段: </p><ul><li>修改(modified)</li><li>暂存(staged): 已加入下次提交列表)</li><li>提交(committed): 保存到版本数据目录</li></ul><p>三个阶段数据存放区域:</p><ul><li>工作目录(workspace)</li><li>暂存索引文件(.git/index)</li><li>本地数据目录(.git/objects)</li></ul><p>Git Data Transport Commands (<a href="http://osteele.com">http://osteele.com</a>)<br><img src="http://images.osteele.com/2008/git-transport.png" alt=""></p><h2 id="2-初始化设置"><a href="#2-初始化设置" class="headerlink" title="2. 初始化设置"></a>2. 初始化设置</h2><h3 id="2-1-配置用户"><a href="#2-1-配置用户" class="headerlink" title="2.1 配置用户"></a>2.1 配置用户</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&#x27;eli.he&#x27;</span></span><br><span class="line">git config --global user.email <span class="string">&#x27;eli.he@live.cn&#x27;</span></span><br><span class="line"></span><br><span class="line">git config --global core.autocrlf <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">git config --list</span><br></pre></td></tr></table></figure><h3 id="2-2-密钥设置"><a href="#2-2-密钥设置" class="headerlink" title="2.2 密钥设置"></a>2.2 密钥设置</h3><p>1) 生成密钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&#x27;eli.he@live.cn&#x27;</span></span><br></pre></td></tr></table></figure><p>2) 上传公钥 id_rsa.pub 至SSH keys管理</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><p>3) 测试连通性</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><h3 id="2-3-设置忽略文件"><a href="#2-3-设置忽略文件" class="headerlink" title="2.3 设置忽略文件"></a>2.3 设置忽略文件</h3><ul><li>全局(.gitignore)</li><li>个人(.git/info/exclude)</li></ul><h2 id="3-版本库"><a href="#3-版本库" class="headerlink" title="3. 版本库"></a>3. 版本库</h2><h3 id="3-1-新建版本库"><a href="#3-1-新建版本库" class="headerlink" title="3.1 新建版本库"></a>3.1 新建版本库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir <span class="built_in">test</span></span><br><span class="line"><span class="built_in">cd</span> <span class="built_in">test</span></span><br><span class="line">git init</span><br><span class="line"></span><br><span class="line">git remote add origin git@github.com:elihe2011/test.git</span><br></pre></td></tr></table></figure><h3 id="3-2-克隆版本库"><a href="#3-2-克隆版本库" class="headerlink" title="3.2 克隆版本库"></a>3.2 克隆版本库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 默认远程仓库名为origin</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/elihe2011/abc.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定远程仓库名为git_prj</span></span><br><span class="line">git <span class="built_in">clone</span> -o git_prj https://github.com/elihe2011/abc.git</span><br></pre></td></tr></table></figure><h3 id="3-3-查看远程版本库"><a href="#3-3-查看远程版本库" class="headerlink" title="3.3 查看远程版本库"></a>3.3 查看远程版本库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git remote -v</span><br><span class="line">git remote show origin</span><br></pre></td></tr></table></figure><h3 id="3-4-获取远程版本，但不合并"><a href="#3-4-获取远程版本，但不合并" class="headerlink" title="3.4 获取远程版本，但不合并"></a>3.4 获取远程版本，但不合并</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git fetch origin master</span><br><span class="line">git fetch ～/github/new_test master</span><br></pre></td></tr></table></figure><h3 id="3-5-获取远程版本，并合并"><a href="#3-5-获取远程版本，并合并" class="headerlink" title="3.5 获取远程版本，并合并"></a>3.5 获取远程版本，并合并</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git pull origin master</span><br><span class="line">git pull ～/github/new_test master</span><br></pre></td></tr></table></figure><h3 id="3-6-代码修改提交"><a href="#3-6-代码修改提交" class="headerlink" title="3.6 代码修改提交"></a>3.6 代码修改提交</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&#x27;add a.txt&#x27;</span> a.txt</span><br><span class="line">git commit -m <span class="string">&#x27;add all&#x27;</span></span><br><span class="line"></span><br><span class="line">git commit -am <span class="string">&#x27;commit tracked files&#x27;</span></span><br><span class="line"></span><br><span class="line">git commit -m --amend --no-edit  <span class="comment"># 使用新的commit替代原有的，保持commit描述不变</span></span><br></pre></td></tr></table></figure><h3 id="3-7-推送至远程库"><a href="#3-7-推送至远程库" class="headerlink" title="3.7 推送至远程库"></a>3.7 推送至远程库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin master </span><br><span class="line"></span><br><span class="line"><span class="comment"># -u, --set-upstream 第一次push的时候需要，自动添加如下配置</span></span><br><span class="line">branch.master.remote=origin</span><br><span class="line">branch.master.merge=refs/heads/master</span><br></pre></td></tr></table></figure><h2 id="4-文件操作"><a href="#4-文件操作" class="headerlink" title="4. 文件操作"></a>4. 文件操作</h2><h3 id="4-1-检查修改"><a href="#4-1-检查修改" class="headerlink" title="4.1 检查修改"></a>4.1 检查修改</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git diff hello.py    <span class="comment"># workspace, staged</span></span><br><span class="line"></span><br><span class="line">git diff --cached    <span class="comment"># staged, local-repository</span></span><br><span class="line"></span><br><span class="line">git diff master origin/master    <span class="comment"># local-repo remote-repo</span></span><br></pre></td></tr></table></figure><h3 id="4-2-撤销操作"><a href="#4-2-撤销操作" class="headerlink" title="4.2 撤销操作"></a>4.2 撤销操作</h3><h4 id="4-2-1-checkout"><a href="#4-2-1-checkout" class="headerlink" title="4.2.1 checkout"></a>4.2.1 checkout</h4><p>workspace和staged撤销修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 撤销本次修改，commit前均可操作</span></span><br><span class="line">git checkout hello.py    </span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用特定commit的文件，替换staged和workspace下的文件</span></span><br><span class="line">git checkout ad12sa1 hello.py       </span><br><span class="line">cat .git/HEAD               <span class="comment"># defd8bb....</span></span><br></pre></td></tr></table></figure><h4 id="4-2-2-reset"><a href="#4-2-2-reset" class="headerlink" title="4.2.2 reset"></a>4.2.2 reset</h4><p>不可恢复的撤销 (谨慎操作)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># staged区回滚，git add的反操作</span></span><br><span class="line">git reset [&lt;files&gt;]</span><br><span class="line"></span><br><span class="line"><span class="comment"># staged区和workspace回滚，回到最近一次提交</span></span><br><span class="line">git reset [&lt;files&gt;] --hard</span><br><span class="line"></span><br><span class="line"><span class="comment"># staged区回滚到指定commit，之前的提交全部删除</span></span><br><span class="line">git reset &lt;commit&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># workspace区也回滚</span></span><br><span class="line">git reset &lt;commit&gt; --hard</span><br><span class="line"></span><br><span class="line"><span class="comment"># 作用于staged区</span></span><br><span class="line">git reset --mixed HEAD</span><br></pre></td></tr></table></figure><ul><li>实例：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git reset HEAD -- a.txt</span><br><span class="line">git reset a.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># HEAD^表示上个版本，HEAD^^上上个版本，HEAD~N往上N个版本</span></span><br><span class="line">git reset HEAD^^ -- a.txt</span><br></pre></td></tr></table></figure></li></ul><h4 id="4-2-3-revert-仅反转提交"><a href="#4-2-3-revert-仅反转提交" class="headerlink" title="4.2.3 revert 仅反转提交"></a>4.2.3 revert 仅反转提交</h4><p>撤销已提交的快照，但不从项目中删除这个commit，而是新生成一个commit</p><ul><li>实例<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">touch 1.txt 2.txt 3.txt</span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&#x27;add 1.txt&#x27;</span> 1.txt</span><br><span class="line">git commit -m <span class="string">&#x27;add 2.txt&#x27;</span> 2.txt</span><br><span class="line">git commit -m <span class="string">&#x27;add 3.txt&#x27;</span> 3.txt</span><br><span class="line"></span><br><span class="line">git <span class="built_in">log</span> --oneline -5</span><br><span class="line">git revert cc79f5a          <span class="comment"># revert 2.txt</span></span><br><span class="line">ls -l [1-3].txt             <span class="comment"># 1.txt, 3.txt</span></span><br></pre></td></tr></table></figure></li></ul><p><b> reset和revert的区别</b>:<br><br>reset: 被设计用来撤销本地的修改，它会完整地删除一个change set。<br><br>revert: 被设计用来安全地撤销一个公共commit，会保留最初的change set，通过新建一个commit来撤销</p><h4 id="4-2-4-撤销操作场景"><a href="#4-2-4-撤销操作场景" class="headerlink" title="4.2.4 撤销操作场景"></a>4.2.4 撤销操作场景</h4><p>1) 已修改，未暂存</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout .</span><br><span class="line">git reset --hard</span><br></pre></td></tr></table></figure><p>2) 已暂存，未提交</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git reset</span><br><span class="line">git checkout .</span><br><span class="line"></span><br><span class="line">or</span><br><span class="line"></span><br><span class="line">git reset --hard</span><br></pre></td></tr></table></figure><p>3) 已提交，未推送</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard origin/master</span><br></pre></td></tr></table></figure><p>4) 已推送</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard HEAD^</span><br><span class="line">git push -f origin master</span><br></pre></td></tr></table></figure><h4 id="4-2-5-撤销命令说明"><a href="#4-2-5-撤销命令说明" class="headerlink" title="4.2.5 撤销命令说明"></a>4.2.5 撤销命令说明</h4><table><thead><tr><th>命令</th><th>操作区域</th></tr></thead><tbody><tr><td>checkout</td><td>staged -&gt; workspace</td></tr><tr><td>reset</td><td>committed -&gt; staged</td></tr><tr><td>reset –hard</td><td>committed -&gt; staged -&gt; workspace</td></tr></tbody></table><h3 id="4-3-删除文件"><a href="#4-3-删除文件" class="headerlink" title="4.3 删除文件"></a>4.3 删除文件</h3><h4 id="4-3-1-删除已traced文件"><a href="#4-3-1-删除已traced文件" class="headerlink" title="4.3.1 删除已traced文件"></a>4.3.1 删除已traced文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除workspace中的文件，如果已在staged中，报错</span></span><br><span class="line">git rm a.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 同时删除workspace &amp; staged文件，保留committed文件</span></span><br><span class="line">git rm -f a.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 同时删除staged &amp; committed文件，保留workspace文件</span></span><br><span class="line">git rm --cached a.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 清理已被删除的所有文件</span></span><br><span class="line">git rm $(git ls-files --deleted)</span><br></pre></td></tr></table></figure><h4 id="4-3-2-删除未traced的文件"><a href="#4-3-2-删除未traced的文件" class="headerlink" title="4.3.2 删除未traced的文件"></a>4.3.2 删除未traced的文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clean -f</span><br><span class="line">git clean -df</span><br></pre></td></tr></table></figure><h2 id="5-标签"><a href="#5-标签" class="headerlink" title="5. 标签"></a>5. 标签</h2><h3 id="5-1-创建标签"><a href="#5-1-创建标签" class="headerlink" title="5.1 创建标签"></a>5.1 创建标签</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 为当前分支最近一次提交创建标签</span></span><br><span class="line">git tag 1.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 标签 develop/1.1</span></span><br><span class="line">git tag develop_1.1 develop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 为某个历史提交创建标签</span></span><br><span class="line">git tag 1.2 66cbbb4</span><br></pre></td></tr></table></figure><h3 id="5-2-查询标签"><a href="#5-2-查询标签" class="headerlink" title="5.2 查询标签"></a>5.2 查询标签</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git tag</span><br><span class="line">git tag -l <span class="string">&#x27;1.2.*&#x27;</span></span><br><span class="line">git show 1.1</span><br></pre></td></tr></table></figure><h3 id="5-3-检出标签"><a href="#5-3-检出标签" class="headerlink" title="5.3 检出标签"></a>5.3 检出标签</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout 1.0</span><br></pre></td></tr></table></figure><h3 id="5-4-按标签创建分支"><a href="#5-4-按标签创建分支" class="headerlink" title="5.4 按标签创建分支"></a>5.4 按标签创建分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git branch <span class="built_in">test</span> 1.1</span><br><span class="line"></span><br><span class="line">git checkout -b develop 1.2</span><br></pre></td></tr></table></figure><h3 id="5-5-删除标签"><a href="#5-5-删除标签" class="headerlink" title="5.5 删除标签"></a>5.5 删除标签</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git tag -d 1.1</span><br></pre></td></tr></table></figure><h2 id="6-日志"><a href="#6-日志" class="headerlink" title="6. 日志"></a>6. 日志</h2><h3 id="6-1-查询日志"><a href="#6-1-查询日志" class="headerlink" title="6.1 查询日志"></a>6.1 查询日志</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span></span><br><span class="line">git <span class="built_in">log</span> -5</span><br><span class="line">git <span class="built_in">log</span> <span class="built_in">stat</span>    <span class="comment"># 详细日志</span></span><br><span class="line">git <span class="built_in">log</span> -p      <span class="comment"># 更详细日志</span></span><br><span class="line"></span><br><span class="line">git <span class="built_in">log</span> --author=<span class="string">&#x27;eli&#x27;</span></span><br><span class="line"></span><br><span class="line">git <span class="built_in">log</span> --grep=<span class="string">&#x27;modify&#x27;</span>     <span class="comment"># 过滤提交描述</span></span><br><span class="line"></span><br><span class="line">git <span class="built_in">log</span> --graph</span><br><span class="line">git <span class="built_in">log</span> --graph --decorate --oneline</span><br><span class="line"></span><br><span class="line">git <span class="built_in">log</span> --oneline</span><br><span class="line"></span><br><span class="line">git <span class="built_in">log</span> ada6cb2..62a89cf</span><br><span class="line"></span><br><span class="line">git <span class="built_in">log</span> --merges</span><br><span class="line">git <span class="built_in">log</span> --no-merges     <span class="comment"># 过滤merge提交</span></span><br><span class="line"></span><br><span class="line">git <span class="built_in">log</span> --since=<span class="string">&#x27;2017-11-20&#x27;</span> --until=<span class="string">&#x27;2017-12-01&#x27;</span></span><br><span class="line"></span><br><span class="line">git <span class="built_in">log</span> --pretty=format:<span class="string">&quot;%cn committed %h on %cd&quot;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 格式化参数</span></span><br><span class="line">%cn     committer name</span><br><span class="line">%h      commit <span class="built_in">hash</span></span><br><span class="line">%<span class="built_in">cd</span>     commit date</span><br><span class="line">%s      short message</span><br><span class="line"></span><br><span class="line">git <span class="built_in">log</span> --pretty=<span class="string">&quot;%h - %s&quot;</span> --author=<span class="string">&#x27;eli&#x27;</span> --since=<span class="string">&#x27;2017-11-27 00:00:00&#x27;</span> --before=<span class="string">&#x27;2017-11-27 11:59:59&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="6-2-git-reflog-所有分支的日志"><a href="#6-2-git-reflog-所有分支的日志" class="headerlink" title="6.2 git reflog 所有分支的日志"></a>6.2 git reflog 所有分支的日志</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reflog --relative-date</span><br></pre></td></tr></table></figure><h3 id="6-3-git-shortlog"><a href="#6-3-git-shortlog" class="headerlink" title="6.3 git shortlog"></a>6.3 git shortlog</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git shortlog</span><br></pre></td></tr></table></figure><h2 id="7-分支"><a href="#7-分支" class="headerlink" title="7. 分支"></a>7. 分支</h2><h3 id="7-1-创建分支"><a href="#7-1-创建分支" class="headerlink" title="7.1 创建分支"></a>7.1 创建分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从当前分支创建新分支，但不切换</span></span><br><span class="line">git branch develop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从当前分支创建新分支，并切换</span></span><br><span class="line">git checkout -b develop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从develop分支创建新分支</span></span><br><span class="line">git checkout -b <span class="built_in">test</span> develop</span><br></pre></td></tr></table></figure><h3 id="7-2-删除分支"><a href="#7-2-删除分支" class="headerlink" title="7.2 删除分支"></a>7.2 删除分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除已merge的分支</span></span><br><span class="line">git branch -d develop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 强制删除分支，不管是否已merge</span></span><br><span class="line">git branch -D develop</span><br></pre></td></tr></table></figure><h3 id="7-3-更改分支名"><a href="#7-3-更改分支名" class="headerlink" title="7.3 更改分支名"></a>7.3 更改分支名</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -m dev</span><br></pre></td></tr></table></figure><h3 id="7-4-切换分支"><a href="#7-4-切换分支" class="headerlink" title="7.4 切换分支"></a>7.4 切换分支</h3><p>本质上是更新HEAD指向给定的branch或commit</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">git checkout develop</span><br><span class="line"></span><br><span class="line">git checkout -b <span class="built_in">test</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 产生detached HEAD状态，detached意味着当前所有修改和项目发展的其他部分完全脱离，无法被merge</span></span><br><span class="line">git checkout &lt;commit&gt;</span><br><span class="line"></span><br><span class="line">git checkout &lt;tag&gt;</span><br></pre></td></tr></table></figure><h3 id="7-5-合并分支"><a href="#7-5-合并分支" class="headerlink" title="7.5 合并分支"></a>7.5 合并分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 自动指定merge算法</span></span><br><span class="line">git merge &lt;branch&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 强制fast-forword merge算法</span></span><br><span class="line">git merge --on-ff &lt;branch&gt;</span><br></pre></td></tr></table></figure><h3 id="7-6-rebase-合并分支（重定义分支起点）"><a href="#7-6-rebase-合并分支（重定义分支起点）" class="headerlink" title="7.6 rebase 合并分支（重定义分支起点）"></a>7.6 rebase 合并分支（重定义分支起点）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rebase &lt;base&gt;   <span class="comment"># base: commit, tag, branch, HEAD~N</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b develop</span><br><span class="line">touch echo.py</span><br><span class="line">git add echo.py</span><br><span class="line">git commit -m <span class="string">&#x27;add echo.py on develop branch&#x27;</span></span><br><span class="line"></span><br><span class="line">git checkout master</span><br><span class="line">touch print.py</span><br><span class="line">git add print.py</span><br><span class="line">git commit -m <span class="string">&#x27;add print.py on master branch&#x27;</span></span><br><span class="line"></span><br><span class="line">git checkout develop</span><br><span class="line">git rebase master       <span class="comment"># 将整个develop分支的commit放在master分支之后，不会创建merge commit，但会为develop分支的每个commit创建一个新的commit</span></span><br><span class="line"></span><br><span class="line">git checkout master</span><br><span class="line">git merge develop       <span class="comment"># 只产生merge commit，分支commit不合入</span></span><br></pre></td></tr></table></figure><h3 id="7-7-merge和rebase的区别："><a href="#7-7-merge和rebase的区别：" class="headerlink" title="7.7 merge和rebase的区别："></a>7.7 merge和rebase的区别：</h3><ul><li><p>merge: 产生一个merge commit，不会合入分支的commit</p></li><li><p>rebase: 不产生merge commit，但合入分支的commit</p></li><li><p>示意图<br><img src="http://images2015.cnblogs.com/blog/737565/201604/737565-20160407213427281-1160492709.png" alt=" "></p></li><li><p>git pull<br><br>git pull: 按merge方式合并<br><br>git pull –rebase: 按rebase方式合并</p></li><li><p>merge未产生merge commit的原因：只有在存在冲突，解决完冲突后才自动产生一个merge commit</p></li><li><p>git merge<br><br>git merge: 被合并之前的commit全部抹除，只保留一个解决冲突的merge commit<br><br>git merge –on-ff: 在没有冲突下，也自动产生一个merge commit</p></li></ul><h2 id="8-远程分支操作"><a href="#8-远程分支操作" class="headerlink" title="8. 远程分支操作"></a>8. 远程分支操作</h2><h3 id="8-1-查询远程分支"><a href="#8-1-查询远程分支" class="headerlink" title="8.1 查询远程分支"></a>8.1 查询远程分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git ls-remote</span><br></pre></td></tr></table></figure><h3 id="8-2-跟踪远程分支"><a href="#8-2-跟踪远程分支" class="headerlink" title="8.2 跟踪远程分支"></a>8.2 跟踪远程分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b daily origin/daily</span><br><span class="line"></span><br><span class="line">git checkout --track origin/daily<span class="comment"># 本地和远程的分支名保持一致</span></span><br></pre></td></tr></table></figure><h3 id="8-3-添加本地分支与远程分支的关联关系（–set-upstream-to-）"><a href="#8-3-添加本地分支与远程分支的关联关系（–set-upstream-to-）" class="headerlink" title="8.3 添加本地分支与远程分支的关联关系（–set-upstream-to=）"></a>8.3 添加本地分支与远程分支的关联关系（–set-upstream-to=）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -u origin/daily</span><br></pre></td></tr></table></figure><h3 id="8-4-查询当前已跟踪的分支"><a href="#8-4-查询当前已跟踪的分支" class="headerlink" title="8.4 查询当前已跟踪的分支"></a>8.4 查询当前已跟踪的分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -vv</span><br></pre></td></tr></table></figure><h3 id="8-5-删除远程分支"><a href="#8-5-删除远程分支" class="headerlink" title="8.5 删除远程分支"></a>8.5 删除远程分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin --delete daily</span><br></pre></td></tr></table></figure><h3 id="8-6-远程仓库被删除，导致无法pull"><a href="#8-6-远程仓库被删除，导致无法pull" class="headerlink" title="8.6 远程仓库被删除，导致无法pull"></a>8.6 远程仓库被删除，导致无法pull</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote prune origin</span><br></pre></td></tr></table></figure><h2 id="9-导出版本库"><a href="#9-导出版本库" class="headerlink" title="9. 导出版本库"></a>9. 导出版本库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git archive --format=zip HEAD &gt; `date +%s`.zip</span><br></pre></td></tr></table></figure><h2 id="10-撤销操作详细说明"><a href="#10-撤销操作详细说明" class="headerlink" title="10. 撤销操作详细说明"></a>10. 撤销操作详细说明</h2><h3 id="10-1-reset"><a href="#10-1-reset" class="headerlink" title="10.1 reset"></a>10.1 reset</h3><p>reset将一个分支的末端指向另一个提交，并移除当前分支的一些提交</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout hotfix</span><br><span class="line">git reset HEAD~2</span><br></pre></td></tr></table></figure><p>hotfix分支末端的两个提交变成悬挂提交，下次Git执行垃圾回收时，这两个提交会被删除。</p><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/git/git_reset.png" alt=""></p><p>撤销缓存区和工作目录：</p><ul><li>–soft    缓存区和工作目录均不修改</li><li>–mixed    默认项，缓存区同步到你指定的提交，但工作目录不受影响</li><li>–hard    缓存区和工作目录均同步到你指定的提交</li></ul><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/git/git_reset2.png" alt=""></p><p>使用前提：你的更改未分享给别人，git reset是撤销这些更改的简单方法</p><h3 id="10-2-revert"><a href="#10-2-revert" class="headerlink" title="10.2 revert"></a>10.2 revert</h3><p>revert撤销一个提交同时会创建一个新的提交。比reset安全，且不会重写提交历史</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout hotfix</span><br><span class="line">git revert HEAD~2</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/elihe2011/bedgraph@master/git/git_revert.png" alt=""></p><h3 id="10-3-总结"><a href="#10-3-总结" class="headerlink" title="10.3 总结"></a>10.3 总结</h3><p>git revert可以用在公共分支</p><p>git reset应该用在私有分支上</p><h2 id="11-配置项说明"><a href="#11-配置项说明" class="headerlink" title="11. 配置项说明"></a>11. 配置项说明</h2><h3 id="11-1-区分大小写"><a href="#11-1-区分大小写" class="headerlink" title="11.1 区分大小写"></a>11.1 区分大小写</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config core.ignorecase <span class="literal">false</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
